{
  "module_name": "client",
  "analysis_date": "2025-07-30T19:21:32.872702",
  "module_path": "C:\\Users\\Dell\\Documents\\GitHub\\otclient_doc\\modules\\client",
  "files": {
    "client.lua": {
      "file_type": ".lua",
      "size": 2025,
      "lines": 82,
      "content": "local musicFilename = 'sounds/startup'\nlocal musicChannel = nil\nif g_sounds then\n    musicChannel = g_sounds.getChannel(SoundChannels.Music)\nend\n\nfunction setMusic(filename)\n    musicFilename = filename\n\n    if not g_game.isOnline() then\n        musicChannel:stop()\n        musicChannel:enqueue(musicFilename, 3)\n    end\nend\n\nfunction startup()\n    if musicChannel then\n        musicChannel:enqueue(musicFilename, 3)\n        connect(g_game, {\n            onGameStart = function()\n                musicChannel:stop(3)\n            end\n        })\n        connect(g_game, {\n            onGameEnd = function()\n                g_sounds.stopAll()\n                musicChannel:enqueue(musicFilename, 3)\n            end\n        })\n    end\n\n    -- Check for startup errors\n    local errtitle = nil\n    local errmsg = nil\n\n    if g_graphics.getRenderer():lower():match('gdi generic') then\n        errtitle = tr('Graphics card driver not detected')\n        errmsg = tr(\n            'No graphics card detected, everything will be drawn using the CPU,\\nthus the performance will be really bad.\\nPlease update your graphics driver to have a better performance.')\n    end\n\n    -- Show entergame\n    if errmsg or errtitle then\n        local msgbox = displayErrorBox(errtitle, errmsg)\n        msgbox.onOk = function()\n            EnterGame.firstShow()\n        end\n    else\n        EnterGame.firstShow()\n    end\n    if g_app.hasUpdater() and g_sounds then\n        g_sounds.setAudioEnabled(g_settings.getBoolean('enableAudio'))\n    end\nend\n\nfunction init()\n    if g_app.hasUpdater() then\n        connect(g_app, {\n            onUpdateFinished = startup,\n        })\n    else\n        connect(g_app, {\n            onRun = startup,\n        })\n    end\n\n    if musicChannel then\n        g_sounds.preload(musicFilename)\n    end\nend\n\nfunction terminate()\n    if g_app.hasUpdater() then\n        disconnect(g_app, {\n            onUpdateFinished = startup,\n        })\n    else\n        disconnect(g_app, {\n            onRun = startup,\n        })\n    end\nend\n",
      "structure": {
        "functions": [
          {
            "name": "setMusic",
            "line": 7,
            "definition": "function setMusic(filename)"
          },
          {
            "name": "startup",
            "line": 16,
            "definition": "function startup()"
          },
          {
            "name": "init",
            "line": 56,
            "definition": "function init()"
          },
          {
            "name": "terminate",
            "line": 72,
            "definition": "function terminate()"
          }
        ],
        "variables": [
          {
            "name": "musicFilename",
            "line": 1,
            "definition": "local musicFilename = 'sounds/startup'"
          },
          {
            "name": "musicChannel",
            "line": 2,
            "definition": "local musicChannel = nil"
          },
          {
            "name": "errtitle",
            "line": 33,
            "definition": "local errtitle = nil"
          },
          {
            "name": "errmsg",
            "line": 34,
            "definition": "local errmsg = nil"
          },
          {
            "name": "msgbox",
            "line": 44,
            "definition": "local msgbox = displayErrorBox(errtitle, errmsg)"
          }
        ],
        "imports": [],
        "comments": [
          {
            "line": 32,
            "content": "-- Check for startup errors"
          },
          {
            "line": 42,
            "content": "-- Show entergame"
          }
        ],
        "complexity": 9
      },
      "patterns": {},
      "error": "'ModuleAnalyzerAgent' object has no attribute 'extract_lua_patterns'"
    },
    "client.otmod": {
      "file_type": ".otmod",
      "size": 493,
      "lines": 22,
      "content": "Module\n  name: client\n  description: Initialize the client and setups its main window\n  author: edubart\n  website: https://github.com/edubart/otclient\n  reloadable: false\n  sandboxed: true\n  scripts: [ client ]\n  @onLoad: init()\n  @onUnload: terminate()\n\n  load-later:\n    - client_styles\n    - client_locales\n    - client_topmenu\n    - client_bottommenu\n    - client_background\n    - client_options\n    - client_entergame\n    - client_terminal\n    - client_debug_info\n    - client_serverlist\n",
      "structure": {
        "module_info": {
          "name": "client",
          "description": "Initialize the client and setups its main window",
          "author": "edubart",
          "website": "https://github.com/edubart/otclient",
          "reloadable": "false",
          "sandboxed": "true"
        },
        "scripts": [],
        "load_later": [
          "client_styles",
          "client_locales",
          "client_topmenu",
          "client_bottommenu",
          "client_background",
          "client_options",
          "client_entergame",
          "client_terminal",
          "client_debug_info",
          "client_serverlist"
        ],
        "events": [
          {
            "event": "onLoad",
            "action": "init()"
          },
          {
            "event": "onUnload",
            "action": "terminate()"
          }
        ]
      },
      "patterns": {},
      "error": "'ModuleAnalyzerAgent' object has no attribute 'extract_otmod_patterns'"
    },
    "sounds\\startup.ogg": {
      "file_type": ".ogg",
      "size": 3154098,
      "lines": 0,
      "content": "",
      "structure": {},
      "patterns": {},
      "error": "'utf-8' codec can't decode byte 0xfb in position 22: invalid start byte"
    }
  },
  "structure": {
    "total_files": 3,
    "file_types": {
      ".lua": 1,
      ".otmod": 1,
      ".ogg": 1
    },
    "main_files": [
      "client.lua",
      "client.otmod"
    ],
    "dependencies": {},
    "complexity": 9
  },
  "patterns": {
    "lua_patterns": {
      "function_patterns": [
        "setMusic",
        "startup",
        "init",
        "terminate"
      ],
      "variable_patterns": [
        "musicFilename",
        "musicChannel",
        "errtitle",
        "errmsg",
        "msgbox"
      ],
      "import_patterns": [],
      "api_usage": [
        "isOnline",
        "getChannel",
        "stopAll",
        "setAudioEnabled",
        "preload",
        "getRenderer",
        "g_game",
        "g_game",
        "g_app",
        "g_app",
        "g_app",
        "g_app",
        "g_app",
        "g_app"
      ]
    },
    "otmod_patterns": {
      "module_properties": [
        [
          "name",
          "client"
        ],
        [
          "description",
          "Initialize the client and setups its main window"
        ],
        [
          "author",
          "edubart"
        ],
        [
          "website",
          "https://github.com/edubart/otclient"
        ],
        [
          "reloadable",
          "false"
        ],
        [
          "sandboxed",
          "true"
        ],
        [
          "scripts",
          "[ client ]"
        ],
        [
          "onLoad",
          "init()"
        ],
        [
          "onUnload",
          "terminate()"
        ],
        [
          "later",
          "- client_styles"
        ]
      ],
      "script_patterns": [
        "later",
        "client_styles",
        "client_locales",
        "client_topmenu",
        "client_bottommenu",
        "client_background",
        "client_options",
        "client_entergame",
        "client_terminal",
        "client_debug_info",
        "client_serverlist"
      ],
      "load_later_patterns": [],
      "event_patterns": [
        "onLoad",
        "onUnload"
      ]
    },
    "otui_patterns": {},
    "common_patterns": {
      "file_structure": {
        ".lua": 1,
        ".otmod": 1,
        ".ogg": 1
      },
      "naming_conventions": {
        "snake_case": 183,
        "camelCase": 194,
        "PascalCase": 11
      },
      "code_style": {}
    }
  },
  "dependencies": {
    "internal_deps": [],
    "external_deps": [],
    "api_deps": [
      "sounds",
      "game",
      "graphics",
      "app",
      "settings"
    ],
    "module_deps": [
      "client_bottommenu",
      "client_entergame",
      "client_terminal",
      "client_locales",
      "client_options",
      "client_topmenu",
      "client_styles",
      "client_background",
      "client_debug_info",
      "later",
      "client_serverlist"
    ]
  },
  "documentation": {
    "overview": "\n# Módulo client\n\n## Descrição\nEste módulo implementa funcionalidades relacionadas a client.\n\n## Arquivos\n- Total de arquivos: 3\n- Tipos de arquivo: .ogg, .lua, .otmod\n\n## Dependências\n- APIs OTClient: sounds, game, graphics, app, settings\n- Módulos: client_bottommenu, client_entergame, client_terminal, client_locales, client_options, client_topmenu, client_styles, client_background, client_debug_info, later, client_serverlist\n",
    "structure_summary": "\n## Estrutura\n\n### Arquivos Lua\n- Funções encontradas: 4\n- Variáveis locais: 5\n- Imports: 0\n\n### APIs Utilizadas\n- sounds\n- game\n- graphics\n- app\n- settings\n",
    "api_reference": "",
    "usage_examples": "",
    "patterns_documentation": ""
  },
  "metrics": {
    "coverage": 3,
    "complexity": 9,
    "documentation_quality": 1.9230769230769231,
    "pattern_diversity": 11
  }
}