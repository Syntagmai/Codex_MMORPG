{
  "category": "agents",
  "metadata": {
    "total_functions": 77,
    "total_classes": 72,
    "created": "2025-08-01T12:30:28.933945"
  },
  "functions": {
    "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents": {
      "name": "analyze_agents",
      "type": "function",
      "docstring": "Analisa todos os agentes existentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 170,
      "end_line": 223,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents": {
      "name": "backup_agents",
      "type": "function",
      "docstring": "Faz backup de todos os agentes antes da consolidação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 225,
      "end_line": 242,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents": {
      "name": "consolidate_all_agents",
      "type": "function",
      "docstring": "Consolida todos os agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 329,
      "end_line": 372,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents": {
      "name": "initialize_agents",
      "type": "function",
      "docstring": "Inicializa todos os agentes especializados AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 85,
      "end_line": 331,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows": {
      "name": "initialize_workflows",
      "type": "function",
      "docstring": "Inicializa workflows de nível AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 333,
      "end_line": 364,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents": {
      "name": "select_agents",
      "type": "function",
      "docstring": "Seleciona agentes baseado no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 437,
      "end_line": 454,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow": {
      "name": "execute_agent_workflow",
      "type": "function",
      "docstring": "Executa workflow de agente para arquivo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        },
        {
          "name": "user_request",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 456,
      "end_line": 511,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info": {
      "name": "get_agent_info",
      "type": "function",
      "docstring": "Obtém informações de um agente específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 540,
      "end_line": 551,
      "returns": "Optional[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents": {
      "name": "list_all_agents",
      "type": "function",
      "docstring": "Lista todos os agentes disponíveis",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 553,
      "end_line": 555,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration": {
      "name": "fix_agent_integration",
      "type": "function",
      "docstring": "Corrige problemas de integração de agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 515,
      "end_line": 570,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_compatibility_fixer.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config": {
      "name": "create_basic_agent_config",
      "type": "function",
      "docstring": "Cria configuração básica para um agente",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 572,
      "end_line": 618,
      "returns": "Dict",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_compatibility_fixer.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents": {
      "name": "validate_agents",
      "type": "function",
      "docstring": "Valida agentes especializados",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 117,
      "end_line": 184,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_integration_validator.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows": {
      "name": "validate_workflows",
      "type": "function",
      "docstring": "Valida workflows AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 186,
      "end_line": 254,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_integration_validator.py"
    },
    "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents": {
      "name": "analyze_agents",
      "type": "function",
      "docstring": "Analisa todos os agentes existentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 184,
      "end_line": 237,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents": {
      "name": "backup_agents",
      "type": "function",
      "docstring": "Faz backup de todos os agentes antes da consolidação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 239,
      "end_line": 256,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents": {
      "name": "consolidate_all_agents",
      "type": "function",
      "docstring": "Consolida todos os agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 343,
      "end_line": 386,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow": {
      "name": "identify_primary_workflow",
      "type": "function",
      "docstring": "Identifica o workflow principal",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "analysis",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 279,
      "end_line": 297,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents": {
      "name": "select_agents",
      "type": "function",
      "docstring": "Seleciona agentes baseado no contexto melhorado",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 473,
      "end_line": 506,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role": {
      "name": "get_agent_role",
      "type": "function",
      "docstring": "Define o papel específico do agente no workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        },
        {
          "name": "workflow_type",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 508,
      "end_line": 557,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow": {
      "name": "execute_workflow",
      "type": "function",
      "docstring": "Executa o workflow com os agentes selecionados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_workflow",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 559,
      "end_line": 598,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase": {
      "name": "get_agents_for_phase",
      "type": "function",
      "docstring": "Identifica agentes responsáveis por cada fase",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "phase",
          "annotation": "str"
        },
        {
          "name": "agents",
          "annotation": "List[Dict]"
        }
      ],
      "decorators": [],
      "start_line": 600,
      "end_line": 618,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow": {
      "name": "identify_primary_workflow",
      "type": "function",
      "docstring": "Identifica o workflow principal baseado nas palavras-chave",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "keywords",
          "annotation": "List[str]"
        },
        {
          "name": "workflows",
          "annotation": "set"
        }
      ],
      "decorators": [],
      "start_line": 272,
      "end_line": 286,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents": {
      "name": "select_agents",
      "type": "function",
      "docstring": "Seleciona agentes baseado no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 288,
      "end_line": 318,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role": {
      "name": "get_agent_role",
      "type": "function",
      "docstring": "Define o papel específico do agente no workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        },
        {
          "name": "workflow_type",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 320,
      "end_line": 350,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow": {
      "name": "execute_workflow",
      "type": "function",
      "docstring": "Executa o workflow coordenado",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_workflow",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 352,
      "end_line": 399,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase": {
      "name": "get_agents_for_phase",
      "type": "function",
      "docstring": "Identifica agentes responsáveis por cada fase",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "phase",
          "annotation": "str"
        },
        {
          "name": "agents",
          "annotation": "List[Dict]"
        }
      ],
      "decorators": [],
      "start_line": 401,
      "end_line": 416,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation": {
      "name": "get_workflow_context_adaptation",
      "type": "function",
      "docstring": "Retorna adaptação do workflow para o contexto atual",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "workflow_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 314,
      "end_line": 342,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_update_bmad_maps.py",
      "category": "agents",
      "file_name": "migrated_update_bmad_maps.py"
    },
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns": {
      "name": "_analyze_agent_patterns",
      "type": "private_method",
      "docstring": "Analisa padrões de combinação de agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "interactions",
          "annotation": "List[Any]"
        }
      ],
      "decorators": [],
      "start_line": 321,
      "end_line": 344,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_pattern_analyzer.py",
      "category": "agents",
      "file_name": "migrated_pattern_analyzer.py"
    },
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns": {
      "name": "_analyze_workflow_patterns",
      "type": "private_method",
      "docstring": "Analisa padrões de workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "interactions",
          "annotation": "List[Any]"
        }
      ],
      "decorators": [],
      "start_line": 346,
      "end_line": 368,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_pattern_analyzer.py",
      "category": "agents",
      "file_name": "migrated_pattern_analyzer.py"
    },
    "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration": {
      "name": "fix_agent_integration",
      "type": "function",
      "docstring": "Corrige problemas de integração de agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 501,
      "end_line": 556,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py",
      "category": "agents",
      "file_name": "migrated_aaa_compatibility_fixer.py"
    },
    "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config": {
      "name": "create_basic_agent_config",
      "type": "function",
      "docstring": "Cria configuração básica para um agente",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 558,
      "end_line": 604,
      "returns": "Dict",
      "async": false,
      "module_path": "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py",
      "category": "agents",
      "file_name": "migrated_aaa_compatibility_fixer.py"
    },
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent": {
      "name": "assign_task_to_agent",
      "type": "function",
      "docstring": "Atribui tarefa ao agente apropriado",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "task",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 208,
      "end_line": 228,
      "returns": "Optional[str]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agents_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent": {
      "name": "execute_agent",
      "type": "function",
      "docstring": "Executa um agente específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_name",
          "annotation": "str"
        },
        {
          "name": "task",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 230,
      "end_line": 267,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agents_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread": {
      "name": "_run_agent_thread",
      "type": "private_method",
      "docstring": "Executa agente em thread separada",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_file",
          "annotation": "Path"
        },
        {
          "name": "agent_name",
          "annotation": "str"
        },
        {
          "name": "task",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 269,
      "end_line": 326,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agents_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow": {
      "name": "orchestrate_workflow",
      "type": "function",
      "docstring": "Orquestra workflow completo de agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 445,
      "end_line": 499,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agents_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion": {
      "name": "wait_for_agents_completion",
      "type": "function",
      "docstring": "Aguarda conclusão de todos os agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "timeout",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 501,
      "end_line": 522,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agents_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents": {
      "name": "document_missing_agents",
      "type": "function",
      "docstring": "Documenta os 7 Agentes BMAD não cobertos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 140,
      "end_line": 166,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py",
      "category": "agents",
      "file_name": "migrated_coverage_validation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow": {
      "name": "identify_primary_workflow",
      "type": "function",
      "docstring": "Identifica o workflow principal",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "analysis",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 265,
      "end_line": 283,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents": {
      "name": "select_agents",
      "type": "function",
      "docstring": "Seleciona agentes baseado no contexto melhorado",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 459,
      "end_line": 492,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role": {
      "name": "get_agent_role",
      "type": "function",
      "docstring": "Define o papel específico do agente no workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        },
        {
          "name": "workflow_type",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 494,
      "end_line": 543,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow": {
      "name": "execute_workflow",
      "type": "function",
      "docstring": "Executa o workflow com os agentes selecionados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_workflow",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 545,
      "end_line": 584,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase": {
      "name": "get_agents_for_phase",
      "type": "function",
      "docstring": "Identifica agentes responsáveis por cada fase",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "phase",
          "annotation": "str"
        },
        {
          "name": "agents",
          "annotation": "List[Dict]"
        }
      ],
      "decorators": [],
      "start_line": 586,
      "end_line": 604,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows": {
      "name": "setup_integration_workflows",
      "type": "function",
      "docstring": "Configura workflows de integração automatizados.\n\nReturns:\n    Dict com status da configuração",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 219,
      "end_line": 251,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files": {
      "name": "_create_workflow_files",
      "type": "private_method",
      "docstring": "Cria arquivos de workflow.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "structure",
          "annotation": "Dict[str, Path]"
        }
      ],
      "decorators": [],
      "start_line": 353,
      "end_line": 368,
      "returns": "None",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates": {
      "name": "_create_workflow_templates",
      "type": "private_method",
      "docstring": "Cria templates de workflow.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 428,
      "end_line": 435,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow": {
      "name": "_setup_preparation_workflow",
      "type": "private_method",
      "docstring": "Configura workflow de preparação.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 446,
      "end_line": 452,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow": {
      "name": "_setup_validation_workflow",
      "type": "private_method",
      "docstring": "Configura workflow de validação.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 454,
      "end_line": 460,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow": {
      "name": "_setup_integration_workflow",
      "type": "private_method",
      "docstring": "Configura workflow de integração.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 462,
      "end_line": 468,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow": {
      "name": "_setup_testing_workflow",
      "type": "private_method",
      "docstring": "Configura workflow de teste.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 470,
      "end_line": 476,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow": {
      "name": "_setup_deployment_workflow",
      "type": "private_method",
      "docstring": "Configura workflow de deploy.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 478,
      "end_line": 484,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status": {
      "name": "_get_workflows_status",
      "type": "private_method",
      "docstring": "Obtém status dos workflows.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 510,
      "end_line": 516,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results": {
      "name": "process_workflow_results",
      "type": "function",
      "docstring": "Processa resultados do workflow completo e extrai insights\n\nArgs:\n    analysis_results: Resultados do Module Analyzer\n    generation_results: Resultados do Module Generator\n    test_results: Resultados do Module Tester\n    \nReturns:\n    Insights e aprendizados extraídos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "analysis_results",
          "annotation": "Dict[str, Any]"
        },
        {
          "name": "generation_results",
          "annotation": "List[Dict[str, Any]]"
        },
        {
          "name": "test_results",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 100,
      "end_line": 153,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "agents",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents": {
      "name": "get_active_agents",
      "type": "function",
      "docstring": "Conta agentes ativos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 236,
      "end_line": 247,
      "returns": "int",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_metrics_agent.py",
      "category": "agents",
      "file_name": "migrated_metrics_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress": {
      "name": "calculate_agents_progress",
      "type": "function",
      "docstring": "Calcula progresso dos agentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 177,
      "end_line": 193,
      "returns": "float",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py",
      "category": "agents",
      "file_name": "migrated_progress_tracker_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents": {
      "name": "extract_agents",
      "type": "function",
      "docstring": "Extrai informações dos agentes BMAD",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 168,
      "end_line": 189,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_task_master_agent.py",
      "category": "agents",
      "file_name": "migrated_task_master_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow": {
      "name": "activate_learning_workflow",
      "type": "function",
      "docstring": "Ativa o sistema de execução automática de lições.\n\nReturns:\n    bool: True se ativação bem-sucedida",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 69,
      "end_line": 189,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow": {
      "name": "execute_workflow",
      "type": "function",
      "docstring": "Executa o workflow completo para um módulo\n\nArgs:\n    module_name: Nome do módulo OTClient a processar\n    config: Configurações opcionais do workflow\n    \nReturns:\n    Resultados completos do workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "module_name",
          "annotation": "str"
        },
        {
          "name": "config",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 68,
      "end_line": 151,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_legacy.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary": {
      "name": "generate_workflow_summary",
      "type": "function",
      "docstring": "Gera resumo do workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "workflow_results",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 268,
      "end_line": 308,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_legacy.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results": {
      "name": "save_workflow_results",
      "type": "function",
      "docstring": "Salva resultados do workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "workflow_results",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 310,
      "end_line": 340,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_legacy.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status": {
      "name": "get_workflow_status",
      "type": "function",
      "docstring": "Obtém status de um workflow específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "workflow_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 366,
      "end_line": 379,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_legacy.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows": {
      "name": "list_workflows",
      "type": "function",
      "docstring": "Lista todos os workflows executados",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 381,
      "end_line": 405,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_legacy.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents": {
      "name": "initialize_agents",
      "type": "function",
      "docstring": "Inicializa todos os agentes especializados AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 71,
      "end_line": 317,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows": {
      "name": "initialize_workflows",
      "type": "function",
      "docstring": "Inicializa workflows de nível AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 319,
      "end_line": 350,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents": {
      "name": "select_agents",
      "type": "function",
      "docstring": "Seleciona agentes baseado no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 423,
      "end_line": 440,
      "returns": "List[str]",
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow": {
      "name": "execute_agent_workflow",
      "type": "function",
      "docstring": "Executa workflow de agente para arquivo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        },
        {
          "name": "user_request",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 442,
      "end_line": 497,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info": {
      "name": "get_agent_info",
      "type": "function",
      "docstring": "Obtém informações de um agente específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 526,
      "end_line": 537,
      "returns": "Optional[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents": {
      "name": "list_all_agents",
      "type": "function",
      "docstring": "Lista todos os agentes disponíveis",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 539,
      "end_line": 541,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents": {
      "name": "validate_agents",
      "type": "function",
      "docstring": "Valida agentes especializados",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 103,
      "end_line": 170,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_validator\\migrated_aaa_integration_validator.py",
      "category": "agents",
      "file_name": "migrated_aaa_integration_validator.py"
    },
    "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows": {
      "name": "validate_workflows",
      "type": "function",
      "docstring": "Valida workflows AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 172,
      "end_line": 240,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_validator\\migrated_aaa_integration_validator.py",
      "category": "agents",
      "file_name": "migrated_aaa_integration_validator.py"
    },
    "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup": {
      "name": "_phase_workflow_setup",
      "type": "private_method",
      "docstring": "Fase de configuração de workflows.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 353,
      "end_line": 371,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_integration_workflow.py",
      "category": "agents",
      "file_name": "migrated_integration_workflow.py"
    },
    "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows": {
      "name": "_setup_integration_workflows",
      "type": "private_method",
      "docstring": "Configura workflows de integração.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 538,
      "end_line": 553,
      "returns": "List[str]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_integration_workflow.py",
      "category": "agents",
      "file_name": "migrated_integration_workflow.py"
    },
    "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status": {
      "name": "get_workflow_status",
      "type": "function",
      "docstring": "Obtém status atual do workflow.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 599,
      "end_line": 607,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_integration_workflow.py",
      "category": "agents",
      "file_name": "migrated_integration_workflow.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow": {
      "name": "identify_primary_workflow",
      "type": "function",
      "docstring": "Identifica o workflow principal baseado nas palavras-chave",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "keywords",
          "annotation": "List[str]"
        },
        {
          "name": "workflows",
          "annotation": "set"
        }
      ],
      "decorators": [],
      "start_line": 258,
      "end_line": 272,
      "returns": "str",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_intelligent_orchestrator.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents": {
      "name": "select_agents",
      "type": "function",
      "docstring": "Seleciona agentes baseado no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 274,
      "end_line": 304,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_intelligent_orchestrator.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role": {
      "name": "get_agent_role",
      "type": "function",
      "docstring": "Define o papel específico do agente no workflow",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        },
        {
          "name": "workflow_type",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 306,
      "end_line": 336,
      "returns": "str",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_intelligent_orchestrator.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow": {
      "name": "execute_workflow",
      "type": "function",
      "docstring": "Executa o workflow coordenado",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_workflow",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 338,
      "end_line": 385,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_intelligent_orchestrator.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase": {
      "name": "get_agents_for_phase",
      "type": "function",
      "docstring": "Identifica agentes responsáveis por cada fase",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "phase",
          "annotation": "str"
        },
        {
          "name": "agents",
          "annotation": "List[Dict]"
        }
      ],
      "decorators": [],
      "start_line": 387,
      "end_line": 402,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_intelligent_orchestrator.py"
    }
  },
  "classes": {
    "python\\python_agent\\migrated_python_agent_system.py.PythonAgent": {
      "name": "PythonAgent",
      "docstring": "Agente especializado em desenvolvimento Python",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "base_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 126,
          "returns": null,
          "async": false
        },
        {
          "name": "load_base_patterns",
          "type": "function",
          "docstring": "Carrega padrões base da pasta agente_python_base",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 128,
          "end_line": 141,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "load_error_log",
          "type": "function",
          "docstring": "Carrega log de erros",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 143,
          "end_line": 159,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "load_improvement_log",
          "type": "function",
          "docstring": "Carrega log de melhorias",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 161,
          "end_line": 177,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_error_log",
          "type": "function",
          "docstring": "Salva log de erros",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 179,
          "end_line": 183,
          "returns": null,
          "async": false
        },
        {
          "name": "save_improvement_log",
          "type": "function",
          "docstring": "Salva log de melhorias",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 185,
          "end_line": 189,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_python_file",
          "type": "function",
          "docstring": "Analisa arquivo Python e detecta problemas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 191,
          "end_line": 267,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "check_base_patterns",
          "type": "function",
          "docstring": "Verifica padrões base carregados da pasta agente_python_base",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 269,
          "end_line": 284,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "analyze_structure",
          "type": "function",
          "docstring": "Analisa estrutura do código Python",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 286,
          "end_line": 328,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "has_type_hints",
          "type": "function",
          "docstring": "Verifica se função tem type hints",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "node",
              "annotation": "ast.FunctionDef"
            }
          ],
          "decorators": [],
          "start_line": 330,
          "end_line": 333,
          "returns": "bool",
          "async": false
        },
        {
          "name": "check_project_patterns",
          "type": "function",
          "docstring": "Verifica padrões específicos do projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 335,
          "end_line": 363,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "update_error_log",
          "type": "function",
          "docstring": "Atualiza log de erros",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_result",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 365,
          "end_line": 389,
          "returns": null,
          "async": false
        },
        {
          "name": "create_python_file",
          "type": "function",
          "docstring": "Cria arquivo Python com estrutura otimizada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "description",
              "annotation": "str"
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 391,
          "end_line": 434,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_file_structure",
          "type": "function",
          "docstring": "Gera estrutura de arquivo Python",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "description",
              "annotation": "str"
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 436,
          "end_line": 465,
          "returns": "str",
          "async": false
        },
        {
          "name": "optimize_python_file",
          "type": "function",
          "docstring": "Otimiza arquivo Python existente",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 467,
          "end_line": 518,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "apply_optimizations",
          "type": "function",
          "docstring": "Aplica otimizações no código Python",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 520,
          "end_line": 538,
          "returns": "str",
          "async": false
        },
        {
          "name": "optimize_imports",
          "type": "function",
          "docstring": "Otimiza imports do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 540,
          "end_line": 573,
          "returns": "str",
          "async": false
        },
        {
          "name": "add_basic_type_hints",
          "type": "function",
          "docstring": "Adiciona type hints básicos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 575,
          "end_line": 581,
          "returns": "str",
          "async": false
        },
        {
          "name": "scan_project_python_files",
          "type": "function",
          "docstring": "Escaneia todos os arquivos Python do projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 583,
          "end_line": 633,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_report",
          "type": "function",
          "docstring": "Gera relatório completo do agente Python",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 635,
          "end_line": 716,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 33,
      "end_line": 716,
      "module_path": "python\\python_agent\\migrated_python_agent_system.py",
      "category": "agents",
      "file_name": "migrated_python_agent_system.py"
    },
    "python\\python_agent\\python_agent.py.PythonagentModule": {
      "name": "PythonagentModule",
      "docstring": "Módulo Agente Python principal",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "python\\python_agent\\python_agent.py",
      "category": "agents",
      "file_name": "python_agent.py"
    },
    "python\\python_agent\\__init__.py.PythonagentModule": {
      "name": "PythonagentModule",
      "docstring": "Módulo Agente Python principal",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "python\\python_agent\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "maps\\map_updater\\migrated_agent_integrator.py.AgentintegratorModule": {
      "name": "AgentintegratorModule",
      "docstring": "Módulo Integração de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_agent_integrator.py",
      "category": "agents",
      "file_name": "migrated_agent_integrator.py"
    },
    "maps\\map_updater\\migrated_agent_monitor.py.AgentmonitorModule": {
      "name": "AgentmonitorModule",
      "docstring": "Módulo Monitoramento de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_agent_monitor.py",
      "category": "agents",
      "file_name": "migrated_agent_monitor.py"
    },
    "maps\\map_updater\\migrated_agent_optimizer.py.AgentoptimizerModule": {
      "name": "AgentoptimizerModule",
      "docstring": "Módulo Otimização de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_agent_optimizer.py",
      "category": "agents",
      "file_name": "migrated_agent_optimizer.py"
    },
    "maps\\map_updater\\migrated_agent_orchestrator.py.AgentorchestratorModule": {
      "name": "AgentorchestratorModule",
      "docstring": "Módulo Orquestração de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_agent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_agent_specialist.py.AgentspecialistModule": {
      "name": "AgentspecialistModule",
      "docstring": "Módulo Agentes especializados",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_agent_specialist.py",
      "category": "agents",
      "file_name": "migrated_agent_specialist.py"
    },
    "maps\\map_updater\\migrated_agent_validator.py.AgentvalidatorModule": {
      "name": "AgentvalidatorModule",
      "docstring": "Módulo Validação de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_agent_validator.py",
      "category": "agents",
      "file_name": "migrated_agent_validator.py"
    },
    "maps\\map_updater\\migrated_consolidate_agents.py.AgentConsolidator": {
      "name": "AgentConsolidator",
      "docstring": "Consolidador de agentes BMAD",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o consolidador de agentes.\n\nArgs:\n    agents_dir: Diretório contendo os agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agents_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 168,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_agents",
          "type": "function",
          "docstring": "Analisa todos os agentes existentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 170,
          "end_line": 223,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "backup_agents",
          "type": "function",
          "docstring": "Faz backup de todos os agentes antes da consolidação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 225,
          "end_line": 242,
          "returns": "bool",
          "async": false
        },
        {
          "name": "consolidate_group",
          "type": "function",
          "docstring": "Consolida um grupo de agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "group_name",
              "annotation": "str"
            },
            {
              "name": "group_config",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 244,
          "end_line": 327,
          "returns": "bool",
          "async": false
        },
        {
          "name": "consolidate_all_agents",
          "type": "function",
          "docstring": "Consolida todos os agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 329,
          "end_line": 372,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_consolidation_report",
          "type": "function",
          "docstring": "Gera relatório de consolidação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 374,
          "end_line": 414,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 43,
      "end_line": 414,
      "module_path": "maps\\map_updater\\migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAAgentSpecializationSystem": {
      "name": "AAAAgentSpecializationSystem",
      "docstring": "Sistema de agentes especializados de nível AAA",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "base_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 49,
          "end_line": 69,
          "returns": null,
          "async": false
        },
        {
          "name": "create_directory_structure",
          "type": "function",
          "docstring": "Cria estrutura de pastas necessária",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 71,
          "end_line": 83,
          "returns": null,
          "async": false
        },
        {
          "name": "initialize_agents",
          "type": "function",
          "docstring": "Inicializa todos os agentes especializados AAA",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 85,
          "end_line": 331,
          "returns": null,
          "async": false
        },
        {
          "name": "initialize_workflows",
          "type": "function",
          "docstring": "Inicializa workflows de nível AAA",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 333,
          "end_line": 364,
          "returns": null,
          "async": false
        },
        {
          "name": "detect_context_by_extension",
          "type": "function",
          "docstring": "Detecta contexto baseado na extensão do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 366,
          "end_line": 435,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "select_agents",
          "type": "function",
          "docstring": "Seleciona agentes baseado no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 437,
          "end_line": 454,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "execute_agent_workflow",
          "type": "function",
          "docstring": "Executa workflow de agente para arquivo específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 456,
          "end_line": 511,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "calculate_overall_quality",
          "type": "function",
          "docstring": "Calcula qualidade geral dos resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 513,
          "end_line": 523,
          "returns": "float",
          "async": false
        },
        {
          "name": "save_report",
          "type": "function",
          "docstring": "Salva relatório de execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 525,
          "end_line": 534,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_metrics_report",
          "type": "function",
          "docstring": "Gera relatório de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 536,
          "end_line": 538,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agent_info",
          "type": "function",
          "docstring": "Obtém informações de um agente específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_id",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 540,
          "end_line": 551,
          "returns": "Optional[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "list_all_agents",
          "type": "function",
          "docstring": "Lista todos os agentes disponíveis",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 553,
          "end_line": 555,
          "returns": "List[Dict[str, Any]]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 46,
      "end_line": 555,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAAgent": {
      "name": "AAAAgent",
      "docstring": "Agente especializado de nível AAA",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "specialization",
              "annotation": "str"
            },
            {
              "name": "file_extensions",
              "annotation": "List[str]"
            },
            {
              "name": "capabilities",
              "annotation": "List[str]"
            },
            {
              "name": "tools",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 561,
          "end_line": 569,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa análise e processamento do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "user_request",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 571,
          "end_line": 605,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "perform_analysis",
          "type": "function",
          "docstring": "Realiza análise específica do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "user_request",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 607,
          "end_line": 617,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "perform_optimizations",
          "type": "function",
          "docstring": "Realiza otimizações específicas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "analysis_result",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 619,
          "end_line": 626,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "validate_quality",
          "type": "function",
          "docstring": "Valida qualidade do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "analysis_result",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "optimization_result",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 628,
          "end_line": 636,
          "returns": "Dict[str, Any]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 558,
      "end_line": 636,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAWorkflow": {
      "name": "AAAWorkflow",
      "docstring": "Workflow de nível AAA",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[str]"
            },
            {
              "name": "phases",
              "annotation": "List[str]"
            },
            {
              "name": "duration",
              "annotation": "str"
            },
            {
              "name": "quality_gates",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 642,
          "end_line": 649,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 639,
      "end_line": 649,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_agent_organizer.py.AgentorganizerModule": {
      "name": "AgentorganizerModule",
      "docstring": "Módulo Organização e gestão de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 56,
          "end_line": 60,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 62,
          "end_line": 72,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 74,
          "end_line": 78,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 80,
          "end_line": 90,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 92,
          "end_line": 96,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 53,
      "end_line": 96,
      "module_path": "maps\\map_updater\\migrated_migrated_agent_organizer.py",
      "category": "agents",
      "file_name": "migrated_migrated_agent_organizer.py"
    },
    "maps\\map_updater\\migrated_migrated_consolidate_agents.py.AgentConsolidator": {
      "name": "AgentConsolidator",
      "docstring": "Consolidador de agentes BMAD",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o consolidador de agentes.\n\nArgs:\n    agents_dir: Diretório contendo os agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agents_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 182,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_agents",
          "type": "function",
          "docstring": "Analisa todos os agentes existentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 184,
          "end_line": 237,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "backup_agents",
          "type": "function",
          "docstring": "Faz backup de todos os agentes antes da consolidação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 239,
          "end_line": 256,
          "returns": "bool",
          "async": false
        },
        {
          "name": "consolidate_group",
          "type": "function",
          "docstring": "Consolida um grupo de agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "group_name",
              "annotation": "str"
            },
            {
              "name": "group_config",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 258,
          "end_line": 341,
          "returns": "bool",
          "async": false
        },
        {
          "name": "consolidate_all_agents",
          "type": "function",
          "docstring": "Consolida todos os agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 343,
          "end_line": 386,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_consolidation_report",
          "type": "function",
          "docstring": "Gera relatório de consolidação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 388,
          "end_line": 428,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 57,
      "end_line": 428,
      "module_path": "maps\\map_updater\\migrated_migrated_consolidate_agents.py",
      "category": "agents",
      "file_name": "migrated_migrated_consolidate_agents.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.EnhancedIntelligentOrchestrator": {
      "name": "EnhancedIntelligentOrchestrator",
      "docstring": "Orquestrador inteligente melhorado",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 320,
          "end_line": 443,
          "returns": null,
          "async": false
        },
        {
          "name": "orchestrate_request",
          "type": "function",
          "docstring": "Orquestra o pedido do usuário com análise melhorada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 445,
          "end_line": 471,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "select_agents",
          "type": "function",
          "docstring": "Seleciona agentes baseado no contexto melhorado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 473,
          "end_line": 506,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agent_role",
          "type": "function",
          "docstring": "Define o papel específico do agente no workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_id",
              "annotation": "str"
            },
            {
              "name": "workflow_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 508,
          "end_line": 557,
          "returns": "str",
          "async": false
        },
        {
          "name": "execute_workflow",
          "type": "function",
          "docstring": "Executa o workflow com os agentes selecionados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_workflow",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 559,
          "end_line": 598,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agents_for_phase",
          "type": "function",
          "docstring": "Identifica agentes responsáveis por cada fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 600,
          "end_line": 618,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "simulate_phase_execution",
          "type": "function",
          "docstring": "Simula execução de uma fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 620,
          "end_line": 646,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "report_phase_progress",
          "type": "function",
          "docstring": "Reporta progresso da fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            },
            {
              "name": "progress",
              "annotation": "float"
            }
          ],
          "decorators": [],
          "start_line": 648,
          "end_line": 653,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_progress_report",
          "type": "function",
          "docstring": "Gera relatório de progresso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 655,
          "end_line": 697,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_execution_results",
          "type": "function",
          "docstring": "Salva resultados da execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 699,
          "end_line": 718,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 317,
      "end_line": 718,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.IntelligentOrchestrator": {
      "name": "IntelligentOrchestrator",
      "docstring": "Sistema de orquestração inteligente para agentes BMAD",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 206,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_context",
          "type": "function",
          "docstring": "Analisa o contexto do pedido do usuário",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 208,
          "end_line": 249,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_complexity",
          "type": "function",
          "docstring": "Analisa a complexidade baseada no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "keywords",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 251,
          "end_line": 270,
          "returns": "str",
          "async": false
        },
        {
          "name": "identify_primary_workflow",
          "type": "function",
          "docstring": "Identifica o workflow principal baseado nas palavras-chave",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "keywords",
              "annotation": "List[str]"
            },
            {
              "name": "workflows",
              "annotation": "set"
            }
          ],
          "decorators": [],
          "start_line": 272,
          "end_line": 286,
          "returns": "str",
          "async": false
        },
        {
          "name": "select_agents",
          "type": "function",
          "docstring": "Seleciona agentes baseado no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 288,
          "end_line": 318,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agent_role",
          "type": "function",
          "docstring": "Define o papel específico do agente no workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_id",
              "annotation": "str"
            },
            {
              "name": "workflow_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 320,
          "end_line": 350,
          "returns": "str",
          "async": false
        },
        {
          "name": "execute_workflow",
          "type": "function",
          "docstring": "Executa o workflow coordenado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_workflow",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 352,
          "end_line": 399,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agents_for_phase",
          "type": "function",
          "docstring": "Identifica agentes responsáveis por cada fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 401,
          "end_line": 416,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "report_phase_progress",
          "type": "function",
          "docstring": "Reporta progresso da fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            },
            {
              "name": "progress",
              "annotation": "float"
            }
          ],
          "decorators": [],
          "start_line": 418,
          "end_line": 422,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_progress_report",
          "type": "function",
          "docstring": "Gera relatório de progresso em tempo real",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 424,
          "end_line": 451,
          "returns": "str",
          "async": false
        },
        {
          "name": "orchestrate_request",
          "type": "function",
          "docstring": "Orquestra automaticamente o pedido do usuário",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 453,
          "end_line": 478,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_execution_results",
          "type": "function",
          "docstring": "Salva resultados da execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 480,
          "end_line": 514,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 42,
      "end_line": 514,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_python_agent.py.PythonagentModule": {
      "name": "PythonagentModule",
      "docstring": "Módulo Agente Python principal",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_python_agent.py",
      "category": "agents",
      "file_name": "migrated_python_agent.py"
    },
    "maps\\map_updater\\migrated_script_migration_agent.py.ScriptMigrationAgent": {
      "name": "ScriptMigrationAgent",
      "docstring": "Agente para migração de scripts Python para módulos organizados.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 49,
          "end_line": 66,
          "returns": null,
          "async": false
        },
        {
          "name": "load_structure_config",
          "type": "function",
          "docstring": "Carrega configuração da estrutura modular.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 68,
          "end_line": 76,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "load_script_mapping",
          "type": "function",
          "docstring": "Carrega mapeamento de scripts para módulos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 86,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "discover_python_scripts",
          "type": "function",
          "docstring": "Descobre todos os scripts Python no projeto.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 88,
          "end_line": 107,
          "returns": "List[Path]",
          "async": false
        },
        {
          "name": "analyze_script",
          "type": "function",
          "docstring": "Analisa um script Python para extrair informações.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "script_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 109,
          "end_line": 177,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "determine_target_module",
          "type": "function",
          "docstring": "Determina o módulo de destino para um script.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "script_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 179,
          "end_line": 228,
          "returns": "Optional[str]",
          "async": false
        },
        {
          "name": "migrate_script_to_module",
          "type": "function",
          "docstring": "Migra um script para o módulo de destino.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "script_path",
              "annotation": "Path"
            },
            {
              "name": "target_module",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 230,
          "end_line": 265,
          "returns": "bool",
          "async": false
        },
        {
          "name": "create_migrated_script",
          "type": "function",
          "docstring": "Cria versão migrada do script.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "original_content",
              "annotation": "str"
            },
            {
              "name": "script_name",
              "annotation": "str"
            },
            {
              "name": "target_module",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 267,
          "end_line": 302,
          "returns": "str",
          "async": false
        },
        {
          "name": "update_module_init",
          "type": "function",
          "docstring": "Atualiza __init__.py do módulo para incluir script migrado.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "module_path",
              "annotation": "Path"
            },
            {
              "name": "script_name",
              "annotation": "str"
            },
            {
              "name": "target_module",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 304,
          "end_line": 327,
          "returns": null,
          "async": false
        },
        {
          "name": "update_module_config",
          "type": "function",
          "docstring": "Atualiza configuração do módulo.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "module_path",
              "annotation": "Path"
            },
            {
              "name": "script_name",
              "annotation": "str"
            },
            {
              "name": "target_module",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 329,
          "end_line": 352,
          "returns": null,
          "async": false
        },
        {
          "name": "migrate_all_scripts",
          "type": "function",
          "docstring": "Migra todos os scripts descobertos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 354,
          "end_line": 395,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_migration_report",
          "type": "function",
          "docstring": "Gera relatório da migração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 397,
          "end_line": 411,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_migration_report",
          "type": "function",
          "docstring": "Salva relatório da migração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 413,
          "end_line": 421,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 46,
      "end_line": 421,
      "module_path": "maps\\map_updater\\migrated_script_migration_agent.py",
      "category": "agents",
      "file_name": "migrated_script_migration_agent.py"
    },
    "maps\\map_updater\\migrated_workflow_manager.py.WorkflowmanagerModule": {
      "name": "WorkflowmanagerModule",
      "docstring": "Módulo Gerenciamento de workflows",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_workflow_manager.py",
      "category": "agents",
      "file_name": "migrated_workflow_manager.py"
    },
    "maps\\map_updater\\migrated___init__.py.WorkflowmanagerModule": {
      "name": "WorkflowmanagerModule",
      "docstring": "Módulo Gerenciamento de workflows",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 37,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 39,
          "end_line": 41,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 43,
          "end_line": 45,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 31,
      "end_line": 45,
      "module_path": "maps\\map_updater\\migrated___init__.py",
      "category": "agents",
      "file_name": "migrated___init__.py"
    },
    "agents\\agent_integrator\\agent_integrator.py.AgentintegratorModule": {
      "name": "AgentintegratorModule",
      "docstring": "Módulo Integração de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_integrator\\agent_integrator.py",
      "category": "agents",
      "file_name": "agent_integrator.py"
    },
    "agents\\agent_integrator\\__init__.py.AgentintegratorModule": {
      "name": "AgentintegratorModule",
      "docstring": "Módulo Integração de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "agents\\agent_integrator\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\agent_monitor\\agent_monitor.py.AgentmonitorModule": {
      "name": "AgentmonitorModule",
      "docstring": "Módulo Monitoramento de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_monitor\\agent_monitor.py",
      "category": "agents",
      "file_name": "agent_monitor.py"
    },
    "agents\\agent_monitor\\__init__.py.AgentmonitorModule": {
      "name": "AgentmonitorModule",
      "docstring": "Módulo Monitoramento de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "agents\\agent_monitor\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\agent_optimizer\\agent_optimizer.py.AgentoptimizerModule": {
      "name": "AgentoptimizerModule",
      "docstring": "Módulo Otimização de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_optimizer\\agent_optimizer.py",
      "category": "agents",
      "file_name": "agent_optimizer.py"
    },
    "agents\\agent_optimizer\\__init__.py.AgentoptimizerModule": {
      "name": "AgentoptimizerModule",
      "docstring": "Módulo Otimização de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 18,
          "end_line": 21,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 23,
          "end_line": 25,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 27,
          "end_line": 29,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 15,
      "end_line": 29,
      "module_path": "agents\\agent_optimizer\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\agent_orchestrator\\agent_orchestrator.py.AgentorchestratorModule": {
      "name": "AgentorchestratorModule",
      "docstring": "Módulo Orquestração de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_orchestrator\\agent_orchestrator.py",
      "category": "agents",
      "file_name": "agent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.AgentsOrchestrator": {
      "name": "AgentsOrchestrator",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 39,
          "end_line": 63,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 65,
          "end_line": 116,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_dashboard",
          "type": "function",
          "docstring": "Analisa o dashboard para identificar tarefas pendentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 118,
          "end_line": 140,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "extract_pending_tasks",
          "type": "function",
          "docstring": "Extrai tarefas pendentes do dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 142,
          "end_line": 184,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "determine_priority",
          "type": "function",
          "docstring": "Determina prioridade da tarefa",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "task_id",
              "annotation": "str"
            },
            {
              "name": "task_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 186,
          "end_line": 206,
          "returns": "str",
          "async": false
        },
        {
          "name": "assign_task_to_agent",
          "type": "function",
          "docstring": "Atribui tarefa ao agente apropriado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "task",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 208,
          "end_line": 228,
          "returns": "Optional[str]",
          "async": false
        },
        {
          "name": "execute_agent",
          "type": "function",
          "docstring": "Executa um agente específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_name",
              "annotation": "str"
            },
            {
              "name": "task",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 230,
          "end_line": 267,
          "returns": "bool",
          "async": false
        },
        {
          "name": "_run_agent_thread",
          "type": "private_method",
          "docstring": "Executa agente em thread separada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_file",
              "annotation": "Path"
            },
            {
              "name": "agent_name",
              "annotation": "str"
            },
            {
              "name": "task",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 269,
          "end_line": 326,
          "returns": null,
          "async": false
        },
        {
          "name": "execute_auto_commit",
          "type": "function",
          "docstring": "Executa commit automático após tarefa concluída",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_name",
              "annotation": "str"
            },
            {
              "name": "task",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 328,
          "end_line": 357,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_commit_message",
          "type": "function",
          "docstring": "Gera mensagem de commit contextual",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_name",
              "annotation": "str"
            },
            {
              "name": "task",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 359,
          "end_line": 408,
          "returns": "str",
          "async": false
        },
        {
          "name": "update_dashboard_with_commit",
          "type": "function",
          "docstring": "Atualiza dashboard com hash do commit",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "commit_hash",
              "annotation": "str"
            },
            {
              "name": "agent_name",
              "annotation": "str"
            },
            {
              "name": "task",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 410,
          "end_line": 443,
          "returns": null,
          "async": false
        },
        {
          "name": "orchestrate_workflow",
          "type": "function",
          "docstring": "Orquestra workflow completo de agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 445,
          "end_line": 499,
          "returns": "bool",
          "async": false
        },
        {
          "name": "wait_for_agents_completion",
          "type": "function",
          "docstring": "Aguarda conclusão de todos os agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "timeout",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 501,
          "end_line": 522,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_orchestration_report",
          "type": "function",
          "docstring": "Gera relatório de orquestração",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 524,
          "end_line": 570,
          "returns": null,
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o Agents Orchestrator",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 572,
          "end_line": 589,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 38,
      "end_line": 589,
      "module_path": "agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_agents_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_alert_agent.py.AlertAgent": {
      "name": "AlertAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 37,
          "end_line": 56,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema de alertas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 58,
          "end_line": 100,
          "returns": null,
          "async": false
        },
        {
          "name": "load_metrics_data",
          "type": "function",
          "docstring": "Carrega dados de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 102,
          "end_line": 129,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "check_system_alerts",
          "type": "function",
          "docstring": "Verifica alertas do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 131,
          "end_line": 218,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "check_application_alerts",
          "type": "function",
          "docstring": "Verifica alertas da aplicação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 220,
          "end_line": 313,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "check_trend_alerts",
          "type": "function",
          "docstring": "Verifica alertas baseados em tendências",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 315,
          "end_line": 348,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "generate_alert_summary",
          "type": "function",
          "docstring": "Gera resumo dos alertas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "alerts",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 350,
          "end_line": 382,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_alerts",
          "type": "function",
          "docstring": "Salva alertas em arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "alerts",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 384,
          "end_line": 415,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_alert_report",
          "type": "function",
          "docstring": "Gera relatório detalhado de alertas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "alerts",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 417,
          "end_line": 499,
          "returns": "str",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o agente de alertas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 501,
          "end_line": 545,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 36,
      "end_line": 545,
      "module_path": "agents\\agent_orchestrator\\migrated_alert_agent.py",
      "category": "agents",
      "file_name": "migrated_alert_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_code_generator_agent.py.CodeGeneratorAgent": {
      "name": "CodeGeneratorAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 38,
          "end_line": 61,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 63,
          "end_line": 84,
          "returns": null,
          "async": false
        },
        {
          "name": "execute_practical_projects",
          "type": "function",
          "docstring": "Executa projetos práticos baseados no conhecimento da wiki.\n\nReturns:\n    bool: True se execução bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 86,
          "end_line": 185,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_simple_code",
          "type": "function",
          "docstring": "Gera código simples para o projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "project_config",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 187,
          "end_line": 305,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_project_code",
          "type": "function",
          "docstring": "Salva código do projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            },
            {
              "name": "project_config",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 307,
          "end_line": 330,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_project_documentation",
          "type": "function",
          "docstring": "Gera documentação para o projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "project_config",
              "annotation": "Dict"
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 332,
          "end_line": 371,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_execution_report",
          "type": "function",
          "docstring": "Gera relatório de execução dos projetos práticos.\n\nArgs:\n    projects: Configuração dos projetos\n    results: Resultados da execução\n    \nReturns:\n    str: Relatório formatado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "projects",
              "annotation": "Dict"
            },
            {
              "name": "results",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 373,
          "end_line": 450,
          "returns": "str",
          "async": false
        },
        {
          "name": "get_file_extension",
          "type": "function",
          "docstring": "Retorna extensão de arquivo para linguagem",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "language",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 452,
          "end_line": 463,
          "returns": "str",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o Code Generator Agent",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "requirements",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 465,
          "end_line": 487,
          "returns": "bool",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 37,
      "end_line": 487,
      "module_path": "agents\\agent_orchestrator\\migrated_code_generator_agent.py",
      "category": "agents",
      "file_name": "migrated_code_generator_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.CoverageValidationAgent": {
      "name": "CoverageValidationAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 34,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 43,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_dashboard_coverage",
          "type": "function",
          "docstring": "Analisa a cobertura atual do dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 83,
          "returns": null,
          "async": false
        },
        {
          "name": "integrate_stories_habdel",
          "type": "function",
          "docstring": "Integra as 60 Stories Habdel ignoradas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 85,
          "end_line": 113,
          "returns": null,
          "async": false
        },
        {
          "name": "map_missing_tasks",
          "type": "function",
          "docstring": "Mapeia as 4 Tasks importantes não documentadas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 115,
          "end_line": 138,
          "returns": null,
          "async": false
        },
        {
          "name": "document_missing_agents",
          "type": "function",
          "docstring": "Documenta os 7 Agentes BMAD não cobertos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 140,
          "end_line": 166,
          "returns": null,
          "async": false
        },
        {
          "name": "integrate_missing_roadmaps",
          "type": "function",
          "docstring": "Integra os 2 Roadmaps faltantes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 168,
          "end_line": 189,
          "returns": null,
          "async": false
        },
        {
          "name": "cover_missing_plans",
          "type": "function",
          "docstring": "Cobre os 3 Planejamentos específicos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 191,
          "end_line": 213,
          "returns": null,
          "async": false
        },
        {
          "name": "update_dashboard_coverage",
          "type": "function",
          "docstring": "Atualiza o dashboard com 100% de cobertura",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 215,
          "end_line": 240,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a validação de cobertura completa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 242,
          "end_line": 303,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 303,
      "module_path": "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py",
      "category": "agents",
      "file_name": "migrated_coverage_validation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_dashboard_agent.py.DashboardAgent": {
      "name": "DashboardAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 37,
          "end_line": 54,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema de dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 56,
          "end_line": 80,
          "returns": null,
          "async": false
        },
        {
          "name": "load_metrics_data",
          "type": "function",
          "docstring": "Carrega dados de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 82,
          "end_line": 116,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_html_dashboard",
          "type": "function",
          "docstring": "Gera dashboard HTML interativo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 118,
          "end_line": 419,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_markdown_dashboard",
          "type": "function",
          "docstring": "Gera dashboard em Markdown",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 421,
          "end_line": 528,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_dashboard",
          "type": "function",
          "docstring": "Salva dashboards em arquivos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "html_content",
              "annotation": "str"
            },
            {
              "name": "markdown_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 530,
          "end_line": 548,
          "returns": "bool",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o agente de dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 550,
          "end_line": 578,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 36,
      "end_line": 578,
      "module_path": "agents\\agent_orchestrator\\migrated_dashboard_agent.py",
      "category": "agents",
      "file_name": "migrated_dashboard_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_documentation_agent.py.DocumentationAgent": {
      "name": "DocumentationAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 53,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 55,
          "end_line": 74,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_code_for_documentation",
          "type": "function",
          "docstring": "Analisa código para gerar documentação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 76,
          "end_line": 100,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "detect_language",
          "type": "function",
          "docstring": "Detecta linguagem do arquivo baseado na extensão",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 102,
          "end_line": 115,
          "returns": "str",
          "async": false
        },
        {
          "name": "extract_classes",
          "type": "function",
          "docstring": "Extrai classes do código",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 117,
          "end_line": 142,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_functions",
          "type": "function",
          "docstring": "Extrai funções do código",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 144,
          "end_line": 176,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_imports",
          "type": "function",
          "docstring": "Extrai imports do código",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 178,
          "end_line": 197,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "extract_comments",
          "type": "function",
          "docstring": "Extrai comentários do código",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 199,
          "end_line": 237,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "parse_parameters",
          "type": "function",
          "docstring": "Parse parâmetros de função",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "params_str",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 239,
          "end_line": 262,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "assess_complexity",
          "type": "function",
          "docstring": "Avalia complexidade do código",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 264,
          "end_line": 277,
          "returns": "str",
          "async": false
        },
        {
          "name": "identify_documentation_needs",
          "type": "function",
          "docstring": "Identifica necessidades de documentação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 279,
          "end_line": 299,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "generate_api_documentation",
          "type": "function",
          "docstring": "Gera documentação de API",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 301,
          "end_line": 386,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_readme",
          "type": "function",
          "docstring": "Gera README para o projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 388,
          "end_line": 454,
          "returns": "str",
          "async": false
        },
        {
          "name": "validate_documentation_quality",
          "type": "function",
          "docstring": "Valida qualidade da documentação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "documentation",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 456,
          "end_line": 518,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "save_documentation",
          "type": "function",
          "docstring": "Salva documentação gerada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "documentation",
              "annotation": "str"
            },
            {
              "name": "analysis",
              "annotation": "Dict"
            },
            {
              "name": "doc_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 520,
          "end_line": 534,
          "returns": "str",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o Documentation Agent",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "code_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 536,
          "end_line": 577,
          "returns": "bool",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 35,
      "end_line": 577,
      "module_path": "agents\\agent_orchestrator\\migrated_documentation_agent.py",
      "category": "agents",
      "file_name": "migrated_documentation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.EducationalValidationAgent": {
      "name": "EducationalValidationAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 34,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 43,
          "returns": null,
          "async": false
        },
        {
          "name": "test_lessons_functionality",
          "type": "function",
          "docstring": "Testa funcionalidade de todas as 47 lições",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 115,
          "returns": null,
          "async": false
        },
        {
          "name": "validate_course_progression",
          "type": "function",
          "docstring": "Valida progressão dos 4 cursos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 117,
          "end_line": 163,
          "returns": null,
          "async": false
        },
        {
          "name": "measure_learning_effectiveness",
          "type": "function",
          "docstring": "Mede eficácia do aprendizado",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 165,
          "end_line": 215,
          "returns": null,
          "async": false
        },
        {
          "name": "identify_knowledge_gaps",
          "type": "function",
          "docstring": "Identifica gaps de conhecimento",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 217,
          "end_line": 258,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_educational_report",
          "type": "function",
          "docstring": "Gera relatório completo do sistema educacional",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 260,
          "end_line": 289,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a validação educacional completa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 291,
          "end_line": 338,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 338,
      "module_path": "agents\\agent_orchestrator\\migrated_educational_validation_agent.py",
      "category": "agents",
      "file_name": "migrated_educational_validation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.EnhancedIntelligentOrchestrator": {
      "name": "EnhancedIntelligentOrchestrator",
      "docstring": "Orquestrador inteligente melhorado",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 306,
          "end_line": 429,
          "returns": null,
          "async": false
        },
        {
          "name": "orchestrate_request",
          "type": "function",
          "docstring": "Orquestra o pedido do usuário com análise melhorada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 431,
          "end_line": 457,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "select_agents",
          "type": "function",
          "docstring": "Seleciona agentes baseado no contexto melhorado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 459,
          "end_line": 492,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agent_role",
          "type": "function",
          "docstring": "Define o papel específico do agente no workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_id",
              "annotation": "str"
            },
            {
              "name": "workflow_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 494,
          "end_line": 543,
          "returns": "str",
          "async": false
        },
        {
          "name": "execute_workflow",
          "type": "function",
          "docstring": "Executa o workflow com os agentes selecionados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_workflow",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 545,
          "end_line": 584,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agents_for_phase",
          "type": "function",
          "docstring": "Identifica agentes responsáveis por cada fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 586,
          "end_line": 604,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "simulate_phase_execution",
          "type": "function",
          "docstring": "Simula execução de uma fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 606,
          "end_line": 632,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "report_phase_progress",
          "type": "function",
          "docstring": "Reporta progresso da fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            },
            {
              "name": "progress",
              "annotation": "float"
            }
          ],
          "decorators": [],
          "start_line": 634,
          "end_line": 639,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_progress_report",
          "type": "function",
          "docstring": "Gera relatório de progresso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 641,
          "end_line": 683,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_execution_results",
          "type": "function",
          "docstring": "Salva resultados da execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 685,
          "end_line": 704,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 303,
      "end_line": 704,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_file_organization_agent.py.FileOrganizationAgent": {
      "name": "FileOrganizationAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 37,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 39,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_naming_patterns",
          "type": "function",
          "docstring": "Analisa padrões de nomenclatura atuais",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 100,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "identify_obsolete_files",
          "type": "function",
          "docstring": "Identifica arquivos obsoletos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 102,
          "end_line": 152,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "get_obsolete_reason",
          "type": "function",
          "docstring": "Retorna razão para arquivo ser considerado obsoleto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "filename",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 154,
          "end_line": 177,
          "returns": "str",
          "async": false
        },
        {
          "name": "get_recommended_action",
          "type": "function",
          "docstring": "Retorna ação recomendada para arquivo obsoleto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "filename",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 179,
          "end_line": 202,
          "returns": "str",
          "async": false
        },
        {
          "name": "standardize_file_names",
          "type": "function",
          "docstring": "Padroniza nomes de arquivos para snake_case",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 204,
          "end_line": 256,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "clean_obsolete_files",
          "type": "function",
          "docstring": "Remove arquivos obsoletos identificados",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 258,
          "end_line": 329,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "validate_navigation_paths",
          "type": "function",
          "docstring": "Valida caminhos de navegação após mudanças",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 331,
          "end_line": 394,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_organization_report",
          "type": "function",
          "docstring": "Gera relatório completo da organização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 396,
          "end_line": 430,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a organização completa de arquivos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 432,
          "end_line": 481,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 30,
      "end_line": 481,
      "module_path": "agents\\agent_orchestrator\\migrated_file_organization_agent.py",
      "category": "agents",
      "file_name": "migrated_file_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.FinalCleanupAgent": {
      "name": "FinalCleanupAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 37,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 39,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "clean_pycache",
          "type": "function",
          "docstring": "Remove pastas __pycache__",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 85,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "integrate_start_task_supervisor",
          "type": "function",
          "docstring": "Integra start_task_supervisor.py em task_supervisor_agent.py",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 87,
          "end_line": 164,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "integrate_absolute_path_utility",
          "type": "function",
          "docstring": "Integra absolute_path_utility.py em comprehensive_path_validator.py",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 166,
          "end_line": 243,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "clean_backup_consolidation",
          "type": "function",
          "docstring": "Limpa pasta backup_consolidation (opcional)",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 245,
          "end_line": 289,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "validate_final_structure",
          "type": "function",
          "docstring": "Valida estrutura final após limpeza",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 291,
          "end_line": 334,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_final_report",
          "type": "function",
          "docstring": "Gera relatório final da limpeza",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 336,
          "end_line": 369,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a limpeza final completa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 371,
          "end_line": 420,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 30,
      "end_line": 420,
      "module_path": "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py",
      "category": "agents",
      "file_name": "migrated_final_cleanup_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py.GitAutomationAgentFixed": {
      "name": "GitAutomationAgentFixed",
      "docstring": "Agente de automação Git com boas práticas em português - VERSÃO CORRIGIDA.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o agente de automação Git.\n\nArgs:\n    project_root: Caminho raiz do projeto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "project_root",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 72,
          "end_line": 117,
          "returns": null,
          "async": false
        },
        {
          "name": "validate_file_exists",
          "type": "function",
          "docstring": "Valida se um arquivo existe antes de tentar adicioná-lo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se o arquivo existe",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 119,
          "end_line": 134,
          "returns": "bool",
          "async": false
        },
        {
          "name": "safe_add_file",
          "type": "function",
          "docstring": "Adiciona um arquivo de forma segura, validando sua existência.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se adicionado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 136,
          "end_line": 169,
          "returns": "bool",
          "async": false
        },
        {
          "name": "analyze_changes",
          "type": "function",
          "docstring": "Analisa mudanças no repositório Git.\n\nReturns:\n    Dicionário com informações das mudanças",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 171,
          "end_line": 241,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "_detect_task_context",
          "type": "private_method",
          "docstring": "Detecta contexto de tarefa atual.\n\nReturns:\n    Informações do contexto de tarefa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 243,
          "end_line": 273,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "_detect_open_files",
          "type": "private_method",
          "docstring": "Detecta arquivos abertos no IDE.\n\nReturns:\n    Lista de arquivos abertos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 275,
          "end_line": 300,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "_analyze_commit_groups",
          "type": "private_method",
          "docstring": "Analisa e agrupa mudanças para commits separados.\n\nArgs:\n    changes: Dicionário com informações das mudanças\n    \nReturns:\n    Lista de grupos de commit",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "changes",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 302,
          "end_line": 354,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "_group_by_directory",
          "type": "private_method",
          "docstring": "Agrupa arquivos por diretório.\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Lista de grupos por diretório",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 356,
          "end_line": 380,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "_group_by_file_type",
          "type": "private_method",
          "docstring": "Agrupa arquivos por tipo.\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Lista de grupos por tipo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 382,
          "end_line": 406,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "_group_by_context",
          "type": "private_method",
          "docstring": "Agrupa arquivos por contexto (análise de diff).\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Lista de grupos por contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 408,
          "end_line": 438,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "_get_file_diff",
          "type": "private_method",
          "docstring": "Obtém diff de um arquivo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    Conteúdo do diff",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 440,
          "end_line": 458,
          "returns": "str",
          "async": false
        },
        {
          "name": "_extract_context_from_diff",
          "type": "private_method",
          "docstring": "Extrai contexto de um diff.\n\nArgs:\n    diff_content: Conteúdo do diff\n    \nReturns:\n    Contexto extraído",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "diff_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 460,
          "end_line": 484,
          "returns": "str",
          "async": false
        },
        {
          "name": "_is_similar_context",
          "type": "private_method",
          "docstring": "Verifica se dois contextos são similares.\n\nArgs:\n    context1: Primeiro contexto\n    context2: Segundo contexto\n    \nReturns:\n    True se similares",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context1",
              "annotation": "str"
            },
            {
              "name": "context2",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 486,
          "end_line": 502,
          "returns": "bool",
          "async": false
        },
        {
          "name": "_consolidate_groups",
          "type": "private_method",
          "docstring": "Consolida grupos sobrepostos.\n\nArgs:\n    groups: Lista de grupos\n    \nReturns:\n    Lista consolidada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "groups",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 504,
          "end_line": 534,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "_ensure_unique_files",
          "type": "private_method",
          "docstring": "Garante que cada arquivo está em apenas um grupo.\n\nArgs:\n    groups: Lista de grupos\n    all_files: Lista de todos os arquivos\n    \nReturns:\n    Lista de grupos com arquivos únicos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "groups",
              "annotation": "List[Dict[str, Any]]"
            },
            {
              "name": "all_files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 536,
          "end_line": 567,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "_get_file_type",
          "type": "private_method",
          "docstring": "Determina o tipo de um arquivo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    Tipo do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 569,
          "end_line": 605,
          "returns": "str",
          "async": false
        },
        {
          "name": "_determine_type_from_files",
          "type": "private_method",
          "docstring": "Determina o tipo de commit baseado em uma lista de arquivos.\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Tipo de commit",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 607,
          "end_line": 631,
          "returns": "str",
          "async": false
        },
        {
          "name": "_generate_group_message",
          "type": "private_method",
          "docstring": "Gera mensagem para um grupo de arquivos.\n\nArgs:\n    files: Lista de arquivos\n    commit_type: Tipo de commit\n    \nReturns:\n    Mensagem gerada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "List[str]"
            },
            {
              "name": "commit_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 633,
          "end_line": 665,
          "returns": "str",
          "async": false
        },
        {
          "name": "_determine_commit_type",
          "type": "private_method",
          "docstring": "Determina o tipo de commit baseado nas mudanças.\n\nArgs:\n    changes: Dicionário com informações das mudanças\n    \nReturns:\n    Tipo de commit convencional",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "changes",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 667,
          "end_line": 705,
          "returns": "str",
          "async": false
        },
        {
          "name": "_generate_change_summary",
          "type": "private_method",
          "docstring": "Gera resumo das mudanças em português.\n\nArgs:\n    changes: Dicionário com informações das mudanças\n    \nReturns:\n    Resumo das mudanças",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "changes",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 707,
          "end_line": 737,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_commit_message",
          "type": "function",
          "docstring": "Gera mensagem de commit inteligente em português.\n\nArgs:\n    changes: Dicionário com informações das mudanças\n    \nReturns:\n    Mensagem de commit formatada",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "changes",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 739,
          "end_line": 806,
          "returns": "str",
          "async": false
        },
        {
          "name": "validate_commit_message",
          "type": "function",
          "docstring": "Valida mensagem de commit seguindo boas práticas.\n\nArgs:\n    message: Mensagem de commit a ser validada\n    \nReturns:\n    Resultado da validação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 808,
          "end_line": 882,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute_commit",
          "type": "function",
          "docstring": "Executa commit com validação.\n\nArgs:\n    message: Mensagem de commit\n    auto_push: Se deve fazer push automático\n    \nReturns:\n    Resultado da execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            },
            {
              "name": "auto_push",
              "annotation": "bool"
            }
          ],
          "decorators": [],
          "start_line": 884,
          "end_line": 978,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "auto_commit",
          "type": "function",
          "docstring": "Executa commit automático completo.\n\nArgs:\n    auto_push: Se deve fazer push automático\n    \nReturns:\n    Resultado da execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "auto_push",
              "annotation": "bool"
            }
          ],
          "decorators": [],
          "start_line": 980,
          "end_line": 1009,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute_multiple_commits",
          "type": "function",
          "docstring": "Executa múltiplos commits baseado nos grupos.\n\nArgs:\n    commit_groups: Lista de grupos de commit\n    auto_push: Se deve fazer push automático\n    \nReturns:\n    Lista de resultados dos commits",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "commit_groups",
              "annotation": "List[Dict[str, Any]]"
            },
            {
              "name": "auto_push",
              "annotation": "bool"
            }
          ],
          "decorators": [],
          "start_line": 1011,
          "end_line": 1051,
          "returns": "List[Dict[str, Any]]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 69,
      "end_line": 1051,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "agents",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.IntegratedNavigationAgent": {
      "name": "IntegratedNavigationAgent",
      "docstring": "Agente que integra navegação JSON e grafos",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 33,
          "end_line": 51,
          "returns": null,
          "async": false
        },
        {
          "name": "navigate",
          "type": "function",
          "docstring": "Navegação integrada com múltiplas estratégias\n\nEstratégias:\n- 'json': Navegação JSON tradicional\n- 'graph': Navegação por grafos\n- 'hybrid': Combinação inteligente",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Optional[str]"
            },
            {
              "name": "strategy",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 53,
          "end_line": 107,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "json_navigation",
          "type": "function",
          "docstring": "Navegação JSON tradicional",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Optional[str]"
            }
          ],
          "decorators": [],
          "start_line": 109,
          "end_line": 150,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "graph_navigation",
          "type": "function",
          "docstring": "Navegação por grafos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Optional[str]"
            }
          ],
          "decorators": [],
          "start_line": 152,
          "end_line": 186,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "hybrid_navigation",
          "type": "function",
          "docstring": "Navegação híbrida - combina JSON e grafos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Optional[str]"
            }
          ],
          "decorators": [],
          "start_line": 188,
          "end_line": 213,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "integrate_results",
          "type": "function",
          "docstring": "Integra resultados de JSON e grafos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "json_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "graph_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "context",
              "annotation": "Optional[str]"
            }
          ],
          "decorators": [],
          "start_line": 215,
          "end_line": 269,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "calculate_confidence_scores",
          "type": "function",
          "docstring": "Calcula scores de confiança para os resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "integrated_results",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 271,
          "end_line": 301,
          "returns": "Dict[str, float]",
          "async": false
        },
        {
          "name": "generate_suggestions",
          "type": "function",
          "docstring": "Gera sugestões de navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Optional[str]"
            },
            {
              "name": "results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 303,
          "end_line": 352,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "get_performance_report",
          "type": "function",
          "docstring": "Gera relatório de performance",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 354,
          "end_line": 374,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "optimize_navigation",
          "type": "function",
          "docstring": "Otimiza a navegação integrada",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 376,
          "end_line": 412,
          "returns": "Dict[str, Any]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 30,
      "end_line": 412,
      "module_path": "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py",
      "category": "agents",
      "file_name": "migrated_integrated_navigation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py.IntegrationAgent": {
      "name": "IntegrationAgent",
      "docstring": "Agente especializado em integração total entre OTClient e Canary.\n\nResponsabilidades:\n- Preparar estruturas de recepção para Canary\n- Validar compatibilidade entre sistemas\n- Coordenar workflows de integração\n- Gerar relatórios de progresso\n- Manter mapas de integração atualizados",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 67,
          "end_line": 100,
          "returns": null,
          "async": false
        },
        {
          "name": "prepare_integration_structure",
          "type": "function",
          "docstring": "Prepara a estrutura de recepção para integração do Canary.\n\nReturns:\n    Dict com status da preparação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 102,
          "end_line": 144,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "validate_compatibility",
          "type": "function",
          "docstring": "Valida compatibilidade entre OTClient e Canary (preparação).\n\nReturns:\n    Dict com resultados da validação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 146,
          "end_line": 184,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "create_integration_templates",
          "type": "function",
          "docstring": "Cria templates para documentação e código Canary.\n\nReturns:\n    Dict com status da criação de templates",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 186,
          "end_line": 217,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "setup_integration_workflows",
          "type": "function",
          "docstring": "Configura workflows de integração automatizados.\n\nReturns:\n    Dict com status da configuração",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 219,
          "end_line": 251,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "generate_integration_report",
          "type": "function",
          "docstring": "Gera relatório completo de integração.\n\nReturns:\n    Dict com relatório de integração",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 253,
          "end_line": 297,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_create_integration_config",
          "type": "private_method",
          "docstring": "Cria arquivo de configuração de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "structure",
              "annotation": "Dict[str, Path]"
            }
          ],
          "decorators": [],
          "start_line": 299,
          "end_line": 312,
          "returns": "None",
          "async": false
        },
        {
          "name": "_create_template_files",
          "type": "private_method",
          "docstring": "Cria arquivos de template.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "structure",
              "annotation": "Dict[str, Path]"
            }
          ],
          "decorators": [],
          "start_line": 314,
          "end_line": 351,
          "returns": "None",
          "async": false
        },
        {
          "name": "_create_workflow_files",
          "type": "private_method",
          "docstring": "Cria arquivos de workflow.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "structure",
              "annotation": "Dict[str, Path]"
            }
          ],
          "decorators": [],
          "start_line": 353,
          "end_line": 368,
          "returns": "None",
          "async": false
        },
        {
          "name": "_validate_file_structure",
          "type": "private_method",
          "docstring": "Valida estrutura de arquivos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 370,
          "end_line": 376,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_validate_api_interfaces",
          "type": "private_method",
          "docstring": "Valida interfaces de API.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 378,
          "end_line": 384,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_validate_documentation_format",
          "type": "private_method",
          "docstring": "Valida formato de documentação.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 386,
          "end_line": 392,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_validate_code_standards",
          "type": "private_method",
          "docstring": "Valida padrões de código.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 394,
          "end_line": 400,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_validate_dependencies",
          "type": "private_method",
          "docstring": "Valida dependências.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 402,
          "end_line": 408,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_create_documentation_templates",
          "type": "private_method",
          "docstring": "Cria templates de documentação.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 410,
          "end_line": 417,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "_create_code_templates",
          "type": "private_method",
          "docstring": "Cria templates de código.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 419,
          "end_line": 426,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "_create_workflow_templates",
          "type": "private_method",
          "docstring": "Cria templates de workflow.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 428,
          "end_line": 435,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "_create_validation_templates",
          "type": "private_method",
          "docstring": "Cria templates de validação.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 437,
          "end_line": 444,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "_setup_preparation_workflow",
          "type": "private_method",
          "docstring": "Configura workflow de preparação.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 446,
          "end_line": 452,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_setup_validation_workflow",
          "type": "private_method",
          "docstring": "Configura workflow de validação.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 454,
          "end_line": 460,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_setup_integration_workflow",
          "type": "private_method",
          "docstring": "Configura workflow de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 462,
          "end_line": 468,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_setup_testing_workflow",
          "type": "private_method",
          "docstring": "Configura workflow de teste.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 470,
          "end_line": 476,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_setup_deployment_workflow",
          "type": "private_method",
          "docstring": "Configura workflow de deploy.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 478,
          "end_line": 484,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_get_structure_status",
          "type": "private_method",
          "docstring": "Obtém status da estrutura.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 486,
          "end_line": 492,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_get_compatibility_status",
          "type": "private_method",
          "docstring": "Obtém status de compatibilidade.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 494,
          "end_line": 500,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_get_templates_status",
          "type": "private_method",
          "docstring": "Obtém status dos templates.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 502,
          "end_line": 508,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_get_workflows_status",
          "type": "private_method",
          "docstring": "Obtém status dos workflows.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 510,
          "end_line": 516,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_get_next_steps",
          "type": "private_method",
          "docstring": "Obtém próximos passos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 518,
          "end_line": 526,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "_get_recommendations",
          "type": "private_method",
          "docstring": "Obtém recomendações.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 528,
          "end_line": 536,
          "returns": "List[str]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 55,
      "end_line": 536,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.IntegrationPlanningAgent": {
      "name": "IntegrationPlanningAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 34,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 43,
          "returns": null,
          "async": false
        },
        {
          "name": "define_success_criteria",
          "type": "function",
          "docstring": "Define critérios de sucesso para integração total",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 122,
          "returns": null,
          "async": false
        },
        {
          "name": "create_transition_timeline",
          "type": "function",
          "docstring": "Cria cronograma de transição",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 124,
          "end_line": 199,
          "returns": null,
          "async": false
        },
        {
          "name": "adapt_educational_system",
          "type": "function",
          "docstring": "Adapta sistema educacional para código Canary real",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 201,
          "end_line": 258,
          "returns": null,
          "async": false
        },
        {
          "name": "establish_validation_processes",
          "type": "function",
          "docstring": "Estabelece processos de validação pós-integração",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 260,
          "end_line": 317,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_integration_plan",
          "type": "function",
          "docstring": "Gera plano completo de integração",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 319,
          "end_line": 359,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o planejamento de integração completo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 361,
          "end_line": 408,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 408,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_planning_agent.py",
      "category": "agents",
      "file_name": "migrated_integration_planning_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.IntelligentOrganizationAgent": {
      "name": "IntelligentOrganizationAgent",
      "docstring": "Agente de organização inteligente para code cleanup e integração Canary",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "base_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 56,
          "end_line": 147,
          "returns": null,
          "async": false
        },
        {
          "name": "detect_organization_issues",
          "type": "function",
          "docstring": "Detecta problemas de organização automaticamente.\nInclui detecção específica para arquivos de integração Canary.\n\nReturns:\n    Dicionário com problemas encontrados",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 149,
          "end_line": 188,
          "returns": "Dict[str, List[Path]]",
          "async": false
        },
        {
          "name": "_detect_canary_integration_issues",
          "type": "private_method",
          "docstring": "Detecta problemas específicos relacionados à integração Canary.\n\nReturns:\n    Lista de arquivos com problemas de integração",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 190,
          "end_line": 206,
          "returns": "List[Path]",
          "async": false
        },
        {
          "name": "_detect_missing_integration_structure",
          "type": "private_method",
          "docstring": "Detecta estrutura de integração faltante.\n\nReturns:\n    Lista de diretórios/arquivos faltantes",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 208,
          "end_line": 231,
          "returns": "List[Path]",
          "async": false
        },
        {
          "name": "_is_canary_integration_file",
          "type": "private_method",
          "docstring": "Verifica se um arquivo é relacionado à integração Canary.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se for arquivo de integração Canary",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 233,
          "end_line": 244,
          "returns": "bool",
          "async": false
        },
        {
          "name": "_is_in_correct_canary_location",
          "type": "private_method",
          "docstring": "Verifica se um arquivo de integração Canary está no local correto.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se estiver no local correto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 246,
          "end_line": 262,
          "returns": "bool",
          "async": false
        },
        {
          "name": "organize_canary_integration_files",
          "type": "function",
          "docstring": "Organiza arquivos relacionados à integração Canary.\n\nReturns:\n    Dicionário com estatísticas de organização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 264,
          "end_line": 302,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "_create_canary_integration_structure",
          "type": "private_method",
          "docstring": "Cria estrutura de integração Canary se não existir.\n\nReturns:\n    True se estrutura foi criada ou já existia",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 304,
          "end_line": 329,
          "returns": "bool",
          "async": false
        },
        {
          "name": "_organize_canary_file",
          "type": "private_method",
          "docstring": "Organiza um arquivo específico de integração Canary.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se arquivo foi organizado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 331,
          "end_line": 367,
          "returns": "bool",
          "async": false
        },
        {
          "name": "validate_canary_integration_structure",
          "type": "function",
          "docstring": "Valida a estrutura de integração Canary.\n\nReturns:\n    Dicionário com resultados da validação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 369,
          "end_line": 423,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "is_in_wrong_location",
          "type": "function",
          "docstring": "Verifica se arquivo está no local errado.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 425,
          "end_line": 438,
          "returns": "bool",
          "async": false
        },
        {
          "name": "is_obsolete",
          "type": "function",
          "docstring": "Verifica se arquivo é obsoleto.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 440,
          "end_line": 453,
          "returns": "bool",
          "async": false
        },
        {
          "name": "is_temp_file",
          "type": "function",
          "docstring": "Verifica se arquivo é temporário.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 455,
          "end_line": 460,
          "returns": "bool",
          "async": false
        },
        {
          "name": "has_category",
          "type": "function",
          "docstring": "Verifica se arquivo tem categoria definida.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 462,
          "end_line": 465,
          "returns": "bool",
          "async": false
        },
        {
          "name": "find_duplicates",
          "type": "function",
          "docstring": "Encontra arquivos duplicados.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "List[Path]"
            }
          ],
          "decorators": [],
          "start_line": 467,
          "end_line": 483,
          "returns": "List[Tuple[Path, Path]]",
          "async": false
        },
        {
          "name": "find_unorganized_reports",
          "type": "function",
          "docstring": "Encontra relatórios não organizados.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 485,
          "end_line": 495,
          "returns": "List[Path]",
          "async": false
        },
        {
          "name": "detect_file_context",
          "type": "function",
          "docstring": "Detecta contexto do arquivo automaticamente.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 497,
          "end_line": 503,
          "returns": "str",
          "async": false
        },
        {
          "name": "is_in_reports_folder",
          "type": "function",
          "docstring": "Verifica se arquivo está na pasta de relatórios.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 505,
          "end_line": 507,
          "returns": "bool",
          "async": false
        },
        {
          "name": "is_in_tasks_folder",
          "type": "function",
          "docstring": "Verifica se arquivo está na pasta de tarefas.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 509,
          "end_line": 511,
          "returns": "bool",
          "async": false
        },
        {
          "name": "is_in_recipes_folder",
          "type": "function",
          "docstring": "Verifica se arquivo está na pasta de receitas.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 513,
          "end_line": 515,
          "returns": "bool",
          "async": false
        },
        {
          "name": "is_in_archives_folder",
          "type": "function",
          "docstring": "Verifica se arquivo está na pasta de arquivos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 517,
          "end_line": 519,
          "returns": "bool",
          "async": false
        },
        {
          "name": "organize_by_category",
          "type": "function",
          "docstring": "Organiza arquivos por categoria automaticamente.\n\nReturns:\n    Dicionário com número de arquivos organizados por categoria",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 521,
          "end_line": 562,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "organize_by_date",
          "type": "function",
          "docstring": "Organiza relatórios por data automaticamente.\n\nReturns:\n    Dicionário com número de relatórios organizados por mês",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 564,
          "end_line": 611,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "extract_date_from_file",
          "type": "function",
          "docstring": "Extrai data do arquivo ou usa data de modificação.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 613,
          "end_line": 636,
          "returns": "datetime",
          "async": false
        },
        {
          "name": "cleanup_temp_files",
          "type": "function",
          "docstring": "Remove arquivos temporários automaticamente.\n\nReturns:\n    Número de arquivos removidos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 638,
          "end_line": 660,
          "returns": "int",
          "async": false
        },
        {
          "name": "remove_duplicates",
          "type": "function",
          "docstring": "Remove arquivos duplicados.\n\nReturns:\n    Número de duplicatas removidas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 662,
          "end_line": 686,
          "returns": "int",
          "async": false
        },
        {
          "name": "create_organization_structure",
          "type": "function",
          "docstring": "Cria estrutura de organização padrão.\n\nReturns:\n    True se estrutura foi criada com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 688,
          "end_line": 738,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_organization_report",
          "type": "function",
          "docstring": "Gera relatório de organização.\n\nArgs:\n    results: Resultados da organização\n    \nReturns:\n    Relatório em formato markdown",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 740,
          "end_line": 822,
          "returns": "str",
          "async": false
        },
        {
          "name": "run_full_organization",
          "type": "function",
          "docstring": "Executa organização completa do sistema.\n\nReturns:\n    Resultados da organização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 824,
          "end_line": 879,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "_is_ignored",
          "type": "private_method",
          "docstring": "Verifica se um arquivo deve ser ignorado pela organização.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se o arquivo deve ser ignorado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 881,
          "end_line": 918,
          "returns": "bool",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 53,
      "end_line": 918,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "agents",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.KnowledgeManagerAgent": {
      "name": "KnowledgeManagerAgent",
      "docstring": "Agente especializado em gerenciamento de conhecimento e navegação da wiki",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "workspace_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 65,
          "returns": null,
          "async": false
        },
        {
          "name": "load_navigation_maps",
          "type": "function",
          "docstring": "Carrega mapas de navegação da wiki",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 67,
          "end_line": 98,
          "returns": null,
          "async": false
        },
        {
          "name": "process_workflow_results",
          "type": "function",
          "docstring": "Processa resultados do workflow completo e extrai insights\n\nArgs:\n    analysis_results: Resultados do Module Analyzer\n    generation_results: Resultados do Module Generator\n    test_results: Resultados do Module Tester\n    \nReturns:\n    Insights e aprendizados extraídos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "generation_results",
              "annotation": "List[Dict[str, Any]]"
            },
            {
              "name": "test_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 100,
          "end_line": 153,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_analysis_insights",
          "type": "function",
          "docstring": "Extrai insights dos resultados de análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 155,
          "end_line": 199,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_generation_insights",
          "type": "function",
          "docstring": "Extrai insights dos resultados de geração",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "generation_results",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 201,
          "end_line": 254,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_test_insights",
          "type": "function",
          "docstring": "Extrai insights dos resultados de teste",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "test_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 256,
          "end_line": 292,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "identify_patterns",
          "type": "function",
          "docstring": "Identifica padrões nos resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "generation_results",
              "annotation": "List[Dict[str, Any]]"
            },
            {
              "name": "test_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 294,
          "end_line": 321,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_success_patterns",
          "type": "function",
          "docstring": "Analisa padrões de sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "successful_variations",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 323,
          "end_line": 350,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_failure_patterns",
          "type": "function",
          "docstring": "Analisa padrões de falha",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "failed_variations",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 352,
          "end_line": 371,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_code_patterns",
          "type": "function",
          "docstring": "Analisa padrões de código",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 373,
          "end_line": 401,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_structural_patterns",
          "type": "function",
          "docstring": "Analisa padrões estruturais",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "generation_results",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 403,
          "end_line": 429,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_rules",
          "type": "function",
          "docstring": "Gera regras baseadas nos insights e padrões",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "insights",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "patterns",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 431,
          "end_line": 467,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas nos dados de aprendizado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "learning_data",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 469,
          "end_line": 498,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "update_knowledge_base",
          "type": "function",
          "docstring": "Atualiza base de conhecimento com novos dados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "learning_data",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 500,
          "end_line": 533,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_knowledge_base",
          "type": "function",
          "docstring": "Salva base de conhecimento em arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 535,
          "end_line": 544,
          "returns": null,
          "async": false
        },
        {
          "name": "save_learning_data",
          "type": "function",
          "docstring": "Salva dados de aprendizado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "module_name",
              "annotation": "str"
            },
            {
              "name": "learning_data",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 546,
          "end_line": 559,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_file_types",
          "type": "function",
          "docstring": "Analisa tipos de arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "files",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 561,
          "end_line": 567,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "analyze_score_distribution",
          "type": "function",
          "docstring": "Analisa distribuição de scores",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "scores",
              "annotation": "List[float]"
            }
          ],
          "decorators": [],
          "start_line": 569,
          "end_line": 588,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "get_common_patterns",
          "type": "function",
          "docstring": "Obtém padrões mais comuns",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "patterns",
              "annotation": "List[str]"
            },
            {
              "name": "top_n",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 590,
          "end_line": 598,
          "returns": "List[Tuple[str, int]]",
          "async": false
        },
        {
          "name": "get_wiki_knowledge",
          "type": "function",
          "docstring": "Obtém conhecimento da wiki sobre um tópico específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "topic",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 600,
          "end_line": 621,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "update_navigation_maps",
          "type": "function",
          "docstring": "Atualiza mapas de navegação com novos dados",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 623,
          "end_line": 628,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 31,
      "end_line": 628,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "agents",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.MaintenancePlanningAgent": {
      "name": "MaintenancePlanningAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 34,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 43,
          "returns": null,
          "async": false
        },
        {
          "name": "create_update_processes",
          "type": "function",
          "docstring": "Cria processos de atualização para novas versões OTClient",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 109,
          "returns": null,
          "async": false
        },
        {
          "name": "establish_backup_recovery",
          "type": "function",
          "docstring": "Estabelece sistema de backup e recuperação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 111,
          "end_line": 175,
          "returns": null,
          "async": false
        },
        {
          "name": "define_scalability_processes",
          "type": "function",
          "docstring": "Define processos de escalabilidade",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 177,
          "end_line": 234,
          "returns": null,
          "async": false
        },
        {
          "name": "create_evolution_roadmap",
          "type": "function",
          "docstring": "Cria roadmap de evolução do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 236,
          "end_line": 306,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_maintenance_plan",
          "type": "function",
          "docstring": "Gera plano completo de manutenção",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 308,
          "end_line": 341,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o planejamento de manutenção completo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 343,
          "end_line": 390,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 390,
      "module_path": "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py",
      "category": "agents",
      "file_name": "migrated_maintenance_planning_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_metrics_agent.py.MetricsAgent": {
      "name": "MetricsAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 40,
          "end_line": 61,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 63,
          "end_line": 94,
          "returns": null,
          "async": false
        },
        {
          "name": "collect_system_metrics",
          "type": "function",
          "docstring": "Coleta métricas do sistema operacional",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 96,
          "end_line": 168,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "collect_application_metrics",
          "type": "function",
          "docstring": "Coleta métricas específicas da aplicação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 170,
          "end_line": 214,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "count_files_in_directory",
          "type": "function",
          "docstring": "Conta arquivos em um diretório",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "directory",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 216,
          "end_line": 224,
          "returns": "int",
          "async": false
        },
        {
          "name": "count_files_by_extension",
          "type": "function",
          "docstring": "Conta arquivos por extensão",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "directory",
              "annotation": "Path"
            },
            {
              "name": "extension",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 226,
          "end_line": 234,
          "returns": "int",
          "async": false
        },
        {
          "name": "get_active_agents",
          "type": "function",
          "docstring": "Conta agentes ativos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 236,
          "end_line": 247,
          "returns": "int",
          "async": false
        },
        {
          "name": "get_task_metrics",
          "type": "function",
          "docstring": "Obtém métricas de tarefas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 249,
          "end_line": 275,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_performance_metrics",
          "type": "function",
          "docstring": "Obtém métricas de performance",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 277,
          "end_line": 303,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "calculate_kpis",
          "type": "function",
          "docstring": "Calcula KPIs baseados nas métricas coletadas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "system_metrics",
              "annotation": "Dict"
            },
            {
              "name": "app_metrics",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 305,
          "end_line": 366,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "calculate_health_score",
          "type": "function",
          "docstring": "Calcula score de saúde do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "cpu",
              "annotation": "float"
            },
            {
              "name": "memory",
              "annotation": "float"
            },
            {
              "name": "disk",
              "annotation": "float"
            }
          ],
          "decorators": [],
          "start_line": 368,
          "end_line": 380,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_app_health_score",
          "type": "function",
          "docstring": "Calcula score de saúde da aplicação",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "task_completion",
              "annotation": "float"
            },
            {
              "name": "agent_availability",
              "annotation": "float"
            },
            {
              "name": "response_time",
              "annotation": "float"
            },
            {
              "name": "error_rate",
              "annotation": "float"
            },
            {
              "name": "cache_hit_rate",
              "annotation": "float"
            }
          ],
          "decorators": [],
          "start_line": 382,
          "end_line": 398,
          "returns": "float",
          "async": false
        },
        {
          "name": "generate_alerts",
          "type": "function",
          "docstring": "Gera alertas baseados nos KPIs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "kpis",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 400,
          "end_line": 479,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "save_metrics",
          "type": "function",
          "docstring": "Salva métricas em arquivo JSON",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "metrics",
              "annotation": "Dict"
            },
            {
              "name": "filename",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 481,
          "end_line": 493,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_metrics_report",
          "type": "function",
          "docstring": "Gera relatório de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 495,
          "end_line": 583,
          "returns": "str",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o agente de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 585,
          "end_line": 614,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 614,
      "module_path": "agents\\agent_orchestrator\\migrated_metrics_agent.py",
      "category": "agents",
      "file_name": "migrated_metrics_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.MetricsValidationAgent": {
      "name": "MetricsValidationAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 36,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 38,
          "end_line": 45,
          "returns": null,
          "async": false
        },
        {
          "name": "collect_system_metrics",
          "type": "function",
          "docstring": "Coleta métricas reais do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 47,
          "end_line": 107,
          "returns": null,
          "async": false
        },
        {
          "name": "validate_kpis",
          "type": "function",
          "docstring": "Valida KPIs atuais vs. objetivos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 109,
          "end_line": 151,
          "returns": null,
          "async": false
        },
        {
          "name": "test_alert_system",
          "type": "function",
          "docstring": "Testa o sistema de alertas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 153,
          "end_line": 202,
          "returns": null,
          "async": false
        },
        {
          "name": "verify_dashboard_monitoring",
          "type": "function",
          "docstring": "Verifica dashboard de monitoramento",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 204,
          "end_line": 235,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_metrics_report",
          "type": "function",
          "docstring": "Gera relatório completo de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 237,
          "end_line": 267,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a validação de métricas completa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 269,
          "end_line": 318,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 30,
      "end_line": 318,
      "module_path": "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py",
      "category": "agents",
      "file_name": "migrated_metrics_validation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.ModuleCreatorAgent": {
      "name": "ModuleCreatorAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "workspace_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "load_wiki_maps",
          "type": "function",
          "docstring": "Carrega mapas da wiki para navegação inteligente",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_existing_game_modules",
          "type": "function",
          "docstring": "Analisa módulos game_ existentes para entender padrões",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 91,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_single_module",
          "type": "function",
          "docstring": "Analisa um módulo específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "module_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 93,
          "end_line": 120,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_file_content",
          "type": "function",
          "docstring": "Analisa conteúdo de um arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "file_ext",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 122,
          "end_line": 145,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_lua_patterns",
          "type": "function",
          "docstring": "Analisa padrões em arquivos Lua",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 147,
          "end_line": 177,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_otmod_patterns",
          "type": "function",
          "docstring": "Analisa padrões em arquivos OTMod",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 179,
          "end_line": 214,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_otui_patterns",
          "type": "function",
          "docstring": "Analisa padrões em arquivos OTUI",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 216,
          "end_line": 236,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "search_wiki_knowledge",
          "type": "function",
          "docstring": "Busca conhecimento na wiki",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 238,
          "end_line": 259,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "generate_module_concept",
          "type": "function",
          "docstring": "Gera conceito para novo módulo baseado na wiki",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 261,
          "end_line": 302,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "create_module_structure",
          "type": "function",
          "docstring": "Cria estrutura do módulo baseada no conceito",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "concept",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 304,
          "end_line": 341,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_otmod_content",
          "type": "function",
          "docstring": "Gera conteúdo do arquivo .otmod",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "concept",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 343,
          "end_line": 358,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_lua_content",
          "type": "function",
          "docstring": "Gera conteúdo do arquivo .lua",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "concept",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 360,
          "end_line": 490,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_otui_content",
          "type": "function",
          "docstring": "Gera conteúdo do arquivo .otui",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "concept",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 492,
          "end_line": 600,
          "returns": "str",
          "async": false
        },
        {
          "name": "create_module_from_scratch",
          "type": "function",
          "docstring": "Cria um módulo completo do zero baseado na wiki",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 602,
          "end_line": 641,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "create_practical_modules",
          "type": "function",
          "docstring": "Cria módulos práticos baseados no conhecimento da wiki.\n\nReturns:\n    bool: True se criação bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 643,
          "end_line": 737,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_practical_modules_report",
          "type": "function",
          "docstring": "Gera relatório de criação dos módulos práticos.\n\nArgs:\n    modules: Configuração dos módulos\n    results: Resultados da criação\n    \nReturns:\n    str: Relatório formatado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "modules",
              "annotation": "Dict"
            },
            {
              "name": "results",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 739,
          "end_line": 815,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 30,
      "end_line": 815,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "agents",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.NavigationValidationAgent": {
      "name": "NavigationValidationAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 30,
          "end_line": 36,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 38,
          "end_line": 45,
          "returns": null,
          "async": false
        },
        {
          "name": "validate_file_references",
          "type": "function",
          "docstring": "Valida referências a arquivos em documentos e scripts",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 47,
          "end_line": 149,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "validate_import_statements",
          "type": "function",
          "docstring": "Valida statements de import em arquivos Python",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 151,
          "end_line": 219,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "validate_json_references",
          "type": "function",
          "docstring": "Valida referências em arquivos JSON",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 221,
          "end_line": 281,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "update_json_references",
          "type": "function",
          "docstring": "Atualiza referências em estrutura JSON",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "data",
              "annotation": "Any"
            },
            {
              "name": "old_name",
              "annotation": "str"
            },
            {
              "name": "new_name",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 283,
          "end_line": 292,
          "returns": "Any",
          "async": false
        },
        {
          "name": "validate_execution_paths",
          "type": "function",
          "docstring": "Valida caminhos de execução em scripts",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 294,
          "end_line": 342,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_navigation_report",
          "type": "function",
          "docstring": "Gera relatório completo de validação de navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 344,
          "end_line": 394,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a validação completa de navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 396,
          "end_line": 441,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 29,
      "end_line": 441,
      "module_path": "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py",
      "category": "agents",
      "file_name": "migrated_navigation_validation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_professor_agent.py.ProfessorAgent": {
      "name": "ProfessorAgent",
      "docstring": "Agente especializado em sistema educacional integrado.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o Professor Agent.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 54,
          "end_line": 103,
          "returns": null,
          "async": false
        },
        {
          "name": "initialize_educational_structure",
          "type": "function",
          "docstring": "Inicializa a estrutura educacional.\n\nReturns:\n    bool: True se inicialização bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 105,
          "end_line": 144,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_educational_documentation",
          "type": "function",
          "docstring": "Gera documentação educacional.\n\nReturns:\n    str: Conteúdo da documentação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 146,
          "end_line": 254,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_courses_documentation",
          "type": "function",
          "docstring": "Gera documentação de cursos.\n\nReturns:\n    str: Conteúdo da documentação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 256,
          "end_line": 397,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_educational_initialization_report",
          "type": "function",
          "docstring": "Gera relatório de inicialização educacional.\n\nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 399,
          "end_line": 527,
          "returns": "str",
          "async": false
        },
        {
          "name": "run_educational_system",
          "type": "function",
          "docstring": "Executa o sistema educacional completo.\n\nReturns:\n    bool: True se execução bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 529,
          "end_line": 554,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_structured_lessons",
          "type": "function",
          "docstring": "Gera lições estruturadas (Fase 4.2).\n\nReturns:\n    bool: True se gerado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 556,
          "end_line": 590,
          "returns": "bool",
          "async": false
        },
        {
          "name": "create_lessons_structure",
          "type": "function",
          "docstring": "Cria a estrutura de lições.\n\nReturns:\n    bool: True se criado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 592,
          "end_line": 637,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_practical_lessons",
          "type": "function",
          "docstring": "Gera lições práticas.\n\nReturns:\n    bool: True se gerado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 639,
          "end_line": 746,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_lessons_report",
          "type": "function",
          "docstring": "Gera relatório de lições estruturadas.\n\nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 748,
          "end_line": 936,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_educational_final_report",
          "type": "function",
          "docstring": "Gera relatório final do sistema educacional.\n\nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 938,
          "end_line": 1090,
          "returns": "str",
          "async": false
        },
        {
          "name": "create_functional_courses",
          "type": "function",
          "docstring": "Cria sistema de cursos funcional com ativação completa.\n\nReturns:\n    bool: True se criação bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 1092,
          "end_line": 1273,
          "returns": "bool",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 49,
      "end_line": 1273,
      "module_path": "agents\\agent_orchestrator\\migrated_professor_agent.py",
      "category": "agents",
      "file_name": "migrated_professor_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.ProgressTrackerAgent": {
      "name": "ProgressTrackerAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 37,
          "end_line": 57,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 59,
          "end_line": 80,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_current_metrics",
          "type": "function",
          "docstring": "Calcula métricas atuais do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 82,
          "end_line": 116,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "calculate_general_progress",
          "type": "function",
          "docstring": "Calcula progresso geral do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 118,
          "end_line": 142,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_epics_progress",
          "type": "function",
          "docstring": "Calcula progresso das epics",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 144,
          "end_line": 157,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_stories_progress",
          "type": "function",
          "docstring": "Calcula progresso das stories",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 159,
          "end_line": 175,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_agents_progress",
          "type": "function",
          "docstring": "Calcula progresso dos agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 177,
          "end_line": 193,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_tasks_progress",
          "type": "function",
          "docstring": "Calcula progresso das tasks",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 195,
          "end_line": 208,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_roadmaps_progress",
          "type": "function",
          "docstring": "Calcula progresso dos roadmaps",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 210,
          "end_line": 226,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_planejamentos_progress",
          "type": "function",
          "docstring": "Calcula progresso dos planejamentos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 228,
          "end_line": 244,
          "returns": "float",
          "async": false
        },
        {
          "name": "calculate_velocity",
          "type": "function",
          "docstring": "Calcula velocidade de progresso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 246,
          "end_line": 286,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "calculate_trends",
          "type": "function",
          "docstring": "Calcula tendências de progresso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 288,
          "end_line": 340,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "generate_alerts",
          "type": "function",
          "docstring": "Gera alertas baseados no conteúdo atual",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 342,
          "end_line": 376,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "save_metrics",
          "type": "function",
          "docstring": "Salva métricas atuais",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "metrics",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 378,
          "end_line": 403,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_dashboard_report",
          "type": "function",
          "docstring": "Gera relatório de dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 405,
          "end_line": 463,
          "returns": "str",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o Progress Tracker Agent",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 465,
          "end_line": 505,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 36,
      "end_line": 505,
      "module_path": "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py",
      "category": "agents",
      "file_name": "migrated_progress_tracker_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.QualityAssuranceAgent": {
      "name": "QualityAssuranceAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 34,
          "returns": null,
          "async": false
        },
        {
          "name": "log_message",
          "type": "function",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": null
            },
            {
              "name": "level",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 43,
          "returns": null,
          "async": false
        },
        {
          "name": "execute_comprehensive_tests",
          "type": "function",
          "docstring": "Executa testes de validação completa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 172,
          "returns": null,
          "async": false
        },
        {
          "name": "verify_100_percent_coverage",
          "type": "function",
          "docstring": "Verifica 100% de cobertura real",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 174,
          "end_line": 231,
          "returns": null,
          "async": false
        },
        {
          "name": "certify_total_quality",
          "type": "function",
          "docstring": "Certifica qualidade total do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 233,
          "end_line": 291,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_final_validation_report",
          "type": "function",
          "docstring": "Gera relatório final de validação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 293,
          "end_line": 327,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa a validação final e certificação completa",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 329,
          "end_line": 385,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 385,
      "module_path": "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py",
      "category": "agents",
      "file_name": "migrated_quality_assurance_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_researcher_agent.py.ResearcherAgent": {
      "name": "ResearcherAgent",
      "docstring": "Agente pesquisador especializado em análise metódica e integração com wiki.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o agente pesquisador.\n\nArgs:\n    base_path: Caminho base do projeto (padrão: diretório atual)",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "base_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 44,
          "end_line": 88,
          "returns": null,
          "async": false
        },
        {
          "name": "create_habdel_structure",
          "type": "function",
          "docstring": "Cria a estrutura de pastas do sistema habdel expandido.\n\nReturns:\n    bool: True se criado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 90,
          "end_line": 136,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_story_system",
          "type": "function",
          "docstring": "Gera o sistema de stories baseado na metodologia habdel.\n\nReturns:\n    Dict: Sistema de stories organizado",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 138,
          "end_line": 280,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "save_story_system",
          "type": "function",
          "docstring": "Salva o sistema de stories em arquivos JSON.\n\nArgs:\n    story_system: Sistema de stories a ser salvo\n    \nReturns:\n    bool: True se salvo com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "story_system",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 282,
          "end_line": 311,
          "returns": "bool",
          "async": false
        },
        {
          "name": "create_research_template",
          "type": "function",
          "docstring": "Cria template para documentação de pesquisa baseado no habdel.\n\nReturns:\n    str: Template em markdown",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 313,
          "end_line": 425,
          "returns": "str",
          "async": false
        },
        {
          "name": "analyze_otclient_source",
          "type": "function",
          "docstring": "Analisa o código-fonte do OTClient para identificar sistemas.\n\nReturns:\n    Dict: Análise estruturada",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 427,
          "end_line": 468,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "generate_research_plan",
          "type": "function",
          "docstring": "Gera plano de pesquisa baseado na análise do código.\n\nReturns:\n    Dict: Plano de pesquisa estruturado",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 470,
          "end_line": 536,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "run_initial_setup",
          "type": "function",
          "docstring": "Executa configuração inicial do pesquisador.\n\nReturns:\n    bool: True se configurado com sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 538,
          "end_line": 583,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_status_report",
          "type": "function",
          "docstring": "Gera relatório de status do pesquisador.\n\nReturns:\n    str: Relatório em markdown",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 585,
          "end_line": 659,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 659,
      "module_path": "agents\\agent_orchestrator\\migrated_researcher_agent.py",
      "category": "agents",
      "file_name": "migrated_researcher_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_task_master_agent.py.TaskMasterAgent": {
      "name": "TaskMasterAgent",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "load_configuration",
          "type": "function",
          "docstring": "Carrega configurações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 72,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_dashboard",
          "type": "function",
          "docstring": "Analisa o dashboard central e extrai informações",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 74,
          "end_line": 105,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "extract_epics",
          "type": "function",
          "docstring": "Extrai informações das epics do dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 107,
          "end_line": 132,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_stories",
          "type": "function",
          "docstring": "Extrai informações das stories habdel",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 134,
          "end_line": 166,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_agents",
          "type": "function",
          "docstring": "Extrai informações dos agentes BMAD",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 168,
          "end_line": 189,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_roadmaps",
          "type": "function",
          "docstring": "Extrai informações dos roadmaps",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 191,
          "end_line": 210,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_planejamentos",
          "type": "function",
          "docstring": "Extrai informações dos planejamentos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 212,
          "end_line": 231,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_progress",
          "type": "function",
          "docstring": "Extrai métricas de progresso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 233,
          "end_line": 251,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "extract_tasks_in_progress",
          "type": "function",
          "docstring": "Extrai tarefas em progresso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 253,
          "end_line": 266,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "extract_tasks_pending",
          "type": "function",
          "docstring": "Extrai tarefas pendentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 268,
          "end_line": 281,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "extract_subtasks",
          "type": "function",
          "docstring": "Extrai subtasks de uma epic específica",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "epic_id",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 283,
          "end_line": 306,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_completed_stories",
          "type": "function",
          "docstring": "Extrai stories completas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "category",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 308,
          "end_line": 327,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "extract_pending_stories",
          "type": "function",
          "docstring": "Extrai stories pendentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "category",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 329,
          "end_line": 348,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "assign_task",
          "type": "function",
          "docstring": "Atribui uma tarefa ao agente apropriado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "task_info",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 350,
          "end_line": 380,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "estimate_duration",
          "type": "function",
          "docstring": "Estima a duração de uma tarefa em minutos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "task_info",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 382,
          "end_line": 408,
          "returns": "int",
          "async": false
        },
        {
          "name": "update_dashboard",
          "type": "function",
          "docstring": "Atualiza o dashboard central com mudanças de tarefas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "task_updates",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 410,
          "end_line": 439,
          "returns": "bool",
          "async": false
        },
        {
          "name": "apply_task_update",
          "type": "function",
          "docstring": "Aplica uma atualização específica ao conteúdo do dashboard",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "update",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 441,
          "end_line": 461,
          "returns": "str",
          "async": false
        },
        {
          "name": "generate_progress_report",
          "type": "function",
          "docstring": "Gera relatório de progresso do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 463,
          "end_line": 493,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "identify_next_priorities",
          "type": "function",
          "docstring": "Identifica próximas prioridades baseado na análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 495,
          "end_line": 524,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "run",
          "type": "function",
          "docstring": "Executa o Task Master Agent",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 526,
          "end_line": 560,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 35,
      "end_line": 560,
      "module_path": "agents\\agent_orchestrator\\migrated_task_master_agent.py",
      "category": "agents",
      "file_name": "migrated_task_master_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.TaskSupervisorAgent": {
      "name": "TaskSupervisorAgent",
      "docstring": "Agente supervisor para gerenciar fluidez de tarefas no Cursor IDE.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o Task Supervisor Agent.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 57,
          "end_line": 111,
          "returns": null,
          "async": false
        },
        {
          "name": "read_task_master",
          "type": "function",
          "docstring": "Lê o arquivo Task Master para análise.\n\nReturns:\n    str: Conteúdo do Task Master ou None se erro",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 113,
          "end_line": 130,
          "returns": "Optional[str]",
          "async": false
        },
        {
          "name": "extract_current_task",
          "type": "function",
          "docstring": "Extrai a tarefa atual do Task Master.\n\nArgs:\n    content: Conteúdo do Task Master\n    \nReturns:\n    Dict: Informações da tarefa atual ou None",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 132,
          "end_line": 175,
          "returns": "Optional[Dict]",
          "async": false
        },
        {
          "name": "check_task_completion",
          "type": "function",
          "docstring": "Verifica se há indicações de conclusão de tarefa.\n\nArgs:\n    content: Conteúdo para análise\n    \nReturns:\n    bool: True se detectar conclusão",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 177,
          "end_line": 206,
          "returns": "bool",
          "async": false
        },
        {
          "name": "check_waiting_for_instructions",
          "type": "function",
          "docstring": "Verifica se está aguardando instruções.\n\nArgs:\n    content: Conteúdo para análise\n    \nReturns:\n    bool: True se detectar espera por instruções",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 208,
          "end_line": 236,
          "returns": "bool",
          "async": false
        },
        {
          "name": "check_for_errors",
          "type": "function",
          "docstring": "Verifica se há erros ou problemas.\n\nArgs:\n    content: Conteúdo para análise\n    \nReturns:\n    bool: True se detectar erros",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 238,
          "end_line": 261,
          "returns": "bool",
          "async": false
        },
        {
          "name": "can_send_command",
          "type": "function",
          "docstring": "Verifica se pode enviar comando (respeitando cooldown).\n\nReturns:\n    bool: True se pode enviar comando",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 263,
          "end_line": 274,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_continue_command",
          "type": "function",
          "docstring": "Gera comando para continuar para a próxima tarefa.\n\nArgs:\n    current_task: Informações da tarefa atual\n    \nReturns:\n    str: Comando para continuar",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "current_task",
              "annotation": "Optional[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 276,
          "end_line": 289,
          "returns": "str",
          "async": false
        },
        {
          "name": "log_supervision_action",
          "type": "function",
          "docstring": "Registra ação do supervisor.\n\nArgs:\n    action: Tipo de ação\n    details: Detalhes adicionais",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "action",
              "annotation": "str"
            },
            {
              "name": "details",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 291,
          "end_line": 309,
          "returns": "None",
          "async": false
        },
        {
          "name": "analyze_conversation_context",
          "type": "function",
          "docstring": "Analisa o contexto da conversação atual.\n\nReturns:\n    Dict: Análise do contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 311,
          "end_line": 347,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "should_continue_to_next_task",
          "type": "function",
          "docstring": "Decide se deve continuar para a próxima tarefa.\n\nArgs:\n    context: Contexto analisado\n    \nReturns:\n    bool: True se deve continuar",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 349,
          "end_line": 376,
          "returns": "bool",
          "async": false
        },
        {
          "name": "execute_supervision_cycle",
          "type": "function",
          "docstring": "Executa um ciclo de supervisão.\n\nReturns:\n    bool: True se ação foi tomada",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 378,
          "end_line": 428,
          "returns": "bool",
          "async": false
        },
        {
          "name": "start_monitoring",
          "type": "function",
          "docstring": "Inicia monitoramento contínuo.\n\nArgs:\n    interval: Intervalo entre verificações em segundos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interval",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 430,
          "end_line": 462,
          "returns": "None",
          "async": false
        },
        {
          "name": "stop_monitoring",
          "type": "function",
          "docstring": "Para o monitoramento.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 464,
          "end_line": 469,
          "returns": "None",
          "async": false
        },
        {
          "name": "generate_supervision_report",
          "type": "function",
          "docstring": "Gera relatório de supervisão.\n\nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 471,
          "end_line": 547,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 52,
      "end_line": 547,
      "module_path": "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py",
      "category": "agents",
      "file_name": "migrated_task_supervisor_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.WorkflowOrchestratorAgent": {
      "name": "WorkflowOrchestratorAgent",
      "docstring": "Agente responsável por orquestrar workflows de aprendizado automatizados.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 47,
          "end_line": 67,
          "returns": null,
          "async": false
        },
        {
          "name": "activate_learning_workflow",
          "type": "function",
          "docstring": "Ativa o sistema de execução automática de lições.\n\nReturns:\n    bool: True se ativação bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 69,
          "end_line": 189,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_activation_report",
          "type": "function",
          "docstring": "Gera relatório de ativação do workflow.\n\nArgs:\n    config: Configuração do workflow\n    \nReturns:\n    str: Relatório formatado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "config",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 191,
          "end_line": 263,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_activation_report",
          "type": "function",
          "docstring": "Salva relatório de ativação.\n\nArgs:\n    report: Conteúdo do relatório\n    \nReturns:\n    Path: Caminho do arquivo salvo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 265,
          "end_line": 284,
          "returns": "Path",
          "async": false
        },
        {
          "name": "activate_certification_system",
          "type": "function",
          "docstring": "Ativa o sistema de certificação automática.\n\nReturns:\n    bool: True se ativação bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 286,
          "end_line": 415,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_certification_report",
          "type": "function",
          "docstring": "Gera relatório de ativação do sistema de certificação.\n\nArgs:\n    config: Configuração do sistema de certificação\n    \nReturns:\n    str: Relatório formatado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "config",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 417,
          "end_line": 495,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_certification_report",
          "type": "function",
          "docstring": "Salva relatório de ativação da certificação.\n\nArgs:\n    report: Conteúdo do relatório\n    \nReturns:\n    Path: Caminho do arquivo salvo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 497,
          "end_line": 516,
          "returns": "Path",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 42,
      "end_line": 516,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.WorkflowOrchestrator": {
      "name": "WorkflowOrchestrator",
      "docstring": "Orquestrador principal do workflow de módulos OTClient",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "workspace_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 66,
          "returns": null,
          "async": false
        },
        {
          "name": "execute_workflow",
          "type": "function",
          "docstring": "Executa o workflow completo para um módulo\n\nArgs:\n    module_name: Nome do módulo OTClient a processar\n    config: Configurações opcionais do workflow\n    \nReturns:\n    Resultados completos do workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "module_name",
              "annotation": "str"
            },
            {
              "name": "config",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 68,
          "end_line": 151,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute_analysis_phase",
          "type": "function",
          "docstring": "Executa fase de análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "module_name",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 153,
          "end_line": 178,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute_generation_phase",
          "type": "function",
          "docstring": "Executa fase de geração",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 180,
          "end_line": 214,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute_testing_phase",
          "type": "function",
          "docstring": "Executa fase de teste",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "generation_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 216,
          "end_line": 238,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "execute_learning_phase",
          "type": "function",
          "docstring": "Executa fase de aprendizado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "generation_results",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "test_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 240,
          "end_line": 266,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_workflow_summary",
          "type": "function",
          "docstring": "Gera resumo do workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "workflow_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 268,
          "end_line": 308,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_workflow_results",
          "type": "function",
          "docstring": "Salva resultados do workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "workflow_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 310,
          "end_line": 340,
          "returns": null,
          "async": false
        },
        {
          "name": "log_phase",
          "type": "function",
          "docstring": "Registra log de uma fase do workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase_name",
              "annotation": "str"
            },
            {
              "name": "module_name",
              "annotation": "str"
            },
            {
              "name": "status",
              "annotation": "str"
            },
            {
              "name": "duration",
              "annotation": "float"
            },
            {
              "name": "error",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 342,
          "end_line": 360,
          "returns": null,
          "async": false
        },
        {
          "name": "get_available_modules",
          "type": "function",
          "docstring": "Retorna lista de módulos disponíveis",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 362,
          "end_line": 364,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "get_workflow_status",
          "type": "function",
          "docstring": "Obtém status de um workflow específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "workflow_id",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 366,
          "end_line": 379,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "list_workflows",
          "type": "function",
          "docstring": "Lista todos os workflows executados",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 381,
          "end_line": 405,
          "returns": "List[Dict[str, Any]]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 405,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py",
      "category": "agents",
      "file_name": "migrated_workflow_orchestrator_legacy.py"
    },
    "agents\\agent_orchestrator\\__init__.py.AgentorchestratorModule": {
      "name": "AgentorchestratorModule",
      "docstring": "Módulo Orquestração de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 100,
          "end_line": 103,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 105,
          "end_line": 107,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 109,
          "end_line": 111,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 97,
      "end_line": 111,
      "module_path": "agents\\agent_orchestrator\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\agent_organizer\\agent_organizer.py.AgentorganizerModule": {
      "name": "AgentorganizerModule",
      "docstring": "Módulo Organização e gestão de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_organizer\\agent_organizer.py",
      "category": "agents",
      "file_name": "agent_organizer.py"
    },
    "agents\\agent_organizer\\migrated_agent_organizer.py.AgentorganizerModule": {
      "name": "AgentorganizerModule",
      "docstring": "Módulo Organização e gestão de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "agents\\agent_organizer\\migrated_agent_organizer.py",
      "category": "agents",
      "file_name": "migrated_agent_organizer.py"
    },
    "agents\\agent_organizer\\__init__.py.AgentorganizerModule": {
      "name": "AgentorganizerModule",
      "docstring": "Módulo Organização e gestão de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "agents\\agent_organizer\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\agent_specialist\\agent_specialist.py.AgentspecialistModule": {
      "name": "AgentspecialistModule",
      "docstring": "Módulo Agentes especializados",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_specialist\\agent_specialist.py",
      "category": "agents",
      "file_name": "agent_specialist.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAAgentSpecializationSystem": {
      "name": "AAAAgentSpecializationSystem",
      "docstring": "Sistema de agentes especializados de nível AAA",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "base_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 35,
          "end_line": 55,
          "returns": null,
          "async": false
        },
        {
          "name": "create_directory_structure",
          "type": "function",
          "docstring": "Cria estrutura de pastas necessária",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 57,
          "end_line": 69,
          "returns": null,
          "async": false
        },
        {
          "name": "initialize_agents",
          "type": "function",
          "docstring": "Inicializa todos os agentes especializados AAA",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 71,
          "end_line": 317,
          "returns": null,
          "async": false
        },
        {
          "name": "initialize_workflows",
          "type": "function",
          "docstring": "Inicializa workflows de nível AAA",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 319,
          "end_line": 350,
          "returns": null,
          "async": false
        },
        {
          "name": "detect_context_by_extension",
          "type": "function",
          "docstring": "Detecta contexto baseado na extensão do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 352,
          "end_line": 421,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "select_agents",
          "type": "function",
          "docstring": "Seleciona agentes baseado no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 423,
          "end_line": 440,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "execute_agent_workflow",
          "type": "function",
          "docstring": "Executa workflow de agente para arquivo específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 442,
          "end_line": 497,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "calculate_overall_quality",
          "type": "function",
          "docstring": "Calcula qualidade geral dos resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 499,
          "end_line": 509,
          "returns": "float",
          "async": false
        },
        {
          "name": "save_report",
          "type": "function",
          "docstring": "Salva relatório de execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 511,
          "end_line": 520,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_metrics_report",
          "type": "function",
          "docstring": "Gera relatório de métricas",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 522,
          "end_line": 524,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agent_info",
          "type": "function",
          "docstring": "Obtém informações de um agente específico",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_id",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 526,
          "end_line": 537,
          "returns": "Optional[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "list_all_agents",
          "type": "function",
          "docstring": "Lista todos os agentes disponíveis",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 539,
          "end_line": 541,
          "returns": "List[Dict[str, Any]]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 32,
      "end_line": 541,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAAgent": {
      "name": "AAAAgent",
      "docstring": "Agente especializado de nível AAA",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "specialization",
              "annotation": "str"
            },
            {
              "name": "file_extensions",
              "annotation": "List[str]"
            },
            {
              "name": "capabilities",
              "annotation": "List[str]"
            },
            {
              "name": "tools",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 547,
          "end_line": 555,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa análise e processamento do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "user_request",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 557,
          "end_line": 591,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "perform_analysis",
          "type": "function",
          "docstring": "Realiza análise específica do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "user_request",
              "annotation": "str"
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 593,
          "end_line": 603,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "perform_optimizations",
          "type": "function",
          "docstring": "Realiza otimizações específicas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "analysis_result",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 605,
          "end_line": 612,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "validate_quality",
          "type": "function",
          "docstring": "Valida qualidade do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "str"
            },
            {
              "name": "analysis_result",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "optimization_result",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 614,
          "end_line": 622,
          "returns": "Dict[str, Any]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 544,
      "end_line": 622,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAWorkflow": {
      "name": "AAAWorkflow",
      "docstring": "Workflow de nível AAA",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "name",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[str]"
            },
            {
              "name": "phases",
              "annotation": "List[str]"
            },
            {
              "name": "duration",
              "annotation": "str"
            },
            {
              "name": "quality_gates",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 628,
          "end_line": 635,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 625,
      "end_line": 635,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "agents",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\agent_specialist\\__init__.py.AgentspecialistModule": {
      "name": "AgentspecialistModule",
      "docstring": "Módulo Agentes especializados",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "agents\\agent_specialist\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\agent_validator\\agent_validator.py.AgentvalidatorModule": {
      "name": "AgentvalidatorModule",
      "docstring": "Módulo Validação de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\agent_validator\\agent_validator.py",
      "category": "agents",
      "file_name": "agent_validator.py"
    },
    "agents\\agent_validator\\__init__.py.AgentvalidatorModule": {
      "name": "AgentvalidatorModule",
      "docstring": "Módulo Validação de agentes",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "agents\\agent_validator\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    },
    "agents\\workflow_manager\\migrated_integration_workflow.py.IntegrationWorkflow": {
      "name": "IntegrationWorkflow",
      "docstring": "Workflow de integração total entre OTClient e Canary.\n\nResponsabilidades:\n- Coordenar todas as etapas de integração\n- Executar validações de compatibilidade\n- Gerenciar conflitos e resoluções\n- Gerar relatórios de progresso\n- Manter rastreabilidade completa",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 68,
          "end_line": 107,
          "returns": null,
          "async": false
        },
        {
          "name": "run_full_integration",
          "type": "function",
          "docstring": "Executa o workflow completo de integração.\n\nReturns:\n    Dict com resultados do workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 109,
          "end_line": 180,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_execute_phase",
          "type": "private_method",
          "docstring": "Executa uma fase específica do workflow.\n\nArgs:\n    phase: Nome da fase\n    \nReturns:\n    Dict com resultado da fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 182,
          "end_line": 226,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_preparation",
          "type": "private_method",
          "docstring": "Fase de preparação do ambiente.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 228,
          "end_line": 265,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_structure_validation",
          "type": "private_method",
          "docstring": "Fase de validação da estrutura.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 267,
          "end_line": 294,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_compatibility_check",
          "type": "private_method",
          "docstring": "Fase de verificação de compatibilidade.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 296,
          "end_line": 331,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_template_creation",
          "type": "private_method",
          "docstring": "Fase de criação de templates.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 333,
          "end_line": 351,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_workflow_setup",
          "type": "private_method",
          "docstring": "Fase de configuração de workflows.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 353,
          "end_line": 371,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_integration_testing",
          "type": "private_method",
          "docstring": "Fase de testes de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 373,
          "end_line": 394,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_conflict_resolution",
          "type": "private_method",
          "docstring": "Fase de resolução de conflitos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 396,
          "end_line": 414,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_final_integration",
          "type": "private_method",
          "docstring": "Fase de integração final.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 416,
          "end_line": 434,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_validation",
          "type": "private_method",
          "docstring": "Fase de validação final.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 436,
          "end_line": 454,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_phase_deployment",
          "type": "private_method",
          "docstring": "Fase de deploy.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 456,
          "end_line": 474,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_check_permissions",
          "type": "private_method",
          "docstring": "Verifica permissões de escrita.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 476,
          "end_line": 484,
          "returns": "bool",
          "async": false
        },
        {
          "name": "_validate_integration_structure",
          "type": "private_method",
          "docstring": "Valida estrutura de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 486,
          "end_line": 505,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_check_api_compatibility",
          "type": "private_method",
          "docstring": "Verifica compatibilidade de APIs.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 507,
          "end_line": 510,
          "returns": "float",
          "async": false
        },
        {
          "name": "_check_format_compatibility",
          "type": "private_method",
          "docstring": "Verifica compatibilidade de formatos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 512,
          "end_line": 515,
          "returns": "float",
          "async": false
        },
        {
          "name": "_check_dependency_compatibility",
          "type": "private_method",
          "docstring": "Verifica compatibilidade de dependências.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 517,
          "end_line": 520,
          "returns": "float",
          "async": false
        },
        {
          "name": "_create_integration_templates",
          "type": "private_method",
          "docstring": "Cria templates de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 522,
          "end_line": 536,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "_setup_integration_workflows",
          "type": "private_method",
          "docstring": "Configura workflows de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 538,
          "end_line": 553,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "_run_integration_tests",
          "type": "private_method",
          "docstring": "Executa testes de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 555,
          "end_line": 562,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_resolve_integration_conflicts",
          "type": "private_method",
          "docstring": "Resolve conflitos de integração.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 564,
          "end_line": 567,
          "returns": "int",
          "async": false
        },
        {
          "name": "_execute_final_integration",
          "type": "private_method",
          "docstring": "Executa integração final.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 569,
          "end_line": 575,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_execute_final_validation",
          "type": "private_method",
          "docstring": "Executa validação final.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 577,
          "end_line": 583,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_execute_deployment",
          "type": "private_method",
          "docstring": "Executa deploy.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 585,
          "end_line": 591,
          "returns": "Dict[str, any]",
          "async": false
        },
        {
          "name": "_rollback_phase",
          "type": "private_method",
          "docstring": "Executa rollback de uma fase.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 593,
          "end_line": 597,
          "returns": "bool",
          "async": false
        },
        {
          "name": "get_workflow_status",
          "type": "function",
          "docstring": "Obtém status atual do workflow.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 599,
          "end_line": 607,
          "returns": "Dict[str, any]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 56,
      "end_line": 607,
      "module_path": "agents\\workflow_manager\\migrated_integration_workflow.py",
      "category": "agents",
      "file_name": "migrated_integration_workflow.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.IntelligentOrchestrator": {
      "name": "IntelligentOrchestrator",
      "docstring": "Sistema de orquestração inteligente para agentes BMAD",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 192,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_context",
          "type": "function",
          "docstring": "Analisa o contexto do pedido do usuário",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 194,
          "end_line": 235,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_complexity",
          "type": "function",
          "docstring": "Analisa a complexidade baseada no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "keywords",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 237,
          "end_line": 256,
          "returns": "str",
          "async": false
        },
        {
          "name": "identify_primary_workflow",
          "type": "function",
          "docstring": "Identifica o workflow principal baseado nas palavras-chave",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "keywords",
              "annotation": "List[str]"
            },
            {
              "name": "workflows",
              "annotation": "set"
            }
          ],
          "decorators": [],
          "start_line": 258,
          "end_line": 272,
          "returns": "str",
          "async": false
        },
        {
          "name": "select_agents",
          "type": "function",
          "docstring": "Seleciona agentes baseado no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 274,
          "end_line": 304,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agent_role",
          "type": "function",
          "docstring": "Define o papel específico do agente no workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_id",
              "annotation": "str"
            },
            {
              "name": "workflow_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 306,
          "end_line": 336,
          "returns": "str",
          "async": false
        },
        {
          "name": "execute_workflow",
          "type": "function",
          "docstring": "Executa o workflow coordenado",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "agent_workflow",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 338,
          "end_line": 385,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "get_agents_for_phase",
          "type": "function",
          "docstring": "Identifica agentes responsáveis por cada fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 387,
          "end_line": 402,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "report_phase_progress",
          "type": "function",
          "docstring": "Reporta progresso da fase",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "phase",
              "annotation": "str"
            },
            {
              "name": "agents",
              "annotation": "List[Dict]"
            },
            {
              "name": "progress",
              "annotation": "float"
            }
          ],
          "decorators": [],
          "start_line": 404,
          "end_line": 408,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_progress_report",
          "type": "function",
          "docstring": "Gera relatório de progresso em tempo real",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 410,
          "end_line": 437,
          "returns": "str",
          "async": false
        },
        {
          "name": "orchestrate_request",
          "type": "function",
          "docstring": "Orquestra automaticamente o pedido do usuário",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 439,
          "end_line": 464,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_execution_results",
          "type": "function",
          "docstring": "Salva resultados da execução",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "execution_results",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 466,
          "end_line": 500,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 500,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "agents",
      "file_name": "migrated_intelligent_orchestrator.py"
    },
    "agents\\workflow_manager\\workflow_manager.py.WorkflowmanagerModule": {
      "name": "WorkflowmanagerModule",
      "docstring": "Módulo Gerenciamento de workflows",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "agents\\workflow_manager\\workflow_manager.py",
      "category": "agents",
      "file_name": "workflow_manager.py"
    },
    "agents\\workflow_manager\\__init__.py.WorkflowmanagerModule": {
      "name": "WorkflowmanagerModule",
      "docstring": "Módulo Gerenciamento de workflows",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 24,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 33,
          "end_line": 35,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 21,
      "end_line": 35,
      "module_path": "agents\\workflow_manager\\__init__.py",
      "category": "agents",
      "file_name": "__init__.py"
    }
  }
}