{
  "by_name": {
    "main": [
      "tools\\backup_system\\backup_system.py.main",
      "tools\\backup_system\\migrated_backup_system.py.main",
      "tools\\cleanup_system\\cleanup_system.py.main",
      "tools\\cleanup_system\\migrated_cleanup_system.py.main",
      "tools\\config_manager\\config_manager.py.main",
      "tools\\config_manager\\migrated_update_context_system.py.main",
      "tools\\file_mover\\file_mover.py.main",
      "tools\\file_mover\\migrated_file_mover.py.main",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.main",
      "tools\\git_automation\\git_automation.py.main",
      "tools\\git_automation\\migrated_create_module_simple.py.main",
      "tools\\git_automation\\migrated_git_task_integration.py.main",
      "tools\\log_manager\\log_manager.py.main",
      "tools\\log_manager\\migrated_centralize_logs.py.main",
      "python\\code_analyzer\\code_analyzer.py.main",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.main",
      "python\\code_optimizer\\code_optimizer.py.main",
      "python\\code_optimizer\\migrated_auto_optimizer.py.main",
      "python\\documentation_generator\\documentation_generator.py.main",
      "python\\error_resolver\\error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\python_agent\\python_agent.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "python\\recipe_manager\\recipe_manager.py.main",
      "python\\script_executor\\migrated_script_execution_manager.py.main",
      "python\\script_executor\\script_executor.py.main",
      "metrics\\alert_system\\alert_system.py.main",
      "metrics\\alert_system\\migrated_alert_system.py.main",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.main",
      "metrics\\metrics_collector\\metrics_collector.py.main",
      "metrics\\metrics_collector\\migrated_metrics_system.py.main",
      "metrics\\metrics_reporter\\metrics_reporter.py.main",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
      "metrics\\performance_monitor\\performance_monitor.py.main",
      "maps\\habdel_indexer\\habdel_indexer.py.main",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.main",
      "maps\\map_optimizer\\map_optimizer.py.main",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\map_updater.py.main",
      "maps\\map_updater\\migrated_advanced_searcher.py.main",
      "maps\\map_updater\\migrated_agent_integrator.py.main",
      "maps\\map_updater\\migrated_agent_monitor.py.main",
      "maps\\map_updater\\migrated_agent_optimizer.py.main",
      "maps\\map_updater\\migrated_agent_orchestrator.py.main",
      "maps\\map_updater\\migrated_agent_specialist.py.main",
      "maps\\map_updater\\migrated_agent_validator.py.main",
      "maps\\map_updater\\migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_code_analyzer.py.main",
      "maps\\map_updater\\migrated_code_optimizer.py.main",
      "maps\\map_updater\\migrated_config_manager.py.main",
      "maps\\map_updater\\migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_content_validator.py.main",
      "maps\\map_updater\\migrated_dashboard_monitor.py.main",
      "maps\\map_updater\\migrated_documentation_generator.py.main",
      "maps\\map_updater\\migrated_documentation_organizer.py.main",
      "maps\\map_updater\\migrated_error_resolver.py.main",
      "maps\\map_updater\\migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_git_automation.py.main",
      "maps\\map_updater\\migrated_habdel_indexer.py.main",
      "maps\\map_updater\\migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_intelligent_navigator.py.main",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
      "maps\\map_updater\\migrated_log_manager.py.main",
      "maps\\map_updater\\migrated_map_optimizer.py.main",
      "maps\\map_updater\\migrated_map_updater.py.main",
      "maps\\map_updater\\migrated_map_validator.py.main",
      "maps\\map_updater\\migrated_markdown_processor.py.main",
      "maps\\map_updater\\migrated_metrics_analyzer.py.main",
      "maps\\map_updater\\migrated_metrics_collector.py.main",
      "maps\\map_updater\\migrated_metrics_reporter.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
      "maps\\map_updater\\migrated_migrated_alert_system.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.main",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.main",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_migrated_backup_system.py.main",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.main",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_migrated_context_detector.py.main",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.main",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.main",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
      "maps\\map_updater\\migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_modules_indexer.py.main",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_python_agent.py.main",
      "maps\\map_updater\\migrated_recipe_manager.py.main",
      "maps\\map_updater\\migrated_research_manager.py.main",
      "maps\\map_updater\\migrated_resources_indexer.py.main",
      "maps\\map_updater\\migrated_script_executor.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.main",
      "maps\\map_updater\\migrated_source_analyzer.py.main",
      "maps\\map_updater\\migrated_source_indexer.py.main",
      "maps\\map_updater\\migrated_styles_indexer.py.main",
      "maps\\map_updater\\migrated_tools_indexer.py.main",
      "maps\\map_updater\\migrated_update_readme.py.main",
      "maps\\map_updater\\migrated_wiki_expander.py.main",
      "maps\\map_updater\\migrated_wiki_fixer.py.main",
      "maps\\map_updater\\migrated_wiki_indexer.py.main",
      "maps\\map_updater\\migrated_wiki_optimizer.py.main",
      "maps\\map_updater\\migrated_workflow_manager.py.main",
      "maps\\map_validator\\map_validator.py.main",
      "maps\\modules_indexer\\migrated_update_modules_index.py.main",
      "maps\\modules_indexer\\modules_indexer.py.main",
      "maps\\resources_indexer\\migrated_update_resources_index.py.main",
      "maps\\resources_indexer\\resources_indexer.py.main",
      "maps\\source_indexer\\migrated_update_source_index.py.main",
      "maps\\source_indexer\\source_indexer.py.main",
      "maps\\styles_indexer\\migrated_update_styles_index.py.main",
      "maps\\styles_indexer\\styles_indexer.py.main",
      "maps\\tools_indexer\\migrated_update_tools_index.py.main",
      "maps\\tools_indexer\\tools_indexer.py.main",
      "maps\\wiki_indexer\\wiki_indexer.py.main",
      "documentation\\content_validator\\content_validator.py.main",
      "documentation\\content_validator\\migrated_update_json_maps.py.main",
      "documentation\\documentation_organizer\\documentation_organizer.py.main",
      "documentation\\markdown_processor\\markdown_processor.py.main",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.main",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.main",
      "documentation\\wiki_expander\\wiki_expander.py.main",
      "documentation\\wiki_fixer\\wiki_fixer.py.main",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.main",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
      "analysis\\advanced_searcher\\advanced_searcher.py.main",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
      "analysis\\context_detector\\context_detector.py.main",
      "analysis\\context_detector\\migrated_context_detector.py.main",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main",
      "analysis\\research_manager\\research_manager.py.main",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.main",
      "analysis\\source_analyzer\\source_analyzer.py.main",
      "agents\\agent_integrator\\agent_integrator.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_monitor\\agent_monitor.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.main",
      "agents\\agent_optimizer\\agent_optimizer.py.main",
      "agents\\agent_orchestrator\\agent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.main",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_organizer\\agent_organizer.py.main",
      "agents\\agent_organizer\\migrated_agent_organizer.py.main",
      "agents\\agent_specialist\\agent_specialist.py.main",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_validator\\agent_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
      "agents\\workflow_manager\\workflow_manager.py.main"
    ],
    "__init__": [
      "tools\\backup_system\\backup_system.py.__init__",
      "tools\\backup_system\\migrated_backup_system.py.__init__",
      "tools\\backup_system\\__init__.py.__init__",
      "tools\\cleanup_system\\cleanup_system.py.__init__",
      "tools\\cleanup_system\\migrated_cleanup_system.py.__init__",
      "tools\\cleanup_system\\__init__.py.__init__",
      "tools\\config_manager\\config_manager.py.__init__",
      "tools\\config_manager\\migrated_update_context_system.py.__init__",
      "tools\\config_manager\\__init__.py.__init__",
      "tools\\file_mover\\file_mover.py.__init__",
      "tools\\file_mover\\migrated_file_mover.py.__init__",
      "tools\\file_mover\\__init__.py.__init__",
      "tools\\git_automation\\git_automation.py.__init__",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.__init__",
      "tools\\git_automation\\migrated_auto_learning_system.py.__init__",
      "tools\\git_automation\\migrated_data_collector.py.__init__",
      "tools\\git_automation\\migrated_feedback_system.py.__init__",
      "tools\\git_automation\\migrated_git_task_integration.py.__init__",
      "tools\\git_automation\\migrated_optimization_engine.py.__init__",
      "tools\\git_automation\\migrated_prompt_evaluator.py.__init__",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.__init__",
      "tools\\git_automation\\migrated_prompt_optimizer.py.__init__",
      "tools\\git_automation\\migrated_rules_learning_integration.py.__init__",
      "tools\\git_automation\\migrated_visualization_interface.py.__init__",
      "tools\\git_automation\\__init__.py.__init__",
      "tools\\log_manager\\log_manager.py.__init__",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "tools\\log_manager\\__init__.py.__init__",
      "python\\code_analyzer\\code_analyzer.py.__init__",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.__init__",
      "python\\code_analyzer\\__init__.py.__init__",
      "python\\code_optimizer\\code_optimizer.py.__init__",
      "python\\code_optimizer\\migrated_auto_optimizer.py.__init__",
      "python\\code_optimizer\\__init__.py.__init__",
      "python\\documentation_generator\\documentation_generator.py.__init__",
      "python\\documentation_generator\\__init__.py.__init__",
      "python\\error_resolver\\error_resolver.py.__init__",
      "python\\error_resolver\\migrated_python_error_resolver.py.__init__",
      "python\\error_resolver\\__init__.py.__init__",
      "python\\python_agent\\migrated_python_agent_system.py.__init__",
      "python\\python_agent\\python_agent.py.__init__",
      "python\\python_agent\\__init__.py.__init__",
      "python\\recipe_manager\\migrated_task_automation_system.py.__init__",
      "python\\recipe_manager\\recipe_manager.py.__init__",
      "python\\recipe_manager\\__init__.py.__init__",
      "python\\script_executor\\migrated_script_execution_manager.py.__init__",
      "python\\script_executor\\script_executor.py.__init__",
      "python\\script_executor\\__init__.py.__init__",
      "metrics\\alert_system\\alert_system.py.__init__",
      "metrics\\alert_system\\migrated_alert_system.py.__init__",
      "metrics\\alert_system\\__init__.py.__init__",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\__init__.py.__init__",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.__init__",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.__init__",
      "metrics\\metrics_analyzer\\__init__.py.__init__",
      "metrics\\metrics_collector\\metrics_collector.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\__init__.py.__init__",
      "metrics\\metrics_reporter\\metrics_reporter.py.__init__",
      "metrics\\metrics_reporter\\__init__.py.__init__",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.__init__",
      "metrics\\performance_monitor\\performance_monitor.py.__init__",
      "metrics\\performance_monitor\\__init__.py.__init__",
      "maps\\habdel_indexer\\habdel_indexer.py.__init__",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.__init__",
      "maps\\habdel_indexer\\__init__.py.__init__",
      "maps\\map_optimizer\\map_optimizer.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_optimizer\\__init__.py.__init__",
      "maps\\map_updater\\map_updater.py.__init__",
      "maps\\map_updater\\migrated_advanced_searcher.py.__init__",
      "maps\\map_updater\\migrated_agent_integrator.py.__init__",
      "maps\\map_updater\\migrated_agent_monitor.py.__init__",
      "maps\\map_updater\\migrated_agent_optimizer.py.__init__",
      "maps\\map_updater\\migrated_agent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_agent_specialist.py.__init__",
      "maps\\map_updater\\migrated_agent_validator.py.__init__",
      "maps\\map_updater\\migrated_auto_updater.py.__init__",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.__init__",
      "maps\\map_updater\\migrated_auto_update_system.py.__init__",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.__init__",
      "maps\\map_updater\\migrated_code_analyzer.py.__init__",
      "maps\\map_updater\\migrated_code_optimizer.py.__init__",
      "maps\\map_updater\\migrated_config_manager.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_content_validator.py.__init__",
      "maps\\map_updater\\migrated_dashboard_monitor.py.__init__",
      "maps\\map_updater\\migrated_documentation_generator.py.__init__",
      "maps\\map_updater\\migrated_documentation_organizer.py.__init__",
      "maps\\map_updater\\migrated_error_resolver.py.__init__",
      "maps\\map_updater\\migrated_final_commit_verification.py.__init__",
      "maps\\map_updater\\migrated_git_automation.py.__init__",
      "maps\\map_updater\\migrated_habdel_indexer.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_intelligent_navigator.py.__init__",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.__init__",
      "maps\\map_updater\\migrated_log_manager.py.__init__",
      "maps\\map_updater\\migrated_map_optimizer.py.__init__",
      "maps\\map_updater\\migrated_map_updater.py.__init__",
      "maps\\map_updater\\migrated_map_validator.py.__init__",
      "maps\\map_updater\\migrated_markdown_processor.py.__init__",
      "maps\\map_updater\\migrated_metrics_analyzer.py.__init__",
      "maps\\map_updater\\migrated_metrics_collector.py.__init__",
      "maps\\map_updater\\migrated_metrics_reporter.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.__init__",
      "maps\\map_updater\\migrated_migrated_alert_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.__init__",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_backup_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_context_detector.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.__init__",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.__init__",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.__init__",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.__init__",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.__init__",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.__init__",
      "maps\\map_updater\\migrated_modular_structure_creator.py.__init__",
      "maps\\map_updater\\migrated_modules_indexer.py.__init__",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.__init__",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.__init__",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.__init__",
      "maps\\map_updater\\migrated_python_agent.py.__init__",
      "maps\\map_updater\\migrated_recipe_manager.py.__init__",
      "maps\\map_updater\\migrated_research_manager.py.__init__",
      "maps\\map_updater\\migrated_resources_indexer.py.__init__",
      "maps\\map_updater\\migrated_script_executor.py.__init__",
      "maps\\map_updater\\migrated_script_migration_agent.py.__init__",
      "maps\\map_updater\\migrated_source_analyzer.py.__init__",
      "maps\\map_updater\\migrated_source_indexer.py.__init__",
      "maps\\map_updater\\migrated_styles_indexer.py.__init__",
      "maps\\map_updater\\migrated_tools_indexer.py.__init__",
      "maps\\map_updater\\migrated_update_bmad_maps.py.__init__",
      "maps\\map_updater\\migrated_update_readme.py.__init__",
      "maps\\map_updater\\migrated_wiki_expander.py.__init__",
      "maps\\map_updater\\migrated_wiki_fixer.py.__init__",
      "maps\\map_updater\\migrated_wiki_indexer.py.__init__",
      "maps\\map_updater\\migrated_wiki_optimizer.py.__init__",
      "maps\\map_updater\\migrated_workflow_manager.py.__init__",
      "maps\\map_updater\\migrated___init__.py.__init__",
      "maps\\map_updater\\__init__.py.__init__",
      "maps\\map_validator\\map_validator.py.__init__",
      "maps\\map_validator\\__init__.py.__init__",
      "maps\\modules_indexer\\migrated_update_modules_index.py.__init__",
      "maps\\modules_indexer\\modules_indexer.py.__init__",
      "maps\\modules_indexer\\__init__.py.__init__",
      "maps\\resources_indexer\\migrated_update_resources_index.py.__init__",
      "maps\\resources_indexer\\resources_indexer.py.__init__",
      "maps\\resources_indexer\\__init__.py.__init__",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.__init__",
      "maps\\source_indexer\\migrated_update_source_index.py.__init__",
      "maps\\source_indexer\\source_indexer.py.__init__",
      "maps\\source_indexer\\__init__.py.__init__",
      "maps\\styles_indexer\\migrated_update_styles_index.py.__init__",
      "maps\\styles_indexer\\styles_indexer.py.__init__",
      "maps\\styles_indexer\\__init__.py.__init__",
      "maps\\tools_indexer\\migrated_update_tools_index.py.__init__",
      "maps\\tools_indexer\\tools_indexer.py.__init__",
      "maps\\tools_indexer\\__init__.py.__init__",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.__init__",
      "maps\\wiki_indexer\\wiki_indexer.py.__init__",
      "maps\\wiki_indexer\\__init__.py.__init__",
      "documentation\\content_validator\\content_validator.py.__init__",
      "documentation\\content_validator\\migrated_update_json_maps.py.__init__",
      "documentation\\content_validator\\__init__.py.__init__",
      "documentation\\documentation_organizer\\documentation_organizer.py.__init__",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.__init__",
      "documentation\\documentation_organizer\\__init__.py.__init__",
      "documentation\\markdown_processor\\markdown_processor.py.__init__",
      "documentation\\markdown_processor\\__init__.py.__init__",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.__init__",
      "documentation\\wiki_expander\\wiki_expander.py.__init__",
      "documentation\\wiki_expander\\__init__.py.__init__",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.__init__",
      "documentation\\wiki_fixer\\wiki_fixer.py.__init__",
      "documentation\\wiki_fixer\\__init__.py.__init__",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.__init__",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.__init__",
      "documentation\\wiki_optimizer\\__init__.py.__init__",
      "analysis\\advanced_searcher\\advanced_searcher.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\__init__.py.__init__",
      "analysis\\context_detector\\context_detector.py.__init__",
      "analysis\\context_detector\\migrated_context_detector.py.__init__",
      "analysis\\context_detector\\__init__.py.__init__",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\__init__.py.__init__",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\__init__.py.__init__",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.__init__",
      "analysis\\research_manager\\research_manager.py.__init__",
      "analysis\\research_manager\\__init__.py.__init__",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.__init__",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.__init__",
      "analysis\\source_analyzer\\source_analyzer.py.__init__",
      "analysis\\source_analyzer\\__init__.py.__init__",
      "agents\\agent_integrator\\agent_integrator.py.__init__",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.__init__",
      "agents\\agent_integrator\\__init__.py.__init__",
      "agents\\agent_monitor\\agent_monitor.py.__init__",
      "agents\\agent_monitor\\migrated_auto_monitor.py.__init__",
      "agents\\agent_monitor\\__init__.py.__init__",
      "agents\\agent_optimizer\\agent_optimizer.py.__init__",
      "agents\\agent_optimizer\\__init__.py.__init__",
      "agents\\agent_orchestrator\\agent_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.__init__",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_module_creator.py.__init__",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.__init__",
      "agents\\agent_orchestrator\\__init__.py.__init__",
      "agents\\agent_organizer\\agent_organizer.py.__init__",
      "agents\\agent_organizer\\migrated_agent_organizer.py.__init__",
      "agents\\agent_organizer\\__init__.py.__init__",
      "agents\\agent_specialist\\agent_specialist.py.__init__",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
      "agents\\agent_specialist\\__init__.py.__init__",
      "agents\\agent_validator\\agent_validator.py.__init__",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.__init__",
      "agents\\agent_validator\\__init__.py.__init__",
      "agents\\workflow_manager\\migrated_integration_workflow.py.__init__",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.__init__",
      "agents\\workflow_manager\\workflow_manager.py.__init__",
      "agents\\workflow_manager\\__init__.py.__init__"
    ],
    "execute": [
      "tools\\backup_system\\backup_system.py.execute",
      "tools\\backup_system\\migrated_backup_system.py.execute",
      "tools\\backup_system\\__init__.py.execute",
      "tools\\cleanup_system\\cleanup_system.py.execute",
      "tools\\cleanup_system\\migrated_cleanup_system.py.execute",
      "tools\\cleanup_system\\__init__.py.execute",
      "tools\\config_manager\\config_manager.py.execute",
      "tools\\config_manager\\__init__.py.execute",
      "tools\\file_mover\\file_mover.py.execute",
      "tools\\file_mover\\__init__.py.execute",
      "tools\\git_automation\\git_automation.py.execute",
      "tools\\git_automation\\__init__.py.execute",
      "tools\\log_manager\\log_manager.py.execute",
      "tools\\log_manager\\__init__.py.execute",
      "python\\code_analyzer\\code_analyzer.py.execute",
      "python\\code_analyzer\\__init__.py.execute",
      "python\\code_optimizer\\code_optimizer.py.execute",
      "python\\code_optimizer\\__init__.py.execute",
      "python\\documentation_generator\\documentation_generator.py.execute",
      "python\\documentation_generator\\__init__.py.execute",
      "python\\error_resolver\\error_resolver.py.execute",
      "python\\error_resolver\\__init__.py.execute",
      "python\\python_agent\\python_agent.py.execute",
      "python\\python_agent\\__init__.py.execute",
      "python\\recipe_manager\\recipe_manager.py.execute",
      "python\\recipe_manager\\__init__.py.execute",
      "python\\script_executor\\script_executor.py.execute",
      "python\\script_executor\\__init__.py.execute",
      "metrics\\alert_system\\alert_system.py.execute",
      "metrics\\alert_system\\migrated_alert_system.py.execute",
      "metrics\\alert_system\\__init__.py.execute",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.execute",
      "metrics\\dashboard_monitor\\__init__.py.execute",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.execute",
      "metrics\\metrics_analyzer\\__init__.py.execute",
      "metrics\\metrics_collector\\metrics_collector.py.execute",
      "metrics\\metrics_collector\\__init__.py.execute",
      "metrics\\metrics_reporter\\metrics_reporter.py.execute",
      "metrics\\metrics_reporter\\__init__.py.execute",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.execute",
      "metrics\\performance_monitor\\performance_monitor.py.execute",
      "metrics\\performance_monitor\\__init__.py.execute",
      "maps\\habdel_indexer\\habdel_indexer.py.execute",
      "maps\\habdel_indexer\\__init__.py.execute",
      "maps\\map_optimizer\\map_optimizer.py.execute",
      "maps\\map_optimizer\\__init__.py.execute",
      "maps\\map_updater\\map_updater.py.execute",
      "maps\\map_updater\\migrated_advanced_searcher.py.execute",
      "maps\\map_updater\\migrated_agent_integrator.py.execute",
      "maps\\map_updater\\migrated_agent_monitor.py.execute",
      "maps\\map_updater\\migrated_agent_optimizer.py.execute",
      "maps\\map_updater\\migrated_agent_orchestrator.py.execute",
      "maps\\map_updater\\migrated_agent_specialist.py.execute",
      "maps\\map_updater\\migrated_agent_validator.py.execute",
      "maps\\map_updater\\migrated_code_analyzer.py.execute",
      "maps\\map_updater\\migrated_code_optimizer.py.execute",
      "maps\\map_updater\\migrated_config_manager.py.execute",
      "maps\\map_updater\\migrated_content_validator.py.execute",
      "maps\\map_updater\\migrated_dashboard_monitor.py.execute",
      "maps\\map_updater\\migrated_documentation_generator.py.execute",
      "maps\\map_updater\\migrated_documentation_organizer.py.execute",
      "maps\\map_updater\\migrated_error_resolver.py.execute",
      "maps\\map_updater\\migrated_git_automation.py.execute",
      "maps\\map_updater\\migrated_habdel_indexer.py.execute",
      "maps\\map_updater\\migrated_intelligent_navigator.py.execute",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.execute",
      "maps\\map_updater\\migrated_log_manager.py.execute",
      "maps\\map_updater\\migrated_map_optimizer.py.execute",
      "maps\\map_updater\\migrated_map_updater.py.execute",
      "maps\\map_updater\\migrated_map_validator.py.execute",
      "maps\\map_updater\\migrated_markdown_processor.py.execute",
      "maps\\map_updater\\migrated_metrics_analyzer.py.execute",
      "maps\\map_updater\\migrated_metrics_collector.py.execute",
      "maps\\map_updater\\migrated_metrics_reporter.py.execute",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.execute",
      "maps\\map_updater\\migrated_migrated_alert_system.py.execute",
      "maps\\map_updater\\migrated_migrated_backup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_context_detector.py.execute",
      "maps\\map_updater\\migrated_modules_indexer.py.execute",
      "maps\\map_updater\\migrated_python_agent.py.execute",
      "maps\\map_updater\\migrated_recipe_manager.py.execute",
      "maps\\map_updater\\migrated_research_manager.py.execute",
      "maps\\map_updater\\migrated_resources_indexer.py.execute",
      "maps\\map_updater\\migrated_script_executor.py.execute",
      "maps\\map_updater\\migrated_source_analyzer.py.execute",
      "maps\\map_updater\\migrated_source_indexer.py.execute",
      "maps\\map_updater\\migrated_styles_indexer.py.execute",
      "maps\\map_updater\\migrated_tools_indexer.py.execute",
      "maps\\map_updater\\migrated_wiki_expander.py.execute",
      "maps\\map_updater\\migrated_wiki_fixer.py.execute",
      "maps\\map_updater\\migrated_wiki_indexer.py.execute",
      "maps\\map_updater\\migrated_wiki_optimizer.py.execute",
      "maps\\map_updater\\migrated_workflow_manager.py.execute",
      "maps\\map_updater\\migrated___init__.py.execute",
      "maps\\map_updater\\__init__.py.execute",
      "maps\\map_validator\\map_validator.py.execute",
      "maps\\map_validator\\__init__.py.execute",
      "maps\\modules_indexer\\modules_indexer.py.execute",
      "maps\\modules_indexer\\__init__.py.execute",
      "maps\\resources_indexer\\resources_indexer.py.execute",
      "maps\\resources_indexer\\__init__.py.execute",
      "maps\\source_indexer\\source_indexer.py.execute",
      "maps\\source_indexer\\__init__.py.execute",
      "maps\\styles_indexer\\styles_indexer.py.execute",
      "maps\\styles_indexer\\__init__.py.execute",
      "maps\\tools_indexer\\tools_indexer.py.execute",
      "maps\\tools_indexer\\__init__.py.execute",
      "maps\\wiki_indexer\\wiki_indexer.py.execute",
      "maps\\wiki_indexer\\__init__.py.execute",
      "documentation\\content_validator\\content_validator.py.execute",
      "documentation\\content_validator\\__init__.py.execute",
      "documentation\\documentation_organizer\\documentation_organizer.py.execute",
      "documentation\\documentation_organizer\\__init__.py.execute",
      "documentation\\markdown_processor\\markdown_processor.py.execute",
      "documentation\\markdown_processor\\__init__.py.execute",
      "documentation\\wiki_expander\\wiki_expander.py.execute",
      "documentation\\wiki_expander\\__init__.py.execute",
      "documentation\\wiki_fixer\\wiki_fixer.py.execute",
      "documentation\\wiki_fixer\\__init__.py.execute",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.execute",
      "documentation\\wiki_optimizer\\__init__.py.execute",
      "analysis\\advanced_searcher\\advanced_searcher.py.execute",
      "analysis\\advanced_searcher\\__init__.py.execute",
      "analysis\\context_detector\\context_detector.py.execute",
      "analysis\\context_detector\\migrated_context_detector.py.execute",
      "analysis\\context_detector\\__init__.py.execute",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.execute",
      "analysis\\intelligent_navigator\\__init__.py.execute",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.execute",
      "analysis\\knowledge_consolidator\\__init__.py.execute",
      "analysis\\research_manager\\research_manager.py.execute",
      "analysis\\research_manager\\__init__.py.execute",
      "analysis\\source_analyzer\\source_analyzer.py.execute",
      "analysis\\source_analyzer\\__init__.py.execute",
      "agents\\agent_integrator\\agent_integrator.py.execute",
      "agents\\agent_integrator\\__init__.py.execute",
      "agents\\agent_monitor\\agent_monitor.py.execute",
      "agents\\agent_monitor\\__init__.py.execute",
      "agents\\agent_optimizer\\agent_optimizer.py.execute",
      "agents\\agent_optimizer\\__init__.py.execute",
      "agents\\agent_orchestrator\\agent_orchestrator.py.execute",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
      "agents\\agent_orchestrator\\__init__.py.execute",
      "agents\\agent_organizer\\agent_organizer.py.execute",
      "agents\\agent_organizer\\migrated_agent_organizer.py.execute",
      "agents\\agent_organizer\\__init__.py.execute",
      "agents\\agent_specialist\\agent_specialist.py.execute",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
      "agents\\agent_specialist\\__init__.py.execute",
      "agents\\agent_validator\\agent_validator.py.execute",
      "agents\\agent_validator\\__init__.py.execute",
      "agents\\workflow_manager\\workflow_manager.py.execute",
      "agents\\workflow_manager\\__init__.py.execute"
    ],
    "_execute_module_logic": [
      "tools\\backup_system\\backup_system.py._execute_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
      "tools\\config_manager\\config_manager.py._execute_module_logic",
      "tools\\file_mover\\file_mover.py._execute_module_logic",
      "tools\\git_automation\\git_automation.py._execute_module_logic",
      "tools\\log_manager\\log_manager.py._execute_module_logic",
      "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
      "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
      "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
      "python\\error_resolver\\error_resolver.py._execute_module_logic",
      "python\\python_agent\\python_agent.py._execute_module_logic",
      "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
      "python\\script_executor\\script_executor.py._execute_module_logic",
      "metrics\\alert_system\\alert_system.py._execute_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
      "maps\\map_validator\\map_validator.py._execute_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
      "maps\\source_indexer\\source_indexer.py._execute_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
      "documentation\\content_validator\\content_validator.py._execute_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
      "analysis\\context_detector\\context_detector.py._execute_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
      "analysis\\research_manager\\research_manager.py._execute_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
      "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
      "agents\\agent_validator\\agent_validator.py._execute_module_logic",
      "agents\\workflow_manager\\workflow_manager.py._execute_module_logic"
    ],
    "validate": [
      "tools\\backup_system\\backup_system.py.validate",
      "tools\\backup_system\\migrated_backup_system.py.validate",
      "tools\\backup_system\\__init__.py.validate",
      "tools\\cleanup_system\\cleanup_system.py.validate",
      "tools\\cleanup_system\\migrated_cleanup_system.py.validate",
      "tools\\cleanup_system\\__init__.py.validate",
      "tools\\config_manager\\config_manager.py.validate",
      "tools\\config_manager\\__init__.py.validate",
      "tools\\file_mover\\file_mover.py.validate",
      "tools\\file_mover\\__init__.py.validate",
      "tools\\git_automation\\git_automation.py.validate",
      "tools\\git_automation\\__init__.py.validate",
      "tools\\log_manager\\log_manager.py.validate",
      "tools\\log_manager\\__init__.py.validate",
      "python\\code_analyzer\\code_analyzer.py.validate",
      "python\\code_analyzer\\__init__.py.validate",
      "python\\code_optimizer\\code_optimizer.py.validate",
      "python\\code_optimizer\\__init__.py.validate",
      "python\\documentation_generator\\documentation_generator.py.validate",
      "python\\documentation_generator\\__init__.py.validate",
      "python\\error_resolver\\error_resolver.py.validate",
      "python\\error_resolver\\__init__.py.validate",
      "python\\python_agent\\python_agent.py.validate",
      "python\\python_agent\\__init__.py.validate",
      "python\\recipe_manager\\recipe_manager.py.validate",
      "python\\recipe_manager\\__init__.py.validate",
      "python\\script_executor\\script_executor.py.validate",
      "python\\script_executor\\__init__.py.validate",
      "metrics\\alert_system\\alert_system.py.validate",
      "metrics\\alert_system\\migrated_alert_system.py.validate",
      "metrics\\alert_system\\__init__.py.validate",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.validate",
      "metrics\\dashboard_monitor\\__init__.py.validate",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.validate",
      "metrics\\metrics_analyzer\\__init__.py.validate",
      "metrics\\metrics_collector\\metrics_collector.py.validate",
      "metrics\\metrics_collector\\__init__.py.validate",
      "metrics\\metrics_reporter\\metrics_reporter.py.validate",
      "metrics\\metrics_reporter\\__init__.py.validate",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.validate",
      "metrics\\performance_monitor\\performance_monitor.py.validate",
      "metrics\\performance_monitor\\__init__.py.validate",
      "maps\\habdel_indexer\\habdel_indexer.py.validate",
      "maps\\habdel_indexer\\__init__.py.validate",
      "maps\\map_optimizer\\map_optimizer.py.validate",
      "maps\\map_optimizer\\__init__.py.validate",
      "maps\\map_updater\\map_updater.py.validate",
      "maps\\map_updater\\migrated_advanced_searcher.py.validate",
      "maps\\map_updater\\migrated_agent_integrator.py.validate",
      "maps\\map_updater\\migrated_agent_monitor.py.validate",
      "maps\\map_updater\\migrated_agent_optimizer.py.validate",
      "maps\\map_updater\\migrated_agent_orchestrator.py.validate",
      "maps\\map_updater\\migrated_agent_specialist.py.validate",
      "maps\\map_updater\\migrated_agent_validator.py.validate",
      "maps\\map_updater\\migrated_code_analyzer.py.validate",
      "maps\\map_updater\\migrated_code_optimizer.py.validate",
      "maps\\map_updater\\migrated_config_manager.py.validate",
      "maps\\map_updater\\migrated_content_validator.py.validate",
      "maps\\map_updater\\migrated_dashboard_monitor.py.validate",
      "maps\\map_updater\\migrated_documentation_generator.py.validate",
      "maps\\map_updater\\migrated_documentation_organizer.py.validate",
      "maps\\map_updater\\migrated_error_resolver.py.validate",
      "maps\\map_updater\\migrated_git_automation.py.validate",
      "maps\\map_updater\\migrated_habdel_indexer.py.validate",
      "maps\\map_updater\\migrated_intelligent_navigator.py.validate",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.validate",
      "maps\\map_updater\\migrated_log_manager.py.validate",
      "maps\\map_updater\\migrated_map_optimizer.py.validate",
      "maps\\map_updater\\migrated_map_updater.py.validate",
      "maps\\map_updater\\migrated_map_validator.py.validate",
      "maps\\map_updater\\migrated_markdown_processor.py.validate",
      "maps\\map_updater\\migrated_metrics_analyzer.py.validate",
      "maps\\map_updater\\migrated_metrics_collector.py.validate",
      "maps\\map_updater\\migrated_metrics_reporter.py.validate",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.validate",
      "maps\\map_updater\\migrated_migrated_alert_system.py.validate",
      "maps\\map_updater\\migrated_migrated_backup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_context_detector.py.validate",
      "maps\\map_updater\\migrated_modules_indexer.py.validate",
      "maps\\map_updater\\migrated_python_agent.py.validate",
      "maps\\map_updater\\migrated_recipe_manager.py.validate",
      "maps\\map_updater\\migrated_research_manager.py.validate",
      "maps\\map_updater\\migrated_resources_indexer.py.validate",
      "maps\\map_updater\\migrated_script_executor.py.validate",
      "maps\\map_updater\\migrated_source_analyzer.py.validate",
      "maps\\map_updater\\migrated_source_indexer.py.validate",
      "maps\\map_updater\\migrated_styles_indexer.py.validate",
      "maps\\map_updater\\migrated_tools_indexer.py.validate",
      "maps\\map_updater\\migrated_wiki_expander.py.validate",
      "maps\\map_updater\\migrated_wiki_fixer.py.validate",
      "maps\\map_updater\\migrated_wiki_indexer.py.validate",
      "maps\\map_updater\\migrated_wiki_optimizer.py.validate",
      "maps\\map_updater\\migrated_workflow_manager.py.validate",
      "maps\\map_updater\\migrated___init__.py.validate",
      "maps\\map_updater\\__init__.py.validate",
      "maps\\map_validator\\map_validator.py.validate",
      "maps\\map_validator\\__init__.py.validate",
      "maps\\modules_indexer\\modules_indexer.py.validate",
      "maps\\modules_indexer\\__init__.py.validate",
      "maps\\resources_indexer\\resources_indexer.py.validate",
      "maps\\resources_indexer\\__init__.py.validate",
      "maps\\source_indexer\\source_indexer.py.validate",
      "maps\\source_indexer\\__init__.py.validate",
      "maps\\styles_indexer\\styles_indexer.py.validate",
      "maps\\styles_indexer\\__init__.py.validate",
      "maps\\tools_indexer\\tools_indexer.py.validate",
      "maps\\tools_indexer\\__init__.py.validate",
      "maps\\wiki_indexer\\wiki_indexer.py.validate",
      "maps\\wiki_indexer\\__init__.py.validate",
      "documentation\\content_validator\\content_validator.py.validate",
      "documentation\\content_validator\\__init__.py.validate",
      "documentation\\documentation_organizer\\documentation_organizer.py.validate",
      "documentation\\documentation_organizer\\__init__.py.validate",
      "documentation\\markdown_processor\\markdown_processor.py.validate",
      "documentation\\markdown_processor\\__init__.py.validate",
      "documentation\\wiki_expander\\wiki_expander.py.validate",
      "documentation\\wiki_expander\\__init__.py.validate",
      "documentation\\wiki_fixer\\wiki_fixer.py.validate",
      "documentation\\wiki_fixer\\__init__.py.validate",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.validate",
      "documentation\\wiki_optimizer\\__init__.py.validate",
      "analysis\\advanced_searcher\\advanced_searcher.py.validate",
      "analysis\\advanced_searcher\\__init__.py.validate",
      "analysis\\context_detector\\context_detector.py.validate",
      "analysis\\context_detector\\migrated_context_detector.py.validate",
      "analysis\\context_detector\\__init__.py.validate",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.validate",
      "analysis\\intelligent_navigator\\__init__.py.validate",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.validate",
      "analysis\\knowledge_consolidator\\__init__.py.validate",
      "analysis\\research_manager\\research_manager.py.validate",
      "analysis\\research_manager\\__init__.py.validate",
      "analysis\\source_analyzer\\source_analyzer.py.validate",
      "analysis\\source_analyzer\\__init__.py.validate",
      "agents\\agent_integrator\\agent_integrator.py.validate",
      "agents\\agent_integrator\\__init__.py.validate",
      "agents\\agent_monitor\\agent_monitor.py.validate",
      "agents\\agent_monitor\\__init__.py.validate",
      "agents\\agent_optimizer\\agent_optimizer.py.validate",
      "agents\\agent_optimizer\\__init__.py.validate",
      "agents\\agent_orchestrator\\agent_orchestrator.py.validate",
      "agents\\agent_orchestrator\\__init__.py.validate",
      "agents\\agent_organizer\\agent_organizer.py.validate",
      "agents\\agent_organizer\\migrated_agent_organizer.py.validate",
      "agents\\agent_organizer\\__init__.py.validate",
      "agents\\agent_specialist\\agent_specialist.py.validate",
      "agents\\agent_specialist\\__init__.py.validate",
      "agents\\agent_validator\\agent_validator.py.validate",
      "agents\\agent_validator\\__init__.py.validate",
      "agents\\workflow_manager\\workflow_manager.py.validate",
      "agents\\workflow_manager\\__init__.py.validate"
    ],
    "_validate_module_logic": [
      "tools\\backup_system\\backup_system.py._validate_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
      "tools\\config_manager\\config_manager.py._validate_module_logic",
      "tools\\file_mover\\file_mover.py._validate_module_logic",
      "tools\\git_automation\\git_automation.py._validate_module_logic",
      "tools\\log_manager\\log_manager.py._validate_module_logic",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
      "python\\error_resolver\\error_resolver.py._validate_module_logic",
      "python\\python_agent\\python_agent.py._validate_module_logic",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
      "python\\script_executor\\script_executor.py._validate_module_logic",
      "metrics\\alert_system\\alert_system.py._validate_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
      "maps\\map_validator\\map_validator.py._validate_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
      "documentation\\content_validator\\content_validator.py._validate_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
      "analysis\\context_detector\\context_detector.py._validate_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
      "analysis\\research_manager\\research_manager.py._validate_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic"
    ],
    "integrate_with_module": [
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module"
    ],
    "update_enhanced_context_system": [
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system"
    ],
    "update_intelligent_navigation": [
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation"
    ],
    "analyze_directory_structure": [
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure"
    ],
    "get_key_files": [
      "tools\\config_manager\\migrated_update_context_system.py.get_key_files"
    ],
    "get_wiki_subdirectories": [
      "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories"
    ],
    "get_source_components": [
      "tools\\config_manager\\migrated_update_context_system.py.get_source_components"
    ],
    "get_module_categories": [
      "tools\\config_manager\\migrated_update_context_system.py.get_module_categories"
    ],
    "get_data_categories": [
      "tools\\config_manager\\migrated_update_context_system.py.get_data_categories"
    ],
    "get_navigation_system": [
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system"
    ],
    "get_performance_config": [
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_config"
    ],
    "get_context_detection": [
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection"
    ],
    "get_integration_status": [
      "tools\\config_manager\\migrated_update_context_system.py.get_integration_status"
    ],
    "get_navigation_patterns": [
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns"
    ],
    "get_smart_caching": [
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching"
    ],
    "get_performance_metrics": [
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics"
    ],
    "get_context_switching": [
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching"
    ],
    "get_error_recovery": [
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery"
    ],
    "generate_report": [
      "tools\\config_manager\\migrated_update_context_system.py.generate_report",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report"
    ],
    "load_config": [
      "tools\\file_mover\\migrated_file_mover.py.load_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.load_config"
    ],
    "save_config": [
      "tools\\file_mover\\migrated_file_mover.py.save_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.save_config"
    ],
    "interactive_mode": [
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode"
    ],
    "setup_backup_directory": [
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory"
    ],
    "validate_paths": [
      "tools\\file_mover\\migrated_file_mover.py.validate_paths"
    ],
    "move_file": [
      "tools\\file_mover\\migrated_file_mover.py.move_file"
    ],
    "move_files": [
      "tools\\file_mover\\migrated_file_mover.py.move_files"
    ],
    "example_1_basic_usage": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage"
    ],
    "example_2_configuration_file": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file"
    ],
    "example_3_batch_operations": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations"
    ],
    "example_4_conditional_moving": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "example_5_error_handling": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling"
    ],
    "create_directory_structure": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure"
    ],
    "optimize_prompt": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt"
    ],
    "evaluate_prompt": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
      "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt"
    ],
    "apply_tree_of_thought": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought"
    ],
    "apply_self_consistency": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency"
    ],
    "apply_generated_knowledge": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge"
    ],
    "_select_optimization_technique": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique"
    ],
    "_apply_optimization_technique": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique"
    ],
    "_comprehensive_rewrite": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite"
    ],
    "_enhance_clarity": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity"
    ],
    "_improve_specificity": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity"
    ],
    "_enhance_completeness": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness"
    ],
    "_apply_tot_to_prompt": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt"
    ],
    "_apply_role_prompting": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting"
    ],
    "_detect_task_type": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type"
    ],
    "_determine_appropriate_role": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role"
    ],
    "_calculate_clarity_score": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score"
    ],
    "_calculate_specificity_score": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score"
    ],
    "_calculate_completeness_score": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score"
    ],
    "_generate_evaluation_suggestions": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions"
    ],
    "_calculate_optimization_confidence": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence"
    ],
    "_generate_optimization_reasoning": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning"
    ],
    "_estimate_improvement": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement"
    ],
    "_generate_child_thoughts": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts"
    ],
    "_evaluate_thought": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._evaluate_thought"
    ],
    "_calculate_thought_confidence": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence"
    ],
    "_generate_thought_chain": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain"
    ],
    "_analyze_consistency": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency"
    ],
    "_select_most_consistent_response": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response"
    ],
    "_generate_relevant_knowledge": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge"
    ],
    "_integrate_knowledge_into_prompt": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt"
    ],
    "get_optimization_stats": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
      "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
      "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats",
      "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_auto_update_system.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_optimization_stats"
    ],
    "_get_most_used_technique": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique"
    ],
    "start_learning_background": [
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background"
    ],
    "stop_learning_background": [
      "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background"
    ],
    "_learning_loop": [
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop"
    ],
    "_perform_learning_cycle": [
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle"
    ],
    "_save_learning_results": [
      "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results"
    ],
    "record_interaction": [
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction"
    ],
    "_check_immediate_optimizations": [
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations"
    ],
    "_find_similar_patterns": [
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns"
    ],
    "_calculate_context_similarity": [
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity"
    ],
    "get_learning_stats": [
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats"
    ],
    "get_recommendations": [
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations"
    ],
    "update_feedback": [
      "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback"
    ],
    "_trigger_relearning": [
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning"
    ],
    "generate_learning_report": [
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report"
    ],
    "_generate_system_recommendations": [
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations"
    ],
    "shutdown": [
      "tools\\git_automation\\migrated_auto_learning_system.py.shutdown"
    ],
    "_save_current_state": [
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state"
    ],
    "get_rule_recommendations": [
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations"
    ],
    "apply_rule_optimizations": [
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations"
    ],
    "analyze_rule_patterns": [
      "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns"
    ],
    "init_database": [
      "tools\\git_automation\\migrated_data_collector.py.init_database"
    ],
    "generate_interaction_id": [
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id"
    ],
    "save_interaction": [
      "tools\\git_automation\\migrated_data_collector.py.save_interaction"
    ],
    "_calculate_complexity": [
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity"
    ],
    "_save_json_backup": [
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup"
    ],
    "get_interaction": [
      "tools\\git_automation\\migrated_data_collector.py.get_interaction"
    ],
    "get_interactions": [
      "tools\\git_automation\\migrated_data_collector.py.get_interactions"
    ],
    "_row_to_dict": [
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict"
    ],
    "get_total_interactions": [
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions"
    ],
    "get_interaction_stats": [
      "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats"
    ],
    "add_feedback": [
      "tools\\git_automation\\migrated_data_collector.py.add_feedback"
    ],
    "cleanup_old_data": [
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data"
    ],
    "_cleanup_old_json_files": [
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files"
    ],
    "exemplo_integracao_regras": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras"
    ],
    "exemplo_otimizacao_automatica_regras": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras"
    ],
    "load_feedback_data": [
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data"
    ],
    "load_feedback_analysis": [
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis"
    ],
    "save_feedback_data": [
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data"
    ],
    "save_feedback_analysis": [
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis"
    ],
    "record_feedback": [
      "tools\\git_automation\\migrated_feedback_system.py.record_feedback"
    ],
    "generate_feedback_id": [
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id"
    ],
    "analyze_feedback": [
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback"
    ],
    "_analyze_sentiment": [
      "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment"
    ],
    "_extract_improvement_suggestions": [
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions"
    ],
    "_calculate_confidence_level": [
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level"
    ],
    "get_feedback_stats": [
      "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats"
    ],
    "get_interaction_feedback": [
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback"
    ],
    "get_low_performing_interactions": [
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions"
    ],
    "get_improvement_recommendations": [
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations"
    ],
    "record_implicit_feedback": [
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback"
    ],
    "cleanup_old_feedback": [
      "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback"
    ],
    "resolve_git_errors_automatically": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically"
    ],
    "is_git_repo": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo"
    ],
    "initialize_git_repo": [
      "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo"
    ],
    "get_untracked_files": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files"
    ],
    "get_modified_files": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files"
    ],
    "get_deleted_files": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files"
    ],
    "add_untracked_files_automatically": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically"
    ],
    "add_modified_files_automatically": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically"
    ],
    "remove_deleted_files_automatically": [
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically"
    ],
    "has_merge_conflicts": [
      "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts"
    ],
    "resolve_merge_conflicts_automatically": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically"
    ],
    "is_staging_area_empty": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty"
    ],
    "add_changed_files_automatically": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically"
    ],
    "analyze_changes_by_context": [
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context"
    ],
    "create_atomic_commits": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits"
    ],
    "generate_contextual_commit_message": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message"
    ],
    "extract_commit_hash": [
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash"
    ],
    "get_active_task": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task"
    ],
    "auto_commit_atomic": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic"
    ],
    "auto_push": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push"
    ],
    "generate_commit_report": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report"
    ],
    "load_optimization_rules": [
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules"
    ],
    "load_optimization_results": [
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results"
    ],
    "save_optimization_rules": [
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules"
    ],
    "save_optimization_results": [
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results"
    ],
    "apply_optimizations": [
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations"
    ],
    "_generate_optimization_rules": [
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules"
    ],
    "_create_success_replication_rule": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule"
    ],
    "_create_failure_avoidance_rule": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule"
    ],
    "_create_specific_optimization_rule": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule"
    ],
    "_should_apply_rule": [
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule"
    ],
    "_apply_optimization_rule": [
      "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule"
    ],
    "apply_pattern_optimization": [
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization"
    ],
    "_update_optimization_rules": [
      "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules"
    ],
    "_limit_rules_per_type": [
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type"
    ],
    "_remove_obsolete_rules": [
      "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules"
    ],
    "update_optimization_result": [
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result"
    ],
    "_load_evaluation_patterns": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns"
    ],
    "_calculate_structure_score": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score"
    ],
    "_calculate_context_score": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score"
    ],
    "_calculate_overall_score": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score"
    ],
    "_generate_suggestions": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions"
    ],
    "_create_detailed_analysis": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis"
    ],
    "_generate_recommendations": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations"
    ],
    "_calculate_evaluation_confidence": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence"
    ],
    "_generate_prompt_id": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id"
    ],
    "batch_evaluate": [
      "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate"
    ],
    "get_evaluation_stats": [
      "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats"
    ],
    "_calculate_improvement_trend": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend"
    ],
    "load_prompt_patterns": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns"
    ],
    "load_optimization_history": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history"
    ],
    "load_learning_log": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_learning_log"
    ],
    "save_prompt_patterns": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns"
    ],
    "save_optimization_history": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
      "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history"
    ],
    "save_learning_log": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_learning_log"
    ],
    "record_prompt_optimization": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization"
    ],
    "_update_prompt_patterns": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns"
    ],
    "_detect_prompt_type": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type"
    ],
    "get_optimization_recommendation": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation"
    ],
    "_calculate_context_relevance": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance"
    ],
    "analyze_optimization_effectiveness": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness"
    ],
    "get_learning_recommendations": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations"
    ],
    "_get_top_patterns": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns"
    ],
    "apply_learned_optimizations": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations"
    ],
    "_apply_chain_of_thought": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_chain_of_thought"
    ],
    "_apply_specificity_improvement": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement"
    ],
    "_apply_clarity_enhancement": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement"
    ],
    "_load_optimization_templates": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates"
    ],
    "_load_detection_patterns": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns"
    ],
    "_needs_role_prompting": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting"
    ],
    "_needs_clarity_improvement": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement"
    ],
    "_needs_chain_of_thought": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought"
    ],
    "_needs_specificity_improvement": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement"
    ],
    "_needs_structured_output": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output"
    ],
    "_improve_clarity": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity"
    ],
    "_add_structured_output": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output"
    ],
    "_extract_technology": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology"
    ],
    "_extract_subject": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject"
    ],
    "_extract_domain": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain"
    ],
    "_calculate_improvement_score": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score"
    ],
    "batch_optimize": [
      "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize"
    ],
    "load_rule_patterns": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns"
    ],
    "load_rule_optimizations": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations"
    ],
    "load_rule_usage_log": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_usage_log"
    ],
    "save_rule_patterns": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns"
    ],
    "save_rule_optimizations": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations"
    ],
    "save_rule_usage_log": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_usage_log"
    ],
    "get_all_rules": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules"
    ],
    "parse_rule_content": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content"
    ],
    "record_rule_usage": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.record_rule_usage"
    ],
    "_analyze_context_applicability": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability"
    ],
    "_extract_context_keywords": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords"
    ],
    "_generate_rule_improvements": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements"
    ],
    "generate_rule_optimizations": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations"
    ],
    "_create_rule_optimization": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization"
    ],
    "_generate_improved_content": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content"
    ],
    "apply_rule_optimization": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization"
    ],
    "generate_rules_learning_report": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report"
    ],
    "generate_learning_dashboard": [
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard"
    ],
    "_create_dashboard_html": [
      "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html"
    ],
    "_calculate_percentage": [
      "tools\\git_automation\\migrated_visualization_interface.py._calculate_percentage"
    ],
    "_generate_optimization_rules_html": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html"
    ],
    "_generate_recommendations_html": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html"
    ],
    "_create_learning_report": [
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report"
    ],
    "_format_improvement_suggestions": [
      "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions"
    ],
    "_format_optimization_rules": [
      "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules"
    ],
    "_format_most_effective_rules": [
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules"
    ],
    "_generate_immediate_actions": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions"
    ],
    "_generate_medium_term_actions": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions"
    ],
    "_generate_long_term_actions": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions"
    ],
    "create_performance_chart": [
      "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart"
    ],
    "create_centralized_structure": [
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure"
    ],
    "categorize_file": [
      "tools\\log_manager\\migrated_centralize_logs.py.categorize_file",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file"
    ],
    "matches_pattern": [
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern"
    ],
    "backup_existing_files": [
      "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files"
    ],
    "move_file_to_category": [
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category"
    ],
    "centralize_logs": [
      "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs"
    ],
    "create_centralized_index": [
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index"
    ],
    "generate_centralization_report": [
      "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report"
    ],
    "analyze_tags_index_optimization": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization"
    ],
    "analyze_wiki_map_optimization": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization"
    ],
    "analyze_rules_optimization": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization"
    ],
    "analyze_enhanced_context_system": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system"
    ],
    "analyze_intelligent_navigation": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation"
    ],
    "analyze_performance_metrics": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics"
    ],
    "calculate_path_optimization_score": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score"
    ],
    "generate_optimization_report": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report"
    ],
    "get_grade": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade"
    ],
    "generate_optimization_recommendations": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations"
    ],
    "setup_logging": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
      "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging"
    ],
    "trigger_optimization": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_auto_update_system.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_optimization"
    ],
    "optimize_performance": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance"
    ],
    "optimize_error_handling": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling"
    ],
    "optimize_response_time": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time"
    ],
    "optimize_memory_usage": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_memory_usage"
    ],
    "optimize_cache_strategy": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy"
    ],
    "optimize_search_algorithms": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms"
    ],
    "optimize_data_structures": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures"
    ],
    "optimize_parallel_processing": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing"
    ],
    "improve_error_detection": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection"
    ],
    "enhance_error_resolution": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution"
    ],
    "optimize_fallback_strategies": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies"
    ],
    "improve_error_logging": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging"
    ],
    "implement_lazy_loading": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading"
    ],
    "optimize_query_patterns": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns"
    ],
    "improve_caching": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching"
    ],
    "optimize_algorithm_complexity": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity"
    ],
    "implement_memory_pooling": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling"
    ],
    "optimize_data_compression": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression"
    ],
    "improve_garbage_collection": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection"
    ],
    "load_error_patterns": [
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns"
    ],
    "detect_error_type": [
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type"
    ],
    "check_python_path": [
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path"
    ],
    "install_missing_dependencies": [
      "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies"
    ],
    "fix_import_statement": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement"
    ],
    "fix_syntax_error": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error"
    ],
    "validate_json_syntax": [
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax"
    ],
    "check_file_path": [
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path"
    ],
    "fix_encoding_declaration": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration"
    ],
    "increase_timeout": [
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout"
    ],
    "resolve_error": [
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error"
    ],
    "test_script": [
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script"
    ],
    "auto_resolve_script_errors": [
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors"
    ],
    "log_resolution": [
      "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution"
    ],
    "load_base_patterns": [
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns"
    ],
    "load_error_log": [
      "python\\python_agent\\migrated_python_agent_system.py.load_error_log"
    ],
    "load_improvement_log": [
      "python\\python_agent\\migrated_python_agent_system.py.load_improvement_log"
    ],
    "save_error_log": [
      "python\\python_agent\\migrated_python_agent_system.py.save_error_log"
    ],
    "save_improvement_log": [
      "python\\python_agent\\migrated_python_agent_system.py.save_improvement_log"
    ],
    "analyze_python_file": [
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file"
    ],
    "check_base_patterns": [
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns"
    ],
    "analyze_structure": [
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure"
    ],
    "has_type_hints": [
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints"
    ],
    "check_project_patterns": [
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns"
    ],
    "update_error_log": [
      "python\\python_agent\\migrated_python_agent_system.py.update_error_log"
    ],
    "create_python_file": [
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file"
    ],
    "generate_file_structure": [
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure"
    ],
    "optimize_python_file": [
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file"
    ],
    "optimize_imports": [
      "python\\python_agent\\migrated_python_agent_system.py.optimize_imports"
    ],
    "add_basic_type_hints": [
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints"
    ],
    "scan_project_python_files": [
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files"
    ],
    "create_temp_task": [
      "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task"
    ],
    "define_objectives": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives"
    ],
    "define_success_criteria": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria"
    ],
    "define_planned_steps": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps"
    ],
    "generate_task_content": [
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content"
    ],
    "execute_task_steps": [
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps"
    ],
    "update_task_progress": [
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress"
    ],
    "generate_task_report": [
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report"
    ],
    "organize_task_results": [
      "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results"
    ],
    "generate_recipe": [
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe"
    ],
    "update_task_indexes": [
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes"
    ],
    "execute_complete_task": [
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task"
    ],
    "execute_script_with_error_resolution": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution"
    ],
    "resolve_script_error": [
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error"
    ],
    "execute_script_safely": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely"
    ],
    "execute_fallback_mode": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode"
    ],
    "create_basic_map_update": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update"
    ],
    "create_basic_analysis_report": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report"
    ],
    "create_basic_report": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report"
    ],
    "log_execution": [
      "python\\script_executor\\migrated_script_execution_manager.py.log_execution"
    ],
    "get_execution_stats": [
      "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats"
    ],
    "load_metrics_data": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data"
    ],
    "calculate_system_status": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status"
    ],
    "generate_alerts": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts"
    ],
    "create_dashboard_data": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data"
    ],
    "extract_performance_history": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history"
    ],
    "extract_usage_history": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history"
    ],
    "extract_quality_history": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history"
    ],
    "save_dashboard_data": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data"
    ],
    "save_alerts": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts"
    ],
    "save_system_status": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status"
    ],
    "generate_dashboard_report": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report"
    ],
    "create_monitoring_dashboard": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard"
    ],
    "analyze_cursor_structure": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure"
    ],
    "analyze_navigation_efficiency": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency"
    ],
    "analyze_cache_effectiveness": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness"
    ],
    "calculate_performance_score": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score"
    ],
    "collect_system_metrics": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics"
    ],
    "collect_performance_metrics": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics"
    ],
    "collect_usage_metrics": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics"
    ],
    "collect_quality_metrics": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics"
    ],
    "save_metrics": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics"
    ],
    "analyze_trends": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends"
    ],
    "generate_metrics_report": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report"
    ],
    "collect_all_metrics": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics"
    ],
    "implement_metrics_system": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system"
    ],
    "scan_habdel_files": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files"
    ],
    "extract_story_info": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info"
    ],
    "extract_title": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title"
    ],
    "extract_description": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description"
    ],
    "determine_status": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status"
    ],
    "extract_tags": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags"
    ],
    "categorize_stories": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.categorize_stories"
    ],
    "generate_statistics": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics"
    ],
    "generate_search_index": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index"
    ],
    "generate_habdel_index": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index"
    ],
    "save_index": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index"
    ],
    "update_index": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.update_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.update_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.update_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.update_index"
    ],
    "analyze_map_size": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size"
    ],
    "_analyze_structure": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure"
    ],
    "_count_items": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items"
    ],
    "optimize_map": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "_compress_data": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data"
    ],
    "_chunk_data": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data"
    ],
    "optimize_all_maps": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps"
    ],
    "trigger_auto_update": [
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_update_system.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_auto_update",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update"
    ],
    "update_maps": [
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps"
    ],
    "update_rules": [
      "maps\\map_updater\\migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules"
    ],
    "update_scripts": [
      "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts"
    ],
    "update_context": [
      "maps\\map_updater\\migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context"
    ],
    "update_performance": [
      "maps\\map_updater\\migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance"
    ],
    "validate_maps": [
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps"
    ],
    "scan_rules_consistency": [
      "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency"
    ],
    "resolve_rule_conflicts": [
      "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts"
    ],
    "optimize_rule_structure": [
      "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure"
    ],
    "optimize_script_performance": [
      "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance"
    ],
    "fix_script_errors": [
      "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors"
    ],
    "update_script_dependencies": [
      "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies"
    ],
    "detect_context_changes": [
      "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes"
    ],
    "update_context_maps": [
      "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps"
    ],
    "optimize_navigation_patterns": [
      "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns"
    ],
    "apply_performance_optimizations": [
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations"
    ],
    "apply_cache_optimizations": [
      "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations"
    ],
    "apply_search_optimizations": [
      "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations"
    ],
    "apply_structure_optimizations": [
      "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations"
    ],
    "save_update_history": [
      "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history"
    ],
    "get_update_stats": [
      "maps\\map_updater\\migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_auto_update_system.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_update_stats"
    ],
    "load_context_data": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data"
    ],
    "get_context_scripts": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts"
    ],
    "get_context_maps": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps"
    ],
    "log": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.log",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.log"
    ],
    "execute_script": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script"
    ],
    "validate_map": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map"
    ],
    "update_all_maps": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps"
    ],
    "save_report": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report"
    ],
    "print_summary": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary"
    ],
    "start_system": [
      "maps\\map_updater\\migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system"
    ],
    "start_component_threads": [
      "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads"
    ],
    "main_loop": [
      "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop"
    ],
    "updater_loop": [
      "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop"
    ],
    "optimizer_loop": [
      "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop"
    ],
    "check_system_health": [
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health"
    ],
    "execute_update_cycle": [
      "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle"
    ],
    "detect_system_changes": [
      "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes"
    ],
    "detect_performance_issues": [
      "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues"
    ],
    "process_change": [
      "maps\\map_updater\\migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change"
    ],
    "resolve_performance_issue": [
      "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue"
    ],
    "determine_update_type": [
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type"
    ],
    "determine_optimization_target": [
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target"
    ],
    "measure_response_time": [
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time"
    ],
    "measure_memory_usage": [
      "maps\\map_updater\\migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_memory_usage",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_memory_usage"
    ],
    "generate_cycle_report": [
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report"
    ],
    "emergency_mode": [
      "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode"
    ],
    "execute_emergency_fixes": [
      "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes"
    ],
    "fix_critical_errors": [
      "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors"
    ],
    "restore_backups": [
      "maps\\map_updater\\migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups"
    ],
    "validate_system_integrity": [
      "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity"
    ],
    "restart_system": [
      "maps\\map_updater\\migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restart_system"
    ],
    "stop_system": [
      "maps\\map_updater\\migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.stop_system"
    ],
    "save_system_state": [
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state"
    ],
    "get_system_status": [
      "maps\\map_updater\\migrated_auto_update_system.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_system_status",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status"
    ],
    "calculate_uptime": [
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime"
    ],
    "start_monitoring": [
      "maps\\map_updater\\migrated_auto_update_system.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
      "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "create_canary_structure": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure"
    ],
    "create_comparison_framework": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework"
    ],
    "create_documentation_template": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template"
    ],
    "create_analysis_tools": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools"
    ],
    "create_migration_guides": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides"
    ],
    "save_preparation_files": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files"
    ],
    "run": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.run",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.run",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.run",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.run",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run"
    ],
    "analyze_agents": [
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents"
    ],
    "backup_agents": [
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents"
    ],
    "consolidate_group": [
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group"
    ],
    "consolidate_all_agents": [
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents"
    ],
    "generate_consolidation_report": [
      "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report"
    ],
    "pull_latest_changes": [
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes"
    ],
    "check_git_status": [
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status"
    ],
    "add_all_changes": [
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes"
    ],
    "commit_changes": [
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes"
    ],
    "push_changes": [
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes"
    ],
    "verify_clean_working_tree": [
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree"
    ],
    "generate_final_report": [
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report"
    ],
    "run_final_verification": [
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification"
    ],
    "run_command": [
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command"
    ],
    "categorize_files": [
      "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files"
    ],
    "make_commit": [
      "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit"
    ],
    "get_cache_category": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category"
    ],
    "get_cache_duration": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration"
    ],
    "is_cache_valid": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid"
    ],
    "get_cached_data": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data"
    ],
    "set_cached_data": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data"
    ],
    "load_map_with_cache": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache"
    ],
    "implement_smart_cache": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache"
    ],
    "get_cache_stats": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats"
    ],
    "clear_cache": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache"
    ],
    "initialize_agents": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents"
    ],
    "initialize_workflows": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows"
    ],
    "detect_context_by_extension": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension"
    ],
    "select_agents": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents"
    ],
    "execute_agent_workflow": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow"
    ],
    "calculate_overall_quality": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality"
    ],
    "get_agent_info": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info"
    ],
    "list_all_agents": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents"
    ],
    "perform_analysis": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis"
    ],
    "perform_optimizations": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations"
    ],
    "validate_quality": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality"
    ],
    "record_metric": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric"
    ],
    "check_quality_gate": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate"
    ],
    "alert_degradation": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation"
    ],
    "fix_all_compatibility_issues": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues"
    ],
    "fix_rules_folder": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder"
    ],
    "create_aaa_rules_file": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file"
    ],
    "create_basic_rule_file": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file"
    ],
    "optimize_compatibility": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility"
    ],
    "fix_json_maps": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps"
    ],
    "create_basic_agents_map": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map"
    ],
    "fix_agents_map_structure": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure"
    ],
    "fix_invalid_json": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json"
    ],
    "fix_agent_integration": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration"
    ],
    "create_basic_agent_config": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config"
    ],
    "validate_fixes": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes"
    ],
    "calculate_final_compatibility_score": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score"
    ],
    "calculate_overall_fix_status": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status"
    ],
    "save_fix_results": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results"
    ],
    "generate_fix_report": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report"
    ],
    "validate_agents": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents"
    ],
    "validate_workflows": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows"
    ],
    "validate_compatibility": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility"
    ],
    "validate_performance": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance"
    ],
    "validate_json_maps": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps"
    ],
    "validate_rules": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules"
    ],
    "calculate_overall_status": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status"
    ],
    "save_validation_results": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results"
    ],
    "generate_validation_report": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report"
    ],
    "load_intelligent_navigation": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation"
    ],
    "extract_document_content": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content"
    ],
    "build_content_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index"
    ],
    "build_semantic_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index"
    ],
    "build_category_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index"
    ],
    "build_tag_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index"
    ],
    "build_keyword_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index"
    ],
    "build_metadata_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index"
    ],
    "build_similarity_matrix": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix"
    ],
    "calculate_similarity": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity"
    ],
    "search_by_text": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text"
    ],
    "search_by_tags": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags"
    ],
    "search_by_category": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category"
    ],
    "search_similar": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar"
    ],
    "extract_snippet": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "save_search_index": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index"
    ],
    "generate_search_report": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report"
    ],
    "build_advanced_search": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search"
    ],
    "check_maps_integrity": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity"
    ],
    "check_rules_consistency": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency"
    ],
    "check_scripts_functionality": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality"
    ],
    "check_file_permissions": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions"
    ],
    "check_json_validity": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity"
    ],
    "detect_changes": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
      "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes"
    ],
    "analyze_performance": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
      "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance"
    ],
    "measure_file_access_speed": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed"
    ],
    "measure_script_execution_time": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time"
    ],
    "check_and_trigger_actions": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions"
    ],
    "trigger_health_correction": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction"
    ],
    "trigger_performance_optimization": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization"
    ],
    "trigger_emergency_mode": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode"
    ],
    "analyze_request": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request"
    ],
    "detect_file_extensions": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions"
    ],
    "detect_context_patterns": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns"
    ],
    "detect_technologies": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies"
    ],
    "combine_analysis": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis"
    ],
    "analyze_complexity": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity"
    ],
    "identify_primary_workflow": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow"
    ],
    "calculate_confidence": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence"
    ],
    "orchestrate_request": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request"
    ],
    "get_agent_role": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role"
    ],
    "execute_workflow": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow"
    ],
    "get_agents_for_phase": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase"
    ],
    "simulate_phase_execution": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution"
    ],
    "report_phase_progress": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress"
    ],
    "generate_progress_report": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report"
    ],
    "save_execution_results": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results"
    ],
    "extract_section_content": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content"
    ],
    "extract_examples": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples"
    ],
    "create_comprehensive_ui_guide": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide"
    ],
    "create_lua_api_reference": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference"
    ],
    "create_system_guides": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides"
    ],
    "process_habdel_content": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content"
    ],
    "create_development_guides": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides"
    ],
    "create_reference_documents": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents"
    ],
    "update_wiki_index": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index"
    ],
    "expand_wiki_comprehensive": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive"
    ],
    "fix_broken_links": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links"
    ],
    "improve_wiki_index": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index"
    ],
    "improve_document_aliases": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases"
    ],
    "improve_navigation_sections": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections"
    ],
    "optimize_maps_for_ai": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai"
    ],
    "create_quick_search_guide": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide"
    ],
    "fix_all_issues": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues"
    ],
    "analyze_habdel_structure": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure"
    ],
    "determine_category": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category"
    ],
    "extract_status": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status"
    ],
    "analyze_wiki_structure": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure"
    ],
    "determine_wiki_category": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category"
    ],
    "create_integration_index": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index"
    ],
    "get_category_emoji": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji"
    ],
    "get_category_name": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name"
    ],
    "get_status_emoji": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_emoji"
    ],
    "create_navigation_links": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links"
    ],
    "save_integration_files": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files"
    ],
    "load_navigation_index": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index"
    ],
    "analyze_document_content": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content"
    ],
    "build_navigation_graph": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph"
    ],
    "create_semantic_links": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links"
    ],
    "create_contextual_paths": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths"
    ],
    "create_quick_access": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access"
    ],
    "create_search_index": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index"
    ],
    "create_breadcrumbs": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs"
    ],
    "create_related_documents": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents"
    ],
    "generate_navigation_report": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report"
    ],
    "save_intelligent_navigation": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation"
    ],
    "optimize_navigation": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation"
    ],
    "analyze_context": [
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context"
    ],
    "scan_documents": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents"
    ],
    "categorize_documents": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents"
    ],
    "create_consolidation_structure": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure"
    ],
    "create_navigation_index": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index"
    ],
    "create_consolidation_report": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report"
    ],
    "consolidate_knowledge": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge"
    ],
    "create_script_mapping": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping"
    ],
    "create_module_structure": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure"
    ],
    "create_init_file": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file"
    ],
    "create_module_init": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init"
    ],
    "create_module_files": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files"
    ],
    "get_category_for_module": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module"
    ],
    "create_structure_config": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config"
    ],
    "create_script_mapping_file": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file"
    ],
    "create_structure_documentation": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation"
    ],
    "translate_text": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text"
    ],
    "optimize_metadata": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata"
    ],
    "optimize_tags_index": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_tags_index"
    ],
    "optimize_wiki_map": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_wiki_map"
    ],
    "optimize_relationships": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_relationships"
    ],
    "analyze_content_overlap": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap"
    ],
    "extract_sections": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections"
    ],
    "merge_network_documents": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents"
    ],
    "optimize_ui_documents": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_ui_documents"
    ],
    "extract_widget_sections": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections"
    ],
    "remove_repetitive_sections": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections"
    ],
    "get_section_content": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content"
    ],
    "standardize_navigation": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation"
    ],
    "generate_standard_navigation": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation"
    ],
    "optimize_wiki_structure": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure"
    ],
    "check_debug_environment": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment"
    ],
    "check_tool_available": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available"
    ],
    "check_lua_debugger": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_lua_debugger",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_lua_debugger"
    ],
    "analyze_crash_dump": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump"
    ],
    "identify_crash_type": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type"
    ],
    "extract_stack_trace": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace"
    ],
    "extract_memory_info": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info"
    ],
    "extract_system_info": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info"
    ],
    "generate_crash_recommendations": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations"
    ],
    "generate_performance_recommendations": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations"
    ],
    "generate_debug_report": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report"
    ],
    "save_debug_report": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report"
    ],
    "analyze_logs": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs"
    ],
    "parse_log_entries": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_entries"
    ],
    "parse_log_line": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_line"
    ],
    "get_time_range": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range"
    ],
    "analyze_level_distribution": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution"
    ],
    "analyze_category_distribution": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution"
    ],
    "analyze_errors": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors"
    ],
    "classify_error": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error"
    ],
    "analyze_crashes": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes"
    ],
    "identify_crash_pattern": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern"
    ],
    "analyze_patterns": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns"
    ],
    "generate_recommendations": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations"
    ],
    "save_analysis": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis"
    ],
    "load_metrics": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics"
    ],
    "collect_project_metrics": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics"
    ],
    "check_performance_thresholds": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds"
    ],
    "record_metrics": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics"
    ],
    "_cleanup_old_metrics": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics"
    ],
    "stop_monitoring": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.stop_monitoring"
    ],
    "_monitoring_loop": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop"
    ],
    "get_performance_report": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report"
    ],
    "create_integration_structure": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure"
    ],
    "add_integration_tags": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags"
    ],
    "add_tags_to_file": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file"
    ],
    "add_integration_sections": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections"
    ],
    "add_integration_section_to_file": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file"
    ],
    "create_integration_section": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section"
    ],
    "create_integration_documents": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents"
    ],
    "update_maps_for_integration": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration"
    ],
    "prepare_integration": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration"
    ],
    "load_structure_config": [
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config"
    ],
    "load_script_mapping": [
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping"
    ],
    "discover_python_scripts": [
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts"
    ],
    "analyze_script": [
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script"
    ],
    "determine_target_module": [
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module"
    ],
    "migrate_script_to_module": [
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module"
    ],
    "create_migrated_script": [
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script"
    ],
    "update_module_init": [
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init"
    ],
    "update_module_config": [
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config"
    ],
    "migrate_all_scripts": [
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts"
    ],
    "generate_migration_report": [
      "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report"
    ],
    "save_migration_report": [
      "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report"
    ],
    "generate_agents_index": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index"
    ],
    "generate_workflows_index": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index"
    ],
    "generate_templates_index": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index"
    ],
    "get_context_adaptation": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation"
    ],
    "get_workflow_context_adaptation": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation"
    ],
    "get_template_context_adaptation": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation"
    ],
    "update_all_bmad_maps": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps"
    ],
    "count_files": [
      "maps\\map_updater\\migrated_update_readme.py.count_files"
    ],
    "get_directory_structure": [
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure"
    ],
    "validate_functionality": [
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality"
    ],
    "update_readme_metrics": [
      "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics"
    ],
    "validate_navigation": [
      "maps\\map_updater\\migrated_update_readme.py.validate_navigation"
    ],
    "generate_status_report": [
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report"
    ],
    "update_readme_file": [
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file"
    ],
    "run_full_update": [
      "maps\\map_updater\\migrated_update_readme.py.run_full_update"
    ],
    "scan_modules": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules"
    ],
    "analyze_module": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module"
    ],
    "extract_lua_apis": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis"
    ],
    "extract_dependencies": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies"
    ],
    "categorize_module": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_module"
    ],
    "categorize_modules": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules"
    ],
    "generate_modules_index": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index"
    ],
    "scan_resources": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources"
    ],
    "analyze_resource": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource"
    ],
    "categorize_resource": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resource"
    ],
    "extract_metadata": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata"
    ],
    "extract_font_metadata": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata"
    ],
    "extract_locale_metadata": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata"
    ],
    "extract_particle_metadata": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata"
    ],
    "count_lines": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
      "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines"
    ],
    "categorize_resources": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources"
    ],
    "generate_resources_index": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index"
    ],
    "scan_all_documents": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents"
    ],
    "extract_document_info": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info"
    ],
    "extract_frontmatter": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter"
    ],
    "extract_story_id": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_story_id",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_story_id"
    ],
    "categorize_document": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_document",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_document"
    ],
    "categorize_size": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size"
    ],
    "extract_keywords": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords"
    ],
    "create_alphabetical_index": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index"
    ],
    "create_categorical_index": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index"
    ],
    "create_story_based_index": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index"
    ],
    "save_indexes": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes"
    ],
    "scan_source_files": [
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files"
    ],
    "extract_functions": [
      "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions"
    ],
    "extract_classes": [
      "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes"
    ],
    "generate_source_index": [
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index"
    ],
    "scan_style_files": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files"
    ],
    "analyze_style_file": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file"
    ],
    "extract_widgets": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets"
    ],
    "extract_widget_properties": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties"
    ],
    "guess_property_type": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type"
    ],
    "extract_properties": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties"
    ],
    "categorize_style": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style"
    ],
    "categorize_styles": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles"
    ],
    "generate_styles_index": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index"
    ],
    "scan_tools": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools"
    ],
    "analyze_tool": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool"
    ],
    "categorize_tool": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool"
    ],
    "extract_tool_info": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info"
    ],
    "get_language": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.get_language"
    ],
    "categorize_tools": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools"
    ],
    "generate_tools_index": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index"
    ],
    "scan_markdown_files": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files"
    ],
    "generate_tags_index": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index"
    ],
    "generate_wiki_map": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map"
    ],
    "generate_relationships": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships"
    ],
    "update_all_json_files": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files"
    ],
    "generate_search_aliases": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases"
    ],
    "get_priority": [
      "documentation\\content_validator\\migrated_update_json_maps.py.get_priority"
    ],
    "get_description": [
      "documentation\\content_validator\\migrated_update_json_maps.py.get_description"
    ],
    "generate_navigation_paths": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths"
    ],
    "generate_learning_paths": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths"
    ],
    "generate_dependency_graph": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph"
    ],
    "generate_topic_clusters": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters"
    ],
    "remove_emojis_from_file": [
      "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file"
    ],
    "load_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns"
    ],
    "load_clusters": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters"
    ],
    "save_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns"
    ],
    "save_clusters": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters"
    ],
    "_extract_features": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features"
    ],
    "_identify_success_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns"
    ],
    "_identify_failure_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns"
    ],
    "_identify_optimization_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns"
    ],
    "_analyze_context_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns"
    ],
    "_analyze_agent_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns"
    ],
    "_analyze_workflow_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns"
    ],
    "_analyze_error_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns"
    ],
    "_extract_error_type": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type"
    ],
    "_create_pattern_clusters": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters"
    ],
    "_calculate_cluster_center": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center"
    ],
    "_calculate_pattern_scores": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores"
    ],
    "_generate_pattern_id": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id"
    ],
    "_save_learned_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns"
    ],
    "_limit_patterns_per_type": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type"
    ],
    "find_similar_patterns": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns"
    ],
    "_calculate_pattern_similarity": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity"
    ],
    "_get_matched_features": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features"
    ],
    "load_configuration": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration"
    ],
    "analyze_dashboard": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard"
    ],
    "extract_pending_tasks": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks"
    ],
    "determine_priority": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority"
    ],
    "assign_task_to_agent": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent"
    ],
    "execute_agent": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent"
    ],
    "_run_agent_thread": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread"
    ],
    "execute_auto_commit": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit"
    ],
    "generate_commit_message": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message"
    ],
    "update_dashboard_with_commit": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit"
    ],
    "orchestrate_workflow": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow"
    ],
    "wait_for_agents_completion": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion"
    ],
    "generate_orchestration_report": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report"
    ],
    "check_system_alerts": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts"
    ],
    "check_application_alerts": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts"
    ],
    "check_trend_alerts": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts"
    ],
    "generate_alert_summary": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary"
    ],
    "generate_alert_report": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report"
    ],
    "carregar_erros_existentes": [
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.carregar_erros_existentes"
    ],
    "registrar_erro": [
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.registrar_erro"
    ],
    "analyze_python_code": [
      "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code"
    ],
    "execute_practical_projects": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects"
    ],
    "generate_simple_code": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code"
    ],
    "save_project_code": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code"
    ],
    "generate_project_documentation": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation"
    ],
    "generate_execution_report": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report"
    ],
    "get_file_extension": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension"
    ],
    "log_message": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.log_message",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.log_message"
    ],
    "analyze_dashboard_coverage": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage"
    ],
    "integrate_stories_habdel": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel"
    ],
    "map_missing_tasks": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks"
    ],
    "document_missing_agents": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents"
    ],
    "integrate_missing_roadmaps": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps"
    ],
    "cover_missing_plans": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans"
    ],
    "update_dashboard_coverage": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage"
    ],
    "generate_html_dashboard": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard"
    ],
    "generate_markdown_dashboard": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard"
    ],
    "save_dashboard": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard"
    ],
    "get_status_color": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_color"
    ],
    "scan_source_code": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code"
    ],
    "analyze_file_content": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content"
    ],
    "generate_deep_analysis_report": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report"
    ],
    "analyze_specific_category": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category"
    ],
    "generate_category_detailed_report": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "run_deep_analysis": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis"
    ],
    "generate_final_analysis_report": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report"
    ],
    "get_path": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.get_path",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.get_path"
    ],
    "create_file_safely": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.create_file_safely"
    ],
    "analyze_code_for_documentation": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation"
    ],
    "detect_language": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language"
    ],
    "extract_imports": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports"
    ],
    "extract_comments": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments"
    ],
    "parse_parameters": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters"
    ],
    "assess_complexity": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity"
    ],
    "identify_documentation_needs": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs"
    ],
    "generate_api_documentation": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_api_documentation"
    ],
    "generate_readme": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme"
    ],
    "validate_documentation_quality": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality"
    ],
    "save_documentation": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation"
    ],
    "test_lessons_functionality": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality"
    ],
    "validate_course_progression": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression"
    ],
    "measure_learning_effectiveness": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness"
    ],
    "identify_knowledge_gaps": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps"
    ],
    "generate_educational_report": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report"
    ],
    "analyze_naming_patterns": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns"
    ],
    "identify_obsolete_files": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files"
    ],
    "get_obsolete_reason": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason"
    ],
    "get_recommended_action": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action"
    ],
    "standardize_file_names": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names"
    ],
    "clean_obsolete_files": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files"
    ],
    "validate_navigation_paths": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths"
    ],
    "generate_organization_report": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report"
    ],
    "clean_pycache": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache"
    ],
    "integrate_start_task_supervisor": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor"
    ],
    "integrate_absolute_path_utility": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility"
    ],
    "clean_backup_consolidation": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation"
    ],
    "validate_final_structure": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure"
    ],
    "validate_file_exists": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists"
    ],
    "safe_add_file": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "analyze_changes": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes"
    ],
    "_detect_task_context": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context"
    ],
    "_detect_open_files": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files"
    ],
    "_analyze_commit_groups": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups"
    ],
    "_group_by_directory": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory"
    ],
    "_group_by_file_type": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type"
    ],
    "_group_by_context": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context"
    ],
    "_get_file_diff": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff"
    ],
    "_extract_context_from_diff": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff"
    ],
    "_is_similar_context": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "_consolidate_groups": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups"
    ],
    "_ensure_unique_files": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "_get_file_type": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type"
    ],
    "_determine_type_from_files": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files"
    ],
    "_generate_group_message": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message"
    ],
    "_determine_commit_type": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type"
    ],
    "_generate_change_summary": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary"
    ],
    "validate_commit_message": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message"
    ],
    "execute_commit": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit"
    ],
    "auto_commit": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit"
    ],
    "execute_multiple_commits": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "navigate": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "json_navigation": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation"
    ],
    "graph_navigation": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.graph_navigation"
    ],
    "hybrid_navigation": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation"
    ],
    "integrate_results": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results"
    ],
    "calculate_confidence_scores": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores"
    ],
    "generate_suggestions": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions"
    ],
    "prepare_integration_structure": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure"
    ],
    "create_integration_templates": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates"
    ],
    "setup_integration_workflows": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows"
    ],
    "generate_integration_report": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report"
    ],
    "_create_integration_config": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config"
    ],
    "_create_template_files": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files"
    ],
    "_create_workflow_files": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files"
    ],
    "_validate_file_structure": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure"
    ],
    "_validate_api_interfaces": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces"
    ],
    "_validate_documentation_format": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format"
    ],
    "_validate_code_standards": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards"
    ],
    "_validate_dependencies": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_dependencies"
    ],
    "_create_documentation_templates": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates"
    ],
    "_create_code_templates": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates"
    ],
    "_create_workflow_templates": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates"
    ],
    "_create_validation_templates": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates"
    ],
    "_setup_preparation_workflow": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow"
    ],
    "_setup_validation_workflow": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow"
    ],
    "_setup_integration_workflow": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow"
    ],
    "_setup_testing_workflow": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow"
    ],
    "_setup_deployment_workflow": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow"
    ],
    "_get_structure_status": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status"
    ],
    "_get_compatibility_status": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status"
    ],
    "_get_templates_status": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status"
    ],
    "_get_workflows_status": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status"
    ],
    "_get_next_steps": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps"
    ],
    "_get_recommendations": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_recommendations"
    ],
    "create_transition_timeline": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline"
    ],
    "adapt_educational_system": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system"
    ],
    "establish_validation_processes": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes"
    ],
    "generate_integration_plan": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan"
    ],
    "detect_organization_issues": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues"
    ],
    "_detect_canary_integration_issues": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues"
    ],
    "_detect_missing_integration_structure": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure"
    ],
    "_is_canary_integration_file": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file"
    ],
    "_is_in_correct_canary_location": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location"
    ],
    "organize_canary_integration_files": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files"
    ],
    "_create_canary_integration_structure": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure"
    ],
    "_organize_canary_file": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file"
    ],
    "validate_canary_integration_structure": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure"
    ],
    "is_in_wrong_location": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location"
    ],
    "is_obsolete": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete"
    ],
    "is_temp_file": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file"
    ],
    "has_category": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category"
    ],
    "find_duplicates": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates"
    ],
    "find_unorganized_reports": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports"
    ],
    "detect_file_context": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context"
    ],
    "is_in_reports_folder": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder"
    ],
    "is_in_tasks_folder": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder"
    ],
    "is_in_recipes_folder": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder"
    ],
    "is_in_archives_folder": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder"
    ],
    "organize_by_category": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category"
    ],
    "organize_by_date": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date"
    ],
    "extract_date_from_file": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file"
    ],
    "cleanup_temp_files": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files"
    ],
    "remove_duplicates": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates"
    ],
    "create_organization_structure": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure"
    ],
    "run_full_organization": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization"
    ],
    "_is_ignored": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored"
    ],
    "load_navigation_maps": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps"
    ],
    "process_workflow_results": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "extract_analysis_insights": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights"
    ],
    "extract_generation_insights": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights"
    ],
    "extract_test_insights": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights"
    ],
    "identify_patterns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns"
    ],
    "analyze_success_patterns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns"
    ],
    "analyze_failure_patterns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns"
    ],
    "analyze_code_patterns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns"
    ],
    "analyze_structural_patterns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns"
    ],
    "generate_rules": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules"
    ],
    "update_knowledge_base": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base"
    ],
    "save_knowledge_base": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base"
    ],
    "save_learning_data": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data"
    ],
    "analyze_file_types": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types"
    ],
    "analyze_score_distribution": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution"
    ],
    "get_common_patterns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns"
    ],
    "get_wiki_knowledge": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge"
    ],
    "update_navigation_maps": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps"
    ],
    "create_update_processes": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes"
    ],
    "establish_backup_recovery": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery"
    ],
    "define_scalability_processes": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes"
    ],
    "create_evolution_roadmap": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap"
    ],
    "generate_maintenance_plan": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan"
    ],
    "collect_application_metrics": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics"
    ],
    "count_files_in_directory": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory"
    ],
    "count_files_by_extension": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension"
    ],
    "get_active_agents": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents"
    ],
    "get_task_metrics": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics"
    ],
    "calculate_kpis": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis"
    ],
    "calculate_health_score": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score"
    ],
    "calculate_app_health_score": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score"
    ],
    "validate_kpis": [
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis"
    ],
    "test_alert_system": [
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system"
    ],
    "verify_dashboard_monitoring": [
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring"
    ],
    "load_wiki_maps": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps"
    ],
    "analyze_existing_game_modules": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules"
    ],
    "analyze_single_module": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module"
    ],
    "analyze_lua_patterns": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns"
    ],
    "analyze_otmod_patterns": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns"
    ],
    "analyze_otui_patterns": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns"
    ],
    "search_wiki_knowledge": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge"
    ],
    "generate_module_concept": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept"
    ],
    "generate_otmod_content": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content"
    ],
    "generate_lua_content": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content"
    ],
    "generate_otui_content": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content"
    ],
    "create_module_from_scratch": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch"
    ],
    "create_practical_modules": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules"
    ],
    "generate_practical_modules_report": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report"
    ],
    "validate_file_references": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references"
    ],
    "validate_import_statements": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements"
    ],
    "validate_json_references": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references"
    ],
    "update_json_references": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references"
    ],
    "validate_execution_paths": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths"
    ],
    "optimize_python_code": [
      "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code"
    ],
    "initialize_educational_structure": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure"
    ],
    "generate_educational_documentation": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation"
    ],
    "generate_courses_documentation": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation"
    ],
    "generate_educational_initialization_report": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report"
    ],
    "run_educational_system": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system"
    ],
    "generate_structured_lessons": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons"
    ],
    "create_lessons_structure": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure"
    ],
    "generate_practical_lessons": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons"
    ],
    "generate_lessons_report": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report"
    ],
    "generate_educational_final_report": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report"
    ],
    "create_functional_courses": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses"
    ],
    "calculate_current_metrics": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics"
    ],
    "calculate_general_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress"
    ],
    "calculate_epics_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress"
    ],
    "calculate_stories_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress"
    ],
    "calculate_agents_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress"
    ],
    "calculate_tasks_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress"
    ],
    "calculate_roadmaps_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress"
    ],
    "calculate_planejamentos_progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress"
    ],
    "calculate_velocity": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity"
    ],
    "calculate_trends": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends"
    ],
    "execute_comprehensive_tests": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests"
    ],
    "verify_100_percent_coverage": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage"
    ],
    "certify_total_quality": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality"
    ],
    "generate_final_validation_report": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report"
    ],
    "create_habdel_structure": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure"
    ],
    "generate_story_system": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system"
    ],
    "save_story_system": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system"
    ],
    "create_research_template": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template"
    ],
    "analyze_otclient_source": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source"
    ],
    "generate_research_plan": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan"
    ],
    "run_initial_setup": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup"
    ],
    "extract_epics": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics"
    ],
    "extract_stories": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories"
    ],
    "extract_agents": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents"
    ],
    "extract_roadmaps": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps"
    ],
    "extract_planejamentos": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos"
    ],
    "extract_progress": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress"
    ],
    "extract_tasks_in_progress": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress"
    ],
    "extract_tasks_pending": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending"
    ],
    "extract_subtasks": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks"
    ],
    "extract_completed_stories": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories"
    ],
    "extract_pending_stories": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories"
    ],
    "assign_task": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task"
    ],
    "estimate_duration": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration"
    ],
    "update_dashboard": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard"
    ],
    "apply_task_update": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update"
    ],
    "identify_next_priorities": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities"
    ],
    "read_task_master": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master"
    ],
    "extract_current_task": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task"
    ],
    "check_task_completion": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion"
    ],
    "check_waiting_for_instructions": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions"
    ],
    "check_for_errors": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors"
    ],
    "can_send_command": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command"
    ],
    "generate_continue_command": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command"
    ],
    "log_supervision_action": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "analyze_conversation_context": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context"
    ],
    "should_continue_to_next_task": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "execute_supervision_cycle": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle"
    ],
    "generate_supervision_report": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report"
    ],
    "validate_python_code": [
      "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code"
    ],
    "activate_learning_workflow": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow"
    ],
    "generate_activation_report": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report"
    ],
    "save_activation_report": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report"
    ],
    "activate_certification_system": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system"
    ],
    "generate_certification_report": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report"
    ],
    "save_certification_report": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "execute_analysis_phase": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase"
    ],
    "execute_generation_phase": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase"
    ],
    "execute_testing_phase": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase"
    ],
    "execute_learning_phase": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase"
    ],
    "generate_workflow_summary": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary"
    ],
    "save_workflow_results": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results"
    ],
    "log_phase": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase"
    ],
    "get_available_modules": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules"
    ],
    "get_workflow_status": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status"
    ],
    "list_workflows": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows"
    ],
    "run_full_integration": [
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration"
    ],
    "_execute_phase": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "_phase_preparation": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation"
    ],
    "_phase_structure_validation": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation"
    ],
    "_phase_compatibility_check": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check"
    ],
    "_phase_template_creation": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation"
    ],
    "_phase_workflow_setup": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup"
    ],
    "_phase_integration_testing": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing"
    ],
    "_phase_conflict_resolution": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution"
    ],
    "_phase_final_integration": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration"
    ],
    "_phase_validation": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation"
    ],
    "_phase_deployment": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_deployment"
    ],
    "_check_permissions": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions"
    ],
    "_validate_integration_structure": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure"
    ],
    "_check_api_compatibility": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility"
    ],
    "_check_format_compatibility": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility"
    ],
    "_check_dependency_compatibility": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility"
    ],
    "_create_integration_templates": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates"
    ],
    "_setup_integration_workflows": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows"
    ],
    "_run_integration_tests": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests"
    ],
    "_resolve_integration_conflicts": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts"
    ],
    "_execute_final_integration": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration"
    ],
    "_execute_final_validation": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation"
    ],
    "_execute_deployment": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_deployment"
    ],
    "_rollback_phase": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase"
    ]
  },
  "by_category": {
    "python": {
      "functions": [
        "tools\\backup_system\\backup_system.py.main",
        "tools\\backup_system\\backup_system.py.__init__",
        "tools\\backup_system\\backup_system.py.execute",
        "tools\\backup_system\\backup_system.py._execute_module_logic",
        "tools\\backup_system\\backup_system.py.validate",
        "tools\\backup_system\\backup_system.py._validate_module_logic",
        "tools\\backup_system\\migrated_backup_system.py.main",
        "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
        "tools\\backup_system\\migrated_backup_system.py.__init__",
        "tools\\backup_system\\migrated_backup_system.py.execute",
        "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
        "tools\\backup_system\\migrated_backup_system.py.validate",
        "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
        "tools\\backup_system\\__init__.py.__init__",
        "tools\\backup_system\\__init__.py.execute",
        "tools\\backup_system\\__init__.py.validate",
        "tools\\cleanup_system\\cleanup_system.py.main",
        "tools\\cleanup_system\\cleanup_system.py.__init__",
        "tools\\cleanup_system\\cleanup_system.py.execute",
        "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
        "tools\\cleanup_system\\cleanup_system.py.validate",
        "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
        "tools\\cleanup_system\\migrated_cleanup_system.py.main",
        "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
        "tools\\cleanup_system\\migrated_cleanup_system.py.__init__",
        "tools\\cleanup_system\\migrated_cleanup_system.py.execute",
        "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
        "tools\\cleanup_system\\migrated_cleanup_system.py.validate",
        "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
        "tools\\cleanup_system\\__init__.py.__init__",
        "tools\\cleanup_system\\__init__.py.execute",
        "tools\\cleanup_system\\__init__.py.validate",
        "tools\\config_manager\\config_manager.py.main",
        "tools\\config_manager\\config_manager.py.__init__",
        "tools\\config_manager\\config_manager.py.execute",
        "tools\\config_manager\\config_manager.py._execute_module_logic",
        "tools\\config_manager\\config_manager.py.validate",
        "tools\\config_manager\\config_manager.py._validate_module_logic",
        "tools\\config_manager\\migrated_update_context_system.py.main",
        "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
        "tools\\config_manager\\migrated_update_context_system.py.__init__",
        "tools\\config_manager\\migrated_update_context_system.py.get_source_components",
        "tools\\config_manager\\migrated_update_context_system.py.get_module_categories",
        "tools\\config_manager\\migrated_update_context_system.py.get_data_categories",
        "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
        "tools\\config_manager\\migrated_update_context_system.py.get_performance_config",
        "tools\\config_manager\\migrated_update_context_system.py.get_integration_status",
        "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns",
        "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
        "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
        "tools\\config_manager\\migrated_update_context_system.py.generate_report",
        "tools\\config_manager\\__init__.py.__init__",
        "tools\\config_manager\\__init__.py.execute",
        "tools\\config_manager\\__init__.py.validate",
        "tools\\file_mover\\file_mover.py.main",
        "tools\\file_mover\\file_mover.py.__init__",
        "tools\\file_mover\\file_mover.py.execute",
        "tools\\file_mover\\file_mover.py._execute_module_logic",
        "tools\\file_mover\\file_mover.py.validate",
        "tools\\file_mover\\file_mover.py._validate_module_logic",
        "tools\\file_mover\\migrated_file_mover.py.load_config",
        "tools\\file_mover\\migrated_file_mover.py.save_config",
        "tools\\file_mover\\migrated_file_mover.py.interactive_mode",
        "tools\\file_mover\\migrated_file_mover.py.main",
        "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
        "tools\\file_mover\\migrated_file_mover.py.__init__",
        "tools\\file_mover\\migrated_file_mover.py.validate_paths",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.main",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
        "tools\\file_mover\\__init__.py.__init__",
        "tools\\file_mover\\__init__.py.execute",
        "tools\\file_mover\\__init__.py.validate",
        "tools\\git_automation\\git_automation.py.main",
        "tools\\git_automation\\git_automation.py.__init__",
        "tools\\git_automation\\git_automation.py.execute",
        "tools\\git_automation\\git_automation.py._execute_module_logic",
        "tools\\git_automation\\git_automation.py.validate",
        "tools\\git_automation\\git_automation.py._validate_module_logic",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.__init__",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._evaluate_thought",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique",
        "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
        "tools\\git_automation\\migrated_auto_learning_system.py.__init__",
        "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
        "tools\\git_automation\\migrated_auto_learning_system.py.load_config",
        "tools\\git_automation\\migrated_auto_learning_system.py.save_config",
        "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
        "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background",
        "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop",
        "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
        "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results",
        "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
        "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations",
        "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
        "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
        "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
        "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning",
        "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
        "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
        "tools\\git_automation\\migrated_auto_learning_system.py.shutdown",
        "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
        "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
        "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
        "tools\\git_automation\\migrated_create_module_simple.py.main",
        "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
        "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
        "tools\\git_automation\\migrated_data_collector.py.__init__",
        "tools\\git_automation\\migrated_data_collector.py.init_database",
        "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
        "tools\\git_automation\\migrated_data_collector.py.save_interaction",
        "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
        "tools\\git_automation\\migrated_data_collector.py.get_interaction",
        "tools\\git_automation\\migrated_data_collector.py.get_interactions",
        "tools\\git_automation\\migrated_data_collector.py._row_to_dict",
        "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
        "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats",
        "tools\\git_automation\\migrated_data_collector.py.add_feedback",
        "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
        "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
        "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras",
        "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
        "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
        "tools\\git_automation\\migrated_feedback_system.py.__init__",
        "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
        "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
        "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
        "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
        "tools\\git_automation\\migrated_feedback_system.py.record_feedback",
        "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
        "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
        "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
        "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats",
        "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback",
        "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions",
        "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
        "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback",
        "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback",
        "tools\\git_automation\\migrated_git_task_integration.py.main",
        "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
        "tools\\git_automation\\migrated_git_task_integration.py.__init__",
        "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
        "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
        "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
        "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
        "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
        "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
        "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
        "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
        "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
        "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
        "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
        "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
        "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
        "tools\\git_automation\\migrated_optimization_engine.py.__init__",
        "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
        "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
        "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
        "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
        "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
        "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
        "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
        "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
        "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
        "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule",
        "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule",
        "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
        "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
        "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules",
        "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
        "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
        "tools\\git_automation\\migrated_prompt_evaluator.py.__init__",
        "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns",
        "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score",
        "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
        "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
        "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence",
        "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
        "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate",
        "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.__init__",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.load_learning_log",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.save_learning_log",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_chain_of_thought",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement",
        "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
        "tools\\git_automation\\migrated_prompt_optimizer.py.__init__",
        "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates",
        "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns",
        "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
        "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
        "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
        "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
        "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
        "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
        "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
        "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting",
        "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity",
        "tools\\git_automation\\migrated_prompt_optimizer.py._apply_chain_of_thought",
        "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity",
        "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output",
        "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology",
        "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject",
        "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain",
        "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score",
        "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize",
        "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats",
        "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
        "tools\\git_automation\\migrated_rules_learning_integration.py.__init__",
        "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
        "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations",
        "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_usage_log",
        "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
        "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations",
        "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_usage_log",
        "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
        "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content",
        "tools\\git_automation\\migrated_rules_learning_integration.py.record_rule_usage",
        "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
        "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
        "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
        "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
        "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization",
        "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
        "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report",
        "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
        "tools\\git_automation\\migrated_visualization_interface.py.__init__",
        "tools\\git_automation\\migrated_visualization_interface.py._calculate_percentage",
        "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
        "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
        "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
        "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
        "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions",
        "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules",
        "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules",
        "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions",
        "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions",
        "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions",
        "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart",
        "tools\\git_automation\\__init__.py.__init__",
        "tools\\git_automation\\__init__.py.execute",
        "tools\\git_automation\\__init__.py.validate",
        "tools\\log_manager\\log_manager.py.main",
        "tools\\log_manager\\log_manager.py.__init__",
        "tools\\log_manager\\log_manager.py.execute",
        "tools\\log_manager\\log_manager.py._execute_module_logic",
        "tools\\log_manager\\log_manager.py.validate",
        "tools\\log_manager\\log_manager.py._validate_module_logic",
        "tools\\log_manager\\migrated_centralize_logs.py.main",
        "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
        "tools\\log_manager\\migrated_centralize_logs.py.__init__",
        "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
        "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
        "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
        "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report",
        "tools\\log_manager\\__init__.py.__init__",
        "tools\\log_manager\\__init__.py.execute",
        "tools\\log_manager\\__init__.py.validate",
        "python\\code_analyzer\\code_analyzer.py.main",
        "python\\code_analyzer\\code_analyzer.py.__init__",
        "python\\code_analyzer\\code_analyzer.py.execute",
        "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
        "python\\code_analyzer\\code_analyzer.py.validate",
        "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.main",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.__init__",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
        "python\\code_analyzer\\__init__.py.__init__",
        "python\\code_analyzer\\__init__.py.execute",
        "python\\code_analyzer\\__init__.py.validate",
        "python\\code_optimizer\\code_optimizer.py.main",
        "python\\code_optimizer\\code_optimizer.py.__init__",
        "python\\code_optimizer\\code_optimizer.py.execute",
        "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
        "python\\code_optimizer\\code_optimizer.py.validate",
        "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
        "python\\code_optimizer\\migrated_auto_optimizer.py.main",
        "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
        "python\\code_optimizer\\migrated_auto_optimizer.py.__init__",
        "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
        "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_memory_usage",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
        "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
        "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
        "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
        "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
        "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
        "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
        "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
        "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
        "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats",
        "python\\code_optimizer\\__init__.py.__init__",
        "python\\code_optimizer\\__init__.py.execute",
        "python\\code_optimizer\\__init__.py.validate",
        "python\\documentation_generator\\documentation_generator.py.main",
        "python\\documentation_generator\\documentation_generator.py.__init__",
        "python\\documentation_generator\\documentation_generator.py.execute",
        "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
        "python\\documentation_generator\\documentation_generator.py.validate",
        "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
        "python\\documentation_generator\\__init__.py.__init__",
        "python\\documentation_generator\\__init__.py.execute",
        "python\\documentation_generator\\__init__.py.validate",
        "python\\error_resolver\\error_resolver.py.main",
        "python\\error_resolver\\error_resolver.py.__init__",
        "python\\error_resolver\\error_resolver.py.execute",
        "python\\error_resolver\\error_resolver.py._execute_module_logic",
        "python\\error_resolver\\error_resolver.py.validate",
        "python\\error_resolver\\error_resolver.py._validate_module_logic",
        "python\\error_resolver\\migrated_python_error_resolver.py.main",
        "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
        "python\\error_resolver\\migrated_python_error_resolver.py.__init__",
        "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns",
        "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
        "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path",
        "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies",
        "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement",
        "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
        "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax",
        "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration",
        "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout",
        "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
        "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
        "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
        "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution",
        "python\\error_resolver\\__init__.py.__init__",
        "python\\error_resolver\\__init__.py.execute",
        "python\\error_resolver\\__init__.py.validate",
        "python\\python_agent\\migrated_python_agent_system.py.main",
        "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
        "python\\python_agent\\migrated_python_agent_system.py.__init__",
        "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
        "python\\python_agent\\migrated_python_agent_system.py.load_error_log",
        "python\\python_agent\\migrated_python_agent_system.py.load_improvement_log",
        "python\\python_agent\\migrated_python_agent_system.py.save_error_log",
        "python\\python_agent\\migrated_python_agent_system.py.save_improvement_log",
        "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
        "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
        "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
        "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
        "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
        "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
        "python\\python_agent\\migrated_python_agent_system.py.optimize_imports",
        "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints",
        "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
        "python\\python_agent\\migrated_python_agent_system.py.generate_report",
        "python\\python_agent\\python_agent.py.main",
        "python\\python_agent\\python_agent.py.__init__",
        "python\\python_agent\\python_agent.py.execute",
        "python\\python_agent\\python_agent.py._execute_module_logic",
        "python\\python_agent\\python_agent.py.validate",
        "python\\python_agent\\python_agent.py._validate_module_logic",
        "python\\python_agent\\__init__.py.__init__",
        "python\\python_agent\\__init__.py.execute",
        "python\\python_agent\\__init__.py.validate",
        "python\\recipe_manager\\migrated_task_automation_system.py.main",
        "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
        "python\\recipe_manager\\migrated_task_automation_system.py.__init__",
        "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
        "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task",
        "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
        "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
        "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
        "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
        "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps",
        "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
        "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results",
        "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe",
        "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task",
        "python\\recipe_manager\\recipe_manager.py.main",
        "python\\recipe_manager\\recipe_manager.py.__init__",
        "python\\recipe_manager\\recipe_manager.py.execute",
        "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
        "python\\recipe_manager\\recipe_manager.py.validate",
        "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
        "python\\recipe_manager\\__init__.py.__init__",
        "python\\recipe_manager\\__init__.py.execute",
        "python\\recipe_manager\\__init__.py.validate",
        "python\\script_executor\\migrated_script_execution_manager.py.main",
        "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
        "python\\script_executor\\migrated_script_execution_manager.py.__init__",
        "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
        "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
        "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
        "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
        "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
        "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report",
        "python\\script_executor\\migrated_script_execution_manager.py.log_execution",
        "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats",
        "python\\script_executor\\script_executor.py.main",
        "python\\script_executor\\script_executor.py.__init__",
        "python\\script_executor\\script_executor.py.execute",
        "python\\script_executor\\script_executor.py._execute_module_logic",
        "python\\script_executor\\script_executor.py.validate",
        "python\\script_executor\\script_executor.py._validate_module_logic",
        "python\\script_executor\\__init__.py.__init__",
        "python\\script_executor\\__init__.py.execute",
        "python\\script_executor\\__init__.py.validate",
        "metrics\\alert_system\\alert_system.py.main",
        "metrics\\alert_system\\alert_system.py.__init__",
        "metrics\\alert_system\\alert_system.py.execute",
        "metrics\\alert_system\\alert_system.py._execute_module_logic",
        "metrics\\alert_system\\alert_system.py.validate",
        "metrics\\alert_system\\alert_system.py._validate_module_logic",
        "metrics\\alert_system\\migrated_alert_system.py.main",
        "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
        "metrics\\alert_system\\migrated_alert_system.py.__init__",
        "metrics\\alert_system\\migrated_alert_system.py.execute",
        "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
        "metrics\\alert_system\\migrated_alert_system.py.validate",
        "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
        "metrics\\alert_system\\__init__.py.__init__",
        "metrics\\alert_system\\__init__.py.execute",
        "metrics\\alert_system\\__init__.py.validate",
        "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
        "metrics\\dashboard_monitor\\dashboard_monitor.py.__init__",
        "metrics\\dashboard_monitor\\dashboard_monitor.py.execute",
        "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
        "metrics\\dashboard_monitor\\dashboard_monitor.py.validate",
        "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
        "metrics\\dashboard_monitor\\__init__.py.__init__",
        "metrics\\dashboard_monitor\\__init__.py.execute",
        "metrics\\dashboard_monitor\\__init__.py.validate",
        "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
        "metrics\\metrics_analyzer\\metrics_analyzer.py.__init__",
        "metrics\\metrics_analyzer\\metrics_analyzer.py.execute",
        "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
        "metrics\\metrics_analyzer\\metrics_analyzer.py.validate",
        "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.main",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.__init__",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
        "metrics\\metrics_analyzer\\__init__.py.__init__",
        "metrics\\metrics_analyzer\\__init__.py.execute",
        "metrics\\metrics_analyzer\\__init__.py.validate",
        "metrics\\metrics_collector\\metrics_collector.py.main",
        "metrics\\metrics_collector\\metrics_collector.py.__init__",
        "metrics\\metrics_collector\\metrics_collector.py.execute",
        "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
        "metrics\\metrics_collector\\metrics_collector.py.validate",
        "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
        "metrics\\metrics_collector\\migrated_metrics_system.py.main",
        "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
        "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
        "metrics\\metrics_collector\\__init__.py.__init__",
        "metrics\\metrics_collector\\__init__.py.execute",
        "metrics\\metrics_collector\\__init__.py.validate",
        "metrics\\metrics_reporter\\metrics_reporter.py.main",
        "metrics\\metrics_reporter\\metrics_reporter.py.__init__",
        "metrics\\metrics_reporter\\metrics_reporter.py.execute",
        "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
        "metrics\\metrics_reporter\\metrics_reporter.py.validate",
        "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
        "metrics\\metrics_reporter\\__init__.py.__init__",
        "metrics\\metrics_reporter\\__init__.py.execute",
        "metrics\\metrics_reporter\\__init__.py.validate",
        "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
        "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
        "metrics\\performance_monitor\\migrated_performance_monitor.py.__init__",
        "metrics\\performance_monitor\\migrated_performance_monitor.py.execute",
        "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
        "metrics\\performance_monitor\\migrated_performance_monitor.py.validate",
        "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
        "metrics\\performance_monitor\\performance_monitor.py.main",
        "metrics\\performance_monitor\\performance_monitor.py.__init__",
        "metrics\\performance_monitor\\performance_monitor.py.execute",
        "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
        "metrics\\performance_monitor\\performance_monitor.py.validate",
        "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
        "metrics\\performance_monitor\\__init__.py.__init__",
        "metrics\\performance_monitor\\__init__.py.execute",
        "metrics\\performance_monitor\\__init__.py.validate",
        "maps\\habdel_indexer\\habdel_indexer.py.main",
        "maps\\habdel_indexer\\habdel_indexer.py.__init__",
        "maps\\habdel_indexer\\habdel_indexer.py.execute",
        "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
        "maps\\habdel_indexer\\habdel_indexer.py.validate",
        "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.main",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.__init__",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.categorize_stories",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
        "maps\\habdel_indexer\\__init__.py.__init__",
        "maps\\habdel_indexer\\__init__.py.execute",
        "maps\\habdel_indexer\\__init__.py.validate",
        "maps\\map_optimizer\\map_optimizer.py.main",
        "maps\\map_optimizer\\map_optimizer.py.__init__",
        "maps\\map_optimizer\\map_optimizer.py.execute",
        "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
        "maps\\map_optimizer\\map_optimizer.py.validate",
        "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report",
        "maps\\map_optimizer\\__init__.py.__init__",
        "maps\\map_optimizer\\__init__.py.execute",
        "maps\\map_optimizer\\__init__.py.validate",
        "maps\\map_updater\\map_updater.py.main",
        "maps\\map_updater\\map_updater.py.__init__",
        "maps\\map_updater\\map_updater.py.execute",
        "maps\\map_updater\\map_updater.py._execute_module_logic",
        "maps\\map_updater\\map_updater.py.validate",
        "maps\\map_updater\\map_updater.py._validate_module_logic",
        "maps\\map_updater\\migrated_advanced_searcher.py.main",
        "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
        "maps\\map_updater\\migrated_advanced_searcher.py.__init__",
        "maps\\map_updater\\migrated_advanced_searcher.py.execute",
        "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
        "maps\\map_updater\\migrated_advanced_searcher.py.validate",
        "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
        "maps\\map_updater\\migrated_agent_integrator.py.main",
        "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
        "maps\\map_updater\\migrated_agent_integrator.py.__init__",
        "maps\\map_updater\\migrated_agent_integrator.py.execute",
        "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
        "maps\\map_updater\\migrated_agent_integrator.py.validate",
        "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
        "maps\\map_updater\\migrated_agent_monitor.py.main",
        "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
        "maps\\map_updater\\migrated_agent_monitor.py.__init__",
        "maps\\map_updater\\migrated_agent_monitor.py.execute",
        "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
        "maps\\map_updater\\migrated_agent_monitor.py.validate",
        "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
        "maps\\map_updater\\migrated_agent_optimizer.py.main",
        "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_agent_optimizer.py.__init__",
        "maps\\map_updater\\migrated_agent_optimizer.py.execute",
        "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
        "maps\\map_updater\\migrated_agent_optimizer.py.validate",
        "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
        "maps\\map_updater\\migrated_agent_orchestrator.py.main",
        "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
        "maps\\map_updater\\migrated_agent_orchestrator.py.__init__",
        "maps\\map_updater\\migrated_agent_orchestrator.py.execute",
        "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
        "maps\\map_updater\\migrated_agent_orchestrator.py.validate",
        "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
        "maps\\map_updater\\migrated_agent_specialist.py.main",
        "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
        "maps\\map_updater\\migrated_agent_specialist.py.__init__",
        "maps\\map_updater\\migrated_agent_specialist.py.execute",
        "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
        "maps\\map_updater\\migrated_agent_specialist.py.validate",
        "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
        "maps\\map_updater\\migrated_agent_validator.py.main",
        "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
        "maps\\map_updater\\migrated_agent_validator.py.__init__",
        "maps\\map_updater\\migrated_agent_validator.py.execute",
        "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
        "maps\\map_updater\\migrated_agent_validator.py.validate",
        "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
        "maps\\map_updater\\migrated_auto_updater.py.main",
        "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
        "maps\\map_updater\\migrated_auto_updater.py.__init__",
        "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
        "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
        "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
        "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
        "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
        "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
        "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
        "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
        "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
        "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.__init__",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.log",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary",
        "maps\\map_updater\\migrated_auto_update_system.py.main",
        "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
        "maps\\map_updater\\migrated_auto_update_system.py.start_system",
        "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
        "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
        "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
        "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
        "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
        "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
        "maps\\map_updater\\migrated_auto_update_system.py.process_change",
        "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
        "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
        "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
        "maps\\map_updater\\migrated_auto_update_system.py.measure_memory_usage",
        "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
        "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
        "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
        "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
        "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
        "maps\\map_updater\\migrated_auto_update_system.py.restart_system",
        "maps\\map_updater\\migrated_auto_update_system.py.stop_system",
        "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
        "maps\\map_updater\\migrated_auto_update_system.py.get_system_status",
        "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
        "maps\\map_updater\\migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_auto_update_system.py.get_system_status",
        "maps\\map_updater\\migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_auto_update_system.py.trigger_optimization",
        "maps\\map_updater\\migrated_auto_update_system.py.get_optimization_stats",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.__init__",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
        "maps\\map_updater\\migrated_code_analyzer.py.main",
        "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
        "maps\\map_updater\\migrated_code_analyzer.py.__init__",
        "maps\\map_updater\\migrated_code_analyzer.py.execute",
        "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
        "maps\\map_updater\\migrated_code_analyzer.py.validate",
        "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
        "maps\\map_updater\\migrated_code_optimizer.py.main",
        "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_code_optimizer.py.__init__",
        "maps\\map_updater\\migrated_code_optimizer.py.execute",
        "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
        "maps\\map_updater\\migrated_code_optimizer.py.validate",
        "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
        "maps\\map_updater\\migrated_config_manager.py.main",
        "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
        "maps\\map_updater\\migrated_config_manager.py.__init__",
        "maps\\map_updater\\migrated_config_manager.py.execute",
        "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
        "maps\\map_updater\\migrated_config_manager.py.validate",
        "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
        "maps\\map_updater\\migrated_consolidate_agents.py.main",
        "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
        "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
        "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
        "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report",
        "maps\\map_updater\\migrated_content_validator.py.main",
        "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
        "maps\\map_updater\\migrated_content_validator.py.__init__",
        "maps\\map_updater\\migrated_content_validator.py.execute",
        "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
        "maps\\map_updater\\migrated_content_validator.py.validate",
        "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
        "maps\\map_updater\\migrated_dashboard_monitor.py.main",
        "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
        "maps\\map_updater\\migrated_dashboard_monitor.py.__init__",
        "maps\\map_updater\\migrated_dashboard_monitor.py.execute",
        "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
        "maps\\map_updater\\migrated_dashboard_monitor.py.validate",
        "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
        "maps\\map_updater\\migrated_documentation_generator.py.main",
        "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
        "maps\\map_updater\\migrated_documentation_generator.py.__init__",
        "maps\\map_updater\\migrated_documentation_generator.py.execute",
        "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
        "maps\\map_updater\\migrated_documentation_generator.py.validate",
        "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
        "maps\\map_updater\\migrated_documentation_organizer.py.main",
        "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_documentation_organizer.py.__init__",
        "maps\\map_updater\\migrated_documentation_organizer.py.execute",
        "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
        "maps\\map_updater\\migrated_documentation_organizer.py.validate",
        "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
        "maps\\map_updater\\migrated_error_resolver.py.main",
        "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
        "maps\\map_updater\\migrated_error_resolver.py.__init__",
        "maps\\map_updater\\migrated_error_resolver.py.execute",
        "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
        "maps\\map_updater\\migrated_error_resolver.py.validate",
        "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
        "maps\\map_updater\\migrated_final_commit_verification.py.main",
        "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
        "maps\\map_updater\\migrated_final_commit_verification.py.__init__",
        "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
        "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
        "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
        "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
        "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
        "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
        "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
        "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
        "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
        "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
        "maps\\map_updater\\migrated_git_atomic_commits.py.main",
        "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
        "maps\\map_updater\\migrated_git_automation.py.main",
        "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
        "maps\\map_updater\\migrated_git_automation.py.__init__",
        "maps\\map_updater\\migrated_git_automation.py.execute",
        "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
        "maps\\map_updater\\migrated_git_automation.py.validate",
        "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
        "maps\\map_updater\\migrated_habdel_indexer.py.main",
        "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_habdel_indexer.py.__init__",
        "maps\\map_updater\\migrated_habdel_indexer.py.execute",
        "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_habdel_indexer.py.validate",
        "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_implement_smart_cache.py.main",
        "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
        "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
        "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
        "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
        "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
        "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
        "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
        "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
        "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
        "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache",
        "maps\\map_updater\\migrated_intelligent_navigator.py.main",
        "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
        "maps\\map_updater\\migrated_intelligent_navigator.py.__init__",
        "maps\\map_updater\\migrated_intelligent_navigator.py.execute",
        "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
        "maps\\map_updater\\migrated_intelligent_navigator.py.validate",
        "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
        "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
        "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
        "maps\\map_updater\\migrated_knowledge_consolidator.py.__init__",
        "maps\\map_updater\\migrated_knowledge_consolidator.py.execute",
        "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
        "maps\\map_updater\\migrated_knowledge_consolidator.py.validate",
        "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
        "maps\\map_updater\\migrated_log_manager.py.main",
        "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
        "maps\\map_updater\\migrated_log_manager.py.__init__",
        "maps\\map_updater\\migrated_log_manager.py.execute",
        "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
        "maps\\map_updater\\migrated_log_manager.py.validate",
        "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
        "maps\\map_updater\\migrated_map_optimizer.py.main",
        "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_map_optimizer.py.__init__",
        "maps\\map_updater\\migrated_map_optimizer.py.execute",
        "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
        "maps\\map_updater\\migrated_map_optimizer.py.validate",
        "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
        "maps\\map_updater\\migrated_map_updater.py.main",
        "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
        "maps\\map_updater\\migrated_map_updater.py.__init__",
        "maps\\map_updater\\migrated_map_updater.py.execute",
        "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
        "maps\\map_updater\\migrated_map_updater.py.validate",
        "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
        "maps\\map_updater\\migrated_map_validator.py.main",
        "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
        "maps\\map_updater\\migrated_map_validator.py.__init__",
        "maps\\map_updater\\migrated_map_validator.py.execute",
        "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
        "maps\\map_updater\\migrated_map_validator.py.validate",
        "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
        "maps\\map_updater\\migrated_markdown_processor.py.main",
        "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
        "maps\\map_updater\\migrated_markdown_processor.py.__init__",
        "maps\\map_updater\\migrated_markdown_processor.py.execute",
        "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
        "maps\\map_updater\\migrated_markdown_processor.py.validate",
        "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
        "maps\\map_updater\\migrated_metrics_analyzer.py.main",
        "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
        "maps\\map_updater\\migrated_metrics_analyzer.py.__init__",
        "maps\\map_updater\\migrated_metrics_analyzer.py.execute",
        "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
        "maps\\map_updater\\migrated_metrics_analyzer.py.validate",
        "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
        "maps\\map_updater\\migrated_metrics_collector.py.main",
        "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
        "maps\\map_updater\\migrated_metrics_collector.py.__init__",
        "maps\\map_updater\\migrated_metrics_collector.py.execute",
        "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
        "maps\\map_updater\\migrated_metrics_collector.py.validate",
        "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
        "maps\\map_updater\\migrated_metrics_reporter.py.main",
        "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
        "maps\\map_updater\\migrated_metrics_reporter.py.__init__",
        "maps\\map_updater\\migrated_metrics_reporter.py.execute",
        "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
        "maps\\map_updater\\migrated_metrics_reporter.py.validate",
        "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.__init__",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.__init__",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.execute",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.validate",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
        "maps\\map_updater\\migrated_migrated_alert_system.py.main",
        "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_alert_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_alert_system.py.execute",
        "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
        "maps\\map_updater\\migrated_migrated_alert_system.py.validate",
        "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.main",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.__init__",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.main",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.__init__",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.main",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_memory_usage",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.main",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_memory_usage",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.main",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.log",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.main",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_memory_usage",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.restart_system",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.stop_system",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_system_status",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_system_status",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_optimization",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_optimization_stats",
        "maps\\map_updater\\migrated_migrated_backup_system.py.main",
        "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_backup_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_backup_system.py.execute",
        "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
        "maps\\map_updater\\migrated_migrated_backup_system.py.validate",
        "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.__init__",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.main",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.execute",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.validate",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.main",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report",
        "maps\\map_updater\\migrated_migrated_context_detector.py.main",
        "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_context_detector.py.__init__",
        "maps\\map_updater\\migrated_migrated_context_detector.py.execute",
        "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
        "maps\\map_updater\\migrated_migrated_context_detector.py.validate",
        "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.__init__",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.__init__",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.main",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.__init__",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.main",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.__init__",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.__init__",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.main",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.main",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.__init__",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.__init__",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.main",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.__init__",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.__init__",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.main",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.__init__",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_relationships",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.main",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.__init__",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_ui_documents",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.main",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.__init__",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_lua_debugger",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.main",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.__init__",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_entries",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_line",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.__init__",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
        "maps\\map_updater\\migrated_modular_structure_creator.py.main",
        "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
        "maps\\map_updater\\migrated_modular_structure_creator.py.__init__",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
        "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
        "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
        "maps\\map_updater\\migrated_modules_indexer.py.main",
        "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_modules_indexer.py.__init__",
        "maps\\map_updater\\migrated_modules_indexer.py.execute",
        "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_modules_indexer.py.validate",
        "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.main",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.__init__",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_relationships",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.main",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.__init__",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_entries",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_line",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.__init__",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration",
        "maps\\map_updater\\migrated_python_agent.py.main",
        "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
        "maps\\map_updater\\migrated_python_agent.py.__init__",
        "maps\\map_updater\\migrated_python_agent.py.execute",
        "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
        "maps\\map_updater\\migrated_python_agent.py.validate",
        "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
        "maps\\map_updater\\migrated_recipe_manager.py.main",
        "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
        "maps\\map_updater\\migrated_recipe_manager.py.__init__",
        "maps\\map_updater\\migrated_recipe_manager.py.execute",
        "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
        "maps\\map_updater\\migrated_recipe_manager.py.validate",
        "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
        "maps\\map_updater\\migrated_research_manager.py.main",
        "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
        "maps\\map_updater\\migrated_research_manager.py.__init__",
        "maps\\map_updater\\migrated_research_manager.py.execute",
        "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
        "maps\\map_updater\\migrated_research_manager.py.validate",
        "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
        "maps\\map_updater\\migrated_resources_indexer.py.main",
        "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_resources_indexer.py.__init__",
        "maps\\map_updater\\migrated_resources_indexer.py.execute",
        "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_resources_indexer.py.validate",
        "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_script_executor.py.main",
        "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
        "maps\\map_updater\\migrated_script_executor.py.__init__",
        "maps\\map_updater\\migrated_script_executor.py.execute",
        "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
        "maps\\map_updater\\migrated_script_executor.py.validate",
        "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
        "maps\\map_updater\\migrated_script_migration_agent.py.main",
        "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
        "maps\\map_updater\\migrated_script_migration_agent.py.__init__",
        "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config",
        "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts",
        "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
        "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
        "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script",
        "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts",
        "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report",
        "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report",
        "maps\\map_updater\\migrated_source_analyzer.py.main",
        "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
        "maps\\map_updater\\migrated_source_analyzer.py.__init__",
        "maps\\map_updater\\migrated_source_analyzer.py.execute",
        "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
        "maps\\map_updater\\migrated_source_analyzer.py.validate",
        "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
        "maps\\map_updater\\migrated_source_indexer.py.main",
        "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_source_indexer.py.__init__",
        "maps\\map_updater\\migrated_source_indexer.py.execute",
        "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_source_indexer.py.validate",
        "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_styles_indexer.py.main",
        "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_styles_indexer.py.__init__",
        "maps\\map_updater\\migrated_styles_indexer.py.execute",
        "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_styles_indexer.py.validate",
        "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_tools_indexer.py.main",
        "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_tools_indexer.py.__init__",
        "maps\\map_updater\\migrated_tools_indexer.py.execute",
        "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_tools_indexer.py.validate",
        "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
        "maps\\map_updater\\migrated_update_bmad_maps.py.__init__",
        "maps\\map_updater\\migrated_update_readme.py.main",
        "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
        "maps\\map_updater\\migrated_update_readme.py.__init__",
        "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
        "maps\\map_updater\\migrated_update_readme.py.validate_functionality",
        "maps\\map_updater\\migrated_update_readme.py.validate_navigation",
        "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
        "maps\\map_updater\\migrated_wiki_expander.py.main",
        "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
        "maps\\map_updater\\migrated_wiki_expander.py.__init__",
        "maps\\map_updater\\migrated_wiki_expander.py.execute",
        "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
        "maps\\map_updater\\migrated_wiki_expander.py.validate",
        "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
        "maps\\map_updater\\migrated_wiki_fixer.py.main",
        "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
        "maps\\map_updater\\migrated_wiki_fixer.py.__init__",
        "maps\\map_updater\\migrated_wiki_fixer.py.execute",
        "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
        "maps\\map_updater\\migrated_wiki_fixer.py.validate",
        "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
        "maps\\map_updater\\migrated_wiki_indexer.py.main",
        "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
        "maps\\map_updater\\migrated_wiki_indexer.py.__init__",
        "maps\\map_updater\\migrated_wiki_indexer.py.execute",
        "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
        "maps\\map_updater\\migrated_wiki_indexer.py.validate",
        "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
        "maps\\map_updater\\migrated_wiki_optimizer.py.main",
        "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
        "maps\\map_updater\\migrated_wiki_optimizer.py.__init__",
        "maps\\map_updater\\migrated_wiki_optimizer.py.execute",
        "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
        "maps\\map_updater\\migrated_wiki_optimizer.py.validate",
        "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
        "maps\\map_updater\\migrated_workflow_manager.py.main",
        "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
        "maps\\map_updater\\migrated_workflow_manager.py.__init__",
        "maps\\map_updater\\migrated_workflow_manager.py.execute",
        "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
        "maps\\map_updater\\migrated_workflow_manager.py.validate",
        "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
        "maps\\map_updater\\migrated___init__.py.integrate_with_module",
        "maps\\map_updater\\migrated___init__.py.__init__",
        "maps\\map_updater\\migrated___init__.py.execute",
        "maps\\map_updater\\migrated___init__.py.validate",
        "maps\\map_updater\\__init__.py.__init__",
        "maps\\map_updater\\__init__.py.execute",
        "maps\\map_updater\\__init__.py.validate",
        "maps\\map_validator\\map_validator.py.main",
        "maps\\map_validator\\map_validator.py.__init__",
        "maps\\map_validator\\map_validator.py.execute",
        "maps\\map_validator\\map_validator.py._execute_module_logic",
        "maps\\map_validator\\map_validator.py.validate",
        "maps\\map_validator\\map_validator.py._validate_module_logic",
        "maps\\map_validator\\__init__.py.__init__",
        "maps\\map_validator\\__init__.py.execute",
        "maps\\map_validator\\__init__.py.validate",
        "maps\\modules_indexer\\migrated_update_modules_index.py.main",
        "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
        "maps\\modules_indexer\\migrated_update_modules_index.py.__init__",
        "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules",
        "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
        "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis",
        "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
        "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_module",
        "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules",
        "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
        "maps\\modules_indexer\\modules_indexer.py.main",
        "maps\\modules_indexer\\modules_indexer.py.__init__",
        "maps\\modules_indexer\\modules_indexer.py.execute",
        "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
        "maps\\modules_indexer\\modules_indexer.py.validate",
        "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
        "maps\\modules_indexer\\__init__.py.__init__",
        "maps\\modules_indexer\\__init__.py.execute",
        "maps\\modules_indexer\\__init__.py.validate",
        "maps\\resources_indexer\\migrated_update_resources_index.py.main",
        "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
        "maps\\resources_indexer\\migrated_update_resources_index.py.__init__",
        "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources",
        "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resource",
        "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata",
        "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata",
        "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata",
        "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata",
        "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
        "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources",
        "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
        "maps\\resources_indexer\\resources_indexer.py.main",
        "maps\\resources_indexer\\resources_indexer.py.__init__",
        "maps\\resources_indexer\\resources_indexer.py.execute",
        "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
        "maps\\resources_indexer\\resources_indexer.py.validate",
        "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
        "maps\\resources_indexer\\__init__.py.__init__",
        "maps\\resources_indexer\\__init__.py.execute",
        "maps\\resources_indexer\\__init__.py.validate",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.__init__",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_story_id",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_document",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run",
        "maps\\source_indexer\\migrated_update_source_index.py.main",
        "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
        "maps\\source_indexer\\migrated_update_source_index.py.__init__",
        "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
        "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
        "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
        "maps\\source_indexer\\source_indexer.py.main",
        "maps\\source_indexer\\source_indexer.py.__init__",
        "maps\\source_indexer\\source_indexer.py.execute",
        "maps\\source_indexer\\source_indexer.py._execute_module_logic",
        "maps\\source_indexer\\source_indexer.py.validate",
        "maps\\source_indexer\\source_indexer.py._validate_module_logic",
        "maps\\source_indexer\\__init__.py.__init__",
        "maps\\source_indexer\\__init__.py.execute",
        "maps\\source_indexer\\__init__.py.validate",
        "maps\\styles_indexer\\migrated_update_styles_index.py.main",
        "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
        "maps\\styles_indexer\\migrated_update_styles_index.py.__init__",
        "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
        "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties",
        "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type",
        "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties",
        "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
        "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style",
        "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles",
        "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
        "maps\\styles_indexer\\styles_indexer.py.main",
        "maps\\styles_indexer\\styles_indexer.py.__init__",
        "maps\\styles_indexer\\styles_indexer.py.execute",
        "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
        "maps\\styles_indexer\\styles_indexer.py.validate",
        "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
        "maps\\styles_indexer\\__init__.py.__init__",
        "maps\\styles_indexer\\__init__.py.execute",
        "maps\\styles_indexer\\__init__.py.validate",
        "maps\\tools_indexer\\migrated_update_tools_index.py.main",
        "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
        "maps\\tools_indexer\\migrated_update_tools_index.py.__init__",
        "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description",
        "maps\\tools_indexer\\migrated_update_tools_index.py.get_language",
        "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
        "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies",
        "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines",
        "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
        "maps\\tools_indexer\\tools_indexer.py.main",
        "maps\\tools_indexer\\tools_indexer.py.__init__",
        "maps\\tools_indexer\\tools_indexer.py.execute",
        "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
        "maps\\tools_indexer\\tools_indexer.py.validate",
        "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
        "maps\\tools_indexer\\__init__.py.__init__",
        "maps\\tools_indexer\\__init__.py.execute",
        "maps\\tools_indexer\\__init__.py.validate",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.__init__",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
        "maps\\wiki_indexer\\wiki_indexer.py.main",
        "maps\\wiki_indexer\\wiki_indexer.py.__init__",
        "maps\\wiki_indexer\\wiki_indexer.py.execute",
        "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
        "maps\\wiki_indexer\\wiki_indexer.py.validate",
        "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
        "maps\\wiki_indexer\\__init__.py.__init__",
        "maps\\wiki_indexer\\__init__.py.execute",
        "maps\\wiki_indexer\\__init__.py.validate",
        "documentation\\content_validator\\content_validator.py.main",
        "documentation\\content_validator\\content_validator.py.__init__",
        "documentation\\content_validator\\content_validator.py.execute",
        "documentation\\content_validator\\content_validator.py._execute_module_logic",
        "documentation\\content_validator\\content_validator.py.validate",
        "documentation\\content_validator\\content_validator.py._validate_module_logic",
        "documentation\\content_validator\\migrated_update_json_maps.py.main",
        "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
        "documentation\\content_validator\\migrated_update_json_maps.py.__init__",
        "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
        "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
        "documentation\\content_validator\\migrated_update_json_maps.py.get_priority",
        "documentation\\content_validator\\migrated_update_json_maps.py.get_description",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters",
        "documentation\\content_validator\\__init__.py.__init__",
        "documentation\\content_validator\\__init__.py.execute",
        "documentation\\content_validator\\__init__.py.validate",
        "documentation\\documentation_organizer\\documentation_organizer.py.main",
        "documentation\\documentation_organizer\\documentation_organizer.py.__init__",
        "documentation\\documentation_organizer\\documentation_organizer.py.execute",
        "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
        "documentation\\documentation_organizer\\documentation_organizer.py.validate",
        "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.__init__",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run",
        "documentation\\documentation_organizer\\__init__.py.__init__",
        "documentation\\documentation_organizer\\__init__.py.execute",
        "documentation\\documentation_organizer\\__init__.py.validate",
        "documentation\\markdown_processor\\markdown_processor.py.main",
        "documentation\\markdown_processor\\markdown_processor.py.__init__",
        "documentation\\markdown_processor\\markdown_processor.py.execute",
        "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
        "documentation\\markdown_processor\\markdown_processor.py.validate",
        "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
        "documentation\\markdown_processor\\migrated_remove_emojis.py.main",
        "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
        "documentation\\markdown_processor\\__init__.py.__init__",
        "documentation\\markdown_processor\\__init__.py.execute",
        "documentation\\markdown_processor\\__init__.py.validate",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.main",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.__init__",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents",
        "documentation\\wiki_expander\\wiki_expander.py.main",
        "documentation\\wiki_expander\\wiki_expander.py.__init__",
        "documentation\\wiki_expander\\wiki_expander.py.execute",
        "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
        "documentation\\wiki_expander\\wiki_expander.py.validate",
        "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
        "documentation\\wiki_expander\\__init__.py.__init__",
        "documentation\\wiki_expander\\__init__.py.execute",
        "documentation\\wiki_expander\\__init__.py.validate",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.__init__",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues",
        "documentation\\wiki_fixer\\wiki_fixer.py.main",
        "documentation\\wiki_fixer\\wiki_fixer.py.__init__",
        "documentation\\wiki_fixer\\wiki_fixer.py.execute",
        "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
        "documentation\\wiki_fixer\\wiki_fixer.py.validate",
        "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
        "documentation\\wiki_fixer\\__init__.py.__init__",
        "documentation\\wiki_fixer\\__init__.py.execute",
        "documentation\\wiki_fixer\\__init__.py.validate",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.main",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.__init__",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_ui_documents",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
        "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
        "documentation\\wiki_optimizer\\wiki_optimizer.py.__init__",
        "documentation\\wiki_optimizer\\wiki_optimizer.py.execute",
        "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
        "documentation\\wiki_optimizer\\wiki_optimizer.py.validate",
        "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
        "documentation\\wiki_optimizer\\__init__.py.__init__",
        "documentation\\wiki_optimizer\\__init__.py.execute",
        "documentation\\wiki_optimizer\\__init__.py.validate",
        "analysis\\advanced_searcher\\advanced_searcher.py.main",
        "analysis\\advanced_searcher\\advanced_searcher.py.__init__",
        "analysis\\advanced_searcher\\advanced_searcher.py.execute",
        "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
        "analysis\\advanced_searcher\\advanced_searcher.py.validate",
        "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
        "analysis\\advanced_searcher\\__init__.py.__init__",
        "analysis\\advanced_searcher\\__init__.py.execute",
        "analysis\\advanced_searcher\\__init__.py.validate",
        "analysis\\context_detector\\context_detector.py.main",
        "analysis\\context_detector\\context_detector.py.__init__",
        "analysis\\context_detector\\context_detector.py.execute",
        "analysis\\context_detector\\context_detector.py._execute_module_logic",
        "analysis\\context_detector\\context_detector.py.validate",
        "analysis\\context_detector\\context_detector.py._validate_module_logic",
        "analysis\\context_detector\\migrated_context_detector.py.main",
        "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
        "analysis\\context_detector\\migrated_context_detector.py.__init__",
        "analysis\\context_detector\\migrated_context_detector.py.execute",
        "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
        "analysis\\context_detector\\migrated_context_detector.py.validate",
        "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
        "analysis\\context_detector\\__init__.py.__init__",
        "analysis\\context_detector\\__init__.py.execute",
        "analysis\\context_detector\\__init__.py.validate",
        "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
        "analysis\\intelligent_navigator\\intelligent_navigator.py.__init__",
        "analysis\\intelligent_navigator\\intelligent_navigator.py.execute",
        "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
        "analysis\\intelligent_navigator\\intelligent_navigator.py.validate",
        "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
        "analysis\\intelligent_navigator\\__init__.py.__init__",
        "analysis\\intelligent_navigator\\__init__.py.execute",
        "analysis\\intelligent_navigator\\__init__.py.validate",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py.__init__",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py.execute",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py.validate",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge",
        "analysis\\knowledge_consolidator\\__init__.py.__init__",
        "analysis\\knowledge_consolidator\\__init__.py.execute",
        "analysis\\knowledge_consolidator\\__init__.py.validate",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.__init__",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_story_id",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_document",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.run",
        "analysis\\research_manager\\research_manager.py.main",
        "analysis\\research_manager\\research_manager.py.__init__",
        "analysis\\research_manager\\research_manager.py.execute",
        "analysis\\research_manager\\research_manager.py._execute_module_logic",
        "analysis\\research_manager\\research_manager.py.validate",
        "analysis\\research_manager\\research_manager.py._validate_module_logic",
        "analysis\\research_manager\\__init__.py.__init__",
        "analysis\\research_manager\\__init__.py.execute",
        "analysis\\research_manager\\__init__.py.validate",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.main",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.__init__",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_lua_debugger",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.__init__",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features",
        "analysis\\source_analyzer\\source_analyzer.py.main",
        "analysis\\source_analyzer\\source_analyzer.py.__init__",
        "analysis\\source_analyzer\\source_analyzer.py.execute",
        "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
        "analysis\\source_analyzer\\source_analyzer.py.validate",
        "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
        "analysis\\source_analyzer\\__init__.py.__init__",
        "analysis\\source_analyzer\\__init__.py.execute",
        "analysis\\source_analyzer\\__init__.py.validate",
        "agents\\agent_integrator\\agent_integrator.py.main",
        "agents\\agent_integrator\\agent_integrator.py.__init__",
        "agents\\agent_integrator\\agent_integrator.py.execute",
        "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
        "agents\\agent_integrator\\agent_integrator.py.validate",
        "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.__init__",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report",
        "agents\\agent_integrator\\__init__.py.__init__",
        "agents\\agent_integrator\\__init__.py.execute",
        "agents\\agent_integrator\\__init__.py.validate",
        "agents\\agent_monitor\\agent_monitor.py.main",
        "agents\\agent_monitor\\agent_monitor.py.__init__",
        "agents\\agent_monitor\\agent_monitor.py.execute",
        "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
        "agents\\agent_monitor\\agent_monitor.py.validate",
        "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
        "agents\\agent_monitor\\migrated_auto_monitor.py.main",
        "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
        "agents\\agent_monitor\\migrated_auto_monitor.py.__init__",
        "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity",
        "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes",
        "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time",
        "agents\\agent_monitor\\migrated_auto_monitor.py.measure_memory_usage",
        "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions",
        "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction",
        "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization",
        "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode",
        "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state",
        "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status",
        "agents\\agent_monitor\\__init__.py.__init__",
        "agents\\agent_monitor\\__init__.py.execute",
        "agents\\agent_monitor\\__init__.py.validate",
        "agents\\agent_optimizer\\agent_optimizer.py.main",
        "agents\\agent_optimizer\\agent_optimizer.py.__init__",
        "agents\\agent_optimizer\\agent_optimizer.py.execute",
        "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
        "agents\\agent_optimizer\\agent_optimizer.py.validate",
        "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
        "agents\\agent_optimizer\\__init__.py.__init__",
        "agents\\agent_optimizer\\__init__.py.execute",
        "agents\\agent_optimizer\\__init__.py.validate",
        "agents\\agent_orchestrator\\agent_orchestrator.py.main",
        "agents\\agent_orchestrator\\agent_orchestrator.py.__init__",
        "agents\\agent_orchestrator\\agent_orchestrator.py.execute",
        "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
        "agents\\agent_orchestrator\\agent_orchestrator.py.validate",
        "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.__init__",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.main",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.run",
        "agents\\agent_orchestrator\\migrated_analisador_erros.py.carregar_erros_existentes",
        "agents\\agent_orchestrator\\migrated_analisador_erros.py.registrar_erro",
        "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.main",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_color",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_emoji",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.get_path",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.log_message",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.run",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.__init__",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.__init__",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.graph_navigation",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_dependencies",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._get_recommendations",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.main",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.__init__",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.main",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.run",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_module_creator.py.__init__",
        "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
        "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
        "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content",
        "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content",
        "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content",
        "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
        "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
        "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code",
        "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.get_path",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.run",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.get_path",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code",
        "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.__init__",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.get_path",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.log_message",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.__init__",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules",
        "agents\\agent_orchestrator\\__init__.py.__init__",
        "agents\\agent_orchestrator\\__init__.py.execute",
        "agents\\agent_orchestrator\\__init__.py.validate",
        "agents\\agent_organizer\\agent_organizer.py.main",
        "agents\\agent_organizer\\agent_organizer.py.__init__",
        "agents\\agent_organizer\\agent_organizer.py.execute",
        "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
        "agents\\agent_organizer\\agent_organizer.py.validate",
        "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
        "agents\\agent_organizer\\migrated_agent_organizer.py.main",
        "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
        "agents\\agent_organizer\\migrated_agent_organizer.py.__init__",
        "agents\\agent_organizer\\migrated_agent_organizer.py.execute",
        "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
        "agents\\agent_organizer\\migrated_agent_organizer.py.validate",
        "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
        "agents\\agent_organizer\\__init__.py.__init__",
        "agents\\agent_organizer\\__init__.py.execute",
        "agents\\agent_organizer\\__init__.py.validate",
        "agents\\agent_specialist\\agent_specialist.py.main",
        "agents\\agent_specialist\\agent_specialist.py.__init__",
        "agents\\agent_specialist\\agent_specialist.py.execute",
        "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
        "agents\\agent_specialist\\agent_specialist.py.validate",
        "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation",
        "agents\\agent_specialist\\__init__.py.__init__",
        "agents\\agent_specialist\\__init__.py.execute",
        "agents\\agent_specialist\\__init__.py.validate",
        "agents\\agent_validator\\agent_validator.py.main",
        "agents\\agent_validator\\agent_validator.py.__init__",
        "agents\\agent_validator\\agent_validator.py.execute",
        "agents\\agent_validator\\agent_validator.py._execute_module_logic",
        "agents\\agent_validator\\agent_validator.py.validate",
        "agents\\agent_validator\\agent_validator.py._validate_module_logic",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.__init__",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report",
        "agents\\agent_validator\\__init__.py.__init__",
        "agents\\agent_validator\\__init__.py.execute",
        "agents\\agent_validator\\__init__.py.validate",
        "agents\\workflow_manager\\migrated_integration_workflow.py.main",
        "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
        "agents\\workflow_manager\\migrated_integration_workflow.py.__init__",
        "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
        "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_deployment",
        "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions",
        "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure",
        "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility",
        "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility",
        "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility",
        "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates",
        "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests",
        "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts",
        "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration",
        "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation",
        "agents\\workflow_manager\\migrated_integration_workflow.py._execute_deployment",
        "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.__init__",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results",
        "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
        "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module",
        "agents\\workflow_manager\\workflow_manager.py.main",
        "agents\\workflow_manager\\workflow_manager.py.__init__",
        "agents\\workflow_manager\\workflow_manager.py.execute",
        "agents\\workflow_manager\\workflow_manager.py._execute_module_logic",
        "agents\\workflow_manager\\workflow_manager.py.validate",
        "agents\\workflow_manager\\workflow_manager.py._validate_module_logic",
        "agents\\workflow_manager\\__init__.py.__init__",
        "agents\\workflow_manager\\__init__.py.execute",
        "agents\\workflow_manager\\__init__.py.validate"
      ],
      "classes": [
        "tools\\cleanup_system\\cleanup_system.py.CleanupsystemModule",
        "tools\\cleanup_system\\migrated_cleanup_system.py.CleanupsystemModule",
        "tools\\cleanup_system\\__init__.py.CleanupsystemModule",
        "tools\\config_manager\\config_manager.py.ConfigmanagerModule",
        "tools\\config_manager\\__init__.py.ConfigmanagerModule",
        "tools\\git_automation\\git_automation.py.GitautomationModule",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.PromptOptimization",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.ThoughtNode",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.PromptEvaluation",
        "tools\\git_automation\\migrated_advanced_prompt_system.py.AdvancedPromptSystem",
        "tools\\git_automation\\migrated_auto_learning_system.py.InteractionData",
        "tools\\git_automation\\migrated_auto_learning_system.py.LearningPattern",
        "tools\\git_automation\\migrated_auto_learning_system.py.AutoLearningSystem",
        "tools\\git_automation\\migrated_data_collector.py.InteractionRecord",
        "tools\\git_automation\\migrated_data_collector.py.DataCollector",
        "tools\\git_automation\\migrated_feedback_system.py.FeedbackRecord",
        "tools\\git_automation\\migrated_feedback_system.py.FeedbackAnalysis",
        "tools\\git_automation\\migrated_feedback_system.py.FeedbackSystem",
        "tools\\git_automation\\migrated_git_task_integration.py.GitTaskIntegration",
        "tools\\git_automation\\migrated_optimization_engine.py.OptimizationRule",
        "tools\\git_automation\\migrated_optimization_engine.py.OptimizationResult",
        "tools\\git_automation\\migrated_optimization_engine.py.OptimizationEngine",
        "tools\\git_automation\\migrated_prompt_evaluator.py.EvaluationResult",
        "tools\\git_automation\\migrated_prompt_evaluator.py.PromptEvaluator",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.PromptLearningPattern",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.PromptOptimizationResult",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.PromptLearningIntegration",
        "tools\\git_automation\\migrated_prompt_optimizer.py.OptimizationResult",
        "tools\\git_automation\\migrated_prompt_optimizer.py.PromptOptimizer",
        "tools\\git_automation\\migrated_rules_learning_integration.py.RuleLearningPattern",
        "tools\\git_automation\\migrated_rules_learning_integration.py.RuleOptimization",
        "tools\\git_automation\\migrated_rules_learning_integration.py.RulesLearningIntegration",
        "tools\\git_automation\\migrated_visualization_interface.py.VisualizationInterface",
        "tools\\git_automation\\__init__.py.GitautomationModule",
        "tools\\log_manager\\log_manager.py.LogmanagerModule",
        "tools\\log_manager\\migrated_centralize_logs.py.LogCentralizer",
        "tools\\log_manager\\__init__.py.LogmanagerModule",
        "python\\code_optimizer\\code_optimizer.py.CodeoptimizerModule",
        "python\\code_optimizer\\migrated_auto_optimizer.py.AutoOptimizer",
        "python\\code_optimizer\\__init__.py.CodeoptimizerModule",
        "python\\error_resolver\\error_resolver.py.ErrorresolverModule",
        "python\\error_resolver\\migrated_python_error_resolver.py.PythonErrorResolver",
        "python\\error_resolver\\__init__.py.ErrorresolverModule",
        "python\\recipe_manager\\migrated_task_automation_system.py.TaskAutomationSystem",
        "python\\recipe_manager\\recipe_manager.py.RecipemanagerModule",
        "python\\recipe_manager\\__init__.py.RecipemanagerModule",
        "python\\script_executor\\migrated_script_execution_manager.py.ScriptExecutionManager",
        "python\\script_executor\\script_executor.py.ScriptexecutorModule",
        "python\\script_executor\\__init__.py.ScriptexecutorModule",
        "metrics\\alert_system\\alert_system.py.AlertsystemModule",
        "metrics\\alert_system\\migrated_alert_system.py.AlertsystemModule",
        "metrics\\alert_system\\__init__.py.AlertsystemModule",
        "maps\\map_updater\\migrated_auto_update_system.py.AutoOptimizer",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.CanaryAnalysisPreparator",
        "maps\\map_updater\\migrated_code_optimizer.py.CodeoptimizerModule",
        "maps\\map_updater\\migrated_config_manager.py.ConfigmanagerModule",
        "maps\\map_updater\\migrated_content_validator.py.ContentvalidatorModule",
        "maps\\map_updater\\migrated_error_resolver.py.ErrorresolverModule",
        "maps\\map_updater\\migrated_final_commit_verification.py.FinalCommitVerification",
        "maps\\map_updater\\migrated_git_automation.py.GitautomationModule",
        "maps\\map_updater\\migrated_implement_smart_cache.py.SmartCacheManager",
        "maps\\map_updater\\migrated_intelligent_navigator.py.IntelligentnavigatorModule",
        "maps\\map_updater\\migrated_knowledge_consolidator.py.KnowledgeconsolidatorModule",
        "maps\\map_updater\\migrated_log_manager.py.LogmanagerModule",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.AAACompatibilityFixer",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.AAAIntegrationValidator",
        "maps\\map_updater\\migrated_migrated_alert_system.py.AlertsystemModule",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.AutoOptimizer",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.AutoOptimizer",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.CanaryAnalysisPreparator",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.LogCentralizer",
        "maps\\map_updater\\migrated_migrated_cleanup_system.py.CleanupsystemModule",
        "maps\\map_updater\\migrated_migrated_final_commit_verification.py.FinalCommitVerification",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.GitTaskIntegration",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.SmartCacheManager",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.IntelligentNavigationSystem",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.KnowledgeConsolidationSystem",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.ModuleStructureCreator",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.TokenOptimizer",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.CanaryIntegrationPreparer",
        "maps\\map_updater\\migrated_modular_structure_creator.py.ModuleStructureCreator",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.TokenOptimizer",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.CanaryIntegrationPreparer",
        "maps\\map_updater\\migrated_recipe_manager.py.RecipemanagerModule",
        "maps\\map_updater\\migrated_script_executor.py.ScriptexecutorModule",
        "documentation\\content_validator\\content_validator.py.ContentvalidatorModule",
        "documentation\\content_validator\\__init__.py.ContentvalidatorModule",
        "analysis\\intelligent_navigator\\intelligent_navigator.py.IntelligentnavigatorModule",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.IntelligentNavigationSystem",
        "analysis\\intelligent_navigator\\__init__.py.IntelligentnavigatorModule",
        "analysis\\knowledge_consolidator\\knowledge_consolidator.py.KnowledgeconsolidatorModule",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.KnowledgeConsolidationSystem",
        "analysis\\knowledge_consolidator\\__init__.py.KnowledgeconsolidatorModule",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.PatternMatch",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.PatternCluster",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.AAACompatibilityFixer",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.AAAIntegrationValidator"
      ]
    },
    "tools": {
      "functions": [
        "tools\\config_manager\\migrated_update_context_system.py.get_key_files",
        "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory",
        "tools\\file_mover\\migrated_file_mover.py.move_file",
        "tools\\file_mover\\migrated_file_mover.py.move_files",
        "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file",
        "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
        "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files",
        "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
        "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
        "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
        "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
        "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
        "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
        "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
        "tools\\log_manager\\migrated_centralize_logs.py.categorize_file",
        "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
        "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
        "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
        "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
        "maps\\map_updater\\migrated_auto_update_system.py.restore_backups",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
        "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
        "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
        "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
        "maps\\map_updater\\migrated_update_readme.py.count_files",
        "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files",
        "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
        "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
        "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools",
        "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool",
        "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info",
        "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
        "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files",
        "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions",
        "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.create_file_safely",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.create_file_safely",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.create_file_safely",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.create_file_safely"
      ],
      "classes": [
        "tools\\backup_system\\backup_system.py.BackupsystemModule",
        "tools\\backup_system\\migrated_backup_system.py.BackupsystemModule",
        "tools\\backup_system\\__init__.py.BackupsystemModule",
        "tools\\file_mover\\file_mover.py.FilemoverModule",
        "tools\\file_mover\\migrated_file_mover.py.FileMover",
        "tools\\file_mover\\__init__.py.FilemoverModule",
        "maps\\map_updater\\migrated_migrated_backup_system.py.BackupsystemModule",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.OTClientDebugTools",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.OTClientDebugTools"
      ]
    },
    "maps": {
      "functions": [
        "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
        "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
        "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback",
        "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules",
        "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
        "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
        "python\\python_agent\\migrated_python_agent_system.py.update_error_log",
        "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress",
        "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes",
        "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
        "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
        "maps\\map_updater\\migrated_auto_updater.py.update_maps",
        "maps\\map_updater\\migrated_auto_updater.py.update_rules",
        "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
        "maps\\map_updater\\migrated_auto_updater.py.update_context",
        "maps\\map_updater\\migrated_auto_updater.py.update_performance",
        "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
        "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
        "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
        "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
        "maps\\map_updater\\migrated_auto_updater.py.get_update_stats",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
        "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
        "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
        "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
        "maps\\map_updater\\migrated_auto_update_system.py.trigger_auto_update",
        "maps\\map_updater\\migrated_auto_update_system.py.get_update_stats",
        "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_auto_update",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_update_stats",
        "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
        "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
        "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_tags_index",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
        "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
        "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_tags_index",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
        "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps",
        "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
        "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
        "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
        "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config",
        "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
        "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
        "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
        "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps",
        "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics",
        "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
        "maps\\map_updater\\migrated_update_readme.py.run_full_update",
        "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
        "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
        "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
        "maps\\modules_indexer\\migrated_update_modules_index.py.update_index",
        "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
        "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
        "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
        "maps\\resources_indexer\\migrated_update_resources_index.py.update_index",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
        "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
        "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
        "maps\\source_indexer\\migrated_update_source_index.py.save_index",
        "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
        "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
        "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
        "maps\\styles_indexer\\migrated_update_styles_index.py.update_index",
        "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index",
        "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
        "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
        "maps\\tools_indexer\\migrated_update_tools_index.py.update_index",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
        "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
        "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
        "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
        "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap",
        "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps"
      ],
      "classes": [
        "tools\\config_manager\\migrated_update_context_system.py.ContextSystemUpdater",
        "maps\\habdel_indexer\\habdel_indexer.py.HabdelindexerModule",
        "maps\\habdel_indexer\\migrated_update_habdel_index.py.HabdelIndexer",
        "maps\\habdel_indexer\\__init__.py.HabdelindexerModule",
        "maps\\map_optimizer\\map_optimizer.py.MapoptimizerModule",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py.JSONMapOptimizer",
        "maps\\map_optimizer\\__init__.py.MapoptimizerModule",
        "maps\\map_updater\\map_updater.py.MapupdaterModule",
        "maps\\map_updater\\migrated_auto_updater.py.AutoUpdater",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.AutoMapUpdater",
        "maps\\map_updater\\migrated_auto_update_system.py.AutoUpdateSystem",
        "maps\\map_updater\\migrated_auto_update_system.py.AutoUpdater",
        "maps\\map_updater\\migrated_habdel_indexer.py.HabdelindexerModule",
        "maps\\map_updater\\migrated_map_optimizer.py.MapoptimizerModule",
        "maps\\map_updater\\migrated_map_updater.py.MapupdaterModule",
        "maps\\map_updater\\migrated_map_validator.py.MapvalidatorModule",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.AutoUpdater",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.AutoMapUpdater",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.AutoUpdateSystem",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.AutoUpdater",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.JSONMapOptimizer",
        "maps\\map_updater\\migrated_modules_indexer.py.ModulesindexerModule",
        "maps\\map_updater\\migrated_resources_indexer.py.ResourcesindexerModule",
        "maps\\map_updater\\migrated_source_indexer.py.SourceindexerModule",
        "maps\\map_updater\\migrated_styles_indexer.py.StylesindexerModule",
        "maps\\map_updater\\migrated_tools_indexer.py.ToolsindexerModule",
        "maps\\map_updater\\migrated_update_bmad_maps.py.BMADMapUpdater",
        "maps\\map_updater\\migrated_update_readme.py.READMEUpdater",
        "maps\\map_updater\\migrated_wiki_indexer.py.WikiindexerModule",
        "maps\\map_updater\\__init__.py.MapupdaterModule",
        "maps\\map_validator\\map_validator.py.MapvalidatorModule",
        "maps\\map_validator\\__init__.py.MapvalidatorModule",
        "maps\\modules_indexer\\migrated_update_modules_index.py.ModulesIndexer",
        "maps\\modules_indexer\\modules_indexer.py.ModulesindexerModule",
        "maps\\modules_indexer\\__init__.py.ModulesindexerModule",
        "maps\\resources_indexer\\migrated_update_resources_index.py.ResourcesIndexer",
        "maps\\resources_indexer\\resources_indexer.py.ResourcesindexerModule",
        "maps\\resources_indexer\\__init__.py.ResourcesindexerModule",
        "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.NavigationIndexGenerator",
        "maps\\source_indexer\\migrated_update_source_index.py.SourceIndexer",
        "maps\\source_indexer\\source_indexer.py.SourceindexerModule",
        "maps\\source_indexer\\__init__.py.SourceindexerModule",
        "maps\\styles_indexer\\migrated_update_styles_index.py.StylesIndexer",
        "maps\\styles_indexer\\styles_indexer.py.StylesindexerModule",
        "maps\\styles_indexer\\__init__.py.StylesindexerModule",
        "maps\\tools_indexer\\migrated_update_tools_index.py.ToolsIndexer",
        "maps\\tools_indexer\\tools_indexer.py.ToolsindexerModule",
        "maps\\tools_indexer\\__init__.py.ToolsindexerModule",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.WikiJSONUpdater",
        "maps\\wiki_indexer\\wiki_indexer.py.WikiindexerModule",
        "maps\\wiki_indexer\\__init__.py.WikiindexerModule",
        "documentation\\content_validator\\migrated_update_json_maps.py.WikiJSONUpdater",
        "analysis\\research_manager\\migrated_navigation_index_generator.py.NavigationIndexGenerator"
      ]
    },
    "analysis": {
      "functions": [
        "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure",
        "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
        "tools\\config_manager\\migrated_update_context_system.py.get_context_switching",
        "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency",
        "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
        "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns",
        "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
        "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment",
        "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
        "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
        "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score",
        "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
        "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness",
        "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns",
        "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability",
        "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords",
        "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
        "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
        "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
        "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
        "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
        "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
        "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
        "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
        "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
        "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes",
        "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
        "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
        "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
        "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
        "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
        "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns",
        "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
        "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
        "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
        "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
        "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module",
        "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource",
        "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
        "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool",
        "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
        "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
        "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump",
        "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns",
        "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance",
        "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution",
        "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
        "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module",
        "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content",
        "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns",
        "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns",
        "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns",
        "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity"
      ],
      "classes": [
        "python\\code_analyzer\\code_analyzer.py.CodeanalyzerModule",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.NavigationOptimizationAnalyzer",
        "python\\code_analyzer\\__init__.py.CodeanalyzerModule",
        "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.CursorPerformanceAnalyzer",
        "maps\\map_updater\\migrated_advanced_searcher.py.AdvancedsearcherModule",
        "maps\\map_updater\\migrated_code_analyzer.py.CodeanalyzerModule",
        "maps\\map_updater\\migrated_migrated_advanced_search_system.py.AdvancedSearchSystem",
        "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.CursorPerformanceAnalyzer",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.NavigationOptimizationAnalyzer",
        "maps\\map_updater\\migrated_migrated_context_detector.py.ContextdetectorModule",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.EnhancedContextAnalyzer",
        "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.OTClientLogAnalyzer",
        "maps\\map_updater\\migrated_otclient_log_analyzer.py.OTClientLogAnalyzer",
        "maps\\map_updater\\migrated_research_manager.py.ResearchmanagerModule",
        "maps\\map_updater\\migrated_source_analyzer.py.SourceanalyzerModule",
        "analysis\\advanced_searcher\\advanced_searcher.py.AdvancedsearcherModule",
        "analysis\\advanced_searcher\\migrated_advanced_search_system.py.AdvancedSearchSystem",
        "analysis\\advanced_searcher\\__init__.py.AdvancedsearcherModule",
        "analysis\\context_detector\\context_detector.py.ContextdetectorModule",
        "analysis\\context_detector\\migrated_context_detector.py.ContextdetectorModule",
        "analysis\\context_detector\\__init__.py.ContextdetectorModule",
        "analysis\\research_manager\\research_manager.py.ResearchmanagerModule",
        "analysis\\research_manager\\__init__.py.ResearchmanagerModule",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py.PatternAnalyzer",
        "analysis\\source_analyzer\\source_analyzer.py.SourceanalyzerModule",
        "analysis\\source_analyzer\\__init__.py.SourceanalyzerModule",
        "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.DeepSourceAnalyzer",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.EnhancedContextAnalyzer"
      ]
    },
    "documentation": {
      "functions": [
        "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories",
        "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
        "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
        "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
        "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_api_documentation",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation"
      ],
      "classes": [
        "python\\documentation_generator\\documentation_generator.py.DocumentationgeneratorModule",
        "python\\documentation_generator\\__init__.py.DocumentationgeneratorModule",
        "maps\\map_updater\\migrated_documentation_generator.py.DocumentationgeneratorModule",
        "maps\\map_updater\\migrated_documentation_organizer.py.DocumentationorganizerModule",
        "maps\\map_updater\\migrated_markdown_processor.py.MarkdownprocessorModule",
        "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.WikiExpander",
        "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.WikiFixer",
        "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.HabdelWikiIntegration",
        "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.WikiOptimizer",
        "maps\\map_updater\\migrated_wiki_expander.py.WikiexpanderModule",
        "maps\\map_updater\\migrated_wiki_fixer.py.WikifixerModule",
        "maps\\map_updater\\migrated_wiki_optimizer.py.WikioptimizerModule",
        "documentation\\documentation_organizer\\documentation_organizer.py.DocumentationorganizerModule",
        "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.HabdelWikiIntegration",
        "documentation\\documentation_organizer\\__init__.py.DocumentationorganizerModule",
        "documentation\\markdown_processor\\markdown_processor.py.MarkdownprocessorModule",
        "documentation\\markdown_processor\\__init__.py.MarkdownprocessorModule",
        "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.WikiExpander",
        "documentation\\wiki_expander\\wiki_expander.py.WikiexpanderModule",
        "documentation\\wiki_expander\\__init__.py.WikiexpanderModule",
        "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.WikiFixer",
        "documentation\\wiki_fixer\\wiki_fixer.py.WikifixerModule",
        "documentation\\wiki_fixer\\__init__.py.WikifixerModule",
        "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.WikiOptimizer",
        "documentation\\wiki_optimizer\\wiki_optimizer.py.WikioptimizerModule",
        "documentation\\wiki_optimizer\\__init__.py.WikioptimizerModule"
      ]
    },
    "metrics": {
      "functions": [
        "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
        "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
        "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html",
        "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
        "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
        "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
        "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
        "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
        "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
        "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
        "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
        "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
        "maps\\map_updater\\migrated_auto_update_system.py.start_monitoring",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
        "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_monitoring",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop",
        "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.stop_monitoring",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric"
      ],
      "classes": [
        "tools\\git_automation\\migrated_prompt_evaluator.py.PromptMetrics",
        "metrics\\dashboard_monitor\\dashboard_monitor.py.DashboardmonitorModule",
        "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.DashboardMonitoring",
        "metrics\\dashboard_monitor\\__init__.py.DashboardmonitorModule",
        "metrics\\metrics_analyzer\\metrics_analyzer.py.MetricsanalyzerModule",
        "metrics\\metrics_analyzer\\__init__.py.MetricsanalyzerModule",
        "metrics\\metrics_collector\\metrics_collector.py.MetricscollectorModule",
        "metrics\\metrics_collector\\migrated_metrics_system.py.MetricsSystem",
        "metrics\\metrics_collector\\__init__.py.MetricscollectorModule",
        "metrics\\metrics_reporter\\metrics_reporter.py.MetricsreporterModule",
        "metrics\\metrics_reporter\\__init__.py.MetricsreporterModule",
        "metrics\\performance_monitor\\migrated_performance_monitor.py.PerformancemonitorModule",
        "metrics\\performance_monitor\\performance_monitor.py.PerformancemonitorModule",
        "metrics\\performance_monitor\\__init__.py.PerformancemonitorModule",
        "maps\\map_updater\\migrated_auto_update_system.py.AutoMonitor",
        "maps\\map_updater\\migrated_dashboard_monitor.py.DashboardmonitorModule",
        "maps\\map_updater\\migrated_metrics_analyzer.py.MetricsanalyzerModule",
        "maps\\map_updater\\migrated_metrics_collector.py.MetricscollectorModule",
        "maps\\map_updater\\migrated_metrics_reporter.py.MetricsreporterModule",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAMetrics",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.QualityMonitor",
        "maps\\map_updater\\migrated_migrated_auto_monitor.py.AutoMonitor",
        "maps\\map_updater\\migrated_migrated_auto_update_system.py.AutoMonitor",
        "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.DashboardMonitoring",
        "maps\\map_updater\\migrated_migrated_metrics_system.py.MetricsSystem",
        "maps\\map_updater\\migrated_migrated_performance_monitor.py.PerformanceMonitor",
        "agents\\agent_monitor\\migrated_auto_monitor.py.AutoMonitor",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAMetrics",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.QualityMonitor"
      ]
    },
    "agents": {
      "functions": [
        "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
        "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
        "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
        "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
        "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
        "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
        "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration",
        "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow",
        "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents",
        "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows",
        "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup",
        "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows",
        "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase"
      ],
      "classes": [
        "python\\python_agent\\migrated_python_agent_system.py.PythonAgent",
        "python\\python_agent\\python_agent.py.PythonagentModule",
        "python\\python_agent\\__init__.py.PythonagentModule",
        "maps\\map_updater\\migrated_agent_integrator.py.AgentintegratorModule",
        "maps\\map_updater\\migrated_agent_monitor.py.AgentmonitorModule",
        "maps\\map_updater\\migrated_agent_optimizer.py.AgentoptimizerModule",
        "maps\\map_updater\\migrated_agent_orchestrator.py.AgentorchestratorModule",
        "maps\\map_updater\\migrated_agent_specialist.py.AgentspecialistModule",
        "maps\\map_updater\\migrated_agent_validator.py.AgentvalidatorModule",
        "maps\\map_updater\\migrated_consolidate_agents.py.AgentConsolidator",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAAgentSpecializationSystem",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAAgent",
        "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.AAAWorkflow",
        "maps\\map_updater\\migrated_migrated_agent_organizer.py.AgentorganizerModule",
        "maps\\map_updater\\migrated_migrated_consolidate_agents.py.AgentConsolidator",
        "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.EnhancedIntelligentOrchestrator",
        "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.IntelligentOrchestrator",
        "maps\\map_updater\\migrated_python_agent.py.PythonagentModule",
        "maps\\map_updater\\migrated_script_migration_agent.py.ScriptMigrationAgent",
        "maps\\map_updater\\migrated_workflow_manager.py.WorkflowmanagerModule",
        "maps\\map_updater\\migrated___init__.py.WorkflowmanagerModule",
        "agents\\agent_integrator\\agent_integrator.py.AgentintegratorModule",
        "agents\\agent_integrator\\__init__.py.AgentintegratorModule",
        "agents\\agent_monitor\\agent_monitor.py.AgentmonitorModule",
        "agents\\agent_monitor\\__init__.py.AgentmonitorModule",
        "agents\\agent_optimizer\\agent_optimizer.py.AgentoptimizerModule",
        "agents\\agent_optimizer\\__init__.py.AgentoptimizerModule",
        "agents\\agent_orchestrator\\agent_orchestrator.py.AgentorchestratorModule",
        "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.AgentsOrchestrator",
        "agents\\agent_orchestrator\\migrated_alert_agent.py.AlertAgent",
        "agents\\agent_orchestrator\\migrated_code_generator_agent.py.CodeGeneratorAgent",
        "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.CoverageValidationAgent",
        "agents\\agent_orchestrator\\migrated_dashboard_agent.py.DashboardAgent",
        "agents\\agent_orchestrator\\migrated_documentation_agent.py.DocumentationAgent",
        "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.EducationalValidationAgent",
        "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.EnhancedIntelligentOrchestrator",
        "agents\\agent_orchestrator\\migrated_file_organization_agent.py.FileOrganizationAgent",
        "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.FinalCleanupAgent",
        "agents\\agent_orchestrator\\migrated_git_automation_agent.py.GitAutomationAgentFixed",
        "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.IntegratedNavigationAgent",
        "agents\\agent_orchestrator\\migrated_integration_agent.py.IntegrationAgent",
        "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.IntegrationPlanningAgent",
        "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.IntelligentOrganizationAgent",
        "agents\\agent_orchestrator\\migrated_knowledge_manager.py.KnowledgeManagerAgent",
        "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.MaintenancePlanningAgent",
        "agents\\agent_orchestrator\\migrated_metrics_agent.py.MetricsAgent",
        "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.MetricsValidationAgent",
        "agents\\agent_orchestrator\\migrated_module_creator.py.ModuleCreatorAgent",
        "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.NavigationValidationAgent",
        "agents\\agent_orchestrator\\migrated_professor_agent.py.ProfessorAgent",
        "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.ProgressTrackerAgent",
        "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.QualityAssuranceAgent",
        "agents\\agent_orchestrator\\migrated_researcher_agent.py.ResearcherAgent",
        "agents\\agent_orchestrator\\migrated_task_master_agent.py.TaskMasterAgent",
        "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.TaskSupervisorAgent",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.WorkflowOrchestratorAgent",
        "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.WorkflowOrchestrator",
        "agents\\agent_orchestrator\\__init__.py.AgentorchestratorModule",
        "agents\\agent_organizer\\agent_organizer.py.AgentorganizerModule",
        "agents\\agent_organizer\\migrated_agent_organizer.py.AgentorganizerModule",
        "agents\\agent_organizer\\__init__.py.AgentorganizerModule",
        "agents\\agent_specialist\\agent_specialist.py.AgentspecialistModule",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAAgentSpecializationSystem",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAAgent",
        "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.AAAWorkflow",
        "agents\\agent_specialist\\__init__.py.AgentspecialistModule",
        "agents\\agent_validator\\agent_validator.py.AgentvalidatorModule",
        "agents\\agent_validator\\__init__.py.AgentvalidatorModule",
        "agents\\workflow_manager\\migrated_integration_workflow.py.IntegrationWorkflow",
        "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.IntelligentOrchestrator",
        "agents\\workflow_manager\\workflow_manager.py.WorkflowmanagerModule",
        "agents\\workflow_manager\\__init__.py.WorkflowmanagerModule"
      ]
    }
  },
  "by_type": {
    "function": [
      "tools\\backup_system\\backup_system.py.main",
      "tools\\backup_system\\backup_system.py.execute",
      "tools\\backup_system\\backup_system.py.validate",
      "tools\\backup_system\\migrated_backup_system.py.main",
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\backup_system\\migrated_backup_system.py.execute",
      "tools\\backup_system\\migrated_backup_system.py.validate",
      "tools\\backup_system\\__init__.py.execute",
      "tools\\backup_system\\__init__.py.validate",
      "tools\\cleanup_system\\cleanup_system.py.main",
      "tools\\cleanup_system\\cleanup_system.py.execute",
      "tools\\cleanup_system\\cleanup_system.py.validate",
      "tools\\cleanup_system\\migrated_cleanup_system.py.main",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.execute",
      "tools\\cleanup_system\\migrated_cleanup_system.py.validate",
      "tools\\cleanup_system\\__init__.py.execute",
      "tools\\cleanup_system\\__init__.py.validate",
      "tools\\config_manager\\config_manager.py.main",
      "tools\\config_manager\\config_manager.py.execute",
      "tools\\config_manager\\config_manager.py.validate",
      "tools\\config_manager\\migrated_update_context_system.py.main",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure",
      "tools\\config_manager\\migrated_update_context_system.py.get_key_files",
      "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories",
      "tools\\config_manager\\migrated_update_context_system.py.get_source_components",
      "tools\\config_manager\\migrated_update_context_system.py.get_module_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_data_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_config",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
      "tools\\config_manager\\migrated_update_context_system.py.get_integration_status",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns",
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching",
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
      "tools\\config_manager\\migrated_update_context_system.py.generate_report",
      "tools\\config_manager\\__init__.py.execute",
      "tools\\config_manager\\__init__.py.validate",
      "tools\\file_mover\\file_mover.py.main",
      "tools\\file_mover\\file_mover.py.execute",
      "tools\\file_mover\\file_mover.py.validate",
      "tools\\file_mover\\migrated_file_mover.py.load_config",
      "tools\\file_mover\\migrated_file_mover.py.save_config",
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode",
      "tools\\file_mover\\migrated_file_mover.py.main",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory",
      "tools\\file_mover\\migrated_file_mover.py.validate_paths",
      "tools\\file_mover\\migrated_file_mover.py.move_file",
      "tools\\file_mover\\migrated_file_mover.py.move_files",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.main",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
      "tools\\file_mover\\__init__.py.execute",
      "tools\\file_mover\\__init__.py.validate",
      "tools\\git_automation\\git_automation.py.main",
      "tools\\git_automation\\git_automation.py.execute",
      "tools\\git_automation\\git_automation.py.validate",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.load_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_auto_learning_system.py.shutdown",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
      "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_create_module_simple.py.main",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.init_database",
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
      "tools\\git_automation\\migrated_data_collector.py.save_interaction",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction",
      "tools\\git_automation\\migrated_data_collector.py.get_interactions",
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats",
      "tools\\git_automation\\migrated_data_collector.py.add_feedback",
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.record_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback",
      "tools\\git_automation\\migrated_git_task_integration.py.main",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt",
      "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate",
      "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_learning_log",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_learning_log",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations",
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize",
      "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats",
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_usage_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_usage_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
      "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.record_rule_usage",
      "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart",
      "tools\\git_automation\\__init__.py.execute",
      "tools\\git_automation\\__init__.py.validate",
      "tools\\log_manager\\log_manager.py.main",
      "tools\\log_manager\\log_manager.py.execute",
      "tools\\log_manager\\log_manager.py.validate",
      "tools\\log_manager\\migrated_centralize_logs.py.main",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "tools\\log_manager\\migrated_centralize_logs.py.categorize_file",
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report",
      "tools\\log_manager\\__init__.py.execute",
      "tools\\log_manager\\__init__.py.validate",
      "python\\code_analyzer\\code_analyzer.py.main",
      "python\\code_analyzer\\code_analyzer.py.execute",
      "python\\code_analyzer\\code_analyzer.py.validate",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.main",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "python\\code_analyzer\\__init__.py.execute",
      "python\\code_analyzer\\__init__.py.validate",
      "python\\code_optimizer\\code_optimizer.py.main",
      "python\\code_optimizer\\code_optimizer.py.execute",
      "python\\code_optimizer\\code_optimizer.py.validate",
      "python\\code_optimizer\\migrated_auto_optimizer.py.main",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_memory_usage",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
      "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
      "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
      "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats",
      "python\\code_optimizer\\__init__.py.execute",
      "python\\code_optimizer\\__init__.py.validate",
      "python\\documentation_generator\\documentation_generator.py.main",
      "python\\documentation_generator\\documentation_generator.py.execute",
      "python\\documentation_generator\\documentation_generator.py.validate",
      "python\\documentation_generator\\__init__.py.execute",
      "python\\documentation_generator\\__init__.py.validate",
      "python\\error_resolver\\error_resolver.py.main",
      "python\\error_resolver\\error_resolver.py.execute",
      "python\\error_resolver\\error_resolver.py.validate",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path",
      "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration",
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution",
      "python\\error_resolver\\__init__.py.execute",
      "python\\error_resolver\\__init__.py.validate",
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.load_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.load_improvement_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_improvement_log",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.update_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_imports",
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "python\\python_agent\\python_agent.py.main",
      "python\\python_agent\\python_agent.py.execute",
      "python\\python_agent\\python_agent.py.validate",
      "python\\python_agent\\__init__.py.execute",
      "python\\python_agent\\__init__.py.validate",
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task",
      "python\\recipe_manager\\recipe_manager.py.main",
      "python\\recipe_manager\\recipe_manager.py.execute",
      "python\\recipe_manager\\recipe_manager.py.validate",
      "python\\recipe_manager\\__init__.py.execute",
      "python\\recipe_manager\\__init__.py.validate",
      "python\\script_executor\\migrated_script_execution_manager.py.main",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report",
      "python\\script_executor\\migrated_script_execution_manager.py.log_execution",
      "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats",
      "python\\script_executor\\script_executor.py.main",
      "python\\script_executor\\script_executor.py.execute",
      "python\\script_executor\\script_executor.py.validate",
      "python\\script_executor\\__init__.py.execute",
      "python\\script_executor\\__init__.py.validate",
      "metrics\\alert_system\\alert_system.py.main",
      "metrics\\alert_system\\alert_system.py.execute",
      "metrics\\alert_system\\alert_system.py.validate",
      "metrics\\alert_system\\migrated_alert_system.py.main",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\alert_system\\migrated_alert_system.py.execute",
      "metrics\\alert_system\\migrated_alert_system.py.validate",
      "metrics\\alert_system\\__init__.py.execute",
      "metrics\\alert_system\\__init__.py.validate",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.execute",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.validate",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "metrics\\dashboard_monitor\\__init__.py.execute",
      "metrics\\dashboard_monitor\\__init__.py.validate",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.execute",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.validate",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.main",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
      "metrics\\metrics_analyzer\\__init__.py.execute",
      "metrics\\metrics_analyzer\\__init__.py.validate",
      "metrics\\metrics_collector\\metrics_collector.py.main",
      "metrics\\metrics_collector\\metrics_collector.py.execute",
      "metrics\\metrics_collector\\metrics_collector.py.validate",
      "metrics\\metrics_collector\\migrated_metrics_system.py.main",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "metrics\\metrics_collector\\__init__.py.execute",
      "metrics\\metrics_collector\\__init__.py.validate",
      "metrics\\metrics_reporter\\metrics_reporter.py.main",
      "metrics\\metrics_reporter\\metrics_reporter.py.execute",
      "metrics\\metrics_reporter\\metrics_reporter.py.validate",
      "metrics\\metrics_reporter\\__init__.py.execute",
      "metrics\\metrics_reporter\\__init__.py.validate",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.execute",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.validate",
      "metrics\\performance_monitor\\performance_monitor.py.main",
      "metrics\\performance_monitor\\performance_monitor.py.execute",
      "metrics\\performance_monitor\\performance_monitor.py.validate",
      "metrics\\performance_monitor\\__init__.py.execute",
      "metrics\\performance_monitor\\__init__.py.validate",
      "maps\\habdel_indexer\\habdel_indexer.py.main",
      "maps\\habdel_indexer\\habdel_indexer.py.execute",
      "maps\\habdel_indexer\\habdel_indexer.py.validate",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.main",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.categorize_stories",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
      "maps\\habdel_indexer\\__init__.py.execute",
      "maps\\habdel_indexer\\__init__.py.validate",
      "maps\\map_optimizer\\map_optimizer.py.main",
      "maps\\map_optimizer\\map_optimizer.py.execute",
      "maps\\map_optimizer\\map_optimizer.py.validate",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_optimizer\\__init__.py.execute",
      "maps\\map_optimizer\\__init__.py.validate",
      "maps\\map_updater\\map_updater.py.main",
      "maps\\map_updater\\map_updater.py.execute",
      "maps\\map_updater\\map_updater.py.validate",
      "maps\\map_updater\\migrated_advanced_searcher.py.main",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.execute",
      "maps\\map_updater\\migrated_advanced_searcher.py.validate",
      "maps\\map_updater\\migrated_agent_integrator.py.main",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.execute",
      "maps\\map_updater\\migrated_agent_integrator.py.validate",
      "maps\\map_updater\\migrated_agent_monitor.py.main",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.execute",
      "maps\\map_updater\\migrated_agent_monitor.py.validate",
      "maps\\map_updater\\migrated_agent_optimizer.py.main",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.execute",
      "maps\\map_updater\\migrated_agent_optimizer.py.validate",
      "maps\\map_updater\\migrated_agent_orchestrator.py.main",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.execute",
      "maps\\map_updater\\migrated_agent_orchestrator.py.validate",
      "maps\\map_updater\\migrated_agent_specialist.py.main",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.execute",
      "maps\\map_updater\\migrated_agent_specialist.py.validate",
      "maps\\map_updater\\migrated_agent_validator.py.main",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.execute",
      "maps\\map_updater\\migrated_agent_validator.py.validate",
      "maps\\map_updater\\migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.log",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_auto_update_system.py.get_system_status",
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_auto_update_system.py.start_monitoring",
      "maps\\map_updater\\migrated_auto_update_system.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_update_system.py.get_update_stats",
      "maps\\map_updater\\migrated_auto_update_system.py.trigger_optimization",
      "maps\\map_updater\\migrated_auto_update_system.py.get_optimization_stats",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_code_analyzer.py.main",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.execute",
      "maps\\map_updater\\migrated_code_analyzer.py.validate",
      "maps\\map_updater\\migrated_code_optimizer.py.main",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.execute",
      "maps\\map_updater\\migrated_code_optimizer.py.validate",
      "maps\\map_updater\\migrated_config_manager.py.main",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.execute",
      "maps\\map_updater\\migrated_config_manager.py.validate",
      "maps\\map_updater\\migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_content_validator.py.main",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.execute",
      "maps\\map_updater\\migrated_content_validator.py.validate",
      "maps\\map_updater\\migrated_dashboard_monitor.py.main",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.execute",
      "maps\\map_updater\\migrated_dashboard_monitor.py.validate",
      "maps\\map_updater\\migrated_documentation_generator.py.main",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.execute",
      "maps\\map_updater\\migrated_documentation_generator.py.validate",
      "maps\\map_updater\\migrated_documentation_organizer.py.main",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.execute",
      "maps\\map_updater\\migrated_documentation_organizer.py.validate",
      "maps\\map_updater\\migrated_error_resolver.py.main",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.execute",
      "maps\\map_updater\\migrated_error_resolver.py.validate",
      "maps\\map_updater\\migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.main",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.execute",
      "maps\\map_updater\\migrated_git_automation.py.validate",
      "maps\\map_updater\\migrated_habdel_indexer.py.main",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.execute",
      "maps\\map_updater\\migrated_habdel_indexer.py.validate",
      "maps\\map_updater\\migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_intelligent_navigator.py.main",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.execute",
      "maps\\map_updater\\migrated_intelligent_navigator.py.validate",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.execute",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.validate",
      "maps\\map_updater\\migrated_log_manager.py.main",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.execute",
      "maps\\map_updater\\migrated_log_manager.py.validate",
      "maps\\map_updater\\migrated_map_optimizer.py.main",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.execute",
      "maps\\map_updater\\migrated_map_optimizer.py.validate",
      "maps\\map_updater\\migrated_map_updater.py.main",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.execute",
      "maps\\map_updater\\migrated_map_updater.py.validate",
      "maps\\map_updater\\migrated_map_validator.py.main",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.execute",
      "maps\\map_updater\\migrated_map_validator.py.validate",
      "maps\\map_updater\\migrated_markdown_processor.py.main",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.execute",
      "maps\\map_updater\\migrated_markdown_processor.py.validate",
      "maps\\map_updater\\migrated_metrics_analyzer.py.main",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.execute",
      "maps\\map_updater\\migrated_metrics_analyzer.py.validate",
      "maps\\map_updater\\migrated_metrics_collector.py.main",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.execute",
      "maps\\map_updater\\migrated_metrics_collector.py.validate",
      "maps\\map_updater\\migrated_metrics_reporter.py.main",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.execute",
      "maps\\map_updater\\migrated_metrics_reporter.py.validate",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.execute",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.validate",
      "maps\\map_updater\\migrated_migrated_alert_system.py.main",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.execute",
      "maps\\map_updater\\migrated_migrated_alert_system.py.validate",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.main",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.log",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_backup_system.py.main",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_backup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.main",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_migrated_context_detector.py.main",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.execute",
      "maps\\map_updater\\migrated_migrated_context_detector.py.validate",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.main",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.main",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_lua_debugger",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_modules_indexer.py.main",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.execute",
      "maps\\map_updater\\migrated_modules_indexer.py.validate",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_python_agent.py.main",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.execute",
      "maps\\map_updater\\migrated_python_agent.py.validate",
      "maps\\map_updater\\migrated_recipe_manager.py.main",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.execute",
      "maps\\map_updater\\migrated_recipe_manager.py.validate",
      "maps\\map_updater\\migrated_research_manager.py.main",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.execute",
      "maps\\map_updater\\migrated_research_manager.py.validate",
      "maps\\map_updater\\migrated_resources_indexer.py.main",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.execute",
      "maps\\map_updater\\migrated_resources_indexer.py.validate",
      "maps\\map_updater\\migrated_script_executor.py.main",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.execute",
      "maps\\map_updater\\migrated_script_executor.py.validate",
      "maps\\map_updater\\migrated_script_migration_agent.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report",
      "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report",
      "maps\\map_updater\\migrated_source_analyzer.py.main",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_analyzer.py.execute",
      "maps\\map_updater\\migrated_source_analyzer.py.validate",
      "maps\\map_updater\\migrated_source_indexer.py.main",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.execute",
      "maps\\map_updater\\migrated_source_indexer.py.validate",
      "maps\\map_updater\\migrated_styles_indexer.py.main",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.execute",
      "maps\\map_updater\\migrated_styles_indexer.py.validate",
      "maps\\map_updater\\migrated_tools_indexer.py.main",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.execute",
      "maps\\map_updater\\migrated_tools_indexer.py.validate",
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps",
      "maps\\map_updater\\migrated_update_readme.py.main",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.count_files",
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics",
      "maps\\map_updater\\migrated_update_readme.py.validate_navigation",
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
      "maps\\map_updater\\migrated_update_readme.py.run_full_update",
      "maps\\map_updater\\migrated_wiki_expander.py.main",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.execute",
      "maps\\map_updater\\migrated_wiki_expander.py.validate",
      "maps\\map_updater\\migrated_wiki_fixer.py.main",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.execute",
      "maps\\map_updater\\migrated_wiki_fixer.py.validate",
      "maps\\map_updater\\migrated_wiki_indexer.py.main",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.execute",
      "maps\\map_updater\\migrated_wiki_indexer.py.validate",
      "maps\\map_updater\\migrated_wiki_optimizer.py.main",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.execute",
      "maps\\map_updater\\migrated_wiki_optimizer.py.validate",
      "maps\\map_updater\\migrated_workflow_manager.py.main",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.execute",
      "maps\\map_updater\\migrated_workflow_manager.py.validate",
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.execute",
      "maps\\map_updater\\migrated___init__.py.validate",
      "maps\\map_updater\\__init__.py.execute",
      "maps\\map_updater\\__init__.py.validate",
      "maps\\map_validator\\map_validator.py.main",
      "maps\\map_validator\\map_validator.py.execute",
      "maps\\map_validator\\map_validator.py.validate",
      "maps\\map_validator\\__init__.py.execute",
      "maps\\map_validator\\__init__.py.validate",
      "maps\\modules_indexer\\migrated_update_modules_index.py.main",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.update_index",
      "maps\\modules_indexer\\modules_indexer.py.main",
      "maps\\modules_indexer\\modules_indexer.py.execute",
      "maps\\modules_indexer\\modules_indexer.py.validate",
      "maps\\modules_indexer\\__init__.py.execute",
      "maps\\modules_indexer\\__init__.py.validate",
      "maps\\resources_indexer\\migrated_update_resources_index.py.main",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resource",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.update_index",
      "maps\\resources_indexer\\resources_indexer.py.main",
      "maps\\resources_indexer\\resources_indexer.py.execute",
      "maps\\resources_indexer\\resources_indexer.py.validate",
      "maps\\resources_indexer\\__init__.py.execute",
      "maps\\resources_indexer\\__init__.py.validate",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_story_id",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_document",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run",
      "maps\\source_indexer\\migrated_update_source_index.py.main",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index",
      "maps\\source_indexer\\source_indexer.py.main",
      "maps\\source_indexer\\source_indexer.py.execute",
      "maps\\source_indexer\\source_indexer.py.validate",
      "maps\\source_indexer\\__init__.py.execute",
      "maps\\source_indexer\\__init__.py.validate",
      "maps\\styles_indexer\\migrated_update_styles_index.py.main",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.update_index",
      "maps\\styles_indexer\\styles_indexer.py.main",
      "maps\\styles_indexer\\styles_indexer.py.execute",
      "maps\\styles_indexer\\styles_indexer.py.validate",
      "maps\\styles_indexer\\__init__.py.execute",
      "maps\\styles_indexer\\__init__.py.validate",
      "maps\\tools_indexer\\migrated_update_tools_index.py.main",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description",
      "maps\\tools_indexer\\migrated_update_tools_index.py.get_language",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies",
      "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.update_index",
      "maps\\tools_indexer\\tools_indexer.py.main",
      "maps\\tools_indexer\\tools_indexer.py.execute",
      "maps\\tools_indexer\\tools_indexer.py.validate",
      "maps\\tools_indexer\\__init__.py.execute",
      "maps\\tools_indexer\\__init__.py.validate",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
      "maps\\wiki_indexer\\wiki_indexer.py.main",
      "maps\\wiki_indexer\\wiki_indexer.py.execute",
      "maps\\wiki_indexer\\wiki_indexer.py.validate",
      "maps\\wiki_indexer\\__init__.py.execute",
      "maps\\wiki_indexer\\__init__.py.validate",
      "documentation\\content_validator\\content_validator.py.main",
      "documentation\\content_validator\\content_validator.py.execute",
      "documentation\\content_validator\\content_validator.py.validate",
      "documentation\\content_validator\\migrated_update_json_maps.py.main",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_priority",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_description",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files",
      "documentation\\content_validator\\__init__.py.execute",
      "documentation\\content_validator\\__init__.py.validate",
      "documentation\\documentation_organizer\\documentation_organizer.py.main",
      "documentation\\documentation_organizer\\documentation_organizer.py.execute",
      "documentation\\documentation_organizer\\documentation_organizer.py.validate",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run",
      "documentation\\documentation_organizer\\__init__.py.execute",
      "documentation\\documentation_organizer\\__init__.py.validate",
      "documentation\\markdown_processor\\markdown_processor.py.main",
      "documentation\\markdown_processor\\markdown_processor.py.execute",
      "documentation\\markdown_processor\\markdown_processor.py.validate",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.main",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
      "documentation\\markdown_processor\\__init__.py.execute",
      "documentation\\markdown_processor\\__init__.py.validate",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.main",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "documentation\\wiki_expander\\wiki_expander.py.main",
      "documentation\\wiki_expander\\wiki_expander.py.execute",
      "documentation\\wiki_expander\\wiki_expander.py.validate",
      "documentation\\wiki_expander\\__init__.py.execute",
      "documentation\\wiki_expander\\__init__.py.validate",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues",
      "documentation\\wiki_fixer\\wiki_fixer.py.main",
      "documentation\\wiki_fixer\\wiki_fixer.py.execute",
      "documentation\\wiki_fixer\\wiki_fixer.py.validate",
      "documentation\\wiki_fixer\\__init__.py.execute",
      "documentation\\wiki_fixer\\__init__.py.validate",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.main",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.execute",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.validate",
      "documentation\\wiki_optimizer\\__init__.py.execute",
      "documentation\\wiki_optimizer\\__init__.py.validate",
      "analysis\\advanced_searcher\\advanced_searcher.py.main",
      "analysis\\advanced_searcher\\advanced_searcher.py.execute",
      "analysis\\advanced_searcher\\advanced_searcher.py.validate",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\advanced_searcher\\__init__.py.execute",
      "analysis\\advanced_searcher\\__init__.py.validate",
      "analysis\\context_detector\\context_detector.py.main",
      "analysis\\context_detector\\context_detector.py.execute",
      "analysis\\context_detector\\context_detector.py.validate",
      "analysis\\context_detector\\migrated_context_detector.py.main",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.execute",
      "analysis\\context_detector\\migrated_context_detector.py.validate",
      "analysis\\context_detector\\__init__.py.execute",
      "analysis\\context_detector\\__init__.py.validate",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.execute",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.validate",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\intelligent_navigator\\__init__.py.execute",
      "analysis\\intelligent_navigator\\__init__.py.validate",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.execute",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.validate",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "analysis\\knowledge_consolidator\\__init__.py.execute",
      "analysis\\knowledge_consolidator\\__init__.py.validate",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_story_id",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_document",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.run",
      "analysis\\research_manager\\research_manager.py.main",
      "analysis\\research_manager\\research_manager.py.execute",
      "analysis\\research_manager\\research_manager.py.validate",
      "analysis\\research_manager\\__init__.py.execute",
      "analysis\\research_manager\\__init__.py.validate",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.main",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_lua_debugger",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "analysis\\source_analyzer\\source_analyzer.py.main",
      "analysis\\source_analyzer\\source_analyzer.py.execute",
      "analysis\\source_analyzer\\source_analyzer.py.validate",
      "analysis\\source_analyzer\\__init__.py.execute",
      "analysis\\source_analyzer\\__init__.py.validate",
      "agents\\agent_integrator\\agent_integrator.py.main",
      "agents\\agent_integrator\\agent_integrator.py.execute",
      "agents\\agent_integrator\\agent_integrator.py.validate",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "agents\\agent_integrator\\__init__.py.execute",
      "agents\\agent_integrator\\__init__.py.validate",
      "agents\\agent_monitor\\agent_monitor.py.main",
      "agents\\agent_monitor\\agent_monitor.py.execute",
      "agents\\agent_monitor\\agent_monitor.py.validate",
      "agents\\agent_monitor\\migrated_auto_monitor.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging",
      "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes",
      "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_memory_usage",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status",
      "agents\\agent_monitor\\__init__.py.execute",
      "agents\\agent_monitor\\__init__.py.validate",
      "agents\\agent_optimizer\\agent_optimizer.py.main",
      "agents\\agent_optimizer\\agent_optimizer.py.execute",
      "agents\\agent_optimizer\\agent_optimizer.py.validate",
      "agents\\agent_optimizer\\__init__.py.execute",
      "agents\\agent_optimizer\\__init__.py.validate",
      "agents\\agent_orchestrator\\agent_orchestrator.py.main",
      "agents\\agent_orchestrator\\agent_orchestrator.py.execute",
      "agents\\agent_orchestrator\\agent_orchestrator.py.validate",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.main",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.run",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.carregar_erros_existentes",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.registrar_erro",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.main",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_color",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_emoji",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.get_path",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.log_message",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_api_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.run",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.graph_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.main",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.main",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.run",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.stop_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows",
      "agents\\agent_orchestrator\\__init__.py.execute",
      "agents\\agent_orchestrator\\__init__.py.validate",
      "agents\\agent_organizer\\agent_organizer.py.main",
      "agents\\agent_organizer\\agent_organizer.py.execute",
      "agents\\agent_organizer\\agent_organizer.py.validate",
      "agents\\agent_organizer\\migrated_agent_organizer.py.main",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.execute",
      "agents\\agent_organizer\\migrated_agent_organizer.py.validate",
      "agents\\agent_organizer\\__init__.py.execute",
      "agents\\agent_organizer\\__init__.py.validate",
      "agents\\agent_specialist\\agent_specialist.py.main",
      "agents\\agent_specialist\\agent_specialist.py.execute",
      "agents\\agent_specialist\\agent_specialist.py.validate",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation",
      "agents\\agent_specialist\\__init__.py.execute",
      "agents\\agent_specialist\\__init__.py.validate",
      "agents\\agent_validator\\agent_validator.py.main",
      "agents\\agent_validator\\agent_validator.py.execute",
      "agents\\agent_validator\\agent_validator.py.validate",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report",
      "agents\\agent_validator\\__init__.py.execute",
      "agents\\agent_validator\\__init__.py.validate",
      "agents\\workflow_manager\\migrated_integration_workflow.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\workflow_manager.py.main",
      "agents\\workflow_manager\\workflow_manager.py.execute",
      "agents\\workflow_manager\\workflow_manager.py.validate",
      "agents\\workflow_manager\\__init__.py.execute",
      "agents\\workflow_manager\\__init__.py.validate"
    ],
    "magic_method": [
      "tools\\backup_system\\backup_system.py.__init__",
      "tools\\backup_system\\migrated_backup_system.py.__init__",
      "tools\\backup_system\\__init__.py.__init__",
      "tools\\cleanup_system\\cleanup_system.py.__init__",
      "tools\\cleanup_system\\migrated_cleanup_system.py.__init__",
      "tools\\cleanup_system\\__init__.py.__init__",
      "tools\\config_manager\\config_manager.py.__init__",
      "tools\\config_manager\\migrated_update_context_system.py.__init__",
      "tools\\config_manager\\__init__.py.__init__",
      "tools\\file_mover\\file_mover.py.__init__",
      "tools\\file_mover\\migrated_file_mover.py.__init__",
      "tools\\file_mover\\__init__.py.__init__",
      "tools\\git_automation\\git_automation.py.__init__",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.__init__",
      "tools\\git_automation\\migrated_auto_learning_system.py.__init__",
      "tools\\git_automation\\migrated_data_collector.py.__init__",
      "tools\\git_automation\\migrated_feedback_system.py.__init__",
      "tools\\git_automation\\migrated_git_task_integration.py.__init__",
      "tools\\git_automation\\migrated_optimization_engine.py.__init__",
      "tools\\git_automation\\migrated_prompt_evaluator.py.__init__",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.__init__",
      "tools\\git_automation\\migrated_prompt_optimizer.py.__init__",
      "tools\\git_automation\\migrated_rules_learning_integration.py.__init__",
      "tools\\git_automation\\migrated_visualization_interface.py.__init__",
      "tools\\git_automation\\__init__.py.__init__",
      "tools\\log_manager\\log_manager.py.__init__",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "tools\\log_manager\\__init__.py.__init__",
      "python\\code_analyzer\\code_analyzer.py.__init__",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.__init__",
      "python\\code_analyzer\\__init__.py.__init__",
      "python\\code_optimizer\\code_optimizer.py.__init__",
      "python\\code_optimizer\\migrated_auto_optimizer.py.__init__",
      "python\\code_optimizer\\__init__.py.__init__",
      "python\\documentation_generator\\documentation_generator.py.__init__",
      "python\\documentation_generator\\__init__.py.__init__",
      "python\\error_resolver\\error_resolver.py.__init__",
      "python\\error_resolver\\migrated_python_error_resolver.py.__init__",
      "python\\error_resolver\\__init__.py.__init__",
      "python\\python_agent\\migrated_python_agent_system.py.__init__",
      "python\\python_agent\\python_agent.py.__init__",
      "python\\python_agent\\__init__.py.__init__",
      "python\\recipe_manager\\migrated_task_automation_system.py.__init__",
      "python\\recipe_manager\\recipe_manager.py.__init__",
      "python\\recipe_manager\\__init__.py.__init__",
      "python\\script_executor\\migrated_script_execution_manager.py.__init__",
      "python\\script_executor\\script_executor.py.__init__",
      "python\\script_executor\\__init__.py.__init__",
      "metrics\\alert_system\\alert_system.py.__init__",
      "metrics\\alert_system\\migrated_alert_system.py.__init__",
      "metrics\\alert_system\\__init__.py.__init__",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\__init__.py.__init__",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.__init__",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.__init__",
      "metrics\\metrics_analyzer\\__init__.py.__init__",
      "metrics\\metrics_collector\\metrics_collector.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\__init__.py.__init__",
      "metrics\\metrics_reporter\\metrics_reporter.py.__init__",
      "metrics\\metrics_reporter\\__init__.py.__init__",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.__init__",
      "metrics\\performance_monitor\\performance_monitor.py.__init__",
      "metrics\\performance_monitor\\__init__.py.__init__",
      "maps\\habdel_indexer\\habdel_indexer.py.__init__",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.__init__",
      "maps\\habdel_indexer\\__init__.py.__init__",
      "maps\\map_optimizer\\map_optimizer.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_optimizer\\__init__.py.__init__",
      "maps\\map_updater\\map_updater.py.__init__",
      "maps\\map_updater\\migrated_advanced_searcher.py.__init__",
      "maps\\map_updater\\migrated_agent_integrator.py.__init__",
      "maps\\map_updater\\migrated_agent_monitor.py.__init__",
      "maps\\map_updater\\migrated_agent_optimizer.py.__init__",
      "maps\\map_updater\\migrated_agent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_agent_specialist.py.__init__",
      "maps\\map_updater\\migrated_agent_validator.py.__init__",
      "maps\\map_updater\\migrated_auto_updater.py.__init__",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.__init__",
      "maps\\map_updater\\migrated_auto_update_system.py.__init__",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.__init__",
      "maps\\map_updater\\migrated_code_analyzer.py.__init__",
      "maps\\map_updater\\migrated_code_optimizer.py.__init__",
      "maps\\map_updater\\migrated_config_manager.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_content_validator.py.__init__",
      "maps\\map_updater\\migrated_dashboard_monitor.py.__init__",
      "maps\\map_updater\\migrated_documentation_generator.py.__init__",
      "maps\\map_updater\\migrated_documentation_organizer.py.__init__",
      "maps\\map_updater\\migrated_error_resolver.py.__init__",
      "maps\\map_updater\\migrated_final_commit_verification.py.__init__",
      "maps\\map_updater\\migrated_git_automation.py.__init__",
      "maps\\map_updater\\migrated_habdel_indexer.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_intelligent_navigator.py.__init__",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.__init__",
      "maps\\map_updater\\migrated_log_manager.py.__init__",
      "maps\\map_updater\\migrated_map_optimizer.py.__init__",
      "maps\\map_updater\\migrated_map_updater.py.__init__",
      "maps\\map_updater\\migrated_map_validator.py.__init__",
      "maps\\map_updater\\migrated_markdown_processor.py.__init__",
      "maps\\map_updater\\migrated_metrics_analyzer.py.__init__",
      "maps\\map_updater\\migrated_metrics_collector.py.__init__",
      "maps\\map_updater\\migrated_metrics_reporter.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.__init__",
      "maps\\map_updater\\migrated_migrated_alert_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.__init__",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_backup_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_context_detector.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.__init__",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.__init__",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.__init__",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.__init__",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.__init__",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.__init__",
      "maps\\map_updater\\migrated_modular_structure_creator.py.__init__",
      "maps\\map_updater\\migrated_modules_indexer.py.__init__",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.__init__",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.__init__",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.__init__",
      "maps\\map_updater\\migrated_python_agent.py.__init__",
      "maps\\map_updater\\migrated_recipe_manager.py.__init__",
      "maps\\map_updater\\migrated_research_manager.py.__init__",
      "maps\\map_updater\\migrated_resources_indexer.py.__init__",
      "maps\\map_updater\\migrated_script_executor.py.__init__",
      "maps\\map_updater\\migrated_script_migration_agent.py.__init__",
      "maps\\map_updater\\migrated_source_analyzer.py.__init__",
      "maps\\map_updater\\migrated_source_indexer.py.__init__",
      "maps\\map_updater\\migrated_styles_indexer.py.__init__",
      "maps\\map_updater\\migrated_tools_indexer.py.__init__",
      "maps\\map_updater\\migrated_update_bmad_maps.py.__init__",
      "maps\\map_updater\\migrated_update_readme.py.__init__",
      "maps\\map_updater\\migrated_wiki_expander.py.__init__",
      "maps\\map_updater\\migrated_wiki_fixer.py.__init__",
      "maps\\map_updater\\migrated_wiki_indexer.py.__init__",
      "maps\\map_updater\\migrated_wiki_optimizer.py.__init__",
      "maps\\map_updater\\migrated_workflow_manager.py.__init__",
      "maps\\map_updater\\migrated___init__.py.__init__",
      "maps\\map_updater\\__init__.py.__init__",
      "maps\\map_validator\\map_validator.py.__init__",
      "maps\\map_validator\\__init__.py.__init__",
      "maps\\modules_indexer\\migrated_update_modules_index.py.__init__",
      "maps\\modules_indexer\\modules_indexer.py.__init__",
      "maps\\modules_indexer\\__init__.py.__init__",
      "maps\\resources_indexer\\migrated_update_resources_index.py.__init__",
      "maps\\resources_indexer\\resources_indexer.py.__init__",
      "maps\\resources_indexer\\__init__.py.__init__",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.__init__",
      "maps\\source_indexer\\migrated_update_source_index.py.__init__",
      "maps\\source_indexer\\source_indexer.py.__init__",
      "maps\\source_indexer\\__init__.py.__init__",
      "maps\\styles_indexer\\migrated_update_styles_index.py.__init__",
      "maps\\styles_indexer\\styles_indexer.py.__init__",
      "maps\\styles_indexer\\__init__.py.__init__",
      "maps\\tools_indexer\\migrated_update_tools_index.py.__init__",
      "maps\\tools_indexer\\tools_indexer.py.__init__",
      "maps\\tools_indexer\\__init__.py.__init__",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.__init__",
      "maps\\wiki_indexer\\wiki_indexer.py.__init__",
      "maps\\wiki_indexer\\__init__.py.__init__",
      "documentation\\content_validator\\content_validator.py.__init__",
      "documentation\\content_validator\\migrated_update_json_maps.py.__init__",
      "documentation\\content_validator\\__init__.py.__init__",
      "documentation\\documentation_organizer\\documentation_organizer.py.__init__",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.__init__",
      "documentation\\documentation_organizer\\__init__.py.__init__",
      "documentation\\markdown_processor\\markdown_processor.py.__init__",
      "documentation\\markdown_processor\\__init__.py.__init__",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.__init__",
      "documentation\\wiki_expander\\wiki_expander.py.__init__",
      "documentation\\wiki_expander\\__init__.py.__init__",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.__init__",
      "documentation\\wiki_fixer\\wiki_fixer.py.__init__",
      "documentation\\wiki_fixer\\__init__.py.__init__",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.__init__",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.__init__",
      "documentation\\wiki_optimizer\\__init__.py.__init__",
      "analysis\\advanced_searcher\\advanced_searcher.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\__init__.py.__init__",
      "analysis\\context_detector\\context_detector.py.__init__",
      "analysis\\context_detector\\migrated_context_detector.py.__init__",
      "analysis\\context_detector\\__init__.py.__init__",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\__init__.py.__init__",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\__init__.py.__init__",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.__init__",
      "analysis\\research_manager\\research_manager.py.__init__",
      "analysis\\research_manager\\__init__.py.__init__",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.__init__",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.__init__",
      "analysis\\source_analyzer\\source_analyzer.py.__init__",
      "analysis\\source_analyzer\\__init__.py.__init__",
      "agents\\agent_integrator\\agent_integrator.py.__init__",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.__init__",
      "agents\\agent_integrator\\__init__.py.__init__",
      "agents\\agent_monitor\\agent_monitor.py.__init__",
      "agents\\agent_monitor\\migrated_auto_monitor.py.__init__",
      "agents\\agent_monitor\\__init__.py.__init__",
      "agents\\agent_optimizer\\agent_optimizer.py.__init__",
      "agents\\agent_optimizer\\__init__.py.__init__",
      "agents\\agent_orchestrator\\agent_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.__init__",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_module_creator.py.__init__",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.__init__",
      "agents\\agent_orchestrator\\__init__.py.__init__",
      "agents\\agent_organizer\\agent_organizer.py.__init__",
      "agents\\agent_organizer\\migrated_agent_organizer.py.__init__",
      "agents\\agent_organizer\\__init__.py.__init__",
      "agents\\agent_specialist\\agent_specialist.py.__init__",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
      "agents\\agent_specialist\\__init__.py.__init__",
      "agents\\agent_validator\\agent_validator.py.__init__",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.__init__",
      "agents\\agent_validator\\__init__.py.__init__",
      "agents\\workflow_manager\\migrated_integration_workflow.py.__init__",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.__init__",
      "agents\\workflow_manager\\workflow_manager.py.__init__",
      "agents\\workflow_manager\\__init__.py.__init__"
    ],
    "private_method": [
      "tools\\backup_system\\backup_system.py._execute_module_logic",
      "tools\\backup_system\\backup_system.py._validate_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
      "tools\\config_manager\\config_manager.py._execute_module_logic",
      "tools\\config_manager\\config_manager.py._validate_module_logic",
      "tools\\file_mover\\file_mover.py._execute_module_logic",
      "tools\\file_mover\\file_mover.py._validate_module_logic",
      "tools\\git_automation\\git_automation.py._execute_module_logic",
      "tools\\git_automation\\git_automation.py._validate_module_logic",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._evaluate_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique",
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop",
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results",
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations",
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning",
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict",
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files",
      "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment",
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
      "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules",
      "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain",
      "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score",
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability",
      "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html",
      "tools\\git_automation\\migrated_visualization_interface.py._calculate_percentage",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions",
      "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules",
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions",
      "tools\\log_manager\\log_manager.py._execute_module_logic",
      "tools\\log_manager\\log_manager.py._validate_module_logic",
      "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
      "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
      "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
      "python\\error_resolver\\error_resolver.py._execute_module_logic",
      "python\\error_resolver\\error_resolver.py._validate_module_logic",
      "python\\python_agent\\python_agent.py._execute_module_logic",
      "python\\python_agent\\python_agent.py._validate_module_logic",
      "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
      "python\\script_executor\\script_executor.py._execute_module_logic",
      "python\\script_executor\\script_executor.py._validate_module_logic",
      "metrics\\alert_system\\alert_system.py._execute_module_logic",
      "metrics\\alert_system\\alert_system.py._validate_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\map_updater.py._execute_module_logic",
      "maps\\map_updater\\map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop",
      "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
      "maps\\map_validator\\map_validator.py._execute_module_logic",
      "maps\\map_validator\\map_validator.py._validate_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
      "maps\\source_indexer\\source_indexer.py._execute_module_logic",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
      "documentation\\content_validator\\content_validator.py._execute_module_logic",
      "documentation\\content_validator\\content_validator.py._validate_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
      "analysis\\context_detector\\context_detector.py._execute_module_logic",
      "analysis\\context_detector\\context_detector.py._validate_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
      "analysis\\research_manager\\research_manager.py._execute_module_logic",
      "analysis\\research_manager\\research_manager.py._validate_module_logic",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features",
      "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_dependencies",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_recommendations",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
      "agents\\agent_validator\\agent_validator.py._execute_module_logic",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_deployment",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions",
      "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates",
      "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows",
      "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests",
      "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_deployment",
      "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase",
      "agents\\workflow_manager\\workflow_manager.py._execute_module_logic",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic"
    ]
  },
  "by_module": {
    "tools\\backup_system\\backup_system.py": [
      "tools\\backup_system\\backup_system.py.main",
      "tools\\backup_system\\backup_system.py.__init__",
      "tools\\backup_system\\backup_system.py.execute",
      "tools\\backup_system\\backup_system.py._execute_module_logic",
      "tools\\backup_system\\backup_system.py.validate",
      "tools\\backup_system\\backup_system.py._validate_module_logic"
    ],
    "tools\\backup_system\\migrated_backup_system.py": [
      "tools\\backup_system\\migrated_backup_system.py.main",
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\backup_system\\migrated_backup_system.py.__init__",
      "tools\\backup_system\\migrated_backup_system.py.execute",
      "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
      "tools\\backup_system\\migrated_backup_system.py.validate",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic"
    ],
    "tools\\backup_system\\__init__.py": [
      "tools\\backup_system\\__init__.py.__init__",
      "tools\\backup_system\\__init__.py.execute",
      "tools\\backup_system\\__init__.py.validate"
    ],
    "tools\\cleanup_system\\cleanup_system.py": [
      "tools\\cleanup_system\\cleanup_system.py.main",
      "tools\\cleanup_system\\cleanup_system.py.__init__",
      "tools\\cleanup_system\\cleanup_system.py.execute",
      "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\cleanup_system.py.validate",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic"
    ],
    "tools\\cleanup_system\\migrated_cleanup_system.py": [
      "tools\\cleanup_system\\migrated_cleanup_system.py.main",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.__init__",
      "tools\\cleanup_system\\migrated_cleanup_system.py.execute",
      "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py.validate",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic"
    ],
    "tools\\cleanup_system\\__init__.py": [
      "tools\\cleanup_system\\__init__.py.__init__",
      "tools\\cleanup_system\\__init__.py.execute",
      "tools\\cleanup_system\\__init__.py.validate"
    ],
    "tools\\config_manager\\config_manager.py": [
      "tools\\config_manager\\config_manager.py.main",
      "tools\\config_manager\\config_manager.py.__init__",
      "tools\\config_manager\\config_manager.py.execute",
      "tools\\config_manager\\config_manager.py._execute_module_logic",
      "tools\\config_manager\\config_manager.py.validate",
      "tools\\config_manager\\config_manager.py._validate_module_logic"
    ],
    "tools\\config_manager\\migrated_update_context_system.py": [
      "tools\\config_manager\\migrated_update_context_system.py.main",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\config_manager\\migrated_update_context_system.py.__init__",
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure",
      "tools\\config_manager\\migrated_update_context_system.py.get_key_files",
      "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories",
      "tools\\config_manager\\migrated_update_context_system.py.get_source_components",
      "tools\\config_manager\\migrated_update_context_system.py.get_module_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_data_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_config",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
      "tools\\config_manager\\migrated_update_context_system.py.get_integration_status",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns",
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching",
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
      "tools\\config_manager\\migrated_update_context_system.py.generate_report"
    ],
    "tools\\config_manager\\__init__.py": [
      "tools\\config_manager\\__init__.py.__init__",
      "tools\\config_manager\\__init__.py.execute",
      "tools\\config_manager\\__init__.py.validate"
    ],
    "tools\\file_mover\\file_mover.py": [
      "tools\\file_mover\\file_mover.py.main",
      "tools\\file_mover\\file_mover.py.__init__",
      "tools\\file_mover\\file_mover.py.execute",
      "tools\\file_mover\\file_mover.py._execute_module_logic",
      "tools\\file_mover\\file_mover.py.validate",
      "tools\\file_mover\\file_mover.py._validate_module_logic"
    ],
    "tools\\file_mover\\migrated_file_mover.py": [
      "tools\\file_mover\\migrated_file_mover.py.load_config",
      "tools\\file_mover\\migrated_file_mover.py.save_config",
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode",
      "tools\\file_mover\\migrated_file_mover.py.main",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover.py.__init__",
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory",
      "tools\\file_mover\\migrated_file_mover.py.validate_paths",
      "tools\\file_mover\\migrated_file_mover.py.move_file",
      "tools\\file_mover\\migrated_file_mover.py.move_files"
    ],
    "tools\\file_mover\\migrated_file_mover_usage_example.py": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.main",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module"
    ],
    "tools\\file_mover\\__init__.py": [
      "tools\\file_mover\\__init__.py.__init__",
      "tools\\file_mover\\__init__.py.execute",
      "tools\\file_mover\\__init__.py.validate"
    ],
    "tools\\git_automation\\git_automation.py": [
      "tools\\git_automation\\git_automation.py.main",
      "tools\\git_automation\\git_automation.py.__init__",
      "tools\\git_automation\\git_automation.py.execute",
      "tools\\git_automation\\git_automation.py._execute_module_logic",
      "tools\\git_automation\\git_automation.py.validate",
      "tools\\git_automation\\git_automation.py._validate_module_logic"
    ],
    "tools\\git_automation\\migrated_advanced_prompt_system.py": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.__init__",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._evaluate_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique"
    ],
    "tools\\git_automation\\migrated_auto_learning_system.py": [
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_auto_learning_system.py.__init__",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.load_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop",
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results",
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations",
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback",
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.shutdown",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
      "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns"
    ],
    "tools\\git_automation\\migrated_create_module_simple.py": [
      "tools\\git_automation\\migrated_create_module_simple.py.main",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module"
    ],
    "tools\\git_automation\\migrated_data_collector.py": [
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.__init__",
      "tools\\git_automation\\migrated_data_collector.py.init_database",
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
      "tools\\git_automation\\migrated_data_collector.py.save_interaction",
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction",
      "tools\\git_automation\\migrated_data_collector.py.get_interactions",
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict",
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats",
      "tools\\git_automation\\migrated_data_collector.py.add_feedback",
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files"
    ],
    "tools\\git_automation\\migrated_example_integration.py": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module"
    ],
    "tools\\git_automation\\migrated_feedback_system.py": [
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.__init__",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.record_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
      "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment",
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
      "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback"
    ],
    "tools\\git_automation\\migrated_git_task_integration.py": [
      "tools\\git_automation\\migrated_git_task_integration.py.main",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.__init__",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report"
    ],
    "tools\\git_automation\\migrated_optimization_engine.py": [
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.__init__",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
      "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result"
    ],
    "tools\\git_automation\\migrated_prompt_evaluator.py": [
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.__init__",
      "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns",
      "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
      "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate",
      "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend"
    ],
    "tools\\git_automation\\migrated_prompt_learning_integration.py": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.__init__",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_learning_log",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_learning_log",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement"
    ],
    "tools\\git_automation\\migrated_prompt_optimizer.py": [
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.__init__",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain",
      "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score",
      "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize",
      "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats"
    ],
    "tools\\git_automation\\migrated_rules_learning_integration.py": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.__init__",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_usage_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_usage_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
      "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.record_rule_usage",
      "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability",
      "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report"
    ],
    "tools\\git_automation\\migrated_visualization_interface.py": [
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.__init__",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
      "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html",
      "tools\\git_automation\\migrated_visualization_interface.py._calculate_percentage",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions",
      "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules",
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions",
      "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart"
    ],
    "tools\\git_automation\\__init__.py": [
      "tools\\git_automation\\__init__.py.__init__",
      "tools\\git_automation\\__init__.py.execute",
      "tools\\git_automation\\__init__.py.validate"
    ],
    "tools\\log_manager\\log_manager.py": [
      "tools\\log_manager\\log_manager.py.main",
      "tools\\log_manager\\log_manager.py.__init__",
      "tools\\log_manager\\log_manager.py.execute",
      "tools\\log_manager\\log_manager.py._execute_module_logic",
      "tools\\log_manager\\log_manager.py.validate",
      "tools\\log_manager\\log_manager.py._validate_module_logic"
    ],
    "tools\\log_manager\\migrated_centralize_logs.py": [
      "tools\\log_manager\\migrated_centralize_logs.py.main",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "tools\\log_manager\\migrated_centralize_logs.py.categorize_file",
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report"
    ],
    "tools\\log_manager\\__init__.py": [
      "tools\\log_manager\\__init__.py.__init__",
      "tools\\log_manager\\__init__.py.execute",
      "tools\\log_manager\\__init__.py.validate"
    ],
    "python\\code_analyzer\\code_analyzer.py": [
      "python\\code_analyzer\\code_analyzer.py.main",
      "python\\code_analyzer\\code_analyzer.py.__init__",
      "python\\code_analyzer\\code_analyzer.py.execute",
      "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
      "python\\code_analyzer\\code_analyzer.py.validate",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic"
    ],
    "python\\code_analyzer\\migrated_analyze_navigation_optimization.py": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.main",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.__init__",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations"
    ],
    "python\\code_analyzer\\__init__.py": [
      "python\\code_analyzer\\__init__.py.__init__",
      "python\\code_analyzer\\__init__.py.execute",
      "python\\code_analyzer\\__init__.py.validate"
    ],
    "python\\code_optimizer\\code_optimizer.py": [
      "python\\code_optimizer\\code_optimizer.py.main",
      "python\\code_optimizer\\code_optimizer.py.__init__",
      "python\\code_optimizer\\code_optimizer.py.execute",
      "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
      "python\\code_optimizer\\code_optimizer.py.validate",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic"
    ],
    "python\\code_optimizer\\migrated_auto_optimizer.py": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.main",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\code_optimizer\\migrated_auto_optimizer.py.__init__",
      "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_memory_usage",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
      "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
      "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
      "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats"
    ],
    "python\\code_optimizer\\__init__.py": [
      "python\\code_optimizer\\__init__.py.__init__",
      "python\\code_optimizer\\__init__.py.execute",
      "python\\code_optimizer\\__init__.py.validate"
    ],
    "python\\documentation_generator\\documentation_generator.py": [
      "python\\documentation_generator\\documentation_generator.py.main",
      "python\\documentation_generator\\documentation_generator.py.__init__",
      "python\\documentation_generator\\documentation_generator.py.execute",
      "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
      "python\\documentation_generator\\documentation_generator.py.validate",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic"
    ],
    "python\\documentation_generator\\__init__.py": [
      "python\\documentation_generator\\__init__.py.__init__",
      "python\\documentation_generator\\__init__.py.execute",
      "python\\documentation_generator\\__init__.py.validate"
    ],
    "python\\error_resolver\\error_resolver.py": [
      "python\\error_resolver\\error_resolver.py.main",
      "python\\error_resolver\\error_resolver.py.__init__",
      "python\\error_resolver\\error_resolver.py.execute",
      "python\\error_resolver\\error_resolver.py._execute_module_logic",
      "python\\error_resolver\\error_resolver.py.validate",
      "python\\error_resolver\\error_resolver.py._validate_module_logic"
    ],
    "python\\error_resolver\\migrated_python_error_resolver.py": [
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.__init__",
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path",
      "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration",
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution"
    ],
    "python\\error_resolver\\__init__.py": [
      "python\\error_resolver\\__init__.py.__init__",
      "python\\error_resolver\\__init__.py.execute",
      "python\\error_resolver\\__init__.py.validate"
    ],
    "python\\python_agent\\migrated_python_agent_system.py": [
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\python_agent\\migrated_python_agent_system.py.__init__",
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.load_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.load_improvement_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_improvement_log",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.update_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_imports",
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report"
    ],
    "python\\python_agent\\python_agent.py": [
      "python\\python_agent\\python_agent.py.main",
      "python\\python_agent\\python_agent.py.__init__",
      "python\\python_agent\\python_agent.py.execute",
      "python\\python_agent\\python_agent.py._execute_module_logic",
      "python\\python_agent\\python_agent.py.validate",
      "python\\python_agent\\python_agent.py._validate_module_logic"
    ],
    "python\\python_agent\\__init__.py": [
      "python\\python_agent\\__init__.py.__init__",
      "python\\python_agent\\__init__.py.execute",
      "python\\python_agent\\__init__.py.validate"
    ],
    "python\\recipe_manager\\migrated_task_automation_system.py": [
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\recipe_manager\\migrated_task_automation_system.py.__init__",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task"
    ],
    "python\\recipe_manager\\recipe_manager.py": [
      "python\\recipe_manager\\recipe_manager.py.main",
      "python\\recipe_manager\\recipe_manager.py.__init__",
      "python\\recipe_manager\\recipe_manager.py.execute",
      "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
      "python\\recipe_manager\\recipe_manager.py.validate",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic"
    ],
    "python\\recipe_manager\\__init__.py": [
      "python\\recipe_manager\\__init__.py.__init__",
      "python\\recipe_manager\\__init__.py.execute",
      "python\\recipe_manager\\__init__.py.validate"
    ],
    "python\\script_executor\\migrated_script_execution_manager.py": [
      "python\\script_executor\\migrated_script_execution_manager.py.main",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.__init__",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report",
      "python\\script_executor\\migrated_script_execution_manager.py.log_execution",
      "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats"
    ],
    "python\\script_executor\\script_executor.py": [
      "python\\script_executor\\script_executor.py.main",
      "python\\script_executor\\script_executor.py.__init__",
      "python\\script_executor\\script_executor.py.execute",
      "python\\script_executor\\script_executor.py._execute_module_logic",
      "python\\script_executor\\script_executor.py.validate",
      "python\\script_executor\\script_executor.py._validate_module_logic"
    ],
    "python\\script_executor\\__init__.py": [
      "python\\script_executor\\__init__.py.__init__",
      "python\\script_executor\\__init__.py.execute",
      "python\\script_executor\\__init__.py.validate"
    ],
    "metrics\\alert_system\\alert_system.py": [
      "metrics\\alert_system\\alert_system.py.main",
      "metrics\\alert_system\\alert_system.py.__init__",
      "metrics\\alert_system\\alert_system.py.execute",
      "metrics\\alert_system\\alert_system.py._execute_module_logic",
      "metrics\\alert_system\\alert_system.py.validate",
      "metrics\\alert_system\\alert_system.py._validate_module_logic"
    ],
    "metrics\\alert_system\\migrated_alert_system.py": [
      "metrics\\alert_system\\migrated_alert_system.py.main",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\alert_system\\migrated_alert_system.py.__init__",
      "metrics\\alert_system\\migrated_alert_system.py.execute",
      "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py.validate",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic"
    ],
    "metrics\\alert_system\\__init__.py": [
      "metrics\\alert_system\\__init__.py.__init__",
      "metrics\\alert_system\\__init__.py.execute",
      "metrics\\alert_system\\__init__.py.validate"
    ],
    "metrics\\dashboard_monitor\\dashboard_monitor.py": [
      "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.__init__",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.execute",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.validate",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic"
    ],
    "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard"
    ],
    "metrics\\dashboard_monitor\\__init__.py": [
      "metrics\\dashboard_monitor\\__init__.py.__init__",
      "metrics\\dashboard_monitor\\__init__.py.execute",
      "metrics\\dashboard_monitor\\__init__.py.validate"
    ],
    "metrics\\metrics_analyzer\\metrics_analyzer.py": [
      "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.__init__",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.execute",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.validate",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic"
    ],
    "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.main",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.__init__",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report"
    ],
    "metrics\\metrics_analyzer\\__init__.py": [
      "metrics\\metrics_analyzer\\__init__.py.__init__",
      "metrics\\metrics_analyzer\\__init__.py.execute",
      "metrics\\metrics_analyzer\\__init__.py.validate"
    ],
    "metrics\\metrics_collector\\metrics_collector.py": [
      "metrics\\metrics_collector\\metrics_collector.py.main",
      "metrics\\metrics_collector\\metrics_collector.py.__init__",
      "metrics\\metrics_collector\\metrics_collector.py.execute",
      "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py.validate",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic"
    ],
    "metrics\\metrics_collector\\migrated_metrics_system.py": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.main",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system"
    ],
    "metrics\\metrics_collector\\__init__.py": [
      "metrics\\metrics_collector\\__init__.py.__init__",
      "metrics\\metrics_collector\\__init__.py.execute",
      "metrics\\metrics_collector\\__init__.py.validate"
    ],
    "metrics\\metrics_reporter\\metrics_reporter.py": [
      "metrics\\metrics_reporter\\metrics_reporter.py.main",
      "metrics\\metrics_reporter\\metrics_reporter.py.__init__",
      "metrics\\metrics_reporter\\metrics_reporter.py.execute",
      "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py.validate",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic"
    ],
    "metrics\\metrics_reporter\\__init__.py": [
      "metrics\\metrics_reporter\\__init__.py.__init__",
      "metrics\\metrics_reporter\\__init__.py.execute",
      "metrics\\metrics_reporter\\__init__.py.validate"
    ],
    "metrics\\performance_monitor\\migrated_performance_monitor.py": [
      "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.__init__",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.execute",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.validate",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic"
    ],
    "metrics\\performance_monitor\\performance_monitor.py": [
      "metrics\\performance_monitor\\performance_monitor.py.main",
      "metrics\\performance_monitor\\performance_monitor.py.__init__",
      "metrics\\performance_monitor\\performance_monitor.py.execute",
      "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py.validate",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic"
    ],
    "metrics\\performance_monitor\\__init__.py": [
      "metrics\\performance_monitor\\__init__.py.__init__",
      "metrics\\performance_monitor\\__init__.py.execute",
      "metrics\\performance_monitor\\__init__.py.validate"
    ],
    "maps\\habdel_indexer\\habdel_indexer.py": [
      "maps\\habdel_indexer\\habdel_indexer.py.main",
      "maps\\habdel_indexer\\habdel_indexer.py.__init__",
      "maps\\habdel_indexer\\habdel_indexer.py.execute",
      "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py.validate",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic"
    ],
    "maps\\habdel_indexer\\migrated_update_habdel_index.py": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.main",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.__init__",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.categorize_stories",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index"
    ],
    "maps\\habdel_indexer\\__init__.py": [
      "maps\\habdel_indexer\\__init__.py.__init__",
      "maps\\habdel_indexer\\__init__.py.execute",
      "maps\\habdel_indexer\\__init__.py.validate"
    ],
    "maps\\map_optimizer\\map_optimizer.py": [
      "maps\\map_optimizer\\map_optimizer.py.main",
      "maps\\map_optimizer\\map_optimizer.py.__init__",
      "maps\\map_optimizer\\map_optimizer.py.execute",
      "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
      "maps\\map_optimizer\\map_optimizer.py.validate",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic"
    ],
    "maps\\map_optimizer\\migrated_optimize_json_maps.py": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report"
    ],
    "maps\\map_optimizer\\__init__.py": [
      "maps\\map_optimizer\\__init__.py.__init__",
      "maps\\map_optimizer\\__init__.py.execute",
      "maps\\map_optimizer\\__init__.py.validate"
    ],
    "maps\\map_updater\\map_updater.py": [
      "maps\\map_updater\\map_updater.py.main",
      "maps\\map_updater\\map_updater.py.__init__",
      "maps\\map_updater\\map_updater.py.execute",
      "maps\\map_updater\\map_updater.py._execute_module_logic",
      "maps\\map_updater\\map_updater.py.validate",
      "maps\\map_updater\\map_updater.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_advanced_searcher.py": [
      "maps\\map_updater\\migrated_advanced_searcher.py.main",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.__init__",
      "maps\\map_updater\\migrated_advanced_searcher.py.execute",
      "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py.validate",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_agent_integrator.py": [
      "maps\\map_updater\\migrated_agent_integrator.py.main",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.__init__",
      "maps\\map_updater\\migrated_agent_integrator.py.execute",
      "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py.validate",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_agent_monitor.py": [
      "maps\\map_updater\\migrated_agent_monitor.py.main",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.__init__",
      "maps\\map_updater\\migrated_agent_monitor.py.execute",
      "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py.validate",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_agent_optimizer.py": [
      "maps\\map_updater\\migrated_agent_optimizer.py.main",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.__init__",
      "maps\\map_updater\\migrated_agent_optimizer.py.execute",
      "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py.validate",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_agent_orchestrator.py": [
      "maps\\map_updater\\migrated_agent_orchestrator.py.main",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_agent_orchestrator.py.execute",
      "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py.validate",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_agent_specialist.py": [
      "maps\\map_updater\\migrated_agent_specialist.py.main",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.__init__",
      "maps\\map_updater\\migrated_agent_specialist.py.execute",
      "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py.validate",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_agent_validator.py": [
      "maps\\map_updater\\migrated_agent_validator.py.main",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.__init__",
      "maps\\map_updater\\migrated_agent_validator.py.execute",
      "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py.validate",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_auto_updater.py": [
      "maps\\map_updater\\migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_updater.py.__init__",
      "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_auto_updater.py.get_update_stats"
    ],
    "maps\\map_updater\\migrated_auto_update_all_maps.py": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.__init__",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.log",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary"
    ],
    "maps\\map_updater\\migrated_auto_update_system.py": [
      "maps\\map_updater\\migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_system.py.__init__",
      "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_auto_update_system.py.get_system_status",
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_auto_update_system.py.start_monitoring",
      "maps\\map_updater\\migrated_auto_update_system.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_update_system.py.get_update_stats",
      "maps\\map_updater\\migrated_auto_update_system.py.trigger_optimization",
      "maps\\map_updater\\migrated_auto_update_system.py.get_optimization_stats"
    ],
    "maps\\map_updater\\migrated_canary_analysis_preparator.py": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.__init__",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run"
    ],
    "maps\\map_updater\\migrated_code_analyzer.py": [
      "maps\\map_updater\\migrated_code_analyzer.py.main",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.__init__",
      "maps\\map_updater\\migrated_code_analyzer.py.execute",
      "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py.validate",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_code_optimizer.py": [
      "maps\\map_updater\\migrated_code_optimizer.py.main",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.__init__",
      "maps\\map_updater\\migrated_code_optimizer.py.execute",
      "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py.validate",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_config_manager.py": [
      "maps\\map_updater\\migrated_config_manager.py.main",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.__init__",
      "maps\\map_updater\\migrated_config_manager.py.execute",
      "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_config_manager.py.validate",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_consolidate_agents.py": [
      "maps\\map_updater\\migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report"
    ],
    "maps\\map_updater\\migrated_content_validator.py": [
      "maps\\map_updater\\migrated_content_validator.py.main",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.__init__",
      "maps\\map_updater\\migrated_content_validator.py.execute",
      "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_content_validator.py.validate",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_dashboard_monitor.py": [
      "maps\\map_updater\\migrated_dashboard_monitor.py.main",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.__init__",
      "maps\\map_updater\\migrated_dashboard_monitor.py.execute",
      "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py.validate",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_documentation_generator.py": [
      "maps\\map_updater\\migrated_documentation_generator.py.main",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.__init__",
      "maps\\map_updater\\migrated_documentation_generator.py.execute",
      "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py.validate",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_documentation_organizer.py": [
      "maps\\map_updater\\migrated_documentation_organizer.py.main",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.__init__",
      "maps\\map_updater\\migrated_documentation_organizer.py.execute",
      "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py.validate",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_error_resolver.py": [
      "maps\\map_updater\\migrated_error_resolver.py.main",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.__init__",
      "maps\\map_updater\\migrated_error_resolver.py.execute",
      "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py.validate",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_final_commit_verification.py": [
      "maps\\map_updater\\migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_final_commit_verification.py.__init__",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification"
    ],
    "maps\\map_updater\\migrated_git_atomic_commits.py": [
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module"
    ],
    "maps\\map_updater\\migrated_git_automation.py": [
      "maps\\map_updater\\migrated_git_automation.py.main",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.__init__",
      "maps\\map_updater\\migrated_git_automation.py.execute",
      "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
      "maps\\map_updater\\migrated_git_automation.py.validate",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_habdel_indexer.py": [
      "maps\\map_updater\\migrated_habdel_indexer.py.main",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.__init__",
      "maps\\map_updater\\migrated_habdel_indexer.py.execute",
      "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py.validate",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_implement_smart_cache.py": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache"
    ],
    "maps\\map_updater\\migrated_intelligent_navigator.py": [
      "maps\\map_updater\\migrated_intelligent_navigator.py.main",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.__init__",
      "maps\\map_updater\\migrated_intelligent_navigator.py.execute",
      "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py.validate",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_knowledge_consolidator.py": [
      "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.__init__",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.execute",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.validate",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_log_manager.py": [
      "maps\\map_updater\\migrated_log_manager.py.main",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.__init__",
      "maps\\map_updater\\migrated_log_manager.py.execute",
      "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_log_manager.py.validate",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_map_optimizer.py": [
      "maps\\map_updater\\migrated_map_optimizer.py.main",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.__init__",
      "maps\\map_updater\\migrated_map_optimizer.py.execute",
      "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py.validate",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_map_updater.py": [
      "maps\\map_updater\\migrated_map_updater.py.main",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.__init__",
      "maps\\map_updater\\migrated_map_updater.py.execute",
      "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_updater.py.validate",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_map_validator.py": [
      "maps\\map_updater\\migrated_map_validator.py.main",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.__init__",
      "maps\\map_updater\\migrated_map_validator.py.execute",
      "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_validator.py.validate",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_markdown_processor.py": [
      "maps\\map_updater\\migrated_markdown_processor.py.main",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.__init__",
      "maps\\map_updater\\migrated_markdown_processor.py.execute",
      "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py.validate",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_metrics_analyzer.py": [
      "maps\\map_updater\\migrated_metrics_analyzer.py.main",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.__init__",
      "maps\\map_updater\\migrated_metrics_analyzer.py.execute",
      "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py.validate",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_metrics_collector.py": [
      "maps\\map_updater\\migrated_metrics_collector.py.main",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.__init__",
      "maps\\map_updater\\migrated_metrics_collector.py.execute",
      "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py.validate",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_metrics_reporter.py": [
      "maps\\map_updater\\migrated_metrics_reporter.py.main",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.__init__",
      "maps\\map_updater\\migrated_metrics_reporter.py.execute",
      "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py.validate",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation"
    ],
    "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report"
    ],
    "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report"
    ],
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search"
    ],
    "maps\\map_updater\\migrated_migrated_agent_organizer.py": [
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.__init__",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.execute",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.validate",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_migrated_alert_system.py": [
      "maps\\map_updater\\migrated_migrated_alert_system.py.main",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_alert_system.py.execute",
      "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py.validate",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py": [
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.__init__",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report"
    ],
    "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py": [
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.__init__",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations"
    ],
    "maps\\map_updater\\migrated_migrated_auto_monitor.py": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status"
    ],
    "maps\\map_updater\\migrated_migrated_auto_optimizer.py": [
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.main",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats"
    ],
    "maps\\map_updater\\migrated_migrated_auto_updater.py": [
      "maps\\map_updater\\migrated_migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats"
    ],
    "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py": [
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.log",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary"
    ],
    "maps\\map_updater\\migrated_migrated_auto_update_system.py": [
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.get_optimization_stats"
    ],
    "maps\\map_updater\\migrated_migrated_backup_system.py": [
      "maps\\map_updater\\migrated_migrated_backup_system.py.main",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_backup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py": [
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.__init__",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run"
    ],
    "maps\\map_updater\\migrated_migrated_centralize_logs.py": [
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.main",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report"
    ],
    "maps\\map_updater\\migrated_migrated_cleanup_system.py": [
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_migrated_consolidate_agents.py": [
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report"
    ],
    "maps\\map_updater\\migrated_migrated_context_detector.py": [
      "maps\\map_updater\\migrated_migrated_context_detector.py.main",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.__init__",
      "maps\\map_updater\\migrated_migrated_context_detector.py.execute",
      "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py.validate",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py": [
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard"
    ],
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results"
    ],
    "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.main",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.__init__",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive"
    ],
    "maps\\map_updater\\migrated_migrated_final_commit_verification.py": [
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.__init__",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification"
    ],
    "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.__init__",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues"
    ],
    "maps\\map_updater\\migrated_migrated_git_atomic_commits.py": [
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module"
    ],
    "maps\\map_updater\\migrated_migrated_git_task_integration.py": [
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.main",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report"
    ],
    "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run"
    ],
    "maps\\map_updater\\migrated_migrated_implement_smart_cache.py": [
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache"
    ],
    "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation"
    ],
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py": [
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results"
    ],
    "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge"
    ],
    "maps\\map_updater\\migrated_migrated_metrics_system.py": [
      "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system"
    ],
    "maps\\map_updater\\migrated_migrated_modular_structure_creator.py": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.__init__",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report"
    ],
    "maps\\map_updater\\migrated_migrated_optimize_json_maps.py": [
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report"
    ],
    "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps"
    ],
    "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure"
    ],
    "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.__init__",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_lua_debugger",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report"
    ],
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.__init__",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis"
    ],
    "maps\\map_updater\\migrated_migrated_performance_monitor.py": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report"
    ],
    "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration"
    ],
    "maps\\map_updater\\migrated_modular_structure_creator.py": [
      "maps\\map_updater\\migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.__init__",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report"
    ],
    "maps\\map_updater\\migrated_modules_indexer.py": [
      "maps\\map_updater\\migrated_modules_indexer.py.main",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.__init__",
      "maps\\map_updater\\migrated_modules_indexer.py.execute",
      "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py.validate",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_optimize_maps_for_tokens.py": [
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.__init__",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps"
    ],
    "maps\\map_updater\\migrated_otclient_log_analyzer.py": [
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.__init__",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis"
    ],
    "maps\\map_updater\\migrated_prepare_canary_integration.py": [
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.__init__",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration"
    ],
    "maps\\map_updater\\migrated_python_agent.py": [
      "maps\\map_updater\\migrated_python_agent.py.main",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.__init__",
      "maps\\map_updater\\migrated_python_agent.py.execute",
      "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
      "maps\\map_updater\\migrated_python_agent.py.validate",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_recipe_manager.py": [
      "maps\\map_updater\\migrated_recipe_manager.py.main",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.__init__",
      "maps\\map_updater\\migrated_recipe_manager.py.execute",
      "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py.validate",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_research_manager.py": [
      "maps\\map_updater\\migrated_research_manager.py.main",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.__init__",
      "maps\\map_updater\\migrated_research_manager.py.execute",
      "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_research_manager.py.validate",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_resources_indexer.py": [
      "maps\\map_updater\\migrated_resources_indexer.py.main",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.__init__",
      "maps\\map_updater\\migrated_resources_indexer.py.execute",
      "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py.validate",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_script_executor.py": [
      "maps\\map_updater\\migrated_script_executor.py.main",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.__init__",
      "maps\\map_updater\\migrated_script_executor.py.execute",
      "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
      "maps\\map_updater\\migrated_script_executor.py.validate",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_script_migration_agent.py": [
      "maps\\map_updater\\migrated_script_migration_agent.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.__init__",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report",
      "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report"
    ],
    "maps\\map_updater\\migrated_source_analyzer.py": [
      "maps\\map_updater\\migrated_source_analyzer.py.main",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_analyzer.py.__init__",
      "maps\\map_updater\\migrated_source_analyzer.py.execute",
      "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py.validate",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_source_indexer.py": [
      "maps\\map_updater\\migrated_source_indexer.py.main",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.__init__",
      "maps\\map_updater\\migrated_source_indexer.py.execute",
      "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py.validate",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_styles_indexer.py": [
      "maps\\map_updater\\migrated_styles_indexer.py.main",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.__init__",
      "maps\\map_updater\\migrated_styles_indexer.py.execute",
      "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py.validate",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_tools_indexer.py": [
      "maps\\map_updater\\migrated_tools_indexer.py.main",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.__init__",
      "maps\\map_updater\\migrated_tools_indexer.py.execute",
      "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py.validate",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_update_bmad_maps.py": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.__init__",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps"
    ],
    "maps\\map_updater\\migrated_update_readme.py": [
      "maps\\map_updater\\migrated_update_readme.py.main",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.__init__",
      "maps\\map_updater\\migrated_update_readme.py.count_files",
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics",
      "maps\\map_updater\\migrated_update_readme.py.validate_navigation",
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
      "maps\\map_updater\\migrated_update_readme.py.run_full_update"
    ],
    "maps\\map_updater\\migrated_wiki_expander.py": [
      "maps\\map_updater\\migrated_wiki_expander.py.main",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.__init__",
      "maps\\map_updater\\migrated_wiki_expander.py.execute",
      "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py.validate",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_wiki_fixer.py": [
      "maps\\map_updater\\migrated_wiki_fixer.py.main",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.__init__",
      "maps\\map_updater\\migrated_wiki_fixer.py.execute",
      "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py.validate",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_wiki_indexer.py": [
      "maps\\map_updater\\migrated_wiki_indexer.py.main",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.__init__",
      "maps\\map_updater\\migrated_wiki_indexer.py.execute",
      "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py.validate",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_wiki_optimizer.py": [
      "maps\\map_updater\\migrated_wiki_optimizer.py.main",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.__init__",
      "maps\\map_updater\\migrated_wiki_optimizer.py.execute",
      "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py.validate",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated_workflow_manager.py": [
      "maps\\map_updater\\migrated_workflow_manager.py.main",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.__init__",
      "maps\\map_updater\\migrated_workflow_manager.py.execute",
      "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py.validate",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic"
    ],
    "maps\\map_updater\\migrated___init__.py": [
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.__init__",
      "maps\\map_updater\\migrated___init__.py.execute",
      "maps\\map_updater\\migrated___init__.py.validate"
    ],
    "maps\\map_updater\\__init__.py": [
      "maps\\map_updater\\__init__.py.__init__",
      "maps\\map_updater\\__init__.py.execute",
      "maps\\map_updater\\__init__.py.validate"
    ],
    "maps\\map_validator\\map_validator.py": [
      "maps\\map_validator\\map_validator.py.main",
      "maps\\map_validator\\map_validator.py.__init__",
      "maps\\map_validator\\map_validator.py.execute",
      "maps\\map_validator\\map_validator.py._execute_module_logic",
      "maps\\map_validator\\map_validator.py.validate",
      "maps\\map_validator\\map_validator.py._validate_module_logic"
    ],
    "maps\\map_validator\\__init__.py": [
      "maps\\map_validator\\__init__.py.__init__",
      "maps\\map_validator\\__init__.py.execute",
      "maps\\map_validator\\__init__.py.validate"
    ],
    "maps\\modules_indexer\\migrated_update_modules_index.py": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.main",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.__init__",
      "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.update_index"
    ],
    "maps\\modules_indexer\\modules_indexer.py": [
      "maps\\modules_indexer\\modules_indexer.py.main",
      "maps\\modules_indexer\\modules_indexer.py.__init__",
      "maps\\modules_indexer\\modules_indexer.py.execute",
      "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
      "maps\\modules_indexer\\modules_indexer.py.validate",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic"
    ],
    "maps\\modules_indexer\\__init__.py": [
      "maps\\modules_indexer\\__init__.py.__init__",
      "maps\\modules_indexer\\__init__.py.execute",
      "maps\\modules_indexer\\__init__.py.validate"
    ],
    "maps\\resources_indexer\\migrated_update_resources_index.py": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.main",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.__init__",
      "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resource",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.update_index"
    ],
    "maps\\resources_indexer\\resources_indexer.py": [
      "maps\\resources_indexer\\resources_indexer.py.main",
      "maps\\resources_indexer\\resources_indexer.py.__init__",
      "maps\\resources_indexer\\resources_indexer.py.execute",
      "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
      "maps\\resources_indexer\\resources_indexer.py.validate",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic"
    ],
    "maps\\resources_indexer\\__init__.py": [
      "maps\\resources_indexer\\__init__.py.__init__",
      "maps\\resources_indexer\\__init__.py.execute",
      "maps\\resources_indexer\\__init__.py.validate"
    ],
    "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.__init__",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_story_id",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_document",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run"
    ],
    "maps\\source_indexer\\migrated_update_source_index.py": [
      "maps\\source_indexer\\migrated_update_source_index.py.main",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.__init__",
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index"
    ],
    "maps\\source_indexer\\source_indexer.py": [
      "maps\\source_indexer\\source_indexer.py.main",
      "maps\\source_indexer\\source_indexer.py.__init__",
      "maps\\source_indexer\\source_indexer.py.execute",
      "maps\\source_indexer\\source_indexer.py._execute_module_logic",
      "maps\\source_indexer\\source_indexer.py.validate",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic"
    ],
    "maps\\source_indexer\\__init__.py": [
      "maps\\source_indexer\\__init__.py.__init__",
      "maps\\source_indexer\\__init__.py.execute",
      "maps\\source_indexer\\__init__.py.validate"
    ],
    "maps\\styles_indexer\\migrated_update_styles_index.py": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.main",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\styles_indexer\\migrated_update_styles_index.py.__init__",
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.update_index"
    ],
    "maps\\styles_indexer\\styles_indexer.py": [
      "maps\\styles_indexer\\styles_indexer.py.main",
      "maps\\styles_indexer\\styles_indexer.py.__init__",
      "maps\\styles_indexer\\styles_indexer.py.execute",
      "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
      "maps\\styles_indexer\\styles_indexer.py.validate",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic"
    ],
    "maps\\styles_indexer\\__init__.py": [
      "maps\\styles_indexer\\__init__.py.__init__",
      "maps\\styles_indexer\\__init__.py.execute",
      "maps\\styles_indexer\\__init__.py.validate"
    ],
    "maps\\tools_indexer\\migrated_update_tools_index.py": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.main",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.__init__",
      "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description",
      "maps\\tools_indexer\\migrated_update_tools_index.py.get_language",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies",
      "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.update_index"
    ],
    "maps\\tools_indexer\\tools_indexer.py": [
      "maps\\tools_indexer\\tools_indexer.py.main",
      "maps\\tools_indexer\\tools_indexer.py.__init__",
      "maps\\tools_indexer\\tools_indexer.py.execute",
      "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
      "maps\\tools_indexer\\tools_indexer.py.validate",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic"
    ],
    "maps\\tools_indexer\\__init__.py": [
      "maps\\tools_indexer\\__init__.py.__init__",
      "maps\\tools_indexer\\__init__.py.execute",
      "maps\\tools_indexer\\__init__.py.validate"
    ],
    "maps\\wiki_indexer\\migrated_update_wiki_maps.py": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.__init__",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files"
    ],
    "maps\\wiki_indexer\\wiki_indexer.py": [
      "maps\\wiki_indexer\\wiki_indexer.py.main",
      "maps\\wiki_indexer\\wiki_indexer.py.__init__",
      "maps\\wiki_indexer\\wiki_indexer.py.execute",
      "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py.validate",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic"
    ],
    "maps\\wiki_indexer\\__init__.py": [
      "maps\\wiki_indexer\\__init__.py.__init__",
      "maps\\wiki_indexer\\__init__.py.execute",
      "maps\\wiki_indexer\\__init__.py.validate"
    ],
    "documentation\\content_validator\\content_validator.py": [
      "documentation\\content_validator\\content_validator.py.main",
      "documentation\\content_validator\\content_validator.py.__init__",
      "documentation\\content_validator\\content_validator.py.execute",
      "documentation\\content_validator\\content_validator.py._execute_module_logic",
      "documentation\\content_validator\\content_validator.py.validate",
      "documentation\\content_validator\\content_validator.py._validate_module_logic"
    ],
    "documentation\\content_validator\\migrated_update_json_maps.py": [
      "documentation\\content_validator\\migrated_update_json_maps.py.main",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\content_validator\\migrated_update_json_maps.py.__init__",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_priority",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_description",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files"
    ],
    "documentation\\content_validator\\__init__.py": [
      "documentation\\content_validator\\__init__.py.__init__",
      "documentation\\content_validator\\__init__.py.execute",
      "documentation\\content_validator\\__init__.py.validate"
    ],
    "documentation\\documentation_organizer\\documentation_organizer.py": [
      "documentation\\documentation_organizer\\documentation_organizer.py.main",
      "documentation\\documentation_organizer\\documentation_organizer.py.__init__",
      "documentation\\documentation_organizer\\documentation_organizer.py.execute",
      "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py.validate",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic"
    ],
    "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py": [
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.__init__",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run"
    ],
    "documentation\\documentation_organizer\\__init__.py": [
      "documentation\\documentation_organizer\\__init__.py.__init__",
      "documentation\\documentation_organizer\\__init__.py.execute",
      "documentation\\documentation_organizer\\__init__.py.validate"
    ],
    "documentation\\markdown_processor\\markdown_processor.py": [
      "documentation\\markdown_processor\\markdown_processor.py.main",
      "documentation\\markdown_processor\\markdown_processor.py.__init__",
      "documentation\\markdown_processor\\markdown_processor.py.execute",
      "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py.validate",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic"
    ],
    "documentation\\markdown_processor\\migrated_remove_emojis.py": [
      "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.main",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module"
    ],
    "documentation\\markdown_processor\\__init__.py": [
      "documentation\\markdown_processor\\__init__.py.__init__",
      "documentation\\markdown_processor\\__init__.py.execute",
      "documentation\\markdown_processor\\__init__.py.validate"
    ],
    "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py": [
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.main",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.__init__",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive"
    ],
    "documentation\\wiki_expander\\wiki_expander.py": [
      "documentation\\wiki_expander\\wiki_expander.py.main",
      "documentation\\wiki_expander\\wiki_expander.py.__init__",
      "documentation\\wiki_expander\\wiki_expander.py.execute",
      "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py.validate",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic"
    ],
    "documentation\\wiki_expander\\__init__.py": [
      "documentation\\wiki_expander\\__init__.py.__init__",
      "documentation\\wiki_expander\\__init__.py.execute",
      "documentation\\wiki_expander\\__init__.py.validate"
    ],
    "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py": [
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.__init__",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues"
    ],
    "documentation\\wiki_fixer\\wiki_fixer.py": [
      "documentation\\wiki_fixer\\wiki_fixer.py.main",
      "documentation\\wiki_fixer\\wiki_fixer.py.__init__",
      "documentation\\wiki_fixer\\wiki_fixer.py.execute",
      "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py.validate",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic"
    ],
    "documentation\\wiki_fixer\\__init__.py": [
      "documentation\\wiki_fixer\\__init__.py.__init__",
      "documentation\\wiki_fixer\\__init__.py.execute",
      "documentation\\wiki_fixer\\__init__.py.validate"
    ],
    "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py": [
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.main",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.__init__",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure"
    ],
    "documentation\\wiki_optimizer\\wiki_optimizer.py": [
      "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.__init__",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.execute",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.validate",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic"
    ],
    "documentation\\wiki_optimizer\\__init__.py": [
      "documentation\\wiki_optimizer\\__init__.py.__init__",
      "documentation\\wiki_optimizer\\__init__.py.execute",
      "documentation\\wiki_optimizer\\__init__.py.validate"
    ],
    "analysis\\advanced_searcher\\advanced_searcher.py": [
      "analysis\\advanced_searcher\\advanced_searcher.py.main",
      "analysis\\advanced_searcher\\advanced_searcher.py.__init__",
      "analysis\\advanced_searcher\\advanced_searcher.py.execute",
      "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py.validate",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic"
    ],
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py": [
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search"
    ],
    "analysis\\advanced_searcher\\__init__.py": [
      "analysis\\advanced_searcher\\__init__.py.__init__",
      "analysis\\advanced_searcher\\__init__.py.execute",
      "analysis\\advanced_searcher\\__init__.py.validate"
    ],
    "analysis\\context_detector\\context_detector.py": [
      "analysis\\context_detector\\context_detector.py.main",
      "analysis\\context_detector\\context_detector.py.__init__",
      "analysis\\context_detector\\context_detector.py.execute",
      "analysis\\context_detector\\context_detector.py._execute_module_logic",
      "analysis\\context_detector\\context_detector.py.validate",
      "analysis\\context_detector\\context_detector.py._validate_module_logic"
    ],
    "analysis\\context_detector\\migrated_context_detector.py": [
      "analysis\\context_detector\\migrated_context_detector.py.main",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.__init__",
      "analysis\\context_detector\\migrated_context_detector.py.execute",
      "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py.validate",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic"
    ],
    "analysis\\context_detector\\__init__.py": [
      "analysis\\context_detector\\__init__.py.__init__",
      "analysis\\context_detector\\__init__.py.execute",
      "analysis\\context_detector\\__init__.py.validate"
    ],
    "analysis\\intelligent_navigator\\intelligent_navigator.py": [
      "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.__init__",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.execute",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.validate",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic"
    ],
    "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py": [
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation"
    ],
    "analysis\\intelligent_navigator\\__init__.py": [
      "analysis\\intelligent_navigator\\__init__.py.__init__",
      "analysis\\intelligent_navigator\\__init__.py.execute",
      "analysis\\intelligent_navigator\\__init__.py.validate"
    ],
    "analysis\\knowledge_consolidator\\knowledge_consolidator.py": [
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.__init__",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.execute",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.validate",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic"
    ],
    "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py": [
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge"
    ],
    "analysis\\knowledge_consolidator\\__init__.py": [
      "analysis\\knowledge_consolidator\\__init__.py.__init__",
      "analysis\\knowledge_consolidator\\__init__.py.execute",
      "analysis\\knowledge_consolidator\\__init__.py.validate"
    ],
    "analysis\\research_manager\\migrated_navigation_index_generator.py": [
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.__init__",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_story_id",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_document",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.run"
    ],
    "analysis\\research_manager\\research_manager.py": [
      "analysis\\research_manager\\research_manager.py.main",
      "analysis\\research_manager\\research_manager.py.__init__",
      "analysis\\research_manager\\research_manager.py.execute",
      "analysis\\research_manager\\research_manager.py._execute_module_logic",
      "analysis\\research_manager\\research_manager.py.validate",
      "analysis\\research_manager\\research_manager.py._validate_module_logic"
    ],
    "analysis\\research_manager\\__init__.py": [
      "analysis\\research_manager\\__init__.py.__init__",
      "analysis\\research_manager\\__init__.py.execute",
      "analysis\\research_manager\\__init__.py.validate"
    ],
    "analysis\\source_analyzer\\migrated_otclient_debug_tools.py": [
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.main",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.__init__",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_lua_debugger",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report"
    ],
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.__init__",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features"
    ],
    "analysis\\source_analyzer\\source_analyzer.py": [
      "analysis\\source_analyzer\\source_analyzer.py.main",
      "analysis\\source_analyzer\\source_analyzer.py.__init__",
      "analysis\\source_analyzer\\source_analyzer.py.execute",
      "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py.validate",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic"
    ],
    "analysis\\source_analyzer\\__init__.py": [
      "analysis\\source_analyzer\\__init__.py.__init__",
      "analysis\\source_analyzer\\__init__.py.execute",
      "analysis\\source_analyzer\\__init__.py.validate"
    ],
    "agents\\agent_integrator\\agent_integrator.py": [
      "agents\\agent_integrator\\agent_integrator.py.main",
      "agents\\agent_integrator\\agent_integrator.py.__init__",
      "agents\\agent_integrator\\agent_integrator.py.execute",
      "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
      "agents\\agent_integrator\\agent_integrator.py.validate",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic"
    ],
    "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py": [
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.__init__",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report"
    ],
    "agents\\agent_integrator\\__init__.py": [
      "agents\\agent_integrator\\__init__.py.__init__",
      "agents\\agent_integrator\\__init__.py.execute",
      "agents\\agent_integrator\\__init__.py.validate"
    ],
    "agents\\agent_monitor\\agent_monitor.py": [
      "agents\\agent_monitor\\agent_monitor.py.main",
      "agents\\agent_monitor\\agent_monitor.py.__init__",
      "agents\\agent_monitor\\agent_monitor.py.execute",
      "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
      "agents\\agent_monitor\\agent_monitor.py.validate",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic"
    ],
    "agents\\agent_monitor\\migrated_auto_monitor.py": [
      "agents\\agent_monitor\\migrated_auto_monitor.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_monitor\\migrated_auto_monitor.py.__init__",
      "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging",
      "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes",
      "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_memory_usage",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status"
    ],
    "agents\\agent_monitor\\__init__.py": [
      "agents\\agent_monitor\\__init__.py.__init__",
      "agents\\agent_monitor\\__init__.py.execute",
      "agents\\agent_monitor\\__init__.py.validate"
    ],
    "agents\\agent_optimizer\\agent_optimizer.py": [
      "agents\\agent_optimizer\\agent_optimizer.py.main",
      "agents\\agent_optimizer\\agent_optimizer.py.__init__",
      "agents\\agent_optimizer\\agent_optimizer.py.execute",
      "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py.validate",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic"
    ],
    "agents\\agent_optimizer\\__init__.py": [
      "agents\\agent_optimizer\\__init__.py.__init__",
      "agents\\agent_optimizer\\__init__.py.execute",
      "agents\\agent_optimizer\\__init__.py.validate"
    ],
    "agents\\agent_orchestrator\\agent_orchestrator.py": [
      "agents\\agent_orchestrator\\agent_orchestrator.py.main",
      "agents\\agent_orchestrator\\agent_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\agent_orchestrator.py.execute",
      "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py.validate",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic"
    ],
    "agents\\agent_orchestrator\\migrated_agents_orchestrator.py": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_alert_agent.py": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.main",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_analisador_erros.py": [
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.carregar_erros_existentes",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.registrar_erro",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module"
    ],
    "agents\\agent_orchestrator\\migrated_analyzer.py": [
      "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module"
    ],
    "agents\\agent_orchestrator\\migrated_code_generator_agent.py": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_dashboard_agent.py": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.main",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_color",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.get_status_emoji"
    ],
    "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.get_path",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.log_message"
    ],
    "agents\\agent_orchestrator\\migrated_documentation_agent.py": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_api_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_educational_validation_agent.py": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py": [
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.__init__",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results"
    ],
    "agents\\agent_orchestrator\\migrated_file_organization_agent.py": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.graph_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation"
    ],
    "agents\\agent_orchestrator\\migrated_integration_agent.py": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_dependencies",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_recommendations"
    ],
    "agents\\agent_orchestrator\\migrated_integration_planning_agent.py": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.main",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored"
    ],
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.__init__",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps"
    ],
    "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_metrics_agent.py": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.main",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py": [
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_module_creator.py": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.__init__",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report"
    ],
    "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_optimizer.py": [
      "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module"
    ],
    "agents\\agent_orchestrator\\migrated_professor_agent.py": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.log_message"
    ],
    "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.log_message",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute"
    ],
    "agents\\agent_orchestrator\\migrated_researcher_agent.py": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report"
    ],
    "agents\\agent_orchestrator\\migrated_task_master_agent.py": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run"
    ],
    "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.stop_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_message"
    ],
    "agents\\agent_orchestrator\\migrated_validator.py": [
      "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module"
    ],
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.get_path",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.create_file_safely",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.log_message"
    ],
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows"
    ],
    "agents\\agent_orchestrator\\__init__.py": [
      "agents\\agent_orchestrator\\__init__.py.__init__",
      "agents\\agent_orchestrator\\__init__.py.execute",
      "agents\\agent_orchestrator\\__init__.py.validate"
    ],
    "agents\\agent_organizer\\agent_organizer.py": [
      "agents\\agent_organizer\\agent_organizer.py.main",
      "agents\\agent_organizer\\agent_organizer.py.__init__",
      "agents\\agent_organizer\\agent_organizer.py.execute",
      "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\agent_organizer.py.validate",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic"
    ],
    "agents\\agent_organizer\\migrated_agent_organizer.py": [
      "agents\\agent_organizer\\migrated_agent_organizer.py.main",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.__init__",
      "agents\\agent_organizer\\migrated_agent_organizer.py.execute",
      "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py.validate",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic"
    ],
    "agents\\agent_organizer\\__init__.py": [
      "agents\\agent_organizer\\__init__.py.__init__",
      "agents\\agent_organizer\\__init__.py.execute",
      "agents\\agent_organizer\\__init__.py.validate"
    ],
    "agents\\agent_specialist\\agent_specialist.py": [
      "agents\\agent_specialist\\agent_specialist.py.main",
      "agents\\agent_specialist\\agent_specialist.py.__init__",
      "agents\\agent_specialist\\agent_specialist.py.execute",
      "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
      "agents\\agent_specialist\\agent_specialist.py.validate",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic"
    ],
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py": [
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.__init__",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation"
    ],
    "agents\\agent_specialist\\__init__.py": [
      "agents\\agent_specialist\\__init__.py.__init__",
      "agents\\agent_specialist\\__init__.py.execute",
      "agents\\agent_specialist\\__init__.py.validate"
    ],
    "agents\\agent_validator\\agent_validator.py": [
      "agents\\agent_validator\\agent_validator.py.main",
      "agents\\agent_validator\\agent_validator.py.__init__",
      "agents\\agent_validator\\agent_validator.py.execute",
      "agents\\agent_validator\\agent_validator.py._execute_module_logic",
      "agents\\agent_validator\\agent_validator.py.validate",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic"
    ],
    "agents\\agent_validator\\migrated_aaa_integration_validator.py": [
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.__init__",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report"
    ],
    "agents\\agent_validator\\__init__.py": [
      "agents\\agent_validator\\__init__.py.__init__",
      "agents\\agent_validator\\__init__.py.execute",
      "agents\\agent_validator\\__init__.py.validate"
    ],
    "agents\\workflow_manager\\migrated_integration_workflow.py": [
      "agents\\workflow_manager\\migrated_integration_workflow.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_integration_workflow.py.__init__",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_deployment",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions",
      "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates",
      "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows",
      "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests",
      "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_deployment",
      "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status"
    ],
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py": [
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.__init__",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results"
    ],
    "agents\\workflow_manager\\migrated_run_module_workflow.py": [
      "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module"
    ],
    "agents\\workflow_manager\\workflow_manager.py": [
      "agents\\workflow_manager\\workflow_manager.py.main",
      "agents\\workflow_manager\\workflow_manager.py.__init__",
      "agents\\workflow_manager\\workflow_manager.py.execute",
      "agents\\workflow_manager\\workflow_manager.py._execute_module_logic",
      "agents\\workflow_manager\\workflow_manager.py.validate",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic"
    ],
    "agents\\workflow_manager\\__init__.py": [
      "agents\\workflow_manager\\__init__.py.__init__",
      "agents\\workflow_manager\\__init__.py.execute",
      "agents\\workflow_manager\\__init__.py.validate"
    ]
  },
  "by_keyword": {
    "função": [
      "tools\\backup_system\\backup_system.py.main",
      "tools\\backup_system\\migrated_backup_system.py.main",
      "tools\\cleanup_system\\cleanup_system.py.main",
      "tools\\cleanup_system\\migrated_cleanup_system.py.main",
      "tools\\config_manager\\config_manager.py.main",
      "tools\\config_manager\\migrated_update_context_system.py.main",
      "tools\\file_mover\\file_mover.py.main",
      "tools\\git_automation\\git_automation.py.main",
      "tools\\git_automation\\migrated_git_task_integration.py.main",
      "tools\\log_manager\\log_manager.py.main",
      "tools\\log_manager\\migrated_centralize_logs.py.main",
      "python\\code_analyzer\\code_analyzer.py.main",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.main",
      "python\\code_optimizer\\code_optimizer.py.main",
      "python\\code_optimizer\\migrated_auto_optimizer.py.main",
      "python\\documentation_generator\\documentation_generator.py.main",
      "python\\error_resolver\\error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
      "python\\python_agent\\python_agent.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "python\\recipe_manager\\recipe_manager.py.main",
      "python\\script_executor\\migrated_script_execution_manager.py.main",
      "python\\script_executor\\script_executor.py.main",
      "metrics\\alert_system\\alert_system.py.main",
      "metrics\\alert_system\\migrated_alert_system.py.main",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.main",
      "metrics\\metrics_collector\\metrics_collector.py.main",
      "metrics\\metrics_collector\\migrated_metrics_system.py.main",
      "metrics\\metrics_reporter\\metrics_reporter.py.main",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
      "metrics\\performance_monitor\\performance_monitor.py.main",
      "maps\\habdel_indexer\\habdel_indexer.py.main",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.main",
      "maps\\map_optimizer\\map_optimizer.py.main",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\map_updater.py.main",
      "maps\\map_updater\\migrated_advanced_searcher.py.main",
      "maps\\map_updater\\migrated_agent_integrator.py.main",
      "maps\\map_updater\\migrated_agent_monitor.py.main",
      "maps\\map_updater\\migrated_agent_optimizer.py.main",
      "maps\\map_updater\\migrated_agent_orchestrator.py.main",
      "maps\\map_updater\\migrated_agent_specialist.py.main",
      "maps\\map_updater\\migrated_agent_validator.py.main",
      "maps\\map_updater\\migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_code_analyzer.py.main",
      "maps\\map_updater\\migrated_code_optimizer.py.main",
      "maps\\map_updater\\migrated_config_manager.py.main",
      "maps\\map_updater\\migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_content_validator.py.main",
      "maps\\map_updater\\migrated_dashboard_monitor.py.main",
      "maps\\map_updater\\migrated_documentation_generator.py.main",
      "maps\\map_updater\\migrated_documentation_organizer.py.main",
      "maps\\map_updater\\migrated_error_resolver.py.main",
      "maps\\map_updater\\migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_git_automation.py.main",
      "maps\\map_updater\\migrated_habdel_indexer.py.main",
      "maps\\map_updater\\migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_intelligent_navigator.py.main",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
      "maps\\map_updater\\migrated_log_manager.py.main",
      "maps\\map_updater\\migrated_map_optimizer.py.main",
      "maps\\map_updater\\migrated_map_updater.py.main",
      "maps\\map_updater\\migrated_map_validator.py.main",
      "maps\\map_updater\\migrated_markdown_processor.py.main",
      "maps\\map_updater\\migrated_metrics_analyzer.py.main",
      "maps\\map_updater\\migrated_metrics_collector.py.main",
      "maps\\map_updater\\migrated_metrics_reporter.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
      "maps\\map_updater\\migrated_migrated_alert_system.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.main",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.main",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_migrated_backup_system.py.main",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.main",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_migrated_context_detector.py.main",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.main",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.main",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
      "maps\\map_updater\\migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_modules_indexer.py.main",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_python_agent.py.main",
      "maps\\map_updater\\migrated_recipe_manager.py.main",
      "maps\\map_updater\\migrated_research_manager.py.main",
      "maps\\map_updater\\migrated_resources_indexer.py.main",
      "maps\\map_updater\\migrated_script_executor.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.main",
      "maps\\map_updater\\migrated_source_analyzer.py.main",
      "maps\\map_updater\\migrated_source_indexer.py.main",
      "maps\\map_updater\\migrated_styles_indexer.py.main",
      "maps\\map_updater\\migrated_tools_indexer.py.main",
      "maps\\map_updater\\migrated_update_readme.py.main",
      "maps\\map_updater\\migrated_wiki_expander.py.main",
      "maps\\map_updater\\migrated_wiki_fixer.py.main",
      "maps\\map_updater\\migrated_wiki_indexer.py.main",
      "maps\\map_updater\\migrated_wiki_optimizer.py.main",
      "maps\\map_updater\\migrated_workflow_manager.py.main",
      "maps\\map_validator\\map_validator.py.main",
      "maps\\modules_indexer\\migrated_update_modules_index.py.main",
      "maps\\modules_indexer\\modules_indexer.py.main",
      "maps\\resources_indexer\\migrated_update_resources_index.py.main",
      "maps\\resources_indexer\\resources_indexer.py.main",
      "maps\\source_indexer\\migrated_update_source_index.py.main",
      "maps\\source_indexer\\source_indexer.py.main",
      "maps\\styles_indexer\\migrated_update_styles_index.py.main",
      "maps\\styles_indexer\\styles_indexer.py.main",
      "maps\\tools_indexer\\migrated_update_tools_index.py.main",
      "maps\\tools_indexer\\tools_indexer.py.main",
      "maps\\wiki_indexer\\wiki_indexer.py.main",
      "documentation\\content_validator\\content_validator.py.main",
      "documentation\\content_validator\\migrated_update_json_maps.py.main",
      "documentation\\documentation_organizer\\documentation_organizer.py.main",
      "documentation\\markdown_processor\\markdown_processor.py.main",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.main",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.main",
      "documentation\\wiki_expander\\wiki_expander.py.main",
      "documentation\\wiki_fixer\\wiki_fixer.py.main",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.main",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
      "analysis\\advanced_searcher\\advanced_searcher.py.main",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
      "analysis\\context_detector\\context_detector.py.main",
      "analysis\\context_detector\\migrated_context_detector.py.main",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main",
      "analysis\\research_manager\\research_manager.py.main",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.main",
      "analysis\\source_analyzer\\source_analyzer.py.main",
      "agents\\agent_integrator\\agent_integrator.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_monitor\\agent_monitor.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.main",
      "agents\\agent_optimizer\\agent_optimizer.py.main",
      "agents\\agent_orchestrator\\agent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.main",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_organizer\\agent_organizer.py.main",
      "agents\\agent_organizer\\migrated_agent_organizer.py.main",
      "agents\\agent_specialist\\agent_specialist.py.main",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_validator\\agent_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
      "agents\\workflow_manager\\workflow_manager.py.main"
    ],
    "principal": [
      "tools\\backup_system\\backup_system.py.main",
      "tools\\backup_system\\migrated_backup_system.py.main",
      "tools\\cleanup_system\\cleanup_system.py.main",
      "tools\\cleanup_system\\migrated_cleanup_system.py.main",
      "tools\\config_manager\\config_manager.py.main",
      "tools\\config_manager\\migrated_update_context_system.py.main",
      "tools\\file_mover\\file_mover.py.main",
      "tools\\git_automation\\git_automation.py.main",
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop",
      "tools\\log_manager\\log_manager.py.main",
      "tools\\log_manager\\migrated_centralize_logs.py.main",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "python\\code_analyzer\\code_analyzer.py.main",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.main",
      "python\\code_optimizer\\code_optimizer.py.main",
      "python\\code_optimizer\\migrated_auto_optimizer.py.main",
      "python\\documentation_generator\\documentation_generator.py.main",
      "python\\error_resolver\\error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\python_agent\\python_agent.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "python\\recipe_manager\\recipe_manager.py.main",
      "python\\script_executor\\migrated_script_execution_manager.py.main",
      "python\\script_executor\\script_executor.py.main",
      "metrics\\alert_system\\alert_system.py.main",
      "metrics\\alert_system\\migrated_alert_system.py.main",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.main",
      "metrics\\metrics_collector\\metrics_collector.py.main",
      "metrics\\metrics_collector\\migrated_metrics_system.py.main",
      "metrics\\metrics_reporter\\metrics_reporter.py.main",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
      "metrics\\performance_monitor\\performance_monitor.py.main",
      "maps\\habdel_indexer\\habdel_indexer.py.main",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.main",
      "maps\\map_optimizer\\map_optimizer.py.main",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\map_updater.py.main",
      "maps\\map_updater\\migrated_advanced_searcher.py.main",
      "maps\\map_updater\\migrated_agent_integrator.py.main",
      "maps\\map_updater\\migrated_agent_monitor.py.main",
      "maps\\map_updater\\migrated_agent_optimizer.py.main",
      "maps\\map_updater\\migrated_agent_orchestrator.py.main",
      "maps\\map_updater\\migrated_agent_specialist.py.main",
      "maps\\map_updater\\migrated_agent_validator.py.main",
      "maps\\map_updater\\migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_code_analyzer.py.main",
      "maps\\map_updater\\migrated_code_optimizer.py.main",
      "maps\\map_updater\\migrated_config_manager.py.main",
      "maps\\map_updater\\migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_content_validator.py.main",
      "maps\\map_updater\\migrated_dashboard_monitor.py.main",
      "maps\\map_updater\\migrated_documentation_generator.py.main",
      "maps\\map_updater\\migrated_documentation_organizer.py.main",
      "maps\\map_updater\\migrated_error_resolver.py.main",
      "maps\\map_updater\\migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_git_automation.py.main",
      "maps\\map_updater\\migrated_habdel_indexer.py.main",
      "maps\\map_updater\\migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_intelligent_navigator.py.main",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
      "maps\\map_updater\\migrated_log_manager.py.main",
      "maps\\map_updater\\migrated_map_optimizer.py.main",
      "maps\\map_updater\\migrated_map_updater.py.main",
      "maps\\map_updater\\migrated_map_validator.py.main",
      "maps\\map_updater\\migrated_markdown_processor.py.main",
      "maps\\map_updater\\migrated_metrics_analyzer.py.main",
      "maps\\map_updater\\migrated_metrics_collector.py.main",
      "maps\\map_updater\\migrated_metrics_reporter.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
      "maps\\map_updater\\migrated_migrated_alert_system.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.main",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.main",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.main",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.main",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_migrated_backup_system.py.main",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.main",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.main",
      "maps\\map_updater\\migrated_migrated_context_detector.py.main",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.main",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.main",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.main",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop",
      "maps\\map_updater\\migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_modules_indexer.py.main",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.main",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.main",
      "maps\\map_updater\\migrated_python_agent.py.main",
      "maps\\map_updater\\migrated_recipe_manager.py.main",
      "maps\\map_updater\\migrated_research_manager.py.main",
      "maps\\map_updater\\migrated_resources_indexer.py.main",
      "maps\\map_updater\\migrated_script_executor.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.main",
      "maps\\map_updater\\migrated_source_analyzer.py.main",
      "maps\\map_updater\\migrated_source_indexer.py.main",
      "maps\\map_updater\\migrated_styles_indexer.py.main",
      "maps\\map_updater\\migrated_tools_indexer.py.main",
      "maps\\map_updater\\migrated_update_readme.py.main",
      "maps\\map_updater\\migrated_wiki_expander.py.main",
      "maps\\map_updater\\migrated_wiki_fixer.py.main",
      "maps\\map_updater\\migrated_wiki_indexer.py.main",
      "maps\\map_updater\\migrated_wiki_optimizer.py.main",
      "maps\\map_updater\\migrated_workflow_manager.py.main",
      "maps\\map_validator\\map_validator.py.main",
      "maps\\modules_indexer\\migrated_update_modules_index.py.main",
      "maps\\modules_indexer\\modules_indexer.py.main",
      "maps\\resources_indexer\\migrated_update_resources_index.py.main",
      "maps\\resources_indexer\\resources_indexer.py.main",
      "maps\\source_indexer\\migrated_update_source_index.py.main",
      "maps\\source_indexer\\source_indexer.py.main",
      "maps\\styles_indexer\\migrated_update_styles_index.py.main",
      "maps\\styles_indexer\\styles_indexer.py.main",
      "maps\\tools_indexer\\migrated_update_tools_index.py.main",
      "maps\\tools_indexer\\tools_indexer.py.main",
      "maps\\wiki_indexer\\wiki_indexer.py.main",
      "documentation\\content_validator\\content_validator.py.main",
      "documentation\\content_validator\\migrated_update_json_maps.py.main",
      "documentation\\documentation_organizer\\documentation_organizer.py.main",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\markdown_processor\\markdown_processor.py.main",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.main",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.main",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_expander\\wiki_expander.py.main",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_fixer\\wiki_fixer.py.main",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.main",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
      "analysis\\advanced_searcher\\advanced_searcher.py.main",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\context_detector\\context_detector.py.main",
      "analysis\\context_detector\\migrated_context_detector.py.main",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main",
      "analysis\\research_manager\\research_manager.py.main",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.main",
      "analysis\\source_analyzer\\source_analyzer.py.main",
      "agents\\agent_integrator\\agent_integrator.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_monitor\\agent_monitor.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.main",
      "agents\\agent_optimizer\\agent_optimizer.py.main",
      "agents\\agent_orchestrator\\agent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.main",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_organizer\\agent_organizer.py.main",
      "agents\\agent_organizer\\migrated_agent_organizer.py.main",
      "agents\\agent_specialist\\agent_specialist.py.main",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_validator\\agent_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
      "agents\\workflow_manager\\workflow_manager.py.main"
    ],
    "módulo": [
      "tools\\backup_system\\backup_system.py.main",
      "tools\\backup_system\\backup_system.py.execute",
      "tools\\backup_system\\backup_system.py._execute_module_logic",
      "tools\\backup_system\\backup_system.py.validate",
      "tools\\backup_system\\backup_system.py._validate_module_logic",
      "tools\\backup_system\\migrated_backup_system.py.main",
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\backup_system\\migrated_backup_system.py.execute",
      "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
      "tools\\backup_system\\migrated_backup_system.py.validate",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
      "tools\\backup_system\\__init__.py.execute",
      "tools\\backup_system\\__init__.py.validate",
      "tools\\cleanup_system\\cleanup_system.py.main",
      "tools\\cleanup_system\\cleanup_system.py.execute",
      "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\cleanup_system.py.validate",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py.main",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.execute",
      "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py.validate",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\__init__.py.execute",
      "tools\\cleanup_system\\__init__.py.validate",
      "tools\\config_manager\\config_manager.py.main",
      "tools\\config_manager\\config_manager.py.execute",
      "tools\\config_manager\\config_manager.py._execute_module_logic",
      "tools\\config_manager\\config_manager.py.validate",
      "tools\\config_manager\\config_manager.py._validate_module_logic",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\config_manager\\__init__.py.execute",
      "tools\\config_manager\\__init__.py.validate",
      "tools\\file_mover\\file_mover.py.main",
      "tools\\file_mover\\file_mover.py.execute",
      "tools\\file_mover\\file_mover.py._execute_module_logic",
      "tools\\file_mover\\file_mover.py.validate",
      "tools\\file_mover\\file_mover.py._validate_module_logic",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
      "tools\\file_mover\\__init__.py.execute",
      "tools\\file_mover\\__init__.py.validate",
      "tools\\git_automation\\git_automation.py.main",
      "tools\\git_automation\\git_automation.py.execute",
      "tools\\git_automation\\git_automation.py._execute_module_logic",
      "tools\\git_automation\\git_automation.py.validate",
      "tools\\git_automation\\git_automation.py._validate_module_logic",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\git_automation\\__init__.py.execute",
      "tools\\git_automation\\__init__.py.validate",
      "tools\\log_manager\\log_manager.py.main",
      "tools\\log_manager\\log_manager.py.execute",
      "tools\\log_manager\\log_manager.py._execute_module_logic",
      "tools\\log_manager\\log_manager.py.validate",
      "tools\\log_manager\\log_manager.py._validate_module_logic",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "tools\\log_manager\\__init__.py.execute",
      "tools\\log_manager\\__init__.py.validate",
      "python\\code_analyzer\\code_analyzer.py.main",
      "python\\code_analyzer\\code_analyzer.py.execute",
      "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
      "python\\code_analyzer\\code_analyzer.py.validate",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_analyzer\\__init__.py.execute",
      "python\\code_analyzer\\__init__.py.validate",
      "python\\code_optimizer\\code_optimizer.py.main",
      "python\\code_optimizer\\code_optimizer.py.execute",
      "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
      "python\\code_optimizer\\code_optimizer.py.validate",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\code_optimizer\\__init__.py.execute",
      "python\\code_optimizer\\__init__.py.validate",
      "python\\documentation_generator\\documentation_generator.py.main",
      "python\\documentation_generator\\documentation_generator.py.execute",
      "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
      "python\\documentation_generator\\documentation_generator.py.validate",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
      "python\\documentation_generator\\__init__.py.execute",
      "python\\documentation_generator\\__init__.py.validate",
      "python\\error_resolver\\error_resolver.py.main",
      "python\\error_resolver\\error_resolver.py.execute",
      "python\\error_resolver\\error_resolver.py._execute_module_logic",
      "python\\error_resolver\\error_resolver.py.validate",
      "python\\error_resolver\\error_resolver.py._validate_module_logic",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\error_resolver\\__init__.py.execute",
      "python\\error_resolver\\__init__.py.validate",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\python_agent\\python_agent.py.main",
      "python\\python_agent\\python_agent.py.execute",
      "python\\python_agent\\python_agent.py._execute_module_logic",
      "python\\python_agent\\python_agent.py.validate",
      "python\\python_agent\\python_agent.py._validate_module_logic",
      "python\\python_agent\\__init__.py.execute",
      "python\\python_agent\\__init__.py.validate",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\recipe_manager\\recipe_manager.py.main",
      "python\\recipe_manager\\recipe_manager.py.execute",
      "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
      "python\\recipe_manager\\recipe_manager.py.validate",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
      "python\\recipe_manager\\__init__.py.execute",
      "python\\recipe_manager\\__init__.py.validate",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "python\\script_executor\\script_executor.py.main",
      "python\\script_executor\\script_executor.py.execute",
      "python\\script_executor\\script_executor.py._execute_module_logic",
      "python\\script_executor\\script_executor.py.validate",
      "python\\script_executor\\script_executor.py._validate_module_logic",
      "python\\script_executor\\__init__.py.execute",
      "python\\script_executor\\__init__.py.validate",
      "metrics\\alert_system\\alert_system.py.main",
      "metrics\\alert_system\\alert_system.py.execute",
      "metrics\\alert_system\\alert_system.py._execute_module_logic",
      "metrics\\alert_system\\alert_system.py.validate",
      "metrics\\alert_system\\alert_system.py._validate_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py.main",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\alert_system\\migrated_alert_system.py.execute",
      "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py.validate",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
      "metrics\\alert_system\\__init__.py.execute",
      "metrics\\alert_system\\__init__.py.validate",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.main",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.execute",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.validate",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\dashboard_monitor\\__init__.py.execute",
      "metrics\\dashboard_monitor\\__init__.py.validate",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.main",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.execute",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.validate",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_analyzer\\__init__.py.execute",
      "metrics\\metrics_analyzer\\__init__.py.validate",
      "metrics\\metrics_collector\\metrics_collector.py.main",
      "metrics\\metrics_collector\\metrics_collector.py.execute",
      "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py.validate",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\metrics_collector\\__init__.py.execute",
      "metrics\\metrics_collector\\__init__.py.validate",
      "metrics\\metrics_reporter\\metrics_reporter.py.main",
      "metrics\\metrics_reporter\\metrics_reporter.py.execute",
      "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py.validate",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
      "metrics\\metrics_reporter\\__init__.py.execute",
      "metrics\\metrics_reporter\\__init__.py.validate",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.main",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.execute",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.validate",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py.main",
      "metrics\\performance_monitor\\performance_monitor.py.execute",
      "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py.validate",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\__init__.py.execute",
      "metrics\\performance_monitor\\__init__.py.validate",
      "maps\\habdel_indexer\\habdel_indexer.py.main",
      "maps\\habdel_indexer\\habdel_indexer.py.execute",
      "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py.validate",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\habdel_indexer\\__init__.py.execute",
      "maps\\habdel_indexer\\__init__.py.validate",
      "maps\\map_optimizer\\map_optimizer.py.main",
      "maps\\map_optimizer\\map_optimizer.py.execute",
      "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
      "maps\\map_optimizer\\map_optimizer.py.validate",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_optimizer\\__init__.py.execute",
      "maps\\map_optimizer\\__init__.py.validate",
      "maps\\map_updater\\map_updater.py.main",
      "maps\\map_updater\\map_updater.py.execute",
      "maps\\map_updater\\map_updater.py._execute_module_logic",
      "maps\\map_updater\\map_updater.py.validate",
      "maps\\map_updater\\map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py.main",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.execute",
      "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py.validate",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py.main",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.execute",
      "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py.validate",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py.main",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.execute",
      "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py.validate",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py.main",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.execute",
      "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py.validate",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py.main",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.execute",
      "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py.validate",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py.main",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.execute",
      "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py.validate",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py.main",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.execute",
      "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py.validate",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.main",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.execute",
      "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py.validate",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py.main",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.execute",
      "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py.validate",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_config_manager.py.main",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.execute",
      "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_config_manager.py.validate",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.main",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.execute",
      "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_content_validator.py.validate",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py.main",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.execute",
      "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py.validate",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py.main",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.execute",
      "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py.validate",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py.main",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.execute",
      "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py.validate",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py.main",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.execute",
      "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py.validate",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.main",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.execute",
      "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
      "maps\\map_updater\\migrated_git_automation.py.validate",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py.main",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.execute",
      "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py.validate",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.main",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.execute",
      "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py.validate",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.main",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.execute",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.validate",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
      "maps\\map_updater\\migrated_log_manager.py.main",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.execute",
      "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_log_manager.py.validate",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py.main",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.execute",
      "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py.validate",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_updater.py.main",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.execute",
      "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_updater.py.validate",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_validator.py.main",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.execute",
      "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_validator.py.validate",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py.main",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.execute",
      "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py.validate",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py.main",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.execute",
      "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py.validate",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py.main",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.execute",
      "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py.validate",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py.main",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.execute",
      "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py.validate",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.main",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.execute",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.validate",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py.main",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.execute",
      "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py.validate",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.main",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.main",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.main",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.execute",
      "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py.validate",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.main",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.execute",
      "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py.validate",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.main",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.execute",
      "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
      "maps\\map_updater\\migrated_python_agent.py.validate",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py.main",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.execute",
      "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py.validate",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_research_manager.py.main",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.execute",
      "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_research_manager.py.validate",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py.main",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.execute",
      "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py.validate",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_executor.py.main",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.execute",
      "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
      "maps\\map_updater\\migrated_script_executor.py.validate",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
      "maps\\map_updater\\migrated_source_analyzer.py.main",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_analyzer.py.execute",
      "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py.validate",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py.main",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.execute",
      "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py.validate",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py.main",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.execute",
      "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py.validate",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py.main",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.execute",
      "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py.validate",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.main",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.execute",
      "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py.validate",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py.main",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.execute",
      "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py.validate",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py.main",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.execute",
      "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py.validate",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py.main",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.execute",
      "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py.validate",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py.main",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.execute",
      "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py.validate",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.execute",
      "maps\\map_updater\\migrated___init__.py.validate",
      "maps\\map_updater\\__init__.py.execute",
      "maps\\map_updater\\__init__.py.validate",
      "maps\\map_validator\\map_validator.py.main",
      "maps\\map_validator\\map_validator.py.execute",
      "maps\\map_validator\\map_validator.py._execute_module_logic",
      "maps\\map_validator\\map_validator.py.validate",
      "maps\\map_validator\\map_validator.py._validate_module_logic",
      "maps\\map_validator\\__init__.py.execute",
      "maps\\map_validator\\__init__.py.validate",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_module",
      "maps\\modules_indexer\\modules_indexer.py.main",
      "maps\\modules_indexer\\modules_indexer.py.execute",
      "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
      "maps\\modules_indexer\\modules_indexer.py.validate",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
      "maps\\modules_indexer\\__init__.py.execute",
      "maps\\modules_indexer\\__init__.py.validate",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\resources_indexer\\resources_indexer.py.main",
      "maps\\resources_indexer\\resources_indexer.py.execute",
      "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
      "maps\\resources_indexer\\resources_indexer.py.validate",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
      "maps\\resources_indexer\\__init__.py.execute",
      "maps\\resources_indexer\\__init__.py.validate",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\source_indexer\\source_indexer.py.main",
      "maps\\source_indexer\\source_indexer.py.execute",
      "maps\\source_indexer\\source_indexer.py._execute_module_logic",
      "maps\\source_indexer\\source_indexer.py.validate",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic",
      "maps\\source_indexer\\__init__.py.execute",
      "maps\\source_indexer\\__init__.py.validate",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\styles_indexer\\styles_indexer.py.main",
      "maps\\styles_indexer\\styles_indexer.py.execute",
      "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
      "maps\\styles_indexer\\styles_indexer.py.validate",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
      "maps\\styles_indexer\\__init__.py.execute",
      "maps\\styles_indexer\\__init__.py.validate",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\tools_indexer\\tools_indexer.py.main",
      "maps\\tools_indexer\\tools_indexer.py.execute",
      "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
      "maps\\tools_indexer\\tools_indexer.py.validate",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
      "maps\\tools_indexer\\__init__.py.execute",
      "maps\\tools_indexer\\__init__.py.validate",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "maps\\wiki_indexer\\wiki_indexer.py.main",
      "maps\\wiki_indexer\\wiki_indexer.py.execute",
      "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py.validate",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
      "maps\\wiki_indexer\\__init__.py.execute",
      "maps\\wiki_indexer\\__init__.py.validate",
      "documentation\\content_validator\\content_validator.py.main",
      "documentation\\content_validator\\content_validator.py.execute",
      "documentation\\content_validator\\content_validator.py._execute_module_logic",
      "documentation\\content_validator\\content_validator.py.validate",
      "documentation\\content_validator\\content_validator.py._validate_module_logic",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\content_validator\\__init__.py.execute",
      "documentation\\content_validator\\__init__.py.validate",
      "documentation\\documentation_organizer\\documentation_organizer.py.main",
      "documentation\\documentation_organizer\\documentation_organizer.py.execute",
      "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py.validate",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\documentation_organizer\\__init__.py.execute",
      "documentation\\documentation_organizer\\__init__.py.validate",
      "documentation\\markdown_processor\\markdown_processor.py.main",
      "documentation\\markdown_processor\\markdown_processor.py.execute",
      "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py.validate",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
      "documentation\\markdown_processor\\__init__.py.execute",
      "documentation\\markdown_processor\\__init__.py.validate",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_expander\\wiki_expander.py.main",
      "documentation\\wiki_expander\\wiki_expander.py.execute",
      "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py.validate",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
      "documentation\\wiki_expander\\__init__.py.execute",
      "documentation\\wiki_expander\\__init__.py.validate",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_fixer\\wiki_fixer.py.main",
      "documentation\\wiki_fixer\\wiki_fixer.py.execute",
      "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py.validate",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
      "documentation\\wiki_fixer\\__init__.py.execute",
      "documentation\\wiki_fixer\\__init__.py.validate",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.main",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.execute",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.validate",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
      "documentation\\wiki_optimizer\\__init__.py.execute",
      "documentation\\wiki_optimizer\\__init__.py.validate",
      "analysis\\advanced_searcher\\advanced_searcher.py.main",
      "analysis\\advanced_searcher\\advanced_searcher.py.execute",
      "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py.validate",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\advanced_searcher\\__init__.py.execute",
      "analysis\\advanced_searcher\\__init__.py.validate",
      "analysis\\context_detector\\context_detector.py.main",
      "analysis\\context_detector\\context_detector.py.execute",
      "analysis\\context_detector\\context_detector.py._execute_module_logic",
      "analysis\\context_detector\\context_detector.py.validate",
      "analysis\\context_detector\\context_detector.py._validate_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py.main",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.execute",
      "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py.validate",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
      "analysis\\context_detector\\__init__.py.execute",
      "analysis\\context_detector\\__init__.py.validate",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.main",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.execute",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.validate",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\intelligent_navigator\\__init__.py.execute",
      "analysis\\intelligent_navigator\\__init__.py.validate",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.main",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.execute",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.validate",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\__init__.py.execute",
      "analysis\\knowledge_consolidator\\__init__.py.validate",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\research_manager\\research_manager.py.main",
      "analysis\\research_manager\\research_manager.py.execute",
      "analysis\\research_manager\\research_manager.py._execute_module_logic",
      "analysis\\research_manager\\research_manager.py.validate",
      "analysis\\research_manager\\research_manager.py._validate_module_logic",
      "analysis\\research_manager\\__init__.py.execute",
      "analysis\\research_manager\\__init__.py.validate",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "analysis\\source_analyzer\\source_analyzer.py.main",
      "analysis\\source_analyzer\\source_analyzer.py.execute",
      "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py.validate",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
      "analysis\\source_analyzer\\__init__.py.execute",
      "analysis\\source_analyzer\\__init__.py.validate",
      "agents\\agent_integrator\\agent_integrator.py.main",
      "agents\\agent_integrator\\agent_integrator.py.execute",
      "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
      "agents\\agent_integrator\\agent_integrator.py.validate",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_integrator\\__init__.py.execute",
      "agents\\agent_integrator\\__init__.py.validate",
      "agents\\agent_monitor\\agent_monitor.py.main",
      "agents\\agent_monitor\\agent_monitor.py.execute",
      "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
      "agents\\agent_monitor\\agent_monitor.py.validate",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_monitor\\__init__.py.execute",
      "agents\\agent_monitor\\__init__.py.validate",
      "agents\\agent_optimizer\\agent_optimizer.py.main",
      "agents\\agent_optimizer\\agent_optimizer.py.execute",
      "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py.validate",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
      "agents\\agent_optimizer\\__init__.py.execute",
      "agents\\agent_optimizer\\__init__.py.validate",
      "agents\\agent_orchestrator\\agent_orchestrator.py.main",
      "agents\\agent_orchestrator\\agent_orchestrator.py.execute",
      "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py.validate",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_orchestrator\\__init__.py.execute",
      "agents\\agent_orchestrator\\__init__.py.validate",
      "agents\\agent_organizer\\agent_organizer.py.main",
      "agents\\agent_organizer\\agent_organizer.py.execute",
      "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\agent_organizer.py.validate",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py.main",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.execute",
      "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py.validate",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\__init__.py.execute",
      "agents\\agent_organizer\\__init__.py.validate",
      "agents\\agent_specialist\\agent_specialist.py.main",
      "agents\\agent_specialist\\agent_specialist.py.execute",
      "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
      "agents\\agent_specialist\\agent_specialist.py.validate",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_specialist\\__init__.py.execute",
      "agents\\agent_specialist\\__init__.py.validate",
      "agents\\agent_validator\\agent_validator.py.main",
      "agents\\agent_validator\\agent_validator.py.execute",
      "agents\\agent_validator\\agent_validator.py._execute_module_logic",
      "agents\\agent_validator\\agent_validator.py.validate",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\agent_validator\\__init__.py.execute",
      "agents\\agent_validator\\__init__.py.validate",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\workflow_manager.py.main",
      "agents\\workflow_manager\\workflow_manager.py.execute",
      "agents\\workflow_manager\\workflow_manager.py._execute_module_logic",
      "agents\\workflow_manager\\workflow_manager.py.validate",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic",
      "agents\\workflow_manager\\__init__.py.execute",
      "agents\\workflow_manager\\__init__.py.validate"
    ],
    "executa": [
      "tools\\backup_system\\backup_system.py.execute",
      "tools\\backup_system\\migrated_backup_system.py.execute",
      "tools\\backup_system\\__init__.py.execute",
      "tools\\cleanup_system\\cleanup_system.py.execute",
      "tools\\cleanup_system\\migrated_cleanup_system.py.execute",
      "tools\\cleanup_system\\__init__.py.execute",
      "tools\\config_manager\\config_manager.py.execute",
      "tools\\config_manager\\__init__.py.execute",
      "tools\\file_mover\\file_mover.py.execute",
      "tools\\file_mover\\__init__.py.execute",
      "tools\\git_automation\\git_automation.py.execute",
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
      "tools\\git_automation\\__init__.py.execute",
      "tools\\log_manager\\log_manager.py.execute",
      "tools\\log_manager\\__init__.py.execute",
      "python\\code_analyzer\\code_analyzer.py.execute",
      "python\\code_analyzer\\__init__.py.execute",
      "python\\code_optimizer\\code_optimizer.py.execute",
      "python\\code_optimizer\\__init__.py.execute",
      "python\\documentation_generator\\documentation_generator.py.execute",
      "python\\documentation_generator\\__init__.py.execute",
      "python\\error_resolver\\error_resolver.py.execute",
      "python\\error_resolver\\__init__.py.execute",
      "python\\python_agent\\python_agent.py.execute",
      "python\\python_agent\\__init__.py.execute",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task",
      "python\\recipe_manager\\recipe_manager.py.execute",
      "python\\recipe_manager\\__init__.py.execute",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
      "python\\script_executor\\script_executor.py.execute",
      "python\\script_executor\\__init__.py.execute",
      "metrics\\alert_system\\alert_system.py.execute",
      "metrics\\alert_system\\migrated_alert_system.py.execute",
      "metrics\\alert_system\\__init__.py.execute",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.execute",
      "metrics\\dashboard_monitor\\__init__.py.execute",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.execute",
      "metrics\\metrics_analyzer\\__init__.py.execute",
      "metrics\\metrics_collector\\metrics_collector.py.execute",
      "metrics\\metrics_collector\\__init__.py.execute",
      "metrics\\metrics_reporter\\metrics_reporter.py.execute",
      "metrics\\metrics_reporter\\__init__.py.execute",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.execute",
      "metrics\\performance_monitor\\performance_monitor.py.execute",
      "metrics\\performance_monitor\\__init__.py.execute",
      "maps\\habdel_indexer\\habdel_indexer.py.execute",
      "maps\\habdel_indexer\\__init__.py.execute",
      "maps\\map_optimizer\\map_optimizer.py.execute",
      "maps\\map_optimizer\\__init__.py.execute",
      "maps\\map_updater\\map_updater.py.execute",
      "maps\\map_updater\\migrated_advanced_searcher.py.execute",
      "maps\\map_updater\\migrated_agent_integrator.py.execute",
      "maps\\map_updater\\migrated_agent_monitor.py.execute",
      "maps\\map_updater\\migrated_agent_optimizer.py.execute",
      "maps\\map_updater\\migrated_agent_orchestrator.py.execute",
      "maps\\map_updater\\migrated_agent_specialist.py.execute",
      "maps\\map_updater\\migrated_agent_validator.py.execute",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_code_analyzer.py.execute",
      "maps\\map_updater\\migrated_code_optimizer.py.execute",
      "maps\\map_updater\\migrated_config_manager.py.execute",
      "maps\\map_updater\\migrated_content_validator.py.execute",
      "maps\\map_updater\\migrated_dashboard_monitor.py.execute",
      "maps\\map_updater\\migrated_documentation_generator.py.execute",
      "maps\\map_updater\\migrated_documentation_organizer.py.execute",
      "maps\\map_updater\\migrated_error_resolver.py.execute",
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_git_automation.py.execute",
      "maps\\map_updater\\migrated_habdel_indexer.py.execute",
      "maps\\map_updater\\migrated_intelligent_navigator.py.execute",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.execute",
      "maps\\map_updater\\migrated_log_manager.py.execute",
      "maps\\map_updater\\migrated_map_optimizer.py.execute",
      "maps\\map_updater\\migrated_map_updater.py.execute",
      "maps\\map_updater\\migrated_map_validator.py.execute",
      "maps\\map_updater\\migrated_markdown_processor.py.execute",
      "maps\\map_updater\\migrated_metrics_analyzer.py.execute",
      "maps\\map_updater\\migrated_metrics_collector.py.execute",
      "maps\\map_updater\\migrated_metrics_reporter.py.execute",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.execute",
      "maps\\map_updater\\migrated_migrated_alert_system.py.execute",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_backup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.execute",
      "maps\\map_updater\\migrated_migrated_context_detector.py.execute",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_modules_indexer.py.execute",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_python_agent.py.execute",
      "maps\\map_updater\\migrated_recipe_manager.py.execute",
      "maps\\map_updater\\migrated_research_manager.py.execute",
      "maps\\map_updater\\migrated_resources_indexer.py.execute",
      "maps\\map_updater\\migrated_script_executor.py.execute",
      "maps\\map_updater\\migrated_source_analyzer.py.execute",
      "maps\\map_updater\\migrated_source_indexer.py.execute",
      "maps\\map_updater\\migrated_styles_indexer.py.execute",
      "maps\\map_updater\\migrated_tools_indexer.py.execute",
      "maps\\map_updater\\migrated_update_readme.py.run_full_update",
      "maps\\map_updater\\migrated_wiki_expander.py.execute",
      "maps\\map_updater\\migrated_wiki_fixer.py.execute",
      "maps\\map_updater\\migrated_wiki_indexer.py.execute",
      "maps\\map_updater\\migrated_wiki_optimizer.py.execute",
      "maps\\map_updater\\migrated_workflow_manager.py.execute",
      "maps\\map_updater\\migrated___init__.py.execute",
      "maps\\map_updater\\__init__.py.execute",
      "maps\\map_validator\\map_validator.py.execute",
      "maps\\map_validator\\__init__.py.execute",
      "maps\\modules_indexer\\modules_indexer.py.execute",
      "maps\\modules_indexer\\__init__.py.execute",
      "maps\\resources_indexer\\resources_indexer.py.execute",
      "maps\\resources_indexer\\__init__.py.execute",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run",
      "maps\\source_indexer\\source_indexer.py.execute",
      "maps\\source_indexer\\__init__.py.execute",
      "maps\\styles_indexer\\styles_indexer.py.execute",
      "maps\\styles_indexer\\__init__.py.execute",
      "maps\\tools_indexer\\tools_indexer.py.execute",
      "maps\\tools_indexer\\__init__.py.execute",
      "maps\\wiki_indexer\\wiki_indexer.py.execute",
      "maps\\wiki_indexer\\__init__.py.execute",
      "documentation\\content_validator\\content_validator.py.execute",
      "documentation\\content_validator\\__init__.py.execute",
      "documentation\\documentation_organizer\\documentation_organizer.py.execute",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run",
      "documentation\\documentation_organizer\\__init__.py.execute",
      "documentation\\markdown_processor\\markdown_processor.py.execute",
      "documentation\\markdown_processor\\__init__.py.execute",
      "documentation\\wiki_expander\\wiki_expander.py.execute",
      "documentation\\wiki_expander\\__init__.py.execute",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues",
      "documentation\\wiki_fixer\\wiki_fixer.py.execute",
      "documentation\\wiki_fixer\\__init__.py.execute",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.execute",
      "documentation\\wiki_optimizer\\__init__.py.execute",
      "analysis\\advanced_searcher\\advanced_searcher.py.execute",
      "analysis\\advanced_searcher\\__init__.py.execute",
      "analysis\\context_detector\\context_detector.py.execute",
      "analysis\\context_detector\\migrated_context_detector.py.execute",
      "analysis\\context_detector\\__init__.py.execute",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.execute",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\intelligent_navigator\\__init__.py.execute",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.execute",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "analysis\\knowledge_consolidator\\__init__.py.execute",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.run",
      "analysis\\research_manager\\research_manager.py.execute",
      "analysis\\research_manager\\__init__.py.execute",
      "analysis\\source_analyzer\\source_analyzer.py.execute",
      "analysis\\source_analyzer\\__init__.py.execute",
      "agents\\agent_integrator\\agent_integrator.py.execute",
      "agents\\agent_integrator\\__init__.py.execute",
      "agents\\agent_monitor\\agent_monitor.py.execute",
      "agents\\agent_monitor\\__init__.py.execute",
      "agents\\agent_optimizer\\agent_optimizer.py.execute",
      "agents\\agent_optimizer\\__init__.py.execute",
      "agents\\agent_orchestrator\\agent_orchestrator.py.execute",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.run",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.run",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.run",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase",
      "agents\\agent_orchestrator\\__init__.py.execute",
      "agents\\agent_organizer\\agent_organizer.py.execute",
      "agents\\agent_organizer\\migrated_agent_organizer.py.execute",
      "agents\\agent_organizer\\__init__.py.execute",
      "agents\\agent_specialist\\agent_specialist.py.execute",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
      "agents\\agent_specialist\\__init__.py.execute",
      "agents\\agent_validator\\agent_validator.py.execute",
      "agents\\agent_validator\\__init__.py.execute",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_deployment",
      "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow",
      "agents\\workflow_manager\\workflow_manager.py.execute",
      "agents\\workflow_manager\\__init__.py.execute"
    ],
    "lógica": [
      "tools\\backup_system\\backup_system.py._execute_module_logic",
      "tools\\backup_system\\backup_system.py._validate_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
      "tools\\config_manager\\config_manager.py._execute_module_logic",
      "tools\\config_manager\\config_manager.py._validate_module_logic",
      "tools\\file_mover\\file_mover.py._execute_module_logic",
      "tools\\file_mover\\file_mover.py._validate_module_logic",
      "tools\\git_automation\\git_automation.py._execute_module_logic",
      "tools\\git_automation\\git_automation.py._validate_module_logic",
      "tools\\log_manager\\log_manager.py._execute_module_logic",
      "tools\\log_manager\\log_manager.py._validate_module_logic",
      "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
      "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
      "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
      "python\\error_resolver\\error_resolver.py._execute_module_logic",
      "python\\error_resolver\\error_resolver.py._validate_module_logic",
      "python\\python_agent\\python_agent.py._execute_module_logic",
      "python\\python_agent\\python_agent.py._validate_module_logic",
      "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
      "python\\script_executor\\script_executor.py._execute_module_logic",
      "python\\script_executor\\script_executor.py._validate_module_logic",
      "metrics\\alert_system\\alert_system.py._execute_module_logic",
      "metrics\\alert_system\\alert_system.py._validate_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\map_updater.py._execute_module_logic",
      "maps\\map_updater\\map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
      "maps\\map_validator\\map_validator.py._execute_module_logic",
      "maps\\map_validator\\map_validator.py._validate_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
      "maps\\source_indexer\\source_indexer.py._execute_module_logic",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
      "documentation\\content_validator\\content_validator.py._execute_module_logic",
      "documentation\\content_validator\\content_validator.py._validate_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
      "analysis\\context_detector\\context_detector.py._execute_module_logic",
      "analysis\\context_detector\\context_detector.py._validate_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
      "analysis\\research_manager\\research_manager.py._execute_module_logic",
      "analysis\\research_manager\\research_manager.py._validate_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
      "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
      "agents\\agent_validator\\agent_validator.py._execute_module_logic",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic",
      "agents\\workflow_manager\\workflow_manager.py._execute_module_logic",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic"
    ],
    "específica": [
      "tools\\backup_system\\backup_system.py._execute_module_logic",
      "tools\\backup_system\\backup_system.py._validate_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._execute_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._execute_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
      "tools\\config_manager\\config_manager.py._execute_module_logic",
      "tools\\config_manager\\config_manager.py._validate_module_logic",
      "tools\\file_mover\\file_mover.py._execute_module_logic",
      "tools\\file_mover\\file_mover.py._validate_module_logic",
      "tools\\git_automation\\git_automation.py._execute_module_logic",
      "tools\\git_automation\\git_automation.py._validate_module_logic",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction",
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback",
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\log_manager\\log_manager.py._execute_module_logic",
      "tools\\log_manager\\log_manager.py._validate_module_logic",
      "python\\code_analyzer\\code_analyzer.py._execute_module_logic",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
      "python\\code_optimizer\\code_optimizer.py._execute_module_logic",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "python\\documentation_generator\\documentation_generator.py._execute_module_logic",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
      "python\\error_resolver\\error_resolver.py._execute_module_logic",
      "python\\error_resolver\\error_resolver.py._validate_module_logic",
      "python\\python_agent\\python_agent.py._execute_module_logic",
      "python\\python_agent\\python_agent.py._validate_module_logic",
      "python\\recipe_manager\\recipe_manager.py._execute_module_logic",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
      "python\\script_executor\\script_executor.py._execute_module_logic",
      "python\\script_executor\\script_executor.py._validate_module_logic",
      "metrics\\alert_system\\alert_system.py._execute_module_logic",
      "metrics\\alert_system\\alert_system.py._validate_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._execute_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._execute_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._execute_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._execute_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._execute_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._execute_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._execute_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._execute_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\map_updater.py._execute_module_logic",
      "maps\\map_updater\\map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._execute_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._execute_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._execute_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._execute_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._execute_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._execute_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._execute_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._execute_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._execute_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_backup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._execute_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "maps\\map_updater\\migrated_modules_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._execute_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._execute_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._execute_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._execute_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
      "maps\\map_validator\\map_validator.py._execute_module_logic",
      "maps\\map_validator\\map_validator.py._validate_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._execute_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._execute_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
      "maps\\source_indexer\\source_indexer.py._execute_module_logic",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._execute_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._execute_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._execute_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
      "documentation\\content_validator\\content_validator.py._execute_module_logic",
      "documentation\\content_validator\\content_validator.py._validate_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._execute_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._execute_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_expander\\wiki_expander.py._execute_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._execute_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._execute_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._execute_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
      "analysis\\context_detector\\context_detector.py._execute_module_logic",
      "analysis\\context_detector\\context_detector.py._validate_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._execute_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._execute_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._execute_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
      "analysis\\research_manager\\research_manager.py._execute_module_logic",
      "analysis\\research_manager\\research_manager.py._validate_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._execute_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._execute_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._execute_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._execute_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._execute_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update",
      "agents\\agent_organizer\\agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._execute_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._execute_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_validator\\agent_validator.py._execute_module_logic",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
      "agents\\workflow_manager\\workflow_manager.py._execute_module_logic",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic"
    ],
    "valida": [
      "tools\\backup_system\\backup_system.py.validate",
      "tools\\backup_system\\migrated_backup_system.py.validate",
      "tools\\backup_system\\__init__.py.validate",
      "tools\\cleanup_system\\cleanup_system.py.validate",
      "tools\\cleanup_system\\migrated_cleanup_system.py.validate",
      "tools\\cleanup_system\\__init__.py.validate",
      "tools\\config_manager\\config_manager.py.validate",
      "tools\\config_manager\\__init__.py.validate",
      "tools\\file_mover\\file_mover.py.validate",
      "tools\\file_mover\\__init__.py.validate",
      "tools\\git_automation\\git_automation.py.validate",
      "tools\\git_automation\\__init__.py.validate",
      "tools\\log_manager\\log_manager.py.validate",
      "tools\\log_manager\\__init__.py.validate",
      "python\\code_analyzer\\code_analyzer.py.validate",
      "python\\code_analyzer\\__init__.py.validate",
      "python\\code_optimizer\\code_optimizer.py.validate",
      "python\\code_optimizer\\__init__.py.validate",
      "python\\documentation_generator\\documentation_generator.py.validate",
      "python\\documentation_generator\\__init__.py.validate",
      "python\\error_resolver\\error_resolver.py.validate",
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax",
      "python\\error_resolver\\__init__.py.validate",
      "python\\python_agent\\python_agent.py.validate",
      "python\\python_agent\\__init__.py.validate",
      "python\\recipe_manager\\recipe_manager.py.validate",
      "python\\recipe_manager\\__init__.py.validate",
      "python\\script_executor\\script_executor.py.validate",
      "python\\script_executor\\__init__.py.validate",
      "metrics\\alert_system\\alert_system.py.validate",
      "metrics\\alert_system\\migrated_alert_system.py.validate",
      "metrics\\alert_system\\__init__.py.validate",
      "metrics\\dashboard_monitor\\dashboard_monitor.py.validate",
      "metrics\\dashboard_monitor\\__init__.py.validate",
      "metrics\\metrics_analyzer\\metrics_analyzer.py.validate",
      "metrics\\metrics_analyzer\\__init__.py.validate",
      "metrics\\metrics_collector\\metrics_collector.py.validate",
      "metrics\\metrics_collector\\__init__.py.validate",
      "metrics\\metrics_reporter\\metrics_reporter.py.validate",
      "metrics\\metrics_reporter\\__init__.py.validate",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.validate",
      "metrics\\performance_monitor\\performance_monitor.py.validate",
      "metrics\\performance_monitor\\__init__.py.validate",
      "maps\\habdel_indexer\\habdel_indexer.py.validate",
      "maps\\habdel_indexer\\__init__.py.validate",
      "maps\\map_optimizer\\map_optimizer.py.validate",
      "maps\\map_optimizer\\__init__.py.validate",
      "maps\\map_updater\\map_updater.py.validate",
      "maps\\map_updater\\migrated_advanced_searcher.py.validate",
      "maps\\map_updater\\migrated_agent_integrator.py.validate",
      "maps\\map_updater\\migrated_agent_monitor.py.validate",
      "maps\\map_updater\\migrated_agent_optimizer.py.validate",
      "maps\\map_updater\\migrated_agent_orchestrator.py.validate",
      "maps\\map_updater\\migrated_agent_specialist.py.validate",
      "maps\\map_updater\\migrated_agent_validator.py.validate",
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_code_analyzer.py.validate",
      "maps\\map_updater\\migrated_code_optimizer.py.validate",
      "maps\\map_updater\\migrated_config_manager.py.validate",
      "maps\\map_updater\\migrated_content_validator.py.validate",
      "maps\\map_updater\\migrated_dashboard_monitor.py.validate",
      "maps\\map_updater\\migrated_documentation_generator.py.validate",
      "maps\\map_updater\\migrated_documentation_organizer.py.validate",
      "maps\\map_updater\\migrated_error_resolver.py.validate",
      "maps\\map_updater\\migrated_git_automation.py.validate",
      "maps\\map_updater\\migrated_habdel_indexer.py.validate",
      "maps\\map_updater\\migrated_intelligent_navigator.py.validate",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.validate",
      "maps\\map_updater\\migrated_log_manager.py.validate",
      "maps\\map_updater\\migrated_map_optimizer.py.validate",
      "maps\\map_updater\\migrated_map_updater.py.validate",
      "maps\\map_updater\\migrated_map_validator.py.validate",
      "maps\\map_updater\\migrated_markdown_processor.py.validate",
      "maps\\map_updater\\migrated_metrics_analyzer.py.validate",
      "maps\\map_updater\\migrated_metrics_collector.py.validate",
      "maps\\map_updater\\migrated_metrics_reporter.py.validate",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.validate",
      "maps\\map_updater\\migrated_migrated_alert_system.py.validate",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_backup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.validate",
      "maps\\map_updater\\migrated_migrated_context_detector.py.validate",
      "maps\\map_updater\\migrated_modules_indexer.py.validate",
      "maps\\map_updater\\migrated_python_agent.py.validate",
      "maps\\map_updater\\migrated_recipe_manager.py.validate",
      "maps\\map_updater\\migrated_research_manager.py.validate",
      "maps\\map_updater\\migrated_resources_indexer.py.validate",
      "maps\\map_updater\\migrated_script_executor.py.validate",
      "maps\\map_updater\\migrated_source_analyzer.py.validate",
      "maps\\map_updater\\migrated_source_indexer.py.validate",
      "maps\\map_updater\\migrated_styles_indexer.py.validate",
      "maps\\map_updater\\migrated_tools_indexer.py.validate",
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality",
      "maps\\map_updater\\migrated_update_readme.py.validate_navigation",
      "maps\\map_updater\\migrated_wiki_expander.py.validate",
      "maps\\map_updater\\migrated_wiki_fixer.py.validate",
      "maps\\map_updater\\migrated_wiki_indexer.py.validate",
      "maps\\map_updater\\migrated_wiki_optimizer.py.validate",
      "maps\\map_updater\\migrated_workflow_manager.py.validate",
      "maps\\map_updater\\migrated___init__.py.validate",
      "maps\\map_updater\\__init__.py.validate",
      "maps\\map_validator\\map_validator.py.validate",
      "maps\\map_validator\\__init__.py.validate",
      "maps\\modules_indexer\\modules_indexer.py.validate",
      "maps\\modules_indexer\\__init__.py.validate",
      "maps\\resources_indexer\\resources_indexer.py.validate",
      "maps\\resources_indexer\\__init__.py.validate",
      "maps\\source_indexer\\source_indexer.py.validate",
      "maps\\source_indexer\\__init__.py.validate",
      "maps\\styles_indexer\\styles_indexer.py.validate",
      "maps\\styles_indexer\\__init__.py.validate",
      "maps\\tools_indexer\\tools_indexer.py.validate",
      "maps\\tools_indexer\\__init__.py.validate",
      "maps\\wiki_indexer\\wiki_indexer.py.validate",
      "maps\\wiki_indexer\\__init__.py.validate",
      "documentation\\content_validator\\content_validator.py.validate",
      "documentation\\content_validator\\__init__.py.validate",
      "documentation\\documentation_organizer\\documentation_organizer.py.validate",
      "documentation\\documentation_organizer\\__init__.py.validate",
      "documentation\\markdown_processor\\markdown_processor.py.validate",
      "documentation\\markdown_processor\\__init__.py.validate",
      "documentation\\wiki_expander\\wiki_expander.py.validate",
      "documentation\\wiki_expander\\__init__.py.validate",
      "documentation\\wiki_fixer\\wiki_fixer.py.validate",
      "documentation\\wiki_fixer\\__init__.py.validate",
      "documentation\\wiki_optimizer\\wiki_optimizer.py.validate",
      "documentation\\wiki_optimizer\\__init__.py.validate",
      "analysis\\advanced_searcher\\advanced_searcher.py.validate",
      "analysis\\advanced_searcher\\__init__.py.validate",
      "analysis\\context_detector\\context_detector.py.validate",
      "analysis\\context_detector\\migrated_context_detector.py.validate",
      "analysis\\context_detector\\__init__.py.validate",
      "analysis\\intelligent_navigator\\intelligent_navigator.py.validate",
      "analysis\\intelligent_navigator\\__init__.py.validate",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py.validate",
      "analysis\\knowledge_consolidator\\__init__.py.validate",
      "analysis\\research_manager\\research_manager.py.validate",
      "analysis\\research_manager\\__init__.py.validate",
      "analysis\\source_analyzer\\source_analyzer.py.validate",
      "analysis\\source_analyzer\\__init__.py.validate",
      "agents\\agent_integrator\\agent_integrator.py.validate",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes",
      "agents\\agent_integrator\\__init__.py.validate",
      "agents\\agent_monitor\\agent_monitor.py.validate",
      "agents\\agent_monitor\\__init__.py.validate",
      "agents\\agent_optimizer\\agent_optimizer.py.validate",
      "agents\\agent_optimizer\\__init__.py.validate",
      "agents\\agent_orchestrator\\agent_orchestrator.py.validate",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_dependencies",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths",
      "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code",
      "agents\\agent_orchestrator\\__init__.py.validate",
      "agents\\agent_organizer\\agent_organizer.py.validate",
      "agents\\agent_organizer\\migrated_agent_organizer.py.validate",
      "agents\\agent_organizer\\__init__.py.validate",
      "agents\\agent_specialist\\agent_specialist.py.validate",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality",
      "agents\\agent_specialist\\__init__.py.validate",
      "agents\\agent_validator\\agent_validator.py.validate",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules",
      "agents\\agent_validator\\__init__.py.validate",
      "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure",
      "agents\\workflow_manager\\workflow_manager.py.validate",
      "agents\\workflow_manager\\__init__.py.validate"
    ],
    "validação": [
      "tools\\backup_system\\backup_system.py._validate_module_logic",
      "tools\\backup_system\\migrated_backup_system.py._validate_module_logic",
      "tools\\cleanup_system\\cleanup_system.py._validate_module_logic",
      "tools\\cleanup_system\\migrated_cleanup_system.py._validate_module_logic",
      "tools\\config_manager\\config_manager.py._validate_module_logic",
      "tools\\file_mover\\file_mover.py._validate_module_logic",
      "tools\\git_automation\\git_automation.py._validate_module_logic",
      "tools\\log_manager\\log_manager.py._validate_module_logic",
      "python\\code_analyzer\\code_analyzer.py._validate_module_logic",
      "python\\code_optimizer\\code_optimizer.py._validate_module_logic",
      "python\\documentation_generator\\documentation_generator.py._validate_module_logic",
      "python\\error_resolver\\error_resolver.py._validate_module_logic",
      "python\\python_agent\\python_agent.py._validate_module_logic",
      "python\\recipe_manager\\recipe_manager.py._validate_module_logic",
      "python\\script_executor\\script_executor.py._validate_module_logic",
      "metrics\\alert_system\\alert_system.py._validate_module_logic",
      "metrics\\alert_system\\migrated_alert_system.py._validate_module_logic",
      "metrics\\dashboard_monitor\\dashboard_monitor.py._validate_module_logic",
      "metrics\\metrics_analyzer\\metrics_analyzer.py._validate_module_logic",
      "metrics\\metrics_collector\\metrics_collector.py._validate_module_logic",
      "metrics\\metrics_reporter\\metrics_reporter.py._validate_module_logic",
      "metrics\\performance_monitor\\migrated_performance_monitor.py._validate_module_logic",
      "metrics\\performance_monitor\\performance_monitor.py._validate_module_logic",
      "maps\\habdel_indexer\\habdel_indexer.py._validate_module_logic",
      "maps\\map_optimizer\\map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_advanced_searcher.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_integrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_orchestrator.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_specialist.py._validate_module_logic",
      "maps\\map_updater\\migrated_agent_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_code_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_config_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_content_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_dashboard_monitor.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_generator.py._validate_module_logic",
      "maps\\map_updater\\migrated_documentation_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_error_resolver.py._validate_module_logic",
      "maps\\map_updater\\migrated_git_automation.py._validate_module_logic",
      "maps\\map_updater\\migrated_habdel_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_intelligent_navigator.py._validate_module_logic",
      "maps\\map_updater\\migrated_knowledge_consolidator.py._validate_module_logic",
      "maps\\map_updater\\migrated_log_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_updater.py._validate_module_logic",
      "maps\\map_updater\\migrated_map_validator.py._validate_module_logic",
      "maps\\map_updater\\migrated_markdown_processor.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_collector.py._validate_module_logic",
      "maps\\map_updater\\migrated_metrics_reporter.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_alert_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_backup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py._validate_module_logic",
      "maps\\map_updater\\migrated_migrated_context_detector.py._validate_module_logic",
      "maps\\map_updater\\migrated_modules_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_python_agent.py._validate_module_logic",
      "maps\\map_updater\\migrated_recipe_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_research_manager.py._validate_module_logic",
      "maps\\map_updater\\migrated_resources_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_script_executor.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_analyzer.py._validate_module_logic",
      "maps\\map_updater\\migrated_source_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_styles_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_tools_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_expander.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_fixer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_indexer.py._validate_module_logic",
      "maps\\map_updater\\migrated_wiki_optimizer.py._validate_module_logic",
      "maps\\map_updater\\migrated_workflow_manager.py._validate_module_logic",
      "maps\\map_validator\\map_validator.py._validate_module_logic",
      "maps\\modules_indexer\\modules_indexer.py._validate_module_logic",
      "maps\\resources_indexer\\resources_indexer.py._validate_module_logic",
      "maps\\source_indexer\\source_indexer.py._validate_module_logic",
      "maps\\styles_indexer\\styles_indexer.py._validate_module_logic",
      "maps\\tools_indexer\\tools_indexer.py._validate_module_logic",
      "maps\\wiki_indexer\\wiki_indexer.py._validate_module_logic",
      "documentation\\content_validator\\content_validator.py._validate_module_logic",
      "documentation\\documentation_organizer\\documentation_organizer.py._validate_module_logic",
      "documentation\\markdown_processor\\markdown_processor.py._validate_module_logic",
      "documentation\\wiki_expander\\wiki_expander.py._validate_module_logic",
      "documentation\\wiki_fixer\\wiki_fixer.py._validate_module_logic",
      "documentation\\wiki_optimizer\\wiki_optimizer.py._validate_module_logic",
      "analysis\\advanced_searcher\\advanced_searcher.py._validate_module_logic",
      "analysis\\context_detector\\context_detector.py._validate_module_logic",
      "analysis\\context_detector\\migrated_context_detector.py._validate_module_logic",
      "analysis\\intelligent_navigator\\intelligent_navigator.py._validate_module_logic",
      "analysis\\knowledge_consolidator\\knowledge_consolidator.py._validate_module_logic",
      "analysis\\research_manager\\research_manager.py._validate_module_logic",
      "analysis\\source_analyzer\\source_analyzer.py._validate_module_logic",
      "agents\\agent_integrator\\agent_integrator.py._validate_module_logic",
      "agents\\agent_monitor\\agent_monitor.py._validate_module_logic",
      "agents\\agent_optimizer\\agent_optimizer.py._validate_module_logic",
      "agents\\agent_orchestrator\\agent_orchestrator.py._validate_module_logic",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
      "agents\\agent_organizer\\agent_organizer.py._validate_module_logic",
      "agents\\agent_organizer\\migrated_agent_organizer.py._validate_module_logic",
      "agents\\agent_specialist\\agent_specialist.py._validate_module_logic",
      "agents\\agent_validator\\agent_validator.py._validate_module_logic",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation",
      "agents\\workflow_manager\\workflow_manager.py._validate_module_logic"
    ],
    "integra": [
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt",
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module"
    ],
    "script": [
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.main",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module"
    ],
    "destino.": [
      "tools\\backup_system\\migrated_backup_system.py.integrate_with_module",
      "tools\\cleanup_system\\migrated_cleanup_system.py.integrate_with_module",
      "tools\\config_manager\\migrated_update_context_system.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover.py.integrate_with_module",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.integrate_with_module",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_auto_learning_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_create_module_simple.py.integrate_with_module",
      "tools\\git_automation\\migrated_data_collector.py.integrate_with_module",
      "tools\\git_automation\\migrated_example_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_feedback_system.py.integrate_with_module",
      "tools\\git_automation\\migrated_git_task_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_optimization_engine.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_evaluator.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_prompt_optimizer.py.integrate_with_module",
      "tools\\git_automation\\migrated_rules_learning_integration.py.integrate_with_module",
      "tools\\git_automation\\migrated_visualization_interface.py.integrate_with_module",
      "tools\\log_manager\\migrated_centralize_logs.py.integrate_with_module",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.integrate_with_module",
      "python\\code_optimizer\\migrated_auto_optimizer.py.integrate_with_module",
      "python\\error_resolver\\migrated_python_error_resolver.py.integrate_with_module",
      "python\\python_agent\\migrated_python_agent_system.py.integrate_with_module",
      "python\\recipe_manager\\migrated_task_automation_system.py.integrate_with_module",
      "python\\script_executor\\migrated_script_execution_manager.py.integrate_with_module",
      "metrics\\alert_system\\migrated_alert_system.py.integrate_with_module",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.integrate_with_module",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.integrate_with_module",
      "metrics\\metrics_collector\\migrated_metrics_system.py.integrate_with_module",
      "metrics\\performance_monitor\\migrated_performance_monitor.py.integrate_with_module",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.integrate_with_module",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_advanced_searcher.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_integrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_specialist.py.integrate_with_module",
      "maps\\map_updater\\migrated_agent_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_code_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_config_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_content_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_dashboard_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_generator.py.integrate_with_module",
      "maps\\map_updater\\migrated_documentation_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_error_resolver.py.integrate_with_module",
      "maps\\map_updater\\migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_git_automation.py.integrate_with_module",
      "maps\\map_updater\\migrated_habdel_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_intelligent_navigator.py.integrate_with_module",
      "maps\\map_updater\\migrated_knowledge_consolidator.py.integrate_with_module",
      "maps\\map_updater\\migrated_log_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_map_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_markdown_processor.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_collector.py.integrate_with_module",
      "maps\\map_updater\\migrated_metrics_reporter.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_agent_organizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_alert_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_backup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_cleanup_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_context_detector.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.integrate_with_module",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.integrate_with_module",
      "maps\\map_updater\\migrated_modules_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.integrate_with_module",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.integrate_with_module",
      "maps\\map_updater\\migrated_python_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_recipe_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_research_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated_resources_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_executor.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.integrate_with_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_source_analyzer.py.integrate_with_module",
      "maps\\map_updater\\migrated_source_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_styles_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_tools_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.integrate_with_module",
      "maps\\map_updater\\migrated_update_readme.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_expander.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_fixer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_indexer.py.integrate_with_module",
      "maps\\map_updater\\migrated_wiki_optimizer.py.integrate_with_module",
      "maps\\map_updater\\migrated_workflow_manager.py.integrate_with_module",
      "maps\\map_updater\\migrated___init__.py.integrate_with_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.integrate_with_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.integrate_with_module",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.integrate_with_module",
      "maps\\source_indexer\\migrated_update_source_index.py.integrate_with_module",
      "maps\\styles_indexer\\migrated_update_styles_index.py.integrate_with_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.integrate_with_module",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.integrate_with_module",
      "documentation\\content_validator\\migrated_update_json_maps.py.integrate_with_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.integrate_with_module",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.integrate_with_module",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.integrate_with_module",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.integrate_with_module",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.integrate_with_module",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.integrate_with_module",
      "analysis\\context_detector\\migrated_context_detector.py.integrate_with_module",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.integrate_with_module",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.integrate_with_module",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.integrate_with_module",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.integrate_with_module",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.integrate_with_module",
      "agents\\agent_monitor\\migrated_auto_monitor.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analisador_erros.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_optimizer.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_validator.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.integrate_with_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.integrate_with_module",
      "agents\\agent_organizer\\migrated_agent_organizer.py.integrate_with_module",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.integrate_with_module",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_integration_workflow.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.integrate_with_module",
      "agents\\workflow_manager\\migrated_run_module_workflow.py.integrate_with_module"
    ],
    "atualiza": [
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
      "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback",
      "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.update_error_log",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config",
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
      "maps\\modules_indexer\\migrated_update_modules_index.py.update_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.update_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.update_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.update_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard"
    ],
    "sistema": [
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.load_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.shutdown",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
      "tools\\git_automation\\migrated_data_collector.py.save_interaction",
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes",
      "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main"
    ],
    "contexto": [
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain",
      "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
      "maps\\map_updater\\migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents"
    ],
    "avançado": [
      "tools\\config_manager\\migrated_update_context_system.py.update_enhanced_context_system",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system"
    ],
    "navegação": [
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\map_updater\\migrated_update_readme.py.validate_navigation",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.graph_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute"
    ],
    "inteligente": [
      "tools\\config_manager\\migrated_update_context_system.py.update_intelligent_navigation",
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps"
    ],
    "analisa": [
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency",
      "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
      "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness",
      "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module",
      "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource",
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
      "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns",
      "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity"
    ],
    "estrutura": [
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score",
      "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config",
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure"
    ],
    "diretórios": [
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure"
    ],
    "atual": [
      "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status"
    ],
    "obtém": [
      "tools\\config_manager\\migrated_update_context_system.py.get_key_files",
      "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories",
      "tools\\config_manager\\migrated_update_context_system.py.get_source_components",
      "tools\\config_manager\\migrated_update_context_system.py.get_module_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_data_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_config",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
      "tools\\config_manager\\migrated_update_context_system.py.get_integration_status",
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns",
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching",
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status"
    ],
    "arquivos-chave": [
      "tools\\config_manager\\migrated_update_context_system.py.get_key_files"
    ],
    "diretório": [
      "tools\\config_manager\\migrated_update_context_system.py.get_key_files",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_update_readme.py.count_files",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__"
    ],
    "subdiretórios": [
      "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories"
    ],
    "wiki": [
      "tools\\config_manager\\migrated_update_context_system.py.get_wiki_subdirectories",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch"
    ],
    "componentes": [
      "tools\\config_manager\\migrated_update_context_system.py.get_source_components",
      "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads"
    ],
    "código-fonte": [
      "tools\\config_manager\\migrated_update_context_system.py.get_source_components",
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source"
    ],
    "categorias": [
      "tools\\config_manager\\migrated_update_context_system.py.get_module_categories",
      "tools\\config_manager\\migrated_update_context_system.py.get_data_categories",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index"
    ],
    "módulos": [
      "tools\\config_manager\\migrated_update_context_system.py.get_module_categories",
      "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.update_index",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules"
    ],
    "dados": [
      "tools\\config_manager\\migrated_update_context_system.py.get_data_categories",
      "tools\\git_automation\\migrated_data_collector.py.init_database",
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps"
    ],
    "configuração": [
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_system",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_config",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching",
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
      "tools\\git_automation\\migrated_auto_learning_system.py.load_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.save_config",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup"
    ],
    "performance": [
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_config",
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
      "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_performance",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_performance"
    ],
    "detecção": [
      "tools\\config_manager\\migrated_update_context_system.py.get_context_detection",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues"
    ],
    "status": [
      "tools\\config_manager\\migrated_update_context_system.py.get_integration_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status"
    ],
    "integração": [
      "tools\\config_manager\\migrated_update_context_system.py.get_integration_status",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration"
    ],
    "padrões": [
      "tools\\config_manager\\migrated_update_context_system.py.get_navigation_patterns",
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns"
    ],
    "cache": [
      "tools\\config_manager\\migrated_update_context_system.py.get_smart_caching",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache"
    ],
    "métricas": [
      "tools\\config_manager\\migrated_update_context_system.py.get_performance_metrics",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_performance_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.run",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report"
    ],
    "troca": [
      "tools\\config_manager\\migrated_update_context_system.py.get_context_switching"
    ],
    "recuperação": [
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery"
    ],
    "erros": [
      "tools\\config_manager\\migrated_update_context_system.py.get_error_recovery",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
      "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "python\\python_agent\\migrated_python_agent_system.py.load_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.update_error_log",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors"
    ],
    "gera": [
      "tools\\config_manager\\migrated_update_context_system.py.generate_report",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions",
      "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_api_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report"
    ],
    "relatório": [
      "tools\\config_manager\\migrated_update_context_system.py.generate_report",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
      "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report",
      "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report",
      "maps\\map_updater\\migrated_update_readme.py.generate_status_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.get_performance_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_metrics_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.generate_report",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report"
    ],
    "atualização": [
      "tools\\config_manager\\migrated_update_context_system.py.generate_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_update_readme.py.run_full_update",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update"
    ],
    "load": [
      "tools\\file_mover\\migrated_file_mover.py.load_config"
    ],
    "configuration": [
      "tools\\file_mover\\migrated_file_mover.py.load_config",
      "tools\\file_mover\\migrated_file_mover.py.save_config",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file"
    ],
    "from": [
      "tools\\file_mover\\migrated_file_mover.py.load_config"
    ],
    "json": [
      "tools\\file_mover\\migrated_file_mover.py.load_config",
      "tools\\file_mover\\migrated_file_mover.py.save_config",
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files",
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps"
    ],
    "file.": [
      "tools\\file_mover\\migrated_file_mover.py.load_config",
      "tools\\file_mover\\migrated_file_mover.py.save_config",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file"
    ],
    "save": [
      "tools\\file_mover\\migrated_file_mover.py.save_config"
    ],
    "interactive": [
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode"
    ],
    "mode": [
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode"
    ],
    "file": [
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode",
      "tools\\file_mover\\migrated_file_mover.py.move_file",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "moving.": [
      "tools\\file_mover\\migrated_file_mover.py.interactive_mode"
    ],
    "main": [
      "tools\\file_mover\\migrated_file_mover.py.main"
    ],
    "function": [
      "tools\\file_mover\\migrated_file_mover.py.main"
    ],
    "with": [
      "tools\\file_mover\\migrated_file_mover.py.main",
      "tools\\file_mover\\migrated_file_mover.py.move_file",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage"
    ],
    "command": [
      "tools\\file_mover\\migrated_file_mover.py.main"
    ],
    "line": [
      "tools\\file_mover\\migrated_file_mover.py.main"
    ],
    "interface.": [
      "tools\\file_mover\\migrated_file_mover.py.main"
    ],
    "create": [
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory"
    ],
    "backup": [
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory",
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
      "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery"
    ],
    "directory": [
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory"
    ],
    "safety.": [
      "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory"
    ],
    "validate": [
      "tools\\file_mover\\migrated_file_mover.py.validate_paths"
    ],
    "paths": [
      "tools\\file_mover\\migrated_file_mover.py.validate_paths"
    ],
    "before": [
      "tools\\file_mover\\migrated_file_mover.py.validate_paths"
    ],
    "moving": [
      "tools\\file_mover\\migrated_file_mover.py.validate_paths",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "files.": [
      "tools\\file_mover\\migrated_file_mover.py.validate_paths"
    ],
    "move": [
      "tools\\file_mover\\migrated_file_mover.py.move_file",
      "tools\\file_mover\\migrated_file_mover.py.move_files",
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category"
    ],
    "single": [
      "tools\\file_mover\\migrated_file_mover.py.move_file"
    ],
    "error": [
      "tools\\file_mover\\migrated_file_mover.py.move_file",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling"
    ],
    "handling.": [
      "tools\\file_mover\\migrated_file_mover.py.move_file"
    ],
    "multiple": [
      "tools\\file_mover\\migrated_file_mover.py.move_files"
    ],
    "files": [
      "tools\\file_mover\\migrated_file_mover.py.move_files"
    ],
    "efficiently.": [
      "tools\\file_mover\\migrated_file_mover.py.move_files"
    ],
    "example": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving",
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling"
    ],
    "basic": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage"
    ],
    "absolute": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage"
    ],
    "paths.": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_1_basic_usage"
    ],
    "using": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file"
    ],
    "batch": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations"
    ],
    "operations": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations"
    ],
    "different": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations"
    ],
    "types.": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_3_batch_operations"
    ],
    "conditional": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "based": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "content": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "metadata.": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_4_conditional_moving"
    ],
    "handling": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling"
    ],
    "recovery.": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.example_5_error_handling"
    ],
    "examples.": [
      "tools\\file_mover\\migrated_file_mover_usage_example.py.main"
    ],
    "cria": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html",
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates"
    ],
    "pastas": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure"
    ],
    "necessária": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.create_directory_structure",
      "tools\\git_automation\\migrated_auto_learning_system.py.create_directory_structure",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_directory_structure",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.create_directory_structure",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.create_directory_structure"
    ],
    "carrega": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.load_config",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
      "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_learning_log",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_detection_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_usage_log",
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.load_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.load_improvement_log",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_metrics_data",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration"
    ],
    "configurações": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.load_config",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "salva": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py.save_config",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
      "tools\\git_automation\\migrated_data_collector.py.save_interaction",
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_learning_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_usage_log",
      "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
      "python\\python_agent\\migrated_python_agent_system.py.save_error_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_improvement_log",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results"
    ],
    "otimiza": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_memory_usage",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_imports",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_navigation_patterns",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation",
      "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code"
    ],
    "prompt": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt",
      "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt",
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity"
    ],
    "usando": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "técnicas": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt"
    ],
    "avançadas": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.optimize_prompt"
    ],
    "avalia": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._evaluate_thought",
      "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt",
      "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity"
    ],
    "qualidade": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.evaluate_prompt",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate"
    ],
    "aplica": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update"
    ],
    "técnica": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique"
    ],
    "tree-of-thought": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_tot_to_prompt",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts"
    ],
    "para": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
      "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout",
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.stop_system",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_structure",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.stop_monitoring",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main"
    ],
    "problemas": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues"
    ],
    "complexos": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_tree_of_thought"
    ],
    "self-consistency": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency"
    ],
    "maior": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency"
    ],
    "precisão": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_self_consistency"
    ],
    "generated": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge"
    ],
    "knowledge": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge"
    ],
    "prompting": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.apply_generated_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting"
    ],
    "seleciona": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents"
    ],
    "otimização": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning",
      "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates",
      "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization"
    ],
    "baseada": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity"
    ],
    "avaliação": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_optimization_technique",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
      "tools\\git_automation\\migrated_prompt_evaluator.py._load_evaluation_patterns",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence",
      "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats"
    ],
    "reescreve": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite"
    ],
    "completamente": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._comprehensive_rewrite"
    ],
    "melhora": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_detection",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_caching",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_detection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_caching",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections"
    ],
    "clareza": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_clarity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_clarity"
    ],
    "especificidade": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._improve_specificity",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._improve_specificity"
    ],
    "completude": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._enhance_completeness",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score"
    ],
    "role": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_role_prompting"
    ],
    "detecta": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_performance_issues",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension"
    ],
    "tipo": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._detect_prompt_type",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error",
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "tarefa": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._detect_task_type",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "tools\\git_automation\\migrated_prompt_optimizer.py._detect_task_type",
      "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command"
    ],
    "determina": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
      "maps\\tools_indexer\\migrated_update_tools_index.py.get_language",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_priority",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type"
    ],
    "papel": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role"
    ],
    "apropriado": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task"
    ],
    "baseado": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._determine_appropriate_role",
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_role_prompting",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents"
    ],
    "calcula": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence",
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_visualization_interface.py._calculate_percentage",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status"
    ],
    "score": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_clarity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_specificity_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_completeness_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_structure_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score",
      "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score"
    ],
    "sugestões": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.generate_suggestions"
    ],
    "baseadas": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_evaluation_suggestions",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations"
    ],
    "confiança": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_optimization_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence",
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_evaluation_confidence",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores"
    ],
    "explicação": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_optimization_reasoning"
    ],
    "estima": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration"
    ],
    "melhoria": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement",
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_clarity_enhancement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._calculate_improvement_score",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions"
    ],
    "esperada": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._estimate_improvement"
    ],
    "pensamentos": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts"
    ],
    "filhos": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_child_thoughts"
    ],
    "pensamento": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._evaluate_thought",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._calculate_thought_confidence",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency"
    ],
    "cadeia": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_thought_chain"
    ],
    "consistência": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency",
      "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency"
    ],
    "entre": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency",
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "cadeias": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency"
    ],
    "resposta": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time"
    ],
    "mais": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns",
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns"
    ],
    "consistente": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._select_most_consistent_response"
    ],
    "conhecimento": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._integrate_knowledge_into_prompt",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules"
    ],
    "relevante": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._generate_relevant_knowledge"
    ],
    "retorna": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions",
      "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
      "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns",
      "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats",
      "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.get_system_status",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features",
      "agents\\agent_monitor\\migrated_auto_monitor.py.get_system_status",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules"
    ],
    "estatísticas": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py.get_optimization_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats",
      "tools\\git_automation\\migrated_optimization_engine.py.get_optimization_stats",
      "tools\\git_automation\\migrated_prompt_evaluator.py.get_evaluation_stats",
      "tools\\git_automation\\migrated_prompt_optimizer.py.get_optimization_stats",
      "python\\code_optimizer\\migrated_auto_optimizer.py.get_optimization_stats",
      "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\map_updater\\migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.get_optimization_stats",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.get_update_stats",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_stats",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_statistics",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_statistics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_statistics",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files"
    ],
    "usada": [
      "tools\\git_automation\\migrated_advanced_prompt_system.py._get_most_used_technique"
    ],
    "inicia": [
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
      "maps\\map_updater\\migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
      "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "thread": [
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread"
    ],
    "aprendizado": [
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py.stop_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop",
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
      "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_learning_stats",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_auto_learning_system.py.shutdown",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_learning_log",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_learning_log",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.generate_learning_report",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_learning_data",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase"
    ],
    "background": [
      "tools\\git_automation\\migrated_auto_learning_system.py.start_learning_background",
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop"
    ],
    "loop": [
      "tools\\git_automation\\migrated_auto_learning_system.py._learning_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.main_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.updater_loop",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.optimizer_loop",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop"
    ],
    "ciclo": [
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_auto_update_system.py.generate_cycle_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.generate_cycle_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle"
    ],
    "completo": [
      "tools\\git_automation\\migrated_auto_learning_system.py._perform_learning_cycle",
      "tools\\git_automation\\migrated_auto_learning_system.py.generate_learning_report",
      "tools\\git_automation\\migrated_prompt_evaluator.py.evaluate_prompt",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.generate_metrics_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.generate_navigation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration"
    ],
    "resultados": [
      "tools\\git_automation\\migrated_auto_learning_system.py._save_learning_results",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
      "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.save_validation_results",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.save_validation_results",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results"
    ],
    "registra": [
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
      "tools\\git_automation\\migrated_feedback_system.py.record_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py.record_rule_usage",
      "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution",
      "python\\script_executor\\migrated_script_execution_manager.py.log_execution",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric"
    ],
    "nova": [
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
      "tools\\git_automation\\migrated_data_collector.py.save_interaction",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index"
    ],
    "interação": [
      "tools\\git_automation\\migrated_auto_learning_system.py.record_interaction",
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback",
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
      "tools\\git_automation\\migrated_data_collector.py.save_interaction",
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction",
      "tools\\git_automation\\migrated_data_collector.py.add_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.record_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback"
    ],
    "verifica": [
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations",
      "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_lua_debugger",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_lua_debugger",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility"
    ],
    "otimizações": [
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations",
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_auto_updater.py.apply_structure_optimizations",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_cache_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_structure_optimizations",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations"
    ],
    "podem": [
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations"
    ],
    "aplicadas": [
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes"
    ],
    "imediatamente": [
      "tools\\git_automation\\migrated_auto_learning_system.py._check_immediate_optimizations"
    ],
    "encontra": [
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports"
    ],
    "similares": [
      "tools\\git_automation\\migrated_auto_learning_system.py._find_similar_patterns",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.find_similar_patterns",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "similaridade": [
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity"
    ],
    "palavras-chave": [
      "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity",
      "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow"
    ],
    "recomendações": [
      "tools\\git_automation\\migrated_auto_learning_system.py.get_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_learning_recommendations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.generate_optimization_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_performance_recommendations",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_recommendations"
    ],
    "feedback": [
      "tools\\git_automation\\migrated_auto_learning_system.py.update_feedback",
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning",
      "tools\\git_automation\\migrated_data_collector.py.add_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.record_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
      "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment",
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
      "tools\\git_automation\\migrated_feedback_system.py.get_feedback_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_interaction_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.get_improvement_recommendations",
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback",
      "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback"
    ],
    "dispara": [
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning",
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_performance_optimization",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_performance_optimization",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update"
    ],
    "relearning": [
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning"
    ],
    "negativo": [
      "tools\\git_automation\\migrated_auto_learning_system.py._trigger_relearning"
    ],
    "melhorar": [
      "tools\\git_automation\\migrated_auto_learning_system.py._generate_system_recommendations"
    ],
    "desliga": [
      "tools\\git_automation\\migrated_auto_learning_system.py.shutdown"
    ],
    "estado": [
      "tools\\git_automation\\migrated_auto_learning_system.py._save_current_state",
      "maps\\map_updater\\migrated_auto_update_system.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.save_system_state",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.save_system_state",
      "agents\\agent_monitor\\migrated_auto_monitor.py.save_system_state"
    ],
    "regras": [
      "tools\\git_automation\\migrated_auto_learning_system.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
      "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._update_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
      "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_usage_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_usage_log",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
      "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_rule_recommendations",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rules_learning_report",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules",
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_rule_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_rules",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_rule_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_rules_consistency",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_rules"
    ],
    "aprendidas": [
      "tools\\git_automation\\migrated_auto_learning_system.py.apply_rule_optimizations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.apply_learned_optimizations"
    ],
    "inicializa": [
      "tools\\git_automation\\migrated_data_collector.py.init_database",
      "tools\\git_automation\\migrated_git_task_integration.py.__init__",
      "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows"
    ],
    "banco": [
      "tools\\git_automation\\migrated_data_collector.py.init_database",
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict"
    ],
    "sqlite": [
      "tools\\git_automation\\migrated_data_collector.py.init_database"
    ],
    "único": [
      "tools\\git_automation\\migrated_data_collector.py.generate_interaction_id",
      "tools\\git_automation\\migrated_feedback_system.py.generate_feedback_id",
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_prompt_id",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id"
    ],
    "complexidade": [
      "tools\\git_automation\\migrated_data_collector.py._calculate_complexity",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity"
    ],
    "formato": [
      "tools\\git_automation\\migrated_data_collector.py._save_json_backup",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report"
    ],
    "recupera": [
      "tools\\git_automation\\migrated_data_collector.py.get_interaction",
      "tools\\git_automation\\migrated_data_collector.py.get_interactions"
    ],
    "múltiplas": [
      "tools\\git_automation\\migrated_data_collector.py.get_interactions",
      "tools\\git_automation\\migrated_prompt_optimizer.py.optimize_prompt",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "interações": [
      "tools\\git_automation\\migrated_data_collector.py.get_interactions",
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
      "tools\\git_automation\\migrated_data_collector.py.get_interaction_stats",
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features"
    ],
    "filtros": [
      "tools\\git_automation\\migrated_data_collector.py.get_interactions"
    ],
    "converte": [
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict",
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade"
    ],
    "linha": [
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_line"
    ],
    "dicionário": [
      "tools\\git_automation\\migrated_data_collector.py._row_to_dict",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date"
    ],
    "total": [
      "tools\\git_automation\\migrated_data_collector.py.get_total_interactions",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality"
    ],
    "adiciona": [
      "tools\\git_automation\\migrated_data_collector.py.add_feedback",
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output",
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "remove": [
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files",
      "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback",
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates"
    ],
    "antigos": [
      "tools\\git_automation\\migrated_data_collector.py.cleanup_old_data",
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files"
    ],
    "arquivos": [
      "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_update_readme.py.count_files",
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system"
    ],
    "exemplo": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras",
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras"
    ],
    "como": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras"
    ],
    "auto-aprendizado": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_integracao_regras"
    ],
    "automática": [
      "tools\\git_automation\\migrated_example_integration.py.exemplo_otimizacao_automatica_regras",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_auto_update",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow"
    ],
    "arquivo": [
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_data",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.load_optimization_results",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_rules",
      "tools\\git_automation\\migrated_optimization_engine.py.save_optimization_results",
      "tools\\log_manager\\migrated_centralize_logs.py.categorize_file",
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_imports",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.validate_quality",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.get_language",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies",
      "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
      "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.save_metrics",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.validate_quality"
    ],
    "análises": [
      "tools\\git_automation\\migrated_feedback_system.py.load_feedback_analysis",
      "tools\\git_automation\\migrated_feedback_system.py.save_feedback_analysis",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis"
    ],
    "extrai": [
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
      "tools\\git_automation\\migrated_feedback_system.py._extract_improvement_suggestions",
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject",
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain",
      "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_story_id",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
      "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_description",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_story_id",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task"
    ],
    "insights": [
      "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.generate_rules"
    ],
    "sentimento": [
      "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment"
    ],
    "nível": [
      "tools\\git_automation\\migrated_feedback_system.py._calculate_confidence_level",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows"
    ],
    "baixo": [
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions"
    ],
    "desempenho": [
      "tools\\git_automation\\migrated_feedback_system.py.get_low_performing_interactions"
    ],
    "implícito": [
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback"
    ],
    "comportamento": [
      "tools\\git_automation\\migrated_feedback_system.py.record_implicit_feedback"
    ],
    "antigo": [
      "tools\\git_automation\\migrated_feedback_system.py.cleanup_old_feedback"
    ],
    "principal.": [
      "tools\\git_automation\\migrated_git_task_integration.py.main",
      "maps\\map_updater\\migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.main",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.main",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.main"
    ],
    "integração.": [
      "tools\\git_automation\\migrated_git_task_integration.py.__init__",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.__init__",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_integration_config",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing",
      "agents\\workflow_manager\\migrated_integration_workflow.py._validate_integration_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates",
      "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows",
      "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests",
      "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts"
    ],
    "resolve": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts"
    ],
    "automaticamente": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_rules",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_performance",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request"
    ],
    "intervenção": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically"
    ],
    "manual.": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically"
    ],
    "returns:": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "true": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system"
    ],
    "todos": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts",
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps",
      "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules",
      "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.update_all_json_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.update_all_json_files",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents"
    ],
    "foram": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically"
    ],
    "resolvidos": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_git_errors_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_git_errors_automatically"
    ],
    "repositório": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_update_readme.py.get_directory_structure",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes"
    ],
    "git.": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes"
    ],
    "automaticamente.": [
      "tools\\git_automation\\migrated_git_task_integration.py.initialize_git_repo",
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.initialize_git_repo",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files"
    ],
    "lista": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents"
    ],
    "rastreados.": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files"
    ],
    "modificados.": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files"
    ],
    "deletados.": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files"
    ],
    "rastreados": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically",
      "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically"
    ],
    "modificados": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message"
    ],
    "deletados": [
      "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically"
    ],
    "conflitos": [
      "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "maps\\map_updater\\migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.resolve_rule_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "agents\\workflow_manager\\migrated_integration_workflow.py._resolve_integration_conflicts"
    ],
    "merge.": [
      "tools\\git_automation\\migrated_git_task_integration.py.has_merge_conflicts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.has_merge_conflicts"
    ],
    "merge": [
      "tools\\git_automation\\migrated_git_task_integration.py.resolve_merge_conflicts_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.resolve_merge_conflicts_automatically"
    ],
    "staging": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty"
    ],
    "area": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty"
    ],
    "está": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path",
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions"
    ],
    "vazia.": [
      "tools\\git_automation\\migrated_git_task_integration.py.is_staging_area_empty",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.is_staging_area_empty"
    ],
    "todas": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "tools\\git_automation\\migrated_rules_learning_integration.py.get_all_rules",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties",
      "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status"
    ],
    "mudanças": [
      "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically",
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.detect_changes",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.detect_system_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "agents\\agent_monitor\\migrated_auto_monitor.py.detect_changes",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard"
    ],
    "separa": [
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context"
    ],
    "commits": [
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "atômicos.": [
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context"
    ],
    "separadas": [
      "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context",
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits"
    ],
    "atômicos": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits"
    ],
    "baseados": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts"
    ],
    "mudanças.": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type"
    ],
    "args:": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "changes_by_context:": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits"
    ],
    "task_info:": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message"
    ],
    "informações": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.check_git_status",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_system_info",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_system_info",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info"
    ],
    "ativa": [
      "tools\\git_automation\\migrated_git_task_integration.py.create_atomic_commits",
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.create_atomic_commits",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system"
    ],
    "mensagem": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit"
    ],
    "commit": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "contextual": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_commit_message"
    ],
    "português.": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message"
    ],
    "context:": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "files:": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message"
    ],
    "conventional": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message"
    ],
    "hash": [
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit"
    ],
    "saída": [
      "tools\\git_automation\\migrated_git_task_integration.py.extract_commit_hash",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
      "tools\\git_automation\\migrated_prompt_optimizer.py._add_structured_output",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.extract_commit_hash"
    ],
    "ativa.": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task"
    ],
    "none": [
      "tools\\git_automation\\migrated_git_task_integration.py.get_active_task",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_active_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task"
    ],
    "automático": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "atômico": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic"
    ],
    "resolução": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
      "python\\error_resolver\\migrated_python_error_resolver.py.main",
      "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution"
    ],
    "erros.": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic"
    ],
    "auto_push:": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "deve": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "fazer": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "push": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "resultado": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.record_prompt_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "python\\error_resolver\\migrated_python_error_resolver.py.log_resolution",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe",
      "python\\script_executor\\migrated_script_execution_manager.py.log_execution",
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "operação": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_commit_atomic",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_commit_atomic"
    ],
    "automático.": [
      "tools\\git_automation\\migrated_git_task_integration.py.auto_push",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.auto_push"
    ],
    "detalhado": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_report",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "commits.": [
      "tools\\git_automation\\migrated_git_task_integration.py.generate_commit_report",
      "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_commit_report"
    ],
    "aprendidos": [
      "tools\\git_automation\\migrated_optimization_engine.py.apply_optimizations",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_prompt_patterns",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation",
      "tools\\git_automation\\migrated_rules_learning_integration.py.load_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.save_rule_patterns",
      "tools\\git_automation\\migrated_rules_learning_integration.py.generate_rule_optimizations",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._save_learned_patterns"
    ],
    "partir": [
      "tools\\git_automation\\migrated_optimization_engine.py._generate_optimization_rules"
    ],
    "regra": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._create_specific_optimization_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule",
      "tools\\git_automation\\migrated_optimization_engine.py._apply_optimization_rule",
      "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py.record_rule_usage",
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_rule_improvements",
      "tools\\git_automation\\migrated_rules_learning_integration.py._create_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py.apply_rule_optimization",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file"
    ],
    "replicar": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule"
    ],
    "sucesso": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_success_replication_rule",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup"
    ],
    "evitar": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes"
    ],
    "falha": [
      "tools\\git_automation\\migrated_optimization_engine.py._create_failure_avoidance_rule",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns"
    ],
    "aplicada": [
      "tools\\git_automation\\migrated_optimization_engine.py._should_apply_rule"
    ],
    "padrão": [
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._generate_pattern_id",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_similarity"
    ],
    "específico": [
      "tools\\git_automation\\migrated_optimization_engine.py.apply_pattern_optimization",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.execute_script",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role"
    ],
    "limita": [
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type"
    ],
    "número": [
      "tools\\git_automation\\migrated_optimization_engine.py._limit_rules_per_type",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._limit_patterns_per_type",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates"
    ],
    "obsoletas": [
      "tools\\git_automation\\migrated_optimization_engine.py._remove_obsolete_rules"
    ],
    "real": [
      "tools\\git_automation\\migrated_optimization_engine.py.update_optimization_result",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report"
    ],
    "geral": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_performance",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.calculate_performance_score",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_performance",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.calculate_overall_quality",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status"
    ],
    "ponderado": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_overall_score"
    ],
    "scores": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_suggestions",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_pattern_scores",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.calculate_confidence_scores",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution"
    ],
    "análise": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.generate_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.generate_report",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_performance_optimizations",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.save_analysis",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_recommendations",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.generate_report",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.save_analysis",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.calculate_confidence",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_analysis_insights",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric"
    ],
    "detalhada": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._create_detailed_analysis",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content"
    ],
    "específicas": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._generate_recommendations",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations"
    ],
    "múltiplos": [
      "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate",
      "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "prompts": [
      "tools\\git_automation\\migrated_prompt_evaluator.py.batch_evaluate",
      "tools\\git_automation\\migrated_prompt_optimizer.py.batch_optimize"
    ],
    "tendência": [
      "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_improvement_trend"
    ],
    "histórico": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.load_optimization_history",
      "tools\\git_automation\\migrated_prompt_learning_integration.py.save_optimization_history",
      "python\\code_optimizer\\migrated_auto_optimizer.py.save_optimization_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.save_optimization_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history"
    ],
    "bem-sucedido": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._update_prompt_patterns",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_final_commit_verification.py.push_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.push_changes"
    ],
    "recomendação": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.get_optimization_recommendation"
    ],
    "relevância": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance",
      "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance"
    ],
    "efetividade": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness"
    ],
    "bem-sucedidos": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._get_top_patterns"
    ],
    "chain-of-thought": [
      "tools\\git_automation\\migrated_prompt_learning_integration.py._apply_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._apply_chain_of_thought"
    ],
    "templates": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._load_optimization_templates",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates",
      "agents\\workflow_manager\\migrated_integration_workflow.py._create_integration_templates"
    ],
    "precisa": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_role_prompting",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_clarity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_chain_of_thought",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_specificity_improvement",
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output"
    ],
    "estruturada": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._needs_structured_output",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source"
    ],
    "tecnologia": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_technology"
    ],
    "assunto": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_subject"
    ],
    "domínio": [
      "tools\\git_automation\\migrated_prompt_optimizer.py._extract_domain"
    ],
    "conteúdo": [
      "tools\\git_automation\\migrated_rules_learning_integration.py.parse_rule_content",
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "tools\\git_automation\\migrated_visualization_interface.py._create_learning_report",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.determine_status",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_status",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_keywords",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_status",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_keywords",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "aplicabilidade": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability"
    ],
    "diferentes": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability"
    ],
    "contextos": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability",
      "maps\\map_updater\\migrated_update_readme.py.validate_navigation",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "melhorado": [
      "tools\\git_automation\\migrated_rules_learning_integration.py._generate_improved_content",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents"
    ],
    "dashboard": [
      "tools\\git_automation\\migrated_visualization_interface.py.generate_learning_dashboard",
      "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.update_dashboard_with_commit",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_dashboard_report",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.apply_task_update"
    ],
    "html": [
      "tools\\git_automation\\migrated_visualization_interface.py._create_dashboard_html",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_optimization_rules_html",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_recommendations_html",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard"
    ],
    "porcentagem": [
      "tools\\git_automation\\migrated_visualization_interface.py._calculate_percentage"
    ],
    "formata": [
      "tools\\git_automation\\migrated_visualization_interface.py._format_improvement_suggestions",
      "tools\\git_automation\\migrated_visualization_interface.py._format_optimization_rules",
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules"
    ],
    "efetivas": [
      "tools\\git_automation\\migrated_visualization_interface.py._format_most_effective_rules"
    ],
    "ações": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions"
    ],
    "imediatas": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_immediate_actions"
    ],
    "médio": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions"
    ],
    "prazo": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_medium_term_actions",
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions"
    ],
    "longo": [
      "tools\\git_automation\\migrated_visualization_interface.py._generate_long_term_actions"
    ],
    "gráfico": [
      "tools\\git_automation\\migrated_visualization_interface.py.create_performance_chart"
    ],
    "centralizador": [
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__"
    ],
    "logs.": [
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__"
    ],
    "log_dir:": [
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__"
    ],
    "logs": [
      "tools\\log_manager\\migrated_centralize_logs.py.__init__",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.__init__",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns"
    ],
    "centralizada": [
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_structure",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_structure"
    ],
    "categoriza": [
      "tools\\log_manager\\migrated_centralize_logs.py.categorize_file",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.categorize_stories",
      "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_module",
      "maps\\modules_indexer\\migrated_update_modules_index.py.categorize_modules",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resource",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_document",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_document",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file"
    ],
    "corresponde": [
      "tools\\log_manager\\migrated_centralize_logs.py.matches_pattern",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.matches_pattern"
    ],
    "existentes": [
      "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules"
    ],
    "categoria": [
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.make_commit",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_wiki_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_category",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_wiki_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category"
    ],
    "apropriada": [
      "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category"
    ],
    "centraliza": [
      "tools\\log_manager\\migrated_centralize_logs.py.centralize_logs",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.centralize_logs"
    ],
    "índice": [
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.save_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_wiki_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.update_wiki_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_modules_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.save_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.update_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.save_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.update_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_categorical_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_source_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
      "maps\\source_indexer\\migrated_update_source_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.save_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.update_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.save_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.update_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.update_wiki_index",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_wiki_index",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.update_wiki_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_categorical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index"
    ],
    "centralizado": [
      "tools\\log_manager\\migrated_centralize_logs.py.create_centralized_index",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.create_centralized_index"
    ],
    "centralização": [
      "tools\\log_manager\\migrated_centralize_logs.py.generate_centralization_report",
      "maps\\map_updater\\migrated_migrated_centralize_logs.py.generate_centralization_report"
    ],
    "tags_index.json": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_tags_index_optimization",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_tags_index",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_tags_index"
    ],
    "wiki_map.json": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_wiki_map_optimization",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_wiki_map",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_wiki_map"
    ],
    "caminhos": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_performance_metrics",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_navigation_paths",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_learning_paths",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths"
    ],
    "caminho": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.calculate_path_optimization_score",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\source_indexer\\migrated_update_source_index.py.categorize_file",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "nota": [
      "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.get_grade",
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.get_grade",
      "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.get_grade"
    ],
    "configura": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
      "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows"
    ],
    "logging": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.setup_logging",
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_auto_update_system.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_error_logging",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.setup_logging",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.setup_logging",
      "agents\\agent_monitor\\migrated_auto_monitor.py.setup_logging"
    ],
    "target": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.trigger_optimization",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target"
    ],
    "tratamento": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_error_handling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_error_handling"
    ],
    "tempo": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report"
    ],
    "memória": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_memory_usage",
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_memory_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_memory_info",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_memory_usage"
    ],
    "estratégia": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_cache_strategy",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps"
    ],
    "algoritmos": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_algorithm_complexity",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_algorithm_complexity"
    ],
    "busca": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_search_index",
      "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "maps\\modules_indexer\\migrated_update_modules_index.py.generate_search_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_search_index",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_search_index",
      "maps\\source_indexer\\migrated_update_source_index.py.generate_search_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_search_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_search_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_search_index",
      "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge"
    ],
    "estruturas": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_structures",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_structures"
    ],
    "processamento": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute"
    ],
    "paralelo": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_parallel_processing",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_parallel_processing"
    ],
    "aprimora": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.enhance_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.enhance_error_resolution"
    ],
    "estratégias": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "fallback": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_fallback_strategies",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_fallback_strategies"
    ],
    "implementa": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system"
    ],
    "lazy": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading"
    ],
    "loading": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_lazy_loading",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_lazy_loading"
    ],
    "consulta": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_query_patterns",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai"
    ],
    "pool": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.implement_memory_pooling",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.implement_memory_pooling"
    ],
    "compressão": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_data_compression",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_data_compression"
    ],
    "garbage": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection"
    ],
    "collection": [
      "python\\code_optimizer\\migrated_auto_optimizer.py.improve_garbage_collection",
      "maps\\map_updater\\migrated_migrated_auto_optimizer.py.improve_garbage_collection"
    ],
    "erro": [
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns",
      "python\\error_resolver\\migrated_python_error_resolver.py.detect_error_type",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_error_type",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master"
    ],
    "conhecidos": [
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns"
    ],
    "suas": [
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns"
    ],
    "soluções": [
      "python\\error_resolver\\migrated_python_error_resolver.py.load_error_patterns"
    ],
    "python": [
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path",
      "python\\error_resolver\\migrated_python_error_resolver.py.resolve_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.auto_resolve_script_errors",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure",
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_with_error_resolution",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements",
      "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code",
      "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code"
    ],
    "path": [
      "python\\error_resolver\\migrated_python_error_resolver.py.check_python_path"
    ],
    "instala": [
      "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies"
    ],
    "dependências": [
      "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies",
      "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_dependencies",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_dependencies",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph"
    ],
    "faltantes": [
      "python\\error_resolver\\migrated_python_error_resolver.py.install_missing_dependencies",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure"
    ],
    "corrige": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax",
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration",
      "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration"
    ],
    "declarações": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement"
    ],
    "import": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements"
    ],
    "problemáticas": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_import_statement"
    ],
    "sintaxe": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
      "python\\error_resolver\\migrated_python_error_resolver.py.validate_json_syntax"
    ],
    "básicos": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_syntax_error",
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints"
    ],
    "existe": [
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists"
    ],
    "necessário": [
      "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_auto_update_system.py.determine_optimization_target",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_update_type",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.determine_optimization_target"
    ],
    "declaração": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration"
    ],
    "encoding": [
      "python\\error_resolver\\migrated_python_error_resolver.py.fix_encoding_declaration"
    ],
    "aumenta": [
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout"
    ],
    "timeout": [
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout"
    ],
    "scripts": [
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout",
      "maps\\map_updater\\migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_scripts",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.optimize_script_performance",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.fix_script_errors",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_script_dependencies",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths"
    ],
    "demoram": [
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout"
    ],
    "muito": [
      "python\\error_resolver\\migrated_python_error_resolver.py.increase_timeout"
    ],
    "testa": [
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system"
    ],
    "funciona": [
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script"
    ],
    "após": [
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.validate_navigation_paths",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure"
    ],
    "correções": [
      "python\\error_resolver\\migrated_python_error_resolver.py.test_script",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.validate_fixes",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.save_fix_results",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_all_issues",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_all_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.validate_fixes",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_overall_fix_status",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.save_fix_results",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report"
    ],
    "teste": [
      "python\\python_agent\\migrated_python_agent_system.py.main",
      "python\\recipe_manager\\migrated_task_automation_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.main",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.main",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.main",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_test_insights",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.main",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.main",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.main"
    ],
    "base": [
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.save_knowledge_base",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__"
    ],
    "pasta": [
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_rules_folder",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder"
    ],
    "agente_python_base": [
      "python\\python_agent\\migrated_python_agent_system.py.load_base_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns"
    ],
    "melhorias": [
      "python\\python_agent\\migrated_python_agent_system.py.load_improvement_log",
      "python\\python_agent\\migrated_python_agent_system.py.save_improvement_log"
    ],
    "carregados": [
      "python\\python_agent\\migrated_python_agent_system.py.check_base_patterns"
    ],
    "código": [
      "python\\python_agent\\migrated_python_agent_system.py.analyze_structure",
      "python\\python_agent\\migrated_python_agent_system.py.apply_optimizations",
      "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.assess_complexity",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns",
      "agents\\agent_orchestrator\\migrated_optimizer.py.optimize_python_code",
      "agents\\agent_orchestrator\\migrated_validator.py.validate_python_code"
    ],
    "type": [
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints"
    ],
    "hints": [
      "python\\python_agent\\migrated_python_agent_system.py.has_type_hints",
      "python\\python_agent\\migrated_python_agent_system.py.add_basic_type_hints"
    ],
    "específicos": [
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues"
    ],
    "projeto": [
      "python\\python_agent\\migrated_python_agent_system.py.check_project_patterns",
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.save_project_code",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__"
    ],
    "otimizada": [
      "python\\python_agent\\migrated_python_agent_system.py.create_python_file"
    ],
    "existente": [
      "python\\python_agent\\migrated_python_agent_system.py.optimize_python_file",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility"
    ],
    "imports": [
      "python\\python_agent\\migrated_python_agent_system.py.optimize_imports",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_imports"
    ],
    "escaneia": [
      "python\\python_agent\\migrated_python_agent_system.py.scan_project_python_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\map_updater\\migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.scan_rules_consistency",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\modules_indexer\\migrated_update_modules_index.py.scan_modules",
      "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code"
    ],
    "agente": [
      "python\\python_agent\\migrated_python_agent_system.py.generate_report",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.get_agent_info",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_agent",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.run",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.run",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.main",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.run",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.get_agent_info",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role"
    ],
    "temporária": [
      "python\\recipe_manager\\migrated_task_automation_system.py.create_temp_task",
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_content",
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress"
    ],
    "define": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
      "maps\\map_updater\\migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.set_cached_data",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role"
    ],
    "objetivos": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_objectives",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis"
    ],
    "critérios": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_success_criteria",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.define_success_criteria"
    ],
    "passos": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_task_steps"
    ],
    "planejados": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps"
    ],
    "workflow": [
      "python\\recipe_manager\\migrated_task_automation_system.py.define_planned_steps",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agent_role",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_workflow_patterns",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agent_role",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_integration_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.save_workflow_results",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_workflow_status",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.execute_agent_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agent_role",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow"
    ],
    "progresso": [
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_progress",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.generate_progress_report",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_general_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.generate_progress_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.generate_progress_report"
    ],
    "final": [
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_task_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.generate_final_validation_report",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute"
    ],
    "organiza": [
      "python\\recipe_manager\\migrated_task_automation_system.py.organize_task_results",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date"
    ],
    "receita": [
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe"
    ],
    "reproduzir": [
      "python\\recipe_manager\\migrated_task_automation_system.py.generate_recipe"
    ],
    "índices": [
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.save_indexes",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.save_indexes",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.run"
    ],
    "tarefas": [
      "python\\recipe_manager\\migrated_task_automation_system.py.update_task_indexes",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_task_metrics",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_in_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard"
    ],
    "completa": [
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "maps\\map_updater\\migrated_update_readme.py.run_full_update",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_wiki_structure",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity"
    ],
    "início": [
      "python\\recipe_manager\\migrated_task_automation_system.py.execute_complete_task"
    ],
    "resolver": [
      "python\\script_executor\\migrated_script_execution_manager.py.resolve_script_error"
    ],
    "forma": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "segura": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_script_safely"
    ],
    "modo": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode",
      "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode"
    ],
    "(simplificado)": [
      "python\\script_executor\\migrated_script_execution_manager.py.execute_fallback_mode"
    ],
    "básica": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agent_config",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agent_config"
    ],
    "mapas": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_map_update",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_json_maps",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.validate_maps",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.update_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_maps",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.update_all_maps",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.implement_smart_cache",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_all_maps",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_json_maps",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.load_navigation_maps",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps",
      "agents\\agent_orchestrator\\migrated_module_creator.py.load_wiki_maps",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_json_maps"
    ],
    "básico": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_analysis_report",
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map"
    ],
    "genérico": [
      "python\\script_executor\\migrated_script_execution_manager.py.create_basic_report"
    ],
    "execução": [
      "python\\script_executor\\migrated_script_execution_manager.py.log_execution",
      "python\\script_executor\\migrated_script_execution_manager.py.get_execution_stats",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.save_report",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.save_execution_results",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.save_execution_results",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_execution_paths",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.save_report",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.save_execution_results"
    ],
    "script.": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.main",
      "metrics\\metrics_collector\\migrated_metrics_system.py.main",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.main",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.main",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.main",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.main",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.main",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.main",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.main",
      "maps\\map_updater\\migrated_modular_structure_creator.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.main",
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.main",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.main",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.main"
    ],
    "monitoramento.": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._monitoring_loop",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.stop_monitoring"
    ],
    "metrics_dir:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__"
    ],
    "dashboard_dir:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.__init__",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.__init__"
    ],
    "métricas.": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.load_metrics_data",
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "metrics\\metrics_collector\\migrated_metrics_system.py.generate_metrics_report",
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.load_metrics_data",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.generate_metrics_report",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system"
    ],
    "sistema.": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization"
    ],
    "metrics_data:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.calculate_system_status",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.calculate_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics"
    ],
    "alertas": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.load_configuration",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_system_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.save_alerts",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_report",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.run",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.test_alert_system",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.generate_alerts"
    ],
    "status:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_alerts",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_system_status",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_system_status"
    ],
    "dashboard.": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.generate_dashboard_report",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.generate_dashboard_report"
    ],
    "alerts:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_alerts",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_alerts"
    ],
    "gerados": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_dashboard_data"
    ],
    "gráficos.": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history"
    ],
    "performance_data:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history"
    ],
    "gráficos": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_performance_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_performance_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history"
    ],
    "usage_data:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_usage_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_usage_history"
    ],
    "quality_data:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.extract_quality_history",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.extract_quality_history"
    ],
    "dashboard_data:": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.save_dashboard_data",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.save_dashboard_data"
    ],
    "criação": [
      "metrics\\dashboard_monitor\\migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_dashboard_monitoring.py.create_monitoring_dashboard",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation"
    ],
    "cursor.md": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure"
    ],
    "eficiência": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency"
    ],
    "eficácia": [
      "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness"
    ],
    "armazenar": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__"
    ],
    "coleta": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_system_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_usage_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_quality_metrics",
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_usage_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_quality_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_all_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_system_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics"
    ],
    "bmad.": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.collect_performance_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.collect_performance_metrics"
    ],
    "json.": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system"
    ],
    "metrics_type:": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics"
    ],
    "métrica": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.record_metric",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.record_metric"
    ],
    "(performance,": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics"
    ],
    "usage,": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics"
    ],
    "quality)": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.save_metrics"
    ],
    "tendências": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_trend_alerts",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_trends"
    ],
    "coletadas.": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.record_metrics"
    ],
    "implementação": [
      "metrics\\metrics_collector\\migrated_metrics_system.py.implement_metrics_system",
      "maps\\map_updater\\migrated_migrated_metrics_system.py.implement_metrics_system"
    ],
    "habdel": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_statistics",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.generate_habdel_index",
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.update_index",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_integration_index",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_integration_index",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories"
    ],
    "story": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_story_info",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_story_info",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_story_id",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_story_info",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_story_id"
    ],
    "título": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_title",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.extract_title",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_title",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.extract_title",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_title"
    ],
    "descrição": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_description",
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_description",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_description",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_description"
    ],
    "tags": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.extract_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_tags_index",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_tags_index",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags"
    ],
    "stories": [
      "maps\\habdel_indexer\\migrated_update_habdel_index.py.categorize_stories",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_story_based_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_story_based_index",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_stories_progress",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories"
    ],
    "otimizador.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__"
    ],
    "maps_dir:": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__"
    ],
    "contendo": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.__init__"
    ],
    "tamanho": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size"
    ],
    "mapa": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.validate_map",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.load_map_with_cache",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_wiki_map",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_wiki_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure"
    ],
    "file_path:": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.analyze_map_size",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored"
    ],
    "conta": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_update_readme.py.count_files",
      "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
      "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents"
    ],
    "itens": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items"
    ],
    "dados.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._count_items",
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._count_items"
    ],
    "especificada.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "strategy:": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps"
    ],
    "('auto',": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "'compress',": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "'chunk',": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "'both')": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map"
    ],
    "bem-sucedida": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_map",
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_map",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system"
    ],
    "comprime": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data"
    ],
    "removendo": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data"
    ],
    "espaços": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data"
    ],
    "desnecessários": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data"
    ],
    "otimizando": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data"
    ],
    "estrutura.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.generate_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._compress_data",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_config",
      "maps\\map_updater\\migrated_modular_structure_creator.py.generate_report",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_structure_status",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation"
    ],
    "divide": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data"
    ],
    "grandes": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data"
    ],
    "chunks": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data"
    ],
    "menores.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py._chunk_data",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._chunk_data"
    ],
    "diretório.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.optimize_all_maps",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.optimize_all_maps",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory"
    ],
    "otimização.": [
      "maps\\map_optimizer\\migrated_optimize_json_maps.py.generate_optimization_report",
      "maps\\map_updater\\migrated_migrated_optimize_json_maps.py.generate_optimization_report"
    ],
    "mudança": [
      "maps\\map_updater\\migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.trigger_auto_update",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change"
    ],
    "atualizações": [
      "maps\\map_updater\\migrated_auto_updater.py.save_update_history",
      "maps\\map_updater\\migrated_migrated_auto_updater.py.save_update_history"
    ],
    "detectado": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data",
      "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data"
    ],
    "timestamp": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.log",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.log"
    ],
    "imprime": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary"
    ],
    "resumo": [
      "maps\\map_updater\\migrated_auto_update_all_maps.py.print_summary",
      "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.print_summary",
      "agents\\agent_orchestrator\\migrated_alert_agent.py.generate_alert_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.generate_workflow_summary"
    ],
    "auto-atualização": [
      "maps\\map_updater\\migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_update_cycle",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_update_cycle"
    ],
    "threads": [
      "maps\\map_updater\\migrated_auto_update_system.py.start_component_threads",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.start_component_threads"
    ],
    "saúde": [
      "maps\\map_updater\\migrated_auto_update_system.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_system_health",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_system_health",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_health_score",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score"
    ],
    "processa": [
      "maps\\map_updater\\migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.process_habdel_content",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "detectada": [
      "maps\\map_updater\\migrated_auto_update_system.py.process_change",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.process_change"
    ],
    "problema": [
      "maps\\map_updater\\migrated_auto_update_system.py.resolve_performance_issue",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.resolve_performance_issue"
    ],
    "mede": [
      "maps\\map_updater\\migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_auto_update_system.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_memory_usage",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_script_execution_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_response_time",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.measure_memory_usage",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_response_time",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_memory_usage",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_script_execution_time",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.measure_learning_effectiveness"
    ],
    "emergência": [
      "maps\\map_updater\\migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_auto_update_system.py.execute_emergency_fixes",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.emergency_mode",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.execute_emergency_fixes",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_emergency_mode"
    ],
    "críticos": [
      "maps\\map_updater\\migrated_auto_update_system.py.fix_critical_errors",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.fix_critical_errors"
    ],
    "restaura": [
      "maps\\map_updater\\migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups"
    ],
    "backups": [
      "maps\\map_updater\\migrated_auto_update_system.py.restore_backups",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups"
    ],
    "integridade": [
      "maps\\map_updater\\migrated_auto_update_system.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_system_integrity",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_maps_integrity",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.validate_system_integrity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_maps_integrity",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_system_integrity"
    ],
    "reinicia": [
      "maps\\map_updater\\migrated_auto_update_system.py.restart_system",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.restart_system"
    ],
    "atividade": [
      "maps\\map_updater\\migrated_auto_update_system.py.calculate_uptime",
      "maps\\map_updater\\migrated_migrated_auto_update_system.py.calculate_uptime"
    ],
    "canary": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_canary_structure",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure"
    ],
    "framework": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework"
    ],
    "comparação": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework"
    ],
    "otclient": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_comparison_framework",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "template": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template"
    ],
    "documentação": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_documentation_template",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_project_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_api_documentation",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.validate_documentation_quality",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template"
    ],
    "ferramentas": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_statistics",
      "maps\\tools_indexer\\migrated_update_tools_index.py.generate_tools_index",
      "maps\\tools_indexer\\migrated_update_tools_index.py.update_index"
    ],
    "guias": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides"
    ],
    "migração": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_migration_guides",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_migration_guides"
    ],
    "preparação": [
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files",
      "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.run",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation"
    ],
    "consolidador": [
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__"
    ],
    "agentes.": [
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__"
    ],
    "agents_dir:": [
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__"
    ],
    "agentes": [
      "maps\\map_updater\\migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.select_agents",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.__init__",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.analyze_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.select_agents",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_agents_map",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agents_map_structure",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_agent_integration",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.select_agents",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_agents_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.select_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.select_agents",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase"
    ],
    "antes": [
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists"
    ],
    "consolidação": [
      "maps\\map_updater\\migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.backup_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.generate_consolidation_report",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge"
    ],
    "consolida": [
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_all_agents",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_all_agents",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups"
    ],
    "grupo": [
      "maps\\map_updater\\migrated_consolidate_agents.py.consolidate_group",
      "maps\\map_updater\\migrated_migrated_consolidate_agents.py.consolidate_group",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message"
    ],
    "pull": [
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes"
    ],
    "últimas": [
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes"
    ],
    "perda": [
      "maps\\map_updater\\migrated_final_commit_verification.py.pull_latest_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.pull_latest_changes"
    ],
    "staging.": [
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes"
    ],
    "adição": [
      "maps\\map_updater\\migrated_final_commit_verification.py.add_all_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.add_all_changes"
    ],
    "message:": [
      "maps\\map_updater\\migrated_final_commit_verification.py.commit_changes",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.commit_changes",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit"
    ],
    "working": [
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree"
    ],
    "tree": [
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree"
    ],
    "limpo.": [
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree"
    ],
    "limpo": [
      "maps\\map_updater\\migrated_final_commit_verification.py.verify_clean_working_tree",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.verify_clean_working_tree"
    ],
    "verificação.": [
      "maps\\map_updater\\migrated_final_commit_verification.py.generate_final_report",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.generate_final_report"
    ],
    "verificação": [
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check"
    ],
    "completa.": [
      "maps\\map_updater\\migrated_final_commit_verification.py.run_final_verification",
      "maps\\map_updater\\migrated_migrated_final_commit_verification.py.run_final_verification",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses"
    ],
    "comando": [
      "maps\\map_updater\\migrated_git_atomic_commits.py.run_command",
      "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.run_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command"
    ],
    "gerenciador": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__"
    ],
    "cache.": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.__init__",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.__init__"
    ],
    "duração": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.get_cache_duration",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.get_cache_duration",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration"
    ],
    "ainda": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid"
    ],
    "válido": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.is_cache_valid",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.is_cache_valid"
    ],
    "limpa": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation"
    ],
    "todo": [
      "maps\\map_updater\\migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_migrated_implement_smart_cache.py.clear_cache",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration"
    ],
    "especializados": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_agents",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_agents",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_agents",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_agents"
    ],
    "workflows": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_workflows",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.initialize_workflows",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_workflows",
      "agents\\workflow_manager\\migrated_integration_workflow.py._setup_integration_workflows"
    ],
    "extensão": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension"
    ],
    "disponíveis": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.list_all_agents",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.get_available_modules",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.list_all_agents"
    ],
    "realiza": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_analysis",
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.perform_optimizations",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_analysis",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.perform_optimizations"
    ],
    "gate": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.check_quality_gate",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.check_quality_gate"
    ],
    "alerta": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation"
    ],
    "sobre": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation"
    ],
    "degradação": [
      "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.alert_degradation",
      "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.alert_degradation"
    ],
    "correção": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.main",
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.trigger_health_correction",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.main",
      "agents\\agent_monitor\\migrated_auto_monitor.py.trigger_health_correction"
    ],
    "compatibilidade": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.optimize_compatibility",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.calculate_final_compatibility_score",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.validate_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility"
    ],
    "identificados": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_all_compatibility_issues",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files"
    ],
    "inválido": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.fix_invalid_json",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.fix_invalid_json"
    ],
    "legível": [
      "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.generate_validation_report",
      "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.generate_fix_report",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.generate_validation_report"
    ],
    "validações": [
      "maps\\map_updater\\migrated_migrated_aaa_integration_validator.py.calculate_overall_status",
      "agents\\agent_validator\\migrated_aaa_integration_validator.py.calculate_overall_status"
    ],
    "avançada.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.save_search_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.save_search_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search"
    ],
    "consolidated_dir:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__"
    ],
    "documentos": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_tags",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_documents",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.optimize_ui_documents",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references"
    ],
    "consolidados": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__"
    ],
    "inteligente.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.load_intelligent_navigation",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.generate_navigation_report",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.save_intelligent_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.load_intelligent_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.__init__",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.generate_navigation_report",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.save_intelligent_navigation"
    ],
    "documento.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content"
    ],
    "documento": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_document_info",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_document",
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.categorize_size",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.categorize_document",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_priority",
      "documentation\\content_validator\\migrated_update_json_maps.py.get_description",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_document_info",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_document",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.categorize_size"
    ],
    "extraído": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_document_content",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_document_content",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff"
    ],
    "constrói": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph"
    ],
    "textual.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_content_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_content_index"
    ],
    "semântico": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index"
    ],
    "conteúdo.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_semantic_index",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_semantic_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents"
    ],
    "categorias.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_category_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_category_index"
    ],
    "tags.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_tag_index",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_tag_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags"
    ],
    "palavras-chave.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_keyword_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_keyword_index"
    ],
    "metadados.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_metadata_index",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_metadata_index"
    ],
    "matriz": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix"
    ],
    "documentos.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_similarity_matrix",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_similarity_matrix",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths"
    ],
    "dois": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "doc1:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity"
    ],
    "primeiro": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "doc2:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity"
    ],
    "segundo": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "(0-1)": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.calculate_similarity",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.calculate_similarity"
    ],
    "texto": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions"
    ],
    "query:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "query": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "limit:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar"
    ],
    "limite": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar"
    ],
    "tags:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags"
    ],
    "buscar": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags"
    ],
    "categoria.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "category:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "subcategory:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category"
    ],
    "subcategoria": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category"
    ],
    "(opcional)": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation"
    ],
    "similares.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "doc_path:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar"
    ],
    "referência": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_lua_api_reference",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_reference_documents",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar"
    ],
    "snippet": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "destacada.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "content:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors"
    ],
    "max_length:": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "máximo": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.extract_snippet",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.extract_snippet"
    ],
    "busca.": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report"
    ],
    "construção": [
      "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search",
      "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search"
    ],
    "monitoramento": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
      "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.verify_dashboard_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "contínuo": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.start_monitoring",
      "agents\\agent_monitor\\migrated_auto_monitor.py.start_monitoring"
    ],
    "funcionalidade": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_scripts_functionality",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality"
    ],
    "permissões": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions"
    ],
    "validade": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_json_validity",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_json_validity"
    ],
    "velocidade": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_velocity"
    ],
    "acesso": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access",
      "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed"
    ],
    "automáticas": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions"
    ],
    "necessárias": [
      "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_and_trigger_actions",
      "agents\\agent_monitor\\migrated_auto_monitor.py.check_and_trigger_actions"
    ],
    "pedido": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request"
    ],
    "usuário": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request"
    ],
    "extensões": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions"
    ],
    "tecnologias": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies"
    ],
    "mencionadas": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_technologies",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_technologies"
    ],
    "combina": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.combine_analysis",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation"
    ],
    "identifica": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_success_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_failure_patterns",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._identify_optimization_patterns",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.identify_patterns",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.identify_primary_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase"
    ],
    "orquestra": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.orchestrate_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.orchestrate_request"
    ],
    "melhorada": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.orchestrate_request",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.orchestrate_request"
    ],
    "selecionados": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.execute_workflow",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.execute_workflow"
    ],
    "responsáveis": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase"
    ],
    "cada": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase"
    ],
    "fase": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_analysis_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_testing_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_learning_phase",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.log_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_structure_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_deployment",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.get_agents_for_phase",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress"
    ],
    "simula": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.simulate_phase_execution"
    ],
    "reporta": [
      "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.report_phase_progress",
      "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.report_phase_progress",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.report_phase_progress"
    ],
    "seção": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_section_content",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.get_section_content",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_section_content",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.get_section_content"
    ],
    "exemplos": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples"
    ],
    "práticos": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.extract_examples",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.extract_examples",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules"
    ],
    "guia": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide"
    ],
    "integrando": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_comprehensive_ui_guide"
    ],
    "completos": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_system_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_system_guides",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "desenvolvimento": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides"
    ],
    "expandidos": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.create_development_guides",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.create_development_guides"
    ],
    "expande": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive"
    ],
    "abrangente": [
      "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive",
      "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.expand_wiki_comprehensive"
    ],
    "links": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.create_navigation_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.create_navigation_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links"
    ],
    "quebrados": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.fix_broken_links",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.fix_broken_links"
    ],
    "aliases": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases"
    ],
    "melhor": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_document_aliases",
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.optimize_maps_for_ai",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_document_aliases",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.optimize_maps_for_ai"
    ],
    "seções": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.improve_navigation_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_sections",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_sections",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.improve_navigation_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation"
    ],
    "rápida": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide"
    ],
    "brasileiros": [
      "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide",
      "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide"
    ],
    "nome": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.determine_category",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_name",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.categorize_document",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.determine_category",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_name",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "emoji": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_category_emoji",
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.get_status_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_category_emoji",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.get_status_emoji"
    ],
    "habdel-wiki": [
      "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.run",
      "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.run"
    ],
    "existente.": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.load_navigation_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.load_navigation_index"
    ],
    "extrair": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content"
    ],
    "navegação.": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.optimize_navigation",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.optimize_navigation"
    ],
    "extraídas": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content"
    ],
    "grafo": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.build_navigation_graph",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_dependency_graph",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.build_navigation_graph"
    ],
    "semânticos": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links"
    ],
    "relacionados.": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_semantic_links",
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_related_documents",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_semantic_links",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_related_documents"
    ],
    "contextuais": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths"
    ],
    "rápido.": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_quick_access",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_quick_access"
    ],
    "rápida.": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_search_index",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_search_index"
    ],
    "breadcrumbs": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs"
    ],
    "hierárquica.": [
      "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_breadcrumbs",
      "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_breadcrumbs"
    ],
    "coordenado": [
      "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.execute_workflow",
      "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.execute_workflow"
    ],
    "consolidação.": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report"
    ],
    "wiki_dir:": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.__init__",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.__init__"
    ],
    "disponíveis.": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents"
    ],
    "organizados": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.scan_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.scan_documents",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_category",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date"
    ],
    "documents:": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report"
    ],
    "escaneados": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents"
    ],
    "categorizados": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.categorize_documents",
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.categorize_documents",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure"
    ],
    "organizada.": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure"
    ],
    "categorized_docs:": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_structure",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_structure"
    ],
    "consolidada.": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_navigation_index",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_navigation_index"
    ],
    "originais": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report"
    ],
    "navigation_data:": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.create_consolidation_report",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.create_consolidation_report"
    ],
    "conhecimento.": [
      "maps\\map_updater\\migrated_migrated_knowledge_consolidation_system.py.consolidate_knowledge",
      "analysis\\knowledge_consolidator\\migrated_knowledge_consolidation_system.py.consolidate_knowledge"
    ],
    "mapeamento": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code"
    ],
    "módulos.": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_script_mapping"
    ],
    "modular": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure"
    ],
    "unificada.": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_structure",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_structure"
    ],
    "__init__.py": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init"
    ],
    "módulo.": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_init",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files",
      "maps\\map_updater\\migrated_modular_structure_creator.py.get_category_for_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_config"
    ],
    "scripts.": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_script_mapping_file",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_script_mapping_file"
    ],
    "modular.": [
      "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_modular_structure_creator.py.create_structure_documentation",
      "maps\\map_updater\\migrated_script_migration_agent.py.load_structure_config"
    ],
    "traduz": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text"
    ],
    "inglês": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata"
    ],
    "otimizar": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text"
    ],
    "tokens": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.translate_text",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.translate_text"
    ],
    "metadados": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata",
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata"
    ],
    "convertendo": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_metadata",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_metadata"
    ],
    "relationships.json": [
      "maps\\map_updater\\migrated_migrated_optimize_maps_for_tokens.py.optimize_relationships",
      "maps\\map_updater\\migrated_optimize_maps_for_tokens.py.optimize_relationships"
    ],
    "sobreposição": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap"
    ],
    "mescla": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents"
    ],
    "rede": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.merge_network_documents",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.merge_network_documents"
    ],
    "widgets": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.extract_widget_sections",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.extract_widget_sections"
    ],
    "repetitivas": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections"
    ],
    "desnecessárias": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.remove_repetitive_sections",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.remove_repetitive_sections"
    ],
    "padroniza": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.standardize_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.standardize_navigation",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names"
    ],
    "padronizada": [
      "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.generate_standard_navigation",
      "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.generate_standard_navigation"
    ],
    "ambiente": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment"
    ],
    "debug": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_debug_environment",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_debug_report",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.save_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_debug_environment",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_debug_report",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.save_debug_report"
    ],
    "ferramenta": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available"
    ],
    "disponível": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available"
    ],
    "debugger": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_lua_debugger",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_lua_debugger"
    ],
    "dump": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump"
    ],
    "crash": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.identify_crash_type",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.generate_crash_recommendations",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.identify_crash_pattern",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.identify_crash_type",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.generate_crash_recommendations"
    ],
    "stack": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace"
    ],
    "trace": [
      "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.extract_stack_trace",
      "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.extract_stack_trace"
    ],
    "parseia": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_line",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_line"
    ],
    "entradas": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.parse_log_entries",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.parse_log_entries"
    ],
    "intervalo": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.get_time_range",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.get_time_range",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "distribuição": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution"
    ],
    "níveis": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution"
    ],
    "classifica": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.classify_error",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.classify_error"
    ],
    "crashes": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes"
    ],
    "cliente": [
      "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes",
      "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes"
    ],
    "monitor": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__"
    ],
    "performance.": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.save_metrics",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.get_performance_report"
    ],
    "project_root:": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__"
    ],
    "raiz": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__"
    ],
    "monitor_dir:": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.__init__"
    ],
    "existentes.": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.load_metrics"
    ],
    "projeto.": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.collect_project_metrics",
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts"
    ],
    "excedem": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds"
    ],
    "limites": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds"
    ],
    "definidos.": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.check_performance_thresholds"
    ],
    "antigas": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics"
    ],
    "economizar": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics"
    ],
    "espaço.": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py._cleanup_old_metrics"
    ],
    "contínuo.": [
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.start_monitoring",
      "maps\\map_updater\\migrated_migrated_performance_monitor.py.stop_monitoring",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "área": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.create_integration_section",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.create_integration_section"
    ],
    "incluir": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.update_maps_for_integration",
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init"
    ],
    "processo": [
      "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.prepare_integration",
      "maps\\map_updater\\migrated_prepare_canary_integration.py.prepare_integration"
    ],
    "descobre": [
      "maps\\map_updater\\migrated_script_migration_agent.py.discover_python_scripts"
    ],
    "informações.": [
      "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script"
    ],
    "destino": [
      "maps\\map_updater\\migrated_script_migration_agent.py.determine_target_module"
    ],
    "migra": [
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_script_to_module",
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts"
    ],
    "versão": [
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script"
    ],
    "migrada": [
      "maps\\map_updater\\migrated_script_migration_agent.py.create_migrated_script"
    ],
    "migrado.": [
      "maps\\map_updater\\migrated_script_migration_agent.py.update_module_init"
    ],
    "descobertos.": [
      "maps\\map_updater\\migrated_script_migration_agent.py.migrate_all_scripts"
    ],
    "migração.": [
      "maps\\map_updater\\migrated_script_migration_agent.py.generate_migration_report",
      "maps\\map_updater\\migrated_script_migration_agent.py.save_migration_report"
    ],
    "bmad": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_agents_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_workflows_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.generate_templates_index",
      "maps\\map_updater\\migrated_update_bmad_maps.py.update_all_bmad_maps",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_agents"
    ],
    "adaptação": [
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_workflow_context_adaptation",
      "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation"
    ],
    "funcionalidades": [
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality"
    ],
    "descritas": [
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality"
    ],
    "readme": [
      "maps\\map_updater\\migrated_update_readme.py.validate_functionality",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.generate_readme"
    ],
    "readme.md": [
      "maps\\map_updater\\migrated_update_readme.py.update_readme_metrics",
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file"
    ],
    "reais": [
      "maps\\map_updater\\migrated_update_readme.py.update_readme_file",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.collect_system_metrics"
    ],
    "apis": [
      "maps\\modules_indexer\\migrated_update_modules_index.py.extract_lua_apis"
    ],
    "recursos": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.scan_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resources",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_statistics",
      "maps\\resources_indexer\\migrated_update_resources_index.py.generate_resources_index",
      "maps\\resources_indexer\\migrated_update_resources_index.py.update_index"
    ],
    "recurso": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource",
      "maps\\resources_indexer\\migrated_update_resources_index.py.categorize_resource"
    ],
    "fonte": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_font_metadata"
    ],
    "localização": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_locale_metadata"
    ],
    "partículas": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.extract_particle_metadata"
    ],
    "linhas": [
      "maps\\resources_indexer\\migrated_update_resources_index.py.count_lines",
      "maps\\tools_indexer\\migrated_update_tools_index.py.count_lines"
    ],
    "criar": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.scan_all_documents",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.scan_all_documents"
    ],
    "frontmatter": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.extract_frontmatter",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.extract_frontmatter"
    ],
    "alfabético": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.create_alphabetical_index",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.create_alphabetical_index"
    ],
    "geração": [
      "maps\\source_indexer\\migrated_migrated_navigation_index_generator.py.run",
      "analysis\\research_manager\\migrated_navigation_index_generator.py.run",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.extract_generation_insights",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_generation_phase"
    ],
    "submódulos": [
      "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files"
    ],
    "funções": [
      "maps\\source_indexer\\migrated_update_source_index.py.extract_functions",
      "maps\\tools_indexer\\migrated_update_tools_index.py.extract_functions",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_functions"
    ],
    "classes": [
      "maps\\source_indexer\\migrated_update_source_index.py.extract_classes",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_classes"
    ],
    "estilo": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widgets",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_dependencies",
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_style"
    ],
    "otui": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files",
      "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file",
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns"
    ],
    "propriedades": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties",
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_properties"
    ],
    "widget": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.extract_widget_properties"
    ],
    "tenta": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type"
    ],
    "adivinhar": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type"
    ],
    "propriedade": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.guess_property_type"
    ],
    "estilos": [
      "maps\\styles_indexer\\migrated_update_styles_index.py.categorize_styles",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_statistics",
      "maps\\styles_indexer\\migrated_update_styles_index.py.generate_styles_index",
      "maps\\styles_indexer\\migrated_update_styles_index.py.update_index"
    ],
    "linguagem": [
      "maps\\tools_indexer\\migrated_update_tools_index.py.get_language",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.detect_language"
    ],
    "markdown": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files",
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.extract_frontmatter",
      "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files",
      "documentation\\content_validator\\migrated_update_json_maps.py.extract_frontmatter",
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_markdown_dashboard",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report"
    ],
    "relacionamentos": [
      "maps\\wiki_indexer\\migrated_update_wiki_maps.py.generate_relationships",
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_relationships"
    ],
    "prioridade": [
      "documentation\\content_validator\\migrated_update_json_maps.py.get_priority",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.determine_priority"
    ],
    "clusters": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.load_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py.save_clusters",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._create_pattern_clusters"
    ],
    "tópicos": [
      "documentation\\content_validator\\migrated_update_json_maps.py.generate_topic_clusters"
    ],
    "emojis": [
      "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file"
    ],
    "características": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._extract_features",
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features"
    ],
    "combinação": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_agent_patterns",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "centro": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center"
    ],
    "cluster": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._calculate_cluster_center"
    ],
    "deram": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features"
    ],
    "match": [
      "analysis\\source_analyzer\\migrated_pattern_analyzer.py._get_matched_features"
    ],
    "identificar": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source"
    ],
    "pendentes": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.extract_pending_tasks",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_tasks_pending",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_pending_stories"
    ],
    "atribui": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.assign_task_to_agent",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.assign_task"
    ],
    "separada": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py._run_agent_thread"
    ],
    "concluída": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.execute_auto_commit"
    ],
    "aguarda": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion"
    ],
    "conclusão": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.wait_for_agents_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion"
    ],
    "orquestração": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.generate_orchestration_report"
    ],
    "agents": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run"
    ],
    "orchestrator": [
      "agents\\agent_orchestrator\\migrated_agents_orchestrator.py.run"
    ],
    "aplicação": [
      "agents\\agent_orchestrator\\migrated_alert_agent.py.check_application_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_application_metrics",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_app_health_score"
    ],
    "agente.": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.main",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.main",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.main"
    ],
    "projetos": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report"
    ],
    "wiki.": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules"
    ],
    "bool:": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.execute_practical_projects",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_practical_modules",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system"
    ],
    "simples": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_simple_code"
    ],
    "práticos.": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report"
    ],
    "projects:": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report"
    ],
    "results:": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report"
    ],
    "str:": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report"
    ],
    "formatado": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.generate_execution_report",
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report"
    ],
    "code": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run"
    ],
    "generator": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "agent": [
      "agents\\agent_orchestrator\\migrated_code_generator_agent.py.run",
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.run",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run"
    ],
    "cobertura": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.analyze_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage"
    ],
    "ignoradas": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_stories_habdel"
    ],
    "mapeia": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks"
    ],
    "tasks": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_tasks_progress"
    ],
    "importantes": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks"
    ],
    "documentadas": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.map_missing_tasks"
    ],
    "documenta": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents"
    ],
    "cobertos": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.document_missing_agents"
    ],
    "roadmaps": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.integrate_missing_roadmaps",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_roadmaps_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_roadmaps"
    ],
    "cobre": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans"
    ],
    "planejamentos": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.cover_missing_plans",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_planejamentos_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_planejamentos"
    ],
    "100%": [
      "agents\\agent_orchestrator\\migrated_coverage_validation_agent.py.update_dashboard_coverage",
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.verify_100_percent_coverage"
    ],
    "interativo": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.generate_html_dashboard"
    ],
    "dashboards": [
      "agents\\agent_orchestrator\\migrated_dashboard_agent.py.save_dashboard"
    ],
    "profunda.": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.main",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_deep_analysis_report",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_final_analysis_report"
    ],
    "deep": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__"
    ],
    "source": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__"
    ],
    "analyzer.": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.__init__"
    ],
    "relevantes.": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code"
    ],
    "dict:": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.scan_source_code",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context"
    ],
    "nome.": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file"
    ],
    "arquivo.": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type"
    ],
    "detalhes.": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category"
    ],
    "analisada": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category",
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "analyses:": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "detalhadas": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.generate_category_detailed_report"
    ],
    "profunda": [
      "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.run_deep_analysis"
    ],
    "gerar": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation"
    ],
    "comentários": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.extract_comments"
    ],
    "parse": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters"
    ],
    "parâmetros": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.parse_parameters"
    ],
    "necessidades": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.identify_documentation_needs"
    ],
    "gerada": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.save_documentation",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message"
    ],
    "documentation": [
      "agents\\agent_orchestrator\\migrated_documentation_agent.py.run"
    ],
    "lições": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.test_lessons_functionality",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report"
    ],
    "progressão": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression"
    ],
    "cursos": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.validate_course_progression",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses"
    ],
    "gaps": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.identify_knowledge_gaps"
    ],
    "educacional": [
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.generate_educational_report",
      "agents\\agent_orchestrator\\migrated_educational_validation_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system"
    ],
    "nomenclatura": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns"
    ],
    "atuais": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_current_metrics",
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.save_metrics"
    ],
    "obsoletos": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files"
    ],
    "razão": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason"
    ],
    "considerado": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason"
    ],
    "obsoleto": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_obsolete_reason",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action"
    ],
    "ação": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle"
    ],
    "recomendada": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.get_recommended_action"
    ],
    "nomes": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names"
    ],
    "snake_case": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names"
    ],
    "organização": [
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_file_organization_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.run_full_organization"
    ],
    "__pycache__": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_pycache"
    ],
    "start_task_supervisor.py": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor"
    ],
    "task_supervisor_agent.py": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_start_task_supervisor"
    ],
    "absolute_path_utility.py": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility"
    ],
    "comprehensive_path_validator.py": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.integrate_absolute_path_utility"
    ],
    "backup_consolidation": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation"
    ],
    "limpeza": [
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.validate_final_structure",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.generate_final_report",
      "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.execute"
    ],
    "automação": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.__init__"
    ],
    "tentar": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists"
    ],
    "adicioná-lo.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists"
    ],
    "segura,": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "validando": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "existência.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "adicionado": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file"
    ],
    "atual.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context"
    ],
    "abertos": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files"
    ],
    "ide.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files"
    ],
    "agrupa": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context"
    ],
    "separados.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups"
    ],
    "changes:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_change_summary",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message"
    ],
    "grupos": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_directory",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "tipo.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type"
    ],
    "(análise": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context"
    ],
    "diff).": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context"
    ],
    "diff": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff"
    ],
    "diff.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff"
    ],
    "diff_content:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff"
    ],
    "context1:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "context2:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context"
    ],
    "sobrepostos.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups"
    ],
    "groups:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "consolidada": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._consolidate_groups"
    ],
    "garante": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "apenas": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "grupo.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "all_files:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "únicos": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files"
    ],
    "arquivos.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files",
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_archives_folder"
    ],
    "commit_type:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._generate_group_message"
    ],
    "convencional": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_commit_type"
    ],
    "formatada": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.generate_commit_message"
    ],
    "seguindo": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message"
    ],
    "boas": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message"
    ],
    "práticas.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons"
    ],
    "validada": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_commit_message"
    ],
    "validação.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_commit",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_validation_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_validation_workflow"
    ],
    "completo.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.auto_commit",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.run_educational_system"
    ],
    "grupos.": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "commit_groups:": [
      "agents\\agent_orchestrator\\migrated_git_automation_agent.py.execute_multiple_commits"
    ],
    "integrado": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.main"
    ],
    "integrada": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.optimize_navigation"
    ],
    "estratégias:": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "'json':": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "tradicional": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.json_navigation"
    ],
    "'graph':": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "grafos": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.graph_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation",
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.integrate_results"
    ],
    "'hybrid':": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.navigate"
    ],
    "híbrida": [
      "agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py.hybrid_navigation"
    ],
    "integration": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py.main"
    ],
    "agent.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__"
    ],
    "prepara": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure"
    ],
    "recepção": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure"
    ],
    "canary.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.validate_canary_integration_structure"
    ],
    "dict": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.prepare_integration_structure",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.create_integration_templates",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows",
      "agents\\agent_orchestrator\\migrated_integration_agent.py.generate_integration_report",
      "agents\\workflow_manager\\migrated_integration_workflow.py.run_full_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "(preparação).": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.validate_compatibility"
    ],
    "automatizados.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py.setup_integration_workflows"
    ],
    "template.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files"
    ],
    "workflow.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_files",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_workflow_templates",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\workflow_manager\\migrated_integration_workflow.py.main",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase",
      "agents\\workflow_manager\\migrated_integration_workflow.py.get_workflow_status"
    ],
    "interfaces": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces"
    ],
    "api.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_api_interfaces"
    ],
    "documentação.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_documentation_format",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_documentation_templates"
    ],
    "código.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_code_standards",
      "agents\\agent_orchestrator\\migrated_integration_agent.py._create_code_templates",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan"
    ],
    "dependências.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_dependencies",
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_dependency_compatibility"
    ],
    "preparação.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_preparation_workflow"
    ],
    "teste.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_testing_workflow"
    ],
    "deploy.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._setup_deployment_workflow",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_deployment",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_deployment"
    ],
    "compatibilidade.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_compatibility_status",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_compatibility_check"
    ],
    "templates.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_templates_status",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_template_creation"
    ],
    "workflows.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_workflows_status",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_workflow_setup"
    ],
    "próximos": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps"
    ],
    "passos.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_next_steps"
    ],
    "recomendações.": [
      "agents\\agent_orchestrator\\migrated_integration_agent.py._get_recommendations"
    ],
    "cronograma": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline"
    ],
    "transição": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.create_transition_timeline"
    ],
    "adapta": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.adapt_educational_system"
    ],
    "estabelece": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery"
    ],
    "processos": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes"
    ],
    "pós-integração": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.establish_validation_processes"
    ],
    "plano": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.generate_integration_plan",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan"
    ],
    "planejamento": [
      "agents\\agent_orchestrator\\migrated_integration_planning_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute"
    ],
    "inclui": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues"
    ],
    "encontrados": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_organization_issues"
    ],
    "relacionados": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_canary_integration_issues",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files"
    ],
    "faltante.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure"
    ],
    "diretórios/arquivos": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._detect_missing_integration_structure"
    ],
    "relacionado": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file"
    ],
    "local": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location"
    ],
    "correto.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location"
    ],
    "estiver": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location"
    ],
    "correto": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_in_correct_canary_location"
    ],
    "existir.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure"
    ],
    "criada": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure"
    ],
    "existia": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._create_canary_integration_structure"
    ],
    "organizado": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system"
    ],
    "errado.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_wrong_location"
    ],
    "obsoleto.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_obsolete"
    ],
    "temporário.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file"
    ],
    "definida.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.has_category"
    ],
    "duplicados.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_duplicates",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates"
    ],
    "relatórios": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date"
    ],
    "organizados.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.find_unorganized_reports"
    ],
    "relatórios.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_reports_folder"
    ],
    "tarefas.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_tasks_folder"
    ],
    "receitas.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_in_recipes_folder"
    ],
    "data": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_by_date",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file"
    ],
    "modificação.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file"
    ],
    "temporários": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files"
    ],
    "removidos": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files"
    ],
    "duplicatas": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates"
    ],
    "removidas": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.remove_duplicates"
    ],
    "padrão.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.create_organization_structure"
    ],
    "organização.": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.generate_organization_report",
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored"
    ],
    "ignorado": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored"
    ],
    "pela": [
      "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_ignored"
    ],
    "analysis_results:": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "module": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "analyzer": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "generation_results:": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "test_results:": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "tester": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "aprendizados": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "extraídos": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.process_workflow_results"
    ],
    "estruturais": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns"
    ],
    "novos": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_knowledge_base",
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.update_navigation_maps"
    ],
    "tipos": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types"
    ],
    "comuns": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_common_patterns"
    ],
    "tópico": [
      "agents\\agent_orchestrator\\migrated_knowledge_manager.py.get_wiki_knowledge"
    ],
    "novas": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes"
    ],
    "versões": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_update_processes"
    ],
    "escalabilidade": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.define_scalability_processes"
    ],
    "roadmap": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap"
    ],
    "evolução": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.create_evolution_roadmap"
    ],
    "manutenção": [
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.generate_maintenance_plan",
      "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.execute"
    ],
    "operacional": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.collect_system_metrics"
    ],
    "ativos": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.get_active_agents"
    ],
    "kpis": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis",
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.generate_alerts",
      "agents\\agent_orchestrator\\migrated_metrics_validation_agent.py.validate_kpis"
    ],
    "coletadas": [
      "agents\\agent_orchestrator\\migrated_metrics_agent.py.calculate_kpis"
    ],
    "game_": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules"
    ],
    "entender": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules"
    ],
    "otmod": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns"
    ],
    "conceito": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept",
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_structure"
    ],
    "novo": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_module_concept"
    ],
    ".otmod": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otmod_content"
    ],
    ".lua": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_lua_content"
    ],
    ".otui": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_otui_content"
    ],
    "zero": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.create_module_from_scratch"
    ],
    "modules:": [
      "agents\\agent_orchestrator\\migrated_module_creator.py.generate_practical_modules_report"
    ],
    "referências": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_json_references",
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.update_json_references"
    ],
    "statements": [
      "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_import_statements"
    ],
    "educacional.": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_documentation",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_final_report"
    ],
    "professor": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.__init__"
    ],
    "inicialização": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.initialize_educational_structure",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_educational_initialization_report"
    ],
    "cursos.": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_courses_documentation"
    ],
    "estruturadas": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons"
    ],
    "(fase": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons"
    ],
    "4.2).": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons"
    ],
    "gerado": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_structured_lessons",
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_practical_lessons"
    ],
    "lições.": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow"
    ],
    "criado": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_lessons_structure",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure"
    ],
    "estruturadas.": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.generate_lessons_report"
    ],
    "funcional": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses"
    ],
    "ativação": [
      "agents\\agent_orchestrator\\migrated_professor_agent.py.create_functional_courses",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_learning_workflow",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "epics": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.calculate_epics_progress",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_epics"
    ],
    "progress": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run"
    ],
    "tracker": [
      "agents\\agent_orchestrator\\migrated_progress_tracker_agent.py.run"
    ],
    "testes": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute_comprehensive_tests",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_integration_testing",
      "agents\\workflow_manager\\migrated_integration_workflow.py._run_integration_tests"
    ],
    "certifica": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.certify_total_quality"
    ],
    "certificação": [
      "agents\\agent_orchestrator\\migrated_quality_assurance_agent.py.execute",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report"
    ],
    "pesquisador.": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.main",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_status_report"
    ],
    "base_path:": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__"
    ],
    "(padrão:": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__"
    ],
    "atual)": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.__init__"
    ],
    "expandido.": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_habdel_structure"
    ],
    "metodologia": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system"
    ],
    "habdel.": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_story_system",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template"
    ],
    "story_system:": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system"
    ],
    "salvo": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.save_story_system",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "pesquisa": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template",
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan"
    ],
    "sistemas.": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source"
    ],
    "estruturado": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan"
    ],
    "inicial": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup"
    ],
    "configurado": [
      "agents\\agent_orchestrator\\migrated_researcher_agent.py.run_initial_setup"
    ],
    "central": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.analyze_dashboard",
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.update_dashboard"
    ],
    "subtasks": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks"
    ],
    "epic": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_subtasks"
    ],
    "completas": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.extract_completed_stories"
    ],
    "minutos": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.estimate_duration"
    ],
    "próximas": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities"
    ],
    "prioridades": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.identify_next_priorities"
    ],
    "task": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task"
    ],
    "master": [
      "agents\\agent_orchestrator\\migrated_task_master_agent.py.run",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task"
    ],
    "iniciar": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main"
    ],
    "supervisor": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.main",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.__init__"
    ],
    "análise.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.read_task_master"
    ],
    "master.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.extract_current_task"
    ],
    "indicações": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion"
    ],
    "tarefa.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "detectar": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_task_completion",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors"
    ],
    "aguardando": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions"
    ],
    "instruções.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions"
    ],
    "espera": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions"
    ],
    "instruções": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_waiting_for_instructions"
    ],
    "problemas.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.check_for_errors"
    ],
    "pode": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command"
    ],
    "enviar": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command"
    ],
    "(respeitando": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command"
    ],
    "cooldown).": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.can_send_command"
    ],
    "continuar": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "próxima": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "current_task:": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_continue_command"
    ],
    "supervisor.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "action:": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "details:": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "detalhes": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "adicionais": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.log_supervision_action"
    ],
    "conversação": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context"
    ],
    "decide": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "analisado": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.should_continue_to_next_task"
    ],
    "supervisão.": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle",
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.generate_supervision_report"
    ],
    "tomada": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.execute_supervision_cycle"
    ],
    "interval:": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "verificações": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "segundos": [
      "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.start_monitoring"
    ],
    "config:": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "ativação.": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report"
    ],
    "report:": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "path:": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_activation_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "automática.": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.activate_certification_system"
    ],
    "certificação.": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.generate_certification_report",
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.save_certification_report"
    ],
    "orquestrador": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.main"
    ],
    "module_name:": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "processar": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "opcionais": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.execute_workflow"
    ],
    "executados": [
      "agents\\agent_orchestrator\\migrated_workflow_orchestrator_legacy.py.list_workflows"
    ],
    "phase:": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_phase"
    ],
    "ambiente.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_preparation"
    ],
    "conflitos.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_conflict_resolution"
    ],
    "final.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._phase_validation",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_integration",
      "agents\\workflow_manager\\migrated_integration_workflow.py._execute_final_validation"
    ],
    "escrita.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_permissions"
    ],
    "apis.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_api_compatibility"
    ],
    "formatos.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._check_format_compatibility"
    ],
    "rollback": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase"
    ],
    "fase.": [
      "agents\\workflow_manager\\migrated_integration_workflow.py._rollback_phase"
    ]
  }
}