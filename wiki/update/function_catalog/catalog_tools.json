{
  "category": "tools",
  "metadata": {
    "total_functions": 103,
    "total_classes": 9,
    "created": "2025-08-01T12:30:28.845225"
  },
  "functions": {
    "tools\\config_manager\\migrated_update_context_system.py.get_key_files": {
      "name": "get_key_files",
      "type": "function",
      "docstring": "Obtém arquivos-chave de um diretório",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "path",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 177,
      "end_line": 183,
      "returns": null,
      "async": false,
      "module_path": "tools\\config_manager\\migrated_update_context_system.py",
      "category": "tools",
      "file_name": "migrated_update_context_system.py"
    },
    "tools\\file_mover\\migrated_file_mover.py.setup_backup_directory": {
      "name": "setup_backup_directory",
      "type": "function",
      "docstring": "Create backup directory for safety.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "source_dir",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 74,
      "end_line": 84,
      "returns": "str",
      "async": false,
      "module_path": "tools\\file_mover\\migrated_file_mover.py",
      "category": "tools",
      "file_name": "migrated_file_mover.py"
    },
    "tools\\file_mover\\migrated_file_mover.py.move_file": {
      "name": "move_file",
      "type": "function",
      "docstring": "Move a single file with error handling.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "source_file",
          "annotation": "str"
        },
        {
          "name": "destination_file",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 116,
      "end_line": 136,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\file_mover\\migrated_file_mover.py",
      "category": "tools",
      "file_name": "migrated_file_mover.py"
    },
    "tools\\file_mover\\migrated_file_mover.py.move_files": {
      "name": "move_files",
      "type": "function",
      "docstring": "Move multiple files efficiently.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "source_dir",
          "annotation": "str"
        },
        {
          "name": "destination_dir",
          "annotation": "str"
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 138,
      "end_line": 180,
      "returns": "Dict[str, List[str]]",
      "async": false,
      "module_path": "tools\\file_mover\\migrated_file_mover.py",
      "category": "tools",
      "file_name": "migrated_file_mover.py"
    },
    "tools\\file_mover\\migrated_file_mover_usage_example.py.example_2_configuration_file": {
      "name": "example_2_configuration_file",
      "type": "function",
      "docstring": "Example 2: Using configuration file.",
      "args": [],
      "decorators": [],
      "start_line": 66,
      "end_line": 99,
      "returns": null,
      "async": false,
      "module_path": "tools\\file_mover\\migrated_file_mover_usage_example.py",
      "category": "tools",
      "file_name": "migrated_file_mover_usage_example.py"
    },
    "tools\\git_automation\\migrated_data_collector.py._save_json_backup": {
      "name": "_save_json_backup",
      "type": "private_method",
      "docstring": "Salva backup em formato JSON",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "record",
          "annotation": "InteractionRecord"
        }
      ],
      "decorators": [],
      "start_line": 219,
      "end_line": 236,
      "returns": null,
      "async": false,
      "module_path": "tools\\git_automation\\migrated_data_collector.py",
      "category": "tools",
      "file_name": "migrated_data_collector.py"
    },
    "tools\\git_automation\\migrated_data_collector.py._cleanup_old_json_files": {
      "name": "_cleanup_old_json_files",
      "type": "private_method",
      "docstring": "Remove arquivos JSON antigos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "days_to_keep",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 435,
      "end_line": 449,
      "returns": null,
      "async": false,
      "module_path": "tools\\git_automation\\migrated_data_collector.py",
      "category": "tools",
      "file_name": "migrated_data_collector.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.get_untracked_files": {
      "name": "get_untracked_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos não rastreados.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 144,
      "end_line": 156,
      "returns": "List[str]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.get_modified_files": {
      "name": "get_modified_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos modificados.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 158,
      "end_line": 170,
      "returns": "List[str]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.get_deleted_files": {
      "name": "get_deleted_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos deletados.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 172,
      "end_line": 184,
      "returns": "List[str]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.add_untracked_files_automatically": {
      "name": "add_untracked_files_automatically",
      "type": "function",
      "docstring": "Adiciona arquivos não rastreados automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 186,
      "end_line": 195,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.add_modified_files_automatically": {
      "name": "add_modified_files_automatically",
      "type": "function",
      "docstring": "Adiciona arquivos modificados automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 197,
      "end_line": 206,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.remove_deleted_files_automatically": {
      "name": "remove_deleted_files_automatically",
      "type": "function",
      "docstring": "Remove arquivos deletados automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 208,
      "end_line": 217,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.add_changed_files_automatically": {
      "name": "add_changed_files_automatically",
      "type": "function",
      "docstring": "Adiciona todas as mudanças automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 249,
      "end_line": 257,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\log_manager\\migrated_centralize_logs.py.categorize_file": {
      "name": "categorize_file",
      "type": "function",
      "docstring": "Categoriza um arquivo de log",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "filename",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 145,
      "end_line": 174,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "tools\\log_manager\\migrated_centralize_logs.py",
      "category": "tools",
      "file_name": "migrated_centralize_logs.py"
    },
    "tools\\log_manager\\migrated_centralize_logs.py.backup_existing_files": {
      "name": "backup_existing_files",
      "type": "function",
      "docstring": "Faz backup dos arquivos existentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 186,
      "end_line": 207,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\log_manager\\migrated_centralize_logs.py",
      "category": "tools",
      "file_name": "migrated_centralize_logs.py"
    },
    "tools\\log_manager\\migrated_centralize_logs.py.move_file_to_category": {
      "name": "move_file_to_category",
      "type": "function",
      "docstring": "Move arquivo para categoria apropriada",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "category",
          "annotation": "str"
        },
        {
          "name": "subcategory",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 209,
      "end_line": 235,
      "returns": "bool",
      "async": false,
      "module_path": "tools\\log_manager\\migrated_centralize_logs.py",
      "category": "tools",
      "file_name": "migrated_centralize_logs.py"
    },
    "python\\error_resolver\\migrated_python_error_resolver.py.check_file_path": {
      "name": "check_file_path",
      "type": "function",
      "docstring": "Verifica se o arquivo existe e cria se necessário",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 313,
      "end_line": 332,
      "returns": "bool",
      "async": false,
      "module_path": "python\\error_resolver\\migrated_python_error_resolver.py",
      "category": "tools",
      "file_name": "migrated_python_error_resolver.py"
    },
    "python\\python_agent\\migrated_python_agent_system.py.generate_file_structure": {
      "name": "generate_file_structure",
      "type": "function",
      "docstring": "Gera estrutura de arquivo Python",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "description",
          "annotation": "str"
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 436,
      "end_line": 465,
      "returns": "str",
      "async": false,
      "module_path": "python\\python_agent\\migrated_python_agent_system.py",
      "category": "tools",
      "file_name": "migrated_python_agent_system.py"
    },
    "maps\\habdel_indexer\\migrated_update_habdel_index.py.scan_habdel_files": {
      "name": "scan_habdel_files",
      "type": "function",
      "docstring": "Escaneia todos os arquivos da pasta habdel",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 40,
      "end_line": 50,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\habdel_indexer\\migrated_update_habdel_index.py",
      "category": "tools",
      "file_name": "migrated_update_habdel_index.py"
    },
    "maps\\map_updater\\migrated_auto_update_system.py.restore_backups": {
      "name": "restore_backups",
      "type": "function",
      "docstring": "Restaura backups",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 593,
      "end_line": 600,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_auto_update_system.py",
      "category": "tools",
      "file_name": "migrated_auto_update_system.py"
    },
    "maps\\map_updater\\migrated_canary_analysis_preparator.py.create_analysis_tools": {
      "name": "create_analysis_tools",
      "type": "function",
      "docstring": "Cria ferramentas de análise",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 318,
      "end_line": 349,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_canary_analysis_preparator.py",
      "category": "tools",
      "file_name": "migrated_canary_analysis_preparator.py"
    },
    "maps\\map_updater\\migrated_canary_analysis_preparator.py.save_preparation_files": {
      "name": "save_preparation_files",
      "type": "function",
      "docstring": "Salva arquivos de preparação",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "structure",
          "annotation": "Dict"
        },
        {
          "name": "comparison",
          "annotation": "Dict"
        },
        {
          "name": "template",
          "annotation": "str"
        },
        {
          "name": "tools",
          "annotation": "List[Dict]"
        },
        {
          "name": "guides",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 393,
      "end_line": 452,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_canary_analysis_preparator.py",
      "category": "tools",
      "file_name": "migrated_canary_analysis_preparator.py"
    },
    "maps\\map_updater\\migrated_git_atomic_commits.py.get_untracked_files": {
      "name": "get_untracked_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos não rastreados",
      "args": [],
      "decorators": [],
      "start_line": 35,
      "end_line": 48,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_git_atomic_commits.py",
      "category": "tools",
      "file_name": "migrated_git_atomic_commits.py"
    },
    "maps\\map_updater\\migrated_git_atomic_commits.py.categorize_files": {
      "name": "categorize_files",
      "type": "function",
      "docstring": "Categoriza arquivos por tipo",
      "args": [
        {
          "name": "files",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 50,
      "end_line": 74,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_git_atomic_commits.py",
      "category": "tools",
      "file_name": "migrated_git_atomic_commits.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_aaa_rules_file": {
      "name": "create_aaa_rules_file",
      "type": "function",
      "docstring": "Cria arquivo de regras AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 187,
      "end_line": 314,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py",
      "category": "tools",
      "file_name": "migrated_migrated_aaa_compatibility_fixer.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py.create_basic_rule_file": {
      "name": "create_basic_rule_file",
      "type": "function",
      "docstring": "Cria arquivo de regra básico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "rule_name",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 316,
      "end_line": 351,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_compatibility_fixer.py",
      "category": "tools",
      "file_name": "migrated_migrated_aaa_compatibility_fixer.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_monitor.py.check_file_permissions": {
      "name": "check_file_permissions",
      "type": "function",
      "docstring": "Verifica permissões de arquivos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 238,
      "end_line": 259,
      "returns": "float",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_monitor.py",
      "category": "tools",
      "file_name": "migrated_migrated_auto_monitor.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_monitor.py.measure_file_access_speed": {
      "name": "measure_file_access_speed",
      "type": "function",
      "docstring": "Mede velocidade de acesso a arquivos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 390,
      "end_line": 421,
      "returns": "float",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_monitor.py",
      "category": "tools",
      "file_name": "migrated_migrated_auto_monitor.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_update_system.py.restore_backups": {
      "name": "restore_backups",
      "type": "function",
      "docstring": "Restaura backups",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 607,
      "end_line": 614,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_update_system.py",
      "category": "tools",
      "file_name": "migrated_migrated_auto_update_system.py"
    },
    "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.create_analysis_tools": {
      "name": "create_analysis_tools",
      "type": "function",
      "docstring": "Cria ferramentas de análise",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 332,
      "end_line": 363,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py",
      "category": "tools",
      "file_name": "migrated_migrated_canary_analysis_preparator.py"
    },
    "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py.save_preparation_files": {
      "name": "save_preparation_files",
      "type": "function",
      "docstring": "Salva arquivos de preparação",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "structure",
          "annotation": "Dict"
        },
        {
          "name": "comparison",
          "annotation": "Dict"
        },
        {
          "name": "template",
          "annotation": "str"
        },
        {
          "name": "tools",
          "annotation": "List[Dict]"
        },
        {
          "name": "guides",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 407,
      "end_line": 466,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_canary_analysis_preparator.py",
      "category": "tools",
      "file_name": "migrated_migrated_canary_analysis_preparator.py"
    },
    "maps\\map_updater\\migrated_migrated_centralize_logs.py.categorize_file": {
      "name": "categorize_file",
      "type": "function",
      "docstring": "Categoriza um arquivo de log",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "filename",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 159,
      "end_line": 188,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_centralize_logs.py",
      "category": "tools",
      "file_name": "migrated_migrated_centralize_logs.py"
    },
    "maps\\map_updater\\migrated_migrated_centralize_logs.py.backup_existing_files": {
      "name": "backup_existing_files",
      "type": "function",
      "docstring": "Faz backup dos arquivos existentes",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 200,
      "end_line": 221,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_centralize_logs.py",
      "category": "tools",
      "file_name": "migrated_migrated_centralize_logs.py"
    },
    "maps\\map_updater\\migrated_migrated_centralize_logs.py.move_file_to_category": {
      "name": "move_file_to_category",
      "type": "function",
      "docstring": "Move arquivo para categoria apropriada",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "category",
          "annotation": "str"
        },
        {
          "name": "subcategory",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 223,
      "end_line": 249,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_centralize_logs.py",
      "category": "tools",
      "file_name": "migrated_migrated_centralize_logs.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions": {
      "name": "detect_file_extensions",
      "type": "function",
      "docstring": "Detecta extensões de arquivo no texto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 201,
      "end_line": 207,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "tools",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.get_untracked_files": {
      "name": "get_untracked_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos não rastreados",
      "args": [],
      "decorators": [],
      "start_line": 49,
      "end_line": 62,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_atomic_commits.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_atomic_commits.py"
    },
    "maps\\map_updater\\migrated_migrated_git_atomic_commits.py.categorize_files": {
      "name": "categorize_files",
      "type": "function",
      "docstring": "Categoriza arquivos por tipo",
      "args": [
        {
          "name": "files",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 64,
      "end_line": 88,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_atomic_commits.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_atomic_commits.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_untracked_files": {
      "name": "get_untracked_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos não rastreados.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 158,
      "end_line": 170,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_modified_files": {
      "name": "get_modified_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos modificados.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 172,
      "end_line": 184,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.get_deleted_files": {
      "name": "get_deleted_files",
      "type": "function",
      "docstring": "Obtém lista de arquivos deletados.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 186,
      "end_line": 198,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_untracked_files_automatically": {
      "name": "add_untracked_files_automatically",
      "type": "function",
      "docstring": "Adiciona arquivos não rastreados automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 200,
      "end_line": 209,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_modified_files_automatically": {
      "name": "add_modified_files_automatically",
      "type": "function",
      "docstring": "Adiciona arquivos modificados automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 211,
      "end_line": 220,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.remove_deleted_files_automatically": {
      "name": "remove_deleted_files_automatically",
      "type": "function",
      "docstring": "Remove arquivos deletados automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 222,
      "end_line": 231,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.add_changed_files_automatically": {
      "name": "add_changed_files_automatically",
      "type": "function",
      "docstring": "Adiciona todas as mudanças automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 263,
      "end_line": 271,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.save_integration_files": {
      "name": "save_integration_files",
      "type": "function",
      "docstring": "Salva arquivos de integração",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "habdel_structure",
          "annotation": "Dict"
        },
        {
          "name": "wiki_structure",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 462,
      "end_line": 492,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_habdel_wiki_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_init_file": {
      "name": "create_init_file",
      "type": "function",
      "docstring": "Cria arquivo __init__.py para categoria.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "path",
          "annotation": "Path"
        },
        {
          "name": "description",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 281,
      "end_line": 300,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_modular_structure_creator.py",
      "category": "tools",
      "file_name": "migrated_migrated_modular_structure_creator.py"
    },
    "maps\\map_updater\\migrated_migrated_modular_structure_creator.py.create_module_files": {
      "name": "create_module_files",
      "type": "function",
      "docstring": "Cria arquivos base do módulo.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "path",
          "annotation": "Path"
        },
        {
          "name": "module_name",
          "annotation": "str"
        },
        {
          "name": "description",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 342,
      "end_line": 504,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_modular_structure_creator.py",
      "category": "tools",
      "file_name": "migrated_migrated_modular_structure_creator.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.check_tool_available": {
      "name": "check_tool_available",
      "type": "function",
      "docstring": "Verifica se ferramenta está disponível",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "tool_name",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 121,
      "end_line": 128,
      "returns": "bool",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py",
      "category": "tools",
      "file_name": "migrated_migrated_otclient_debug_tools.py"
    },
    "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_tags_to_file": {
      "name": "add_tags_to_file",
      "type": "function",
      "docstring": "Adiciona tags de integração a um arquivo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "tags",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 108,
      "end_line": 144,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_prepare_canary_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py.add_integration_section_to_file": {
      "name": "add_integration_section_to_file",
      "type": "function",
      "docstring": "Adiciona seção de integração a um arquivo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "area",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 158,
      "end_line": 180,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_prepare_canary_integration.py",
      "category": "tools",
      "file_name": "migrated_migrated_prepare_canary_integration.py"
    },
    "maps\\map_updater\\migrated_modular_structure_creator.py.create_init_file": {
      "name": "create_init_file",
      "type": "function",
      "docstring": "Cria arquivo __init__.py para categoria.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "path",
          "annotation": "Path"
        },
        {
          "name": "description",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 267,
      "end_line": 286,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_modular_structure_creator.py",
      "category": "tools",
      "file_name": "migrated_modular_structure_creator.py"
    },
    "maps\\map_updater\\migrated_modular_structure_creator.py.create_module_files": {
      "name": "create_module_files",
      "type": "function",
      "docstring": "Cria arquivos base do módulo.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "path",
          "annotation": "Path"
        },
        {
          "name": "module_name",
          "annotation": "str"
        },
        {
          "name": "description",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 328,
      "end_line": 490,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_modular_structure_creator.py",
      "category": "tools",
      "file_name": "migrated_modular_structure_creator.py"
    },
    "maps\\map_updater\\migrated_prepare_canary_integration.py.add_tags_to_file": {
      "name": "add_tags_to_file",
      "type": "function",
      "docstring": "Adiciona tags de integração a um arquivo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "tags",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 94,
      "end_line": 130,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_prepare_canary_integration.py",
      "category": "tools",
      "file_name": "migrated_prepare_canary_integration.py"
    },
    "maps\\map_updater\\migrated_prepare_canary_integration.py.add_integration_section_to_file": {
      "name": "add_integration_section_to_file",
      "type": "function",
      "docstring": "Adiciona seção de integração a um arquivo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "area",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 144,
      "end_line": 166,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_prepare_canary_integration.py",
      "category": "tools",
      "file_name": "migrated_prepare_canary_integration.py"
    },
    "maps\\map_updater\\migrated_update_readme.py.count_files": {
      "name": "count_files",
      "type": "function",
      "docstring": "Conta arquivos em um diretório",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "directory",
          "annotation": null
        },
        {
          "name": "pattern",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 35,
      "end_line": 39,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_update_readme.py",
      "category": "tools",
      "file_name": "migrated_update_readme.py"
    },
    "maps\\source_indexer\\migrated_update_source_index.py.scan_source_files": {
      "name": "scan_source_files",
      "type": "function",
      "docstring": "Escaneia arquivos de código-fonte nos submódulos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 42,
      "end_line": 76,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\source_indexer\\migrated_update_source_index.py",
      "category": "tools",
      "file_name": "migrated_update_source_index.py"
    },
    "maps\\source_indexer\\migrated_update_source_index.py.categorize_file": {
      "name": "categorize_file",
      "type": "function",
      "docstring": "Categoriza um arquivo baseado em seu caminho e conteúdo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 78,
      "end_line": 110,
      "returns": "str",
      "async": false,
      "module_path": "maps\\source_indexer\\migrated_update_source_index.py",
      "category": "tools",
      "file_name": "migrated_update_source_index.py"
    },
    "maps\\styles_indexer\\migrated_update_styles_index.py.scan_style_files": {
      "name": "scan_style_files",
      "type": "function",
      "docstring": "Escaneia todos os arquivos de estilo OTUI",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 40,
      "end_line": 50,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\styles_indexer\\migrated_update_styles_index.py",
      "category": "tools",
      "file_name": "migrated_update_styles_index.py"
    },
    "maps\\tools_indexer\\migrated_update_tools_index.py.scan_tools": {
      "name": "scan_tools",
      "type": "function",
      "docstring": "Escaneia todas as ferramentas",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 40,
      "end_line": 53,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\tools_indexer\\migrated_update_tools_index.py",
      "category": "tools",
      "file_name": "migrated_update_tools_index.py"
    },
    "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tool": {
      "name": "categorize_tool",
      "type": "function",
      "docstring": "Categoriza uma ferramenta",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 91,
      "end_line": 106,
      "returns": "str",
      "async": false,
      "module_path": "maps\\tools_indexer\\migrated_update_tools_index.py",
      "category": "tools",
      "file_name": "migrated_update_tools_index.py"
    },
    "maps\\tools_indexer\\migrated_update_tools_index.py.extract_tool_info": {
      "name": "extract_tool_info",
      "type": "function",
      "docstring": "Extrai informações da ferramenta",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 108,
      "end_line": 144,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\tools_indexer\\migrated_update_tools_index.py",
      "category": "tools",
      "file_name": "migrated_update_tools_index.py"
    },
    "maps\\tools_indexer\\migrated_update_tools_index.py.categorize_tools": {
      "name": "categorize_tools",
      "type": "function",
      "docstring": "Categoriza todas as ferramentas",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 228,
      "end_line": 235,
      "returns": null,
      "async": false,
      "module_path": "maps\\tools_indexer\\migrated_update_tools_index.py",
      "category": "tools",
      "file_name": "migrated_update_tools_index.py"
    },
    "maps\\wiki_indexer\\migrated_update_wiki_maps.py.scan_markdown_files": {
      "name": "scan_markdown_files",
      "type": "function",
      "docstring": "Escaneia todos os arquivos markdown na pasta de documentação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 57,
      "end_line": 68,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\wiki_indexer\\migrated_update_wiki_maps.py",
      "category": "tools",
      "file_name": "migrated_update_wiki_maps.py"
    },
    "documentation\\content_validator\\migrated_update_json_maps.py.scan_markdown_files": {
      "name": "scan_markdown_files",
      "type": "function",
      "docstring": "Escaneia todos os arquivos markdown na pasta wiki",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 36,
      "end_line": 43,
      "returns": "List[str]",
      "async": false,
      "module_path": "documentation\\content_validator\\migrated_update_json_maps.py",
      "category": "tools",
      "file_name": "migrated_update_json_maps.py"
    },
    "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.save_integration_files": {
      "name": "save_integration_files",
      "type": "function",
      "docstring": "Salva arquivos de integração",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "habdel_structure",
          "annotation": "Dict"
        },
        {
          "name": "wiki_structure",
          "annotation": "Dict"
        }
      ],
      "decorators": [],
      "start_line": 448,
      "end_line": 478,
      "returns": "List[str]",
      "async": false,
      "module_path": "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py",
      "category": "tools",
      "file_name": "migrated_habdel_wiki_integration.py"
    },
    "documentation\\markdown_processor\\migrated_remove_emojis.py.remove_emojis_from_file": {
      "name": "remove_emojis_from_file",
      "type": "function",
      "docstring": "Remove emojis de um arquivo",
      "args": [
        {
          "name": "file_path",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 22,
      "end_line": 45,
      "returns": null,
      "async": false,
      "module_path": "documentation\\markdown_processor\\migrated_remove_emojis.py",
      "category": "tools",
      "file_name": "migrated_remove_emojis.py"
    },
    "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.check_tool_available": {
      "name": "check_tool_available",
      "type": "function",
      "docstring": "Verifica se ferramenta está disponível",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "tool_name",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 107,
      "end_line": 114,
      "returns": "bool",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_otclient_debug_tools.py",
      "category": "tools",
      "file_name": "migrated_otclient_debug_tools.py"
    },
    "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_aaa_rules_file": {
      "name": "create_aaa_rules_file",
      "type": "function",
      "docstring": "Cria arquivo de regras AAA",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 173,
      "end_line": 300,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py",
      "category": "tools",
      "file_name": "migrated_aaa_compatibility_fixer.py"
    },
    "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py.create_basic_rule_file": {
      "name": "create_basic_rule_file",
      "type": "function",
      "docstring": "Cria arquivo de regra básico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        },
        {
          "name": "rule_name",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 302,
      "end_line": 337,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_integrator\\migrated_aaa_compatibility_fixer.py",
      "category": "tools",
      "file_name": "migrated_aaa_compatibility_fixer.py"
    },
    "agents\\agent_monitor\\migrated_auto_monitor.py.check_file_permissions": {
      "name": "check_file_permissions",
      "type": "function",
      "docstring": "Verifica permissões de arquivos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 224,
      "end_line": 245,
      "returns": "float",
      "async": false,
      "module_path": "agents\\agent_monitor\\migrated_auto_monitor.py",
      "category": "tools",
      "file_name": "migrated_auto_monitor.py"
    },
    "agents\\agent_monitor\\migrated_auto_monitor.py.measure_file_access_speed": {
      "name": "measure_file_access_speed",
      "type": "function",
      "docstring": "Mede velocidade de acesso a arquivos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 376,
      "end_line": 407,
      "returns": "float",
      "async": false,
      "module_path": "agents\\agent_monitor\\migrated_auto_monitor.py",
      "category": "tools",
      "file_name": "migrated_auto_monitor.py"
    },
    "agents\\agent_orchestrator\\migrated_code_generator_agent.py.get_file_extension": {
      "name": "get_file_extension",
      "type": "function",
      "docstring": "Retorna extensão de arquivo para linguagem",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "language",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 452,
      "end_line": 463,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_code_generator_agent.py",
      "category": "tools",
      "file_name": "migrated_code_generator_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.categorize_file": {
      "name": "categorize_file",
      "type": "function",
      "docstring": "Categoriza um arquivo baseado em seu conteúdo e nome.\n\nArgs:\n    file_path: Caminho do arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 159,
      "end_line": 194,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py",
      "category": "tools",
      "file_name": "migrated_deep_source_analyzer.py"
    },
    "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.create_file_safely": {
      "name": "create_file_safely",
      "type": "function",
      "docstring": "",
      "args": [
        {
          "name": "path_name",
          "annotation": "str"
        },
        {
          "name": "filename",
          "annotation": "str"
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 44,
      "end_line": 45,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py",
      "category": "tools",
      "file_name": "migrated_deep_source_analyzer.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_file_extensions": {
      "name": "detect_file_extensions",
      "type": "function",
      "docstring": "Detecta extensões de arquivo no texto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 187,
      "end_line": 193,
      "returns": "List[str]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "tools",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_file_organization_agent.py.identify_obsolete_files": {
      "name": "identify_obsolete_files",
      "type": "function",
      "docstring": "Identifica arquivos obsoletos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 102,
      "end_line": 152,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_file_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_file_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_file_organization_agent.py.standardize_file_names": {
      "name": "standardize_file_names",
      "type": "function",
      "docstring": "Padroniza nomes de arquivos para snake_case",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 204,
      "end_line": 256,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_file_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_file_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_file_organization_agent.py.clean_obsolete_files": {
      "name": "clean_obsolete_files",
      "type": "function",
      "docstring": "Remove arquivos obsoletos identificados",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 258,
      "end_line": 329,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_file_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_file_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py.clean_backup_consolidation": {
      "name": "clean_backup_consolidation",
      "type": "function",
      "docstring": "Limpa pasta backup_consolidation (opcional)",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 245,
      "end_line": 289,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_final_cleanup_agent.py",
      "category": "tools",
      "file_name": "migrated_final_cleanup_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py.validate_file_exists": {
      "name": "validate_file_exists",
      "type": "function",
      "docstring": "Valida se um arquivo existe antes de tentar adicioná-lo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se o arquivo existe",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 119,
      "end_line": 134,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py.safe_add_file": {
      "name": "safe_add_file",
      "type": "function",
      "docstring": "Adiciona um arquivo de forma segura, validando sua existência.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se adicionado com sucesso",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 136,
      "end_line": 169,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_open_files": {
      "name": "_detect_open_files",
      "type": "private_method",
      "docstring": "Detecta arquivos abertos no IDE.\n\nReturns:\n    Lista de arquivos abertos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 275,
      "end_line": 300,
      "returns": "List[str]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_file_type": {
      "name": "_group_by_file_type",
      "type": "private_method",
      "docstring": "Agrupa arquivos por tipo.\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Lista de grupos por tipo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 382,
      "end_line": 406,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_diff": {
      "name": "_get_file_diff",
      "type": "private_method",
      "docstring": "Obtém diff de um arquivo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    Conteúdo do diff",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 440,
      "end_line": 458,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._ensure_unique_files": {
      "name": "_ensure_unique_files",
      "type": "private_method",
      "docstring": "Garante que cada arquivo está em apenas um grupo.\n\nArgs:\n    groups: Lista de grupos\n    all_files: Lista de todos os arquivos\n    \nReturns:\n    Lista de grupos com arquivos únicos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "groups",
          "annotation": "List[Dict[str, Any]]"
        },
        {
          "name": "all_files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 536,
      "end_line": 567,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._get_file_type": {
      "name": "_get_file_type",
      "type": "private_method",
      "docstring": "Determina o tipo de um arquivo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    Tipo do arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 569,
      "end_line": 605,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._determine_type_from_files": {
      "name": "_determine_type_from_files",
      "type": "private_method",
      "docstring": "Determina o tipo de commit baseado em uma lista de arquivos.\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Tipo de commit",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 607,
      "end_line": 631,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "tools",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._create_template_files": {
      "name": "_create_template_files",
      "type": "private_method",
      "docstring": "Cria arquivos de template.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "structure",
          "annotation": "Dict[str, Path]"
        }
      ],
      "decorators": [],
      "start_line": 314,
      "end_line": 351,
      "returns": "None",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "tools",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_integration_agent.py._validate_file_structure": {
      "name": "_validate_file_structure",
      "type": "private_method",
      "docstring": "Valida estrutura de arquivos.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 370,
      "end_line": 376,
      "returns": "Dict[str, any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_integration_agent.py",
      "category": "tools",
      "file_name": "migrated_integration_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._is_canary_integration_file": {
      "name": "_is_canary_integration_file",
      "type": "private_method",
      "docstring": "Verifica se um arquivo é relacionado à integração Canary.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se for arquivo de integração Canary",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 233,
      "end_line": 244,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.organize_canary_integration_files": {
      "name": "organize_canary_integration_files",
      "type": "function",
      "docstring": "Organiza arquivos relacionados à integração Canary.\n\nReturns:\n    Dicionário com estatísticas de organização",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 264,
      "end_line": 302,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py._organize_canary_file": {
      "name": "_organize_canary_file",
      "type": "private_method",
      "docstring": "Organiza um arquivo específico de integração Canary.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    True se arquivo foi organizado com sucesso",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 331,
      "end_line": 367,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.is_temp_file": {
      "name": "is_temp_file",
      "type": "function",
      "docstring": "Verifica se arquivo é temporário.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 455,
      "end_line": 460,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.extract_date_from_file": {
      "name": "extract_date_from_file",
      "type": "function",
      "docstring": "Extrai data do arquivo ou usa data de modificação.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 613,
      "end_line": 636,
      "returns": "datetime",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.cleanup_temp_files": {
      "name": "cleanup_temp_files",
      "type": "function",
      "docstring": "Remove arquivos temporários automaticamente.\n\nReturns:\n    Número de arquivos removidos",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 638,
      "end_line": 660,
      "returns": "int",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "tools",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py.establish_backup_recovery": {
      "name": "establish_backup_recovery",
      "type": "function",
      "docstring": "Estabelece sistema de backup e recuperação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 111,
      "end_line": 175,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_maintenance_planning_agent.py",
      "category": "tools",
      "file_name": "migrated_maintenance_planning_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_in_directory": {
      "name": "count_files_in_directory",
      "type": "function",
      "docstring": "Conta arquivos em um diretório",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "directory",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 216,
      "end_line": 224,
      "returns": "int",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_metrics_agent.py",
      "category": "tools",
      "file_name": "migrated_metrics_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_metrics_agent.py.count_files_by_extension": {
      "name": "count_files_by_extension",
      "type": "function",
      "docstring": "Conta arquivos por extensão",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "directory",
          "annotation": "Path"
        },
        {
          "name": "extension",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 226,
      "end_line": 234,
      "returns": "int",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_metrics_agent.py",
      "category": "tools",
      "file_name": "migrated_metrics_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py.validate_file_references": {
      "name": "validate_file_references",
      "type": "function",
      "docstring": "Valida referências a arquivos em documentos e scripts",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 47,
      "end_line": 149,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_navigation_validation_agent.py",
      "category": "tools",
      "file_name": "migrated_navigation_validation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_professor_agent.py.create_file_safely": {
      "name": "create_file_safely",
      "type": "function",
      "docstring": "",
      "args": [
        {
          "name": "path_name",
          "annotation": "str"
        },
        {
          "name": "filename",
          "annotation": "str"
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 44,
      "end_line": 45,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_professor_agent.py",
      "category": "tools",
      "file_name": "migrated_professor_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.create_file_safely": {
      "name": "create_file_safely",
      "type": "function",
      "docstring": "",
      "args": [
        {
          "name": "path_name",
          "annotation": "str"
        },
        {
          "name": "filename",
          "annotation": "str"
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 47,
      "end_line": 48,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py",
      "category": "tools",
      "file_name": "migrated_task_supervisor_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py.create_file_safely": {
      "name": "create_file_safely",
      "type": "function",
      "docstring": "",
      "args": [
        {
          "name": "path_name",
          "annotation": "str"
        },
        {
          "name": "filename",
          "annotation": "str"
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 36,
      "end_line": 37,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_workflow_orchestrator_agent.py",
      "category": "tools",
      "file_name": "migrated_workflow_orchestrator_agent.py"
    }
  },
  "classes": {
    "tools\\backup_system\\backup_system.py.BackupsystemModule": {
      "name": "BackupsystemModule",
      "docstring": "Módulo Sistema de backup",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "tools\\backup_system\\backup_system.py",
      "category": "tools",
      "file_name": "backup_system.py"
    },
    "tools\\backup_system\\migrated_backup_system.py.BackupsystemModule": {
      "name": "BackupsystemModule",
      "docstring": "Módulo Sistema de backup",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "tools\\backup_system\\migrated_backup_system.py",
      "category": "tools",
      "file_name": "migrated_backup_system.py"
    },
    "tools\\backup_system\\__init__.py.BackupsystemModule": {
      "name": "BackupsystemModule",
      "docstring": "Módulo Sistema de backup",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "tools\\backup_system\\__init__.py",
      "category": "tools",
      "file_name": "__init__.py"
    },
    "tools\\file_mover\\file_mover.py.FilemoverModule": {
      "name": "FilemoverModule",
      "docstring": "Módulo Movimentação de arquivos",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "tools\\file_mover\\file_mover.py",
      "category": "tools",
      "file_name": "file_mover.py"
    },
    "tools\\file_mover\\migrated_file_mover.py.FileMover": {
      "name": "FileMover",
      "docstring": "Efficient file mover with absolute directory support.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "dry_run",
              "annotation": "bool"
            },
            {
              "name": "create_backup",
              "annotation": "bool"
            }
          ],
          "decorators": [],
          "start_line": 67,
          "end_line": 72,
          "returns": null,
          "async": false
        },
        {
          "name": "setup_backup_directory",
          "type": "function",
          "docstring": "Create backup directory for safety.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "source_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 74,
          "end_line": 84,
          "returns": "str",
          "async": false
        },
        {
          "name": "validate_paths",
          "type": "function",
          "docstring": "Validate all paths before moving files.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "source_dir",
              "annotation": "str"
            },
            {
              "name": "destination_dir",
              "annotation": "str"
            },
            {
              "name": "files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 86,
          "end_line": 114,
          "returns": "Tuple[bool, List[str]]",
          "async": false
        },
        {
          "name": "move_file",
          "type": "function",
          "docstring": "Move a single file with error handling.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "source_file",
              "annotation": "str"
            },
            {
              "name": "destination_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 116,
          "end_line": 136,
          "returns": "bool",
          "async": false
        },
        {
          "name": "move_files",
          "type": "function",
          "docstring": "Move multiple files efficiently.",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "source_dir",
              "annotation": "str"
            },
            {
              "name": "destination_dir",
              "annotation": "str"
            },
            {
              "name": "files",
              "annotation": "List[str]"
            }
          ],
          "decorators": [],
          "start_line": 138,
          "end_line": 180,
          "returns": "Dict[str, List[str]]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 64,
      "end_line": 180,
      "module_path": "tools\\file_mover\\migrated_file_mover.py",
      "category": "tools",
      "file_name": "migrated_file_mover.py"
    },
    "tools\\file_mover\\__init__.py.FilemoverModule": {
      "name": "FilemoverModule",
      "docstring": "Módulo Movimentação de arquivos",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 22,
          "end_line": 25,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 27,
          "end_line": 29,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 33,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 19,
      "end_line": 33,
      "module_path": "tools\\file_mover\\__init__.py",
      "category": "tools",
      "file_name": "__init__.py"
    },
    "maps\\map_updater\\migrated_migrated_backup_system.py.BackupsystemModule": {
      "name": "BackupsystemModule",
      "docstring": "Módulo Sistema de backup",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 56,
          "end_line": 60,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 62,
          "end_line": 72,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 74,
          "end_line": 78,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 80,
          "end_line": 90,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 92,
          "end_line": 96,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 53,
      "end_line": 96,
      "module_path": "maps\\map_updater\\migrated_migrated_backup_system.py",
      "category": "tools",
      "file_name": "migrated_migrated_backup_system.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.OTClientDebugTools": {
      "name": "OTClientDebugTools",
      "docstring": "Ferramentas de debug especializadas para OTClient",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "work_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 50,
          "end_line": 66,
          "returns": null,
          "async": false
        },
        {
          "name": "check_debug_environment",
          "type": "function",
          "docstring": "Verifica ambiente de debug",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 68,
          "end_line": 119,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "check_tool_available",
          "type": "function",
          "docstring": "Verifica se ferramenta está disponível",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tool_name",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 121,
          "end_line": 128,
          "returns": "bool",
          "async": false
        },
        {
          "name": "check_lua_debugger",
          "type": "function",
          "docstring": "Verifica debugger Lua",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 130,
          "end_line": 152,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_crash_dump",
          "type": "function",
          "docstring": "Analisa dump de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 154,
          "end_line": 197,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "identify_crash_type",
          "type": "function",
          "docstring": "Identifica tipo de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 199,
          "end_line": 216,
          "returns": "str",
          "async": false
        },
        {
          "name": "extract_stack_trace",
          "type": "function",
          "docstring": "Extrai stack trace do crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 218,
          "end_line": 238,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "extract_memory_info",
          "type": "function",
          "docstring": "Extrai informações de memória",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 240,
          "end_line": 267,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_system_info",
          "type": "function",
          "docstring": "Extrai informações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 269,
          "end_line": 286,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_crash_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas na análise de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 288,
          "end_line": 348,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "analyze_performance",
          "type": "function",
          "docstring": "Analisa performance do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 350,
          "end_line": 440,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_performance_recommendations",
          "type": "function",
          "docstring": "Gera recomendações de performance",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "performance_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 442,
          "end_line": 476,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "generate_debug_report",
          "type": "function",
          "docstring": "Gera relatório completo de debug",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "environment",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "crash_analysis",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "performance_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 478,
          "end_line": 554,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_debug_report",
          "type": "function",
          "docstring": "Salva relatório de debug",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "str"
            },
            {
              "name": "output_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 556,
          "end_line": 568,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 47,
      "end_line": 568,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py",
      "category": "tools",
      "file_name": "migrated_migrated_otclient_debug_tools.py"
    },
    "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.OTClientDebugTools": {
      "name": "OTClientDebugTools",
      "docstring": "Ferramentas de debug especializadas para OTClient",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "work_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 36,
          "end_line": 52,
          "returns": null,
          "async": false
        },
        {
          "name": "check_debug_environment",
          "type": "function",
          "docstring": "Verifica ambiente de debug",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 54,
          "end_line": 105,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "check_tool_available",
          "type": "function",
          "docstring": "Verifica se ferramenta está disponível",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tool_name",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 107,
          "end_line": 114,
          "returns": "bool",
          "async": false
        },
        {
          "name": "check_lua_debugger",
          "type": "function",
          "docstring": "Verifica debugger Lua",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 116,
          "end_line": 138,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_crash_dump",
          "type": "function",
          "docstring": "Analisa dump de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 140,
          "end_line": 183,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "identify_crash_type",
          "type": "function",
          "docstring": "Identifica tipo de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 185,
          "end_line": 202,
          "returns": "str",
          "async": false
        },
        {
          "name": "extract_stack_trace",
          "type": "function",
          "docstring": "Extrai stack trace do crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 204,
          "end_line": 224,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "extract_memory_info",
          "type": "function",
          "docstring": "Extrai informações de memória",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 226,
          "end_line": 253,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_system_info",
          "type": "function",
          "docstring": "Extrai informações do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 255,
          "end_line": 272,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_crash_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas na análise de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "crash_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 274,
          "end_line": 334,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "analyze_performance",
          "type": "function",
          "docstring": "Analisa performance do sistema",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 336,
          "end_line": 426,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_performance_recommendations",
          "type": "function",
          "docstring": "Gera recomendações de performance",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "performance_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 428,
          "end_line": 462,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "generate_debug_report",
          "type": "function",
          "docstring": "Gera relatório completo de debug",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "environment",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "crash_analysis",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "performance_analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 464,
          "end_line": 540,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_debug_report",
          "type": "function",
          "docstring": "Salva relatório de debug",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "report",
              "annotation": "str"
            },
            {
              "name": "output_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 542,
          "end_line": 554,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 33,
      "end_line": 554,
      "module_path": "analysis\\source_analyzer\\migrated_otclient_debug_tools.py",
      "category": "tools",
      "file_name": "migrated_otclient_debug_tools.py"
    }
  }
}