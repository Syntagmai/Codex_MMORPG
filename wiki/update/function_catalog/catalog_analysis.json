{
  "category": "analysis",
  "metadata": {
    "total_functions": 147,
    "total_classes": 28,
    "created": "2025-08-01T12:30:28.888674"
  },
  "functions": {
    "tools\\config_manager\\migrated_update_context_system.py.analyze_directory_structure": {
      "name": "analyze_directory_structure",
      "type": "function",
      "docstring": "Analisa a estrutura de diretórios atual",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 134,
      "end_line": 175,
      "returns": null,
      "async": false,
      "module_path": "tools\\config_manager\\migrated_update_context_system.py",
      "category": "analysis",
      "file_name": "migrated_update_context_system.py"
    },
    "tools\\config_manager\\migrated_update_context_system.py.get_context_detection": {
      "name": "get_context_detection",
      "type": "function",
      "docstring": "Obtém configuração de detecção de contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 302,
      "end_line": 312,
      "returns": null,
      "async": false,
      "module_path": "tools\\config_manager\\migrated_update_context_system.py",
      "category": "analysis",
      "file_name": "migrated_update_context_system.py"
    },
    "tools\\config_manager\\migrated_update_context_system.py.get_context_switching": {
      "name": "get_context_switching",
      "type": "function",
      "docstring": "Obtém configuração de troca de contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 468,
      "end_line": 491,
      "returns": null,
      "async": false,
      "module_path": "tools\\config_manager\\migrated_update_context_system.py",
      "category": "analysis",
      "file_name": "migrated_update_context_system.py"
    },
    "tools\\git_automation\\migrated_advanced_prompt_system.py._analyze_consistency": {
      "name": "_analyze_consistency",
      "type": "private_method",
      "docstring": "Analisa consistência entre cadeias de pensamento",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "chains",
          "annotation": "List[List[str]]"
        }
      ],
      "decorators": [],
      "start_line": 640,
      "end_line": 662,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_advanced_prompt_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_prompt_system.py"
    },
    "tools\\git_automation\\migrated_auto_learning_system.py._calculate_context_similarity": {
      "name": "_calculate_context_similarity",
      "type": "private_method",
      "docstring": "Calcula similaridade entre contexto e palavras-chave",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict"
        },
        {
          "name": "keywords",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 272,
      "end_line": 289,
      "returns": "float",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_auto_learning_system.py",
      "category": "analysis",
      "file_name": "migrated_auto_learning_system.py"
    },
    "tools\\git_automation\\migrated_auto_learning_system.py.analyze_rule_patterns": {
      "name": "analyze_rule_patterns",
      "type": "function",
      "docstring": "Analisa padrões de uso das regras",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 439,
      "end_line": 441,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_auto_learning_system.py",
      "category": "analysis",
      "file_name": "migrated_auto_learning_system.py"
    },
    "tools\\git_automation\\migrated_feedback_system.py.analyze_feedback": {
      "name": "analyze_feedback",
      "type": "function",
      "docstring": "Analisa feedback e extrai insights",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "feedback_record",
          "annotation": "FeedbackRecord"
        }
      ],
      "decorators": [],
      "start_line": 141,
      "end_line": 161,
      "returns": "FeedbackAnalysis",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_feedback_system.py",
      "category": "analysis",
      "file_name": "migrated_feedback_system.py"
    },
    "tools\\git_automation\\migrated_feedback_system.py._analyze_sentiment": {
      "name": "_analyze_sentiment",
      "type": "private_method",
      "docstring": "Analisa sentimento do feedback",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "feedback_text",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 163,
      "end_line": 186,
      "returns": "float",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_feedback_system.py",
      "category": "analysis",
      "file_name": "migrated_feedback_system.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.analyze_changes_by_context": {
      "name": "analyze_changes_by_context",
      "type": "function",
      "docstring": "Analisa mudanças e as separa por contexto para commits atômicos.\n\nReturns:\n    Dicionário com mudanças separadas por contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 259,
      "end_line": 307,
      "returns": "Dict[str, List[str]]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "analysis",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_git_task_integration.py.generate_contextual_commit_message": {
      "name": "generate_contextual_commit_message",
      "type": "function",
      "docstring": "Gera mensagem de commit contextual em português.\n\nArgs:\n    context: Contexto das mudanças\n    files: Lista de arquivos modificados\n    task_info: Informações da tarefa ativa\n    \nReturns:\n    Mensagem de commit em formato Conventional Commits",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "str"
        },
        {
          "name": "files",
          "annotation": "List[str]"
        },
        {
          "name": "task_info",
          "annotation": "Optional[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 373,
      "end_line": 419,
      "returns": "str",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_git_task_integration.py",
      "category": "analysis",
      "file_name": "migrated_git_task_integration.py"
    },
    "tools\\git_automation\\migrated_prompt_evaluator.py._calculate_context_score": {
      "name": "_calculate_context_score",
      "type": "private_method",
      "docstring": "Calcula score de contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "prompt",
          "annotation": "str"
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 297,
      "end_line": 325,
      "returns": "float",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_prompt_evaluator.py",
      "category": "analysis",
      "file_name": "migrated_prompt_evaluator.py"
    },
    "tools\\git_automation\\migrated_prompt_learning_integration.py._calculate_context_relevance": {
      "name": "_calculate_context_relevance",
      "type": "private_method",
      "docstring": "Calcula relevância de contexto para um padrão",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "pattern",
          "annotation": "Dict[str, Any]"
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 254,
      "end_line": 269,
      "returns": "float",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_prompt_learning_integration.py",
      "category": "analysis",
      "file_name": "migrated_prompt_learning_integration.py"
    },
    "tools\\git_automation\\migrated_prompt_learning_integration.py.analyze_optimization_effectiveness": {
      "name": "analyze_optimization_effectiveness",
      "type": "function",
      "docstring": "Analisa efetividade das otimizações",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 271,
      "end_line": 313,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_prompt_learning_integration.py",
      "category": "analysis",
      "file_name": "migrated_prompt_learning_integration.py"
    },
    "tools\\git_automation\\migrated_rules_learning_integration.py.analyze_rule_patterns": {
      "name": "analyze_rule_patterns",
      "type": "function",
      "docstring": "Analisa padrões de uso das regras",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 183,
      "end_line": 220,
      "returns": "List[RuleLearningPattern]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_rules_learning_integration.py",
      "category": "analysis",
      "file_name": "migrated_rules_learning_integration.py"
    },
    "tools\\git_automation\\migrated_rules_learning_integration.py._analyze_context_applicability": {
      "name": "_analyze_context_applicability",
      "type": "private_method",
      "docstring": "Analisa aplicabilidade da regra em diferentes contextos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "usages",
          "annotation": "List[Dict]"
        }
      ],
      "decorators": [],
      "start_line": 222,
      "end_line": 241,
      "returns": "Dict[str, float]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_rules_learning_integration.py",
      "category": "analysis",
      "file_name": "migrated_rules_learning_integration.py"
    },
    "tools\\git_automation\\migrated_rules_learning_integration.py._extract_context_keywords": {
      "name": "_extract_context_keywords",
      "type": "private_method",
      "docstring": "Extrai palavras-chave do contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 243,
      "end_line": 262,
      "returns": "List[str]",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_rules_learning_integration.py",
      "category": "analysis",
      "file_name": "migrated_rules_learning_integration.py"
    },
    "tools\\git_automation\\migrated_rules_learning_integration.py._calculate_context_relevance": {
      "name": "_calculate_context_relevance",
      "type": "private_method",
      "docstring": "Calcula relevância de uma regra para o contexto atual",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "pattern",
          "annotation": "RuleLearningPattern"
        },
        {
          "name": "context",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 414,
      "end_line": 430,
      "returns": "float",
      "async": false,
      "module_path": "tools\\git_automation\\migrated_rules_learning_integration.py",
      "category": "analysis",
      "file_name": "migrated_rules_learning_integration.py"
    },
    "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_rules_optimization": {
      "name": "analyze_rules_optimization",
      "type": "function",
      "docstring": "Analisa otimização das regras",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 132,
      "end_line": 185,
      "returns": null,
      "async": false,
      "module_path": "python\\code_analyzer\\migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_analyze_navigation_optimization.py"
    },
    "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system": {
      "name": "analyze_enhanced_context_system",
      "type": "function",
      "docstring": "Analisa otimização do sistema de contexto avançado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 187,
      "end_line": 228,
      "returns": null,
      "async": false,
      "module_path": "python\\code_analyzer\\migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_analyze_navigation_optimization.py"
    },
    "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation": {
      "name": "analyze_intelligent_navigation",
      "type": "function",
      "docstring": "Analisa otimização da navegação inteligente",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 230,
      "end_line": 271,
      "returns": null,
      "async": false,
      "module_path": "python\\code_analyzer\\migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_analyze_navigation_optimization.py"
    },
    "python\\code_optimizer\\migrated_auto_optimizer.py.optimize_search_algorithms": {
      "name": "optimize_search_algorithms",
      "type": "function",
      "docstring": "Otimiza algoritmos de busca",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 273,
      "end_line": 325,
      "returns": "int",
      "async": false,
      "module_path": "python\\code_optimizer\\migrated_auto_optimizer.py",
      "category": "analysis",
      "file_name": "migrated_auto_optimizer.py"
    },
    "python\\python_agent\\migrated_python_agent_system.py.analyze_python_file": {
      "name": "analyze_python_file",
      "type": "function",
      "docstring": "Analisa arquivo Python e detecta problemas",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 191,
      "end_line": 267,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "python\\python_agent\\migrated_python_agent_system.py",
      "category": "analysis",
      "file_name": "migrated_python_agent_system.py"
    },
    "python\\python_agent\\migrated_python_agent_system.py.analyze_structure": {
      "name": "analyze_structure",
      "type": "function",
      "docstring": "Analisa estrutura do código Python",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 286,
      "end_line": 328,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "python\\python_agent\\migrated_python_agent_system.py",
      "category": "analysis",
      "file_name": "migrated_python_agent_system.py"
    },
    "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cursor_structure": {
      "name": "analyze_cursor_structure",
      "type": "function",
      "docstring": "Analisa a estrutura do cursor.md para navegação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 33,
      "end_line": 62,
      "returns": null,
      "async": false,
      "module_path": "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_analyze_cursor_performance.py"
    },
    "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_navigation_efficiency": {
      "name": "analyze_navigation_efficiency",
      "type": "function",
      "docstring": "Analisa a eficiência de navegação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 64,
      "end_line": 100,
      "returns": null,
      "async": false,
      "module_path": "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_analyze_cursor_performance.py"
    },
    "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.analyze_cache_effectiveness": {
      "name": "analyze_cache_effectiveness",
      "type": "function",
      "docstring": "Analisa a eficácia do sistema de cache",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 102,
      "end_line": 132,
      "returns": null,
      "async": false,
      "module_path": "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_analyze_cursor_performance.py"
    },
    "metrics\\metrics_collector\\migrated_metrics_system.py.analyze_trends": {
      "name": "analyze_trends",
      "type": "function",
      "docstring": "Analisa tendências das métricas coletadas.\n\nReturns:\n    Análise de tendências",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 344,
      "end_line": 442,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "metrics\\metrics_collector\\migrated_metrics_system.py",
      "category": "analysis",
      "file_name": "migrated_metrics_system.py"
    },
    "maps\\map_optimizer\\migrated_optimize_json_maps.py._analyze_structure": {
      "name": "_analyze_structure",
      "type": "private_method",
      "docstring": "Analisa a estrutura dos dados JSON.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "data",
          "annotation": "Any"
        }
      ],
      "decorators": [],
      "start_line": 101,
      "end_line": 115,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_optimizer\\migrated_optimize_json_maps.py",
      "category": "analysis",
      "file_name": "migrated_optimize_json_maps.py"
    },
    "maps\\map_updater\\migrated_auto_updater.py.detect_context_changes": {
      "name": "detect_context_changes",
      "type": "function",
      "docstring": "Detecta mudanças de contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 552,
      "end_line": 579,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_auto_updater.py",
      "category": "analysis",
      "file_name": "migrated_auto_updater.py"
    },
    "maps\\map_updater\\migrated_auto_updater.py.apply_search_optimizations": {
      "name": "apply_search_optimizations",
      "type": "function",
      "docstring": "Aplica otimizações de busca",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 667,
      "end_line": 670,
      "returns": "int",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_auto_updater.py",
      "category": "analysis",
      "file_name": "migrated_auto_updater.py"
    },
    "maps\\map_updater\\migrated_auto_update_all_maps.py.load_context_data": {
      "name": "load_context_data",
      "type": "function",
      "docstring": "Carrega dados de contexto detectado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 54,
      "end_line": 68,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_auto_update_all_maps.py",
      "category": "analysis",
      "file_name": "migrated_auto_update_all_maps.py"
    },
    "maps\\map_updater\\migrated_auto_update_all_maps.py.get_context_scripts": {
      "name": "get_context_scripts",
      "type": "function",
      "docstring": "Retorna scripts baseados no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 70,
      "end_line": 106,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_auto_update_all_maps.py",
      "category": "analysis",
      "file_name": "migrated_auto_update_all_maps.py"
    },
    "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py.detect_context_by_extension": {
      "name": "detect_context_by_extension",
      "type": "function",
      "docstring": "Detecta contexto baseado na extensão do arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 366,
      "end_line": 435,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_aaa_agent_specialization_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_aaa_agent_specialization_system.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_text": {
      "name": "search_by_text",
      "type": "function",
      "docstring": "Busca por texto nos documentos.\n\nArgs:\n    query: Query de busca\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "query",
          "annotation": "str"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 407,
      "end_line": 457,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_tags": {
      "name": "search_by_tags",
      "type": "function",
      "docstring": "Busca por tags.\n\nArgs:\n    tags: Lista de tags para buscar\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "tags",
          "annotation": "List[str]"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 459,
      "end_line": 491,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_by_category": {
      "name": "search_by_category",
      "type": "function",
      "docstring": "Busca por categoria.\n\nArgs:\n    category: Categoria principal\n    subcategory: Subcategoria (opcional)\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "category",
          "annotation": "str"
        },
        {
          "name": "subcategory",
          "annotation": "str"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 493,
      "end_line": 516,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.search_similar": {
      "name": "search_similar",
      "type": "function",
      "docstring": "Busca documentos similares.\n\nArgs:\n    doc_path: Caminho do documento de referência\n    limit: Limite de resultados\n    \nReturns:\n    Lista de documentos similares",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "doc_path",
          "annotation": "str"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 518,
      "end_line": 546,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.generate_search_report": {
      "name": "generate_search_report",
      "type": "function",
      "docstring": "Gera relatório do sistema de busca.\n\nReturns:\n    Caminho do relatório",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 602,
      "end_line": 640,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.build_advanced_search": {
      "name": "build_advanced_search",
      "type": "function",
      "docstring": "Constrói sistema completo de busca avançada.\n\nReturns:\n    Resultados da construção",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 642,
      "end_line": 677,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cursor_structure": {
      "name": "analyze_cursor_structure",
      "type": "function",
      "docstring": "Analisa a estrutura do cursor.md para navegação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 47,
      "end_line": 76,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_cursor_performance.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_navigation_efficiency": {
      "name": "analyze_navigation_efficiency",
      "type": "function",
      "docstring": "Analisa a eficiência de navegação",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 78,
      "end_line": 114,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_cursor_performance.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.analyze_cache_effectiveness": {
      "name": "analyze_cache_effectiveness",
      "type": "function",
      "docstring": "Analisa a eficácia do sistema de cache",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 116,
      "end_line": 146,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_cursor_performance.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_rules_optimization": {
      "name": "analyze_rules_optimization",
      "type": "function",
      "docstring": "Analisa otimização das regras",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 146,
      "end_line": 199,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_navigation_optimization.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_enhanced_context_system": {
      "name": "analyze_enhanced_context_system",
      "type": "function",
      "docstring": "Analisa otimização do sistema de contexto avançado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 201,
      "end_line": 242,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_navigation_optimization.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.analyze_intelligent_navigation": {
      "name": "analyze_intelligent_navigation",
      "type": "function",
      "docstring": "Analisa otimização da navegação inteligente",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 244,
      "end_line": 285,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_navigation_optimization.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_monitor.py.analyze_performance": {
      "name": "analyze_performance",
      "type": "function",
      "docstring": "Analisa performance do sistema",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 321,
      "end_line": 340,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_monitor.py",
      "category": "analysis",
      "file_name": "migrated_migrated_auto_monitor.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_optimizer.py.optimize_search_algorithms": {
      "name": "optimize_search_algorithms",
      "type": "function",
      "docstring": "Otimiza algoritmos de busca",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 287,
      "end_line": 339,
      "returns": "int",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_optimizer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_auto_optimizer.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_updater.py.detect_context_changes": {
      "name": "detect_context_changes",
      "type": "function",
      "docstring": "Detecta mudanças de contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 566,
      "end_line": 593,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_updater.py",
      "category": "analysis",
      "file_name": "migrated_migrated_auto_updater.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_updater.py.apply_search_optimizations": {
      "name": "apply_search_optimizations",
      "type": "function",
      "docstring": "Aplica otimizações de busca",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 681,
      "end_line": 684,
      "returns": "int",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_updater.py",
      "category": "analysis",
      "file_name": "migrated_migrated_auto_updater.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.load_context_data": {
      "name": "load_context_data",
      "type": "function",
      "docstring": "Carrega dados de contexto detectado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 68,
      "end_line": 82,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py",
      "category": "analysis",
      "file_name": "migrated_migrated_auto_update_all_maps.py"
    },
    "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py.get_context_scripts": {
      "name": "get_context_scripts",
      "type": "function",
      "docstring": "Retorna scripts baseados no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 84,
      "end_line": 120,
      "returns": "List[str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_auto_update_all_maps.py",
      "category": "analysis",
      "file_name": "migrated_migrated_auto_update_all_maps.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_request": {
      "name": "analyze_request",
      "type": "function",
      "docstring": "Análise completa do pedido do usuário",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "user_request",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 154,
      "end_line": 199,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns": {
      "name": "detect_context_patterns",
      "type": "function",
      "docstring": "Detecta padrões de contexto específicos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 209,
      "end_line": 220,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.analyze_complexity": {
      "name": "analyze_complexity",
      "type": "function",
      "docstring": "Analisa complexidade baseada no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        },
        {
          "name": "analysis",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 260,
      "end_line": 277,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py.load_context_data": {
      "name": "load_context_data",
      "type": "function",
      "docstring": "Carrega dados de contexto detectado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 133,
      "end_line": 147,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_expand_wiki_comprehensive.py",
      "category": "analysis",
      "file_name": "migrated_migrated_expand_wiki_comprehensive.py"
    },
    "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py.create_quick_search_guide": {
      "name": "create_quick_search_guide",
      "type": "function",
      "docstring": "Cria guia de busca rápida para brasileiros",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 356,
      "end_line": 448,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_fix_wiki_issues.py",
      "category": "analysis",
      "file_name": "migrated_migrated_fix_wiki_issues.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.analyze_changes_by_context": {
      "name": "analyze_changes_by_context",
      "type": "function",
      "docstring": "Analisa mudanças e as separa por contexto para commits atômicos.\n\nReturns:\n    Dicionário com mudanças separadas por contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 273,
      "end_line": 321,
      "returns": "Dict[str, List[str]]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "analysis",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_git_task_integration.py.generate_contextual_commit_message": {
      "name": "generate_contextual_commit_message",
      "type": "function",
      "docstring": "Gera mensagem de commit contextual em português.\n\nArgs:\n    context: Contexto das mudanças\n    files: Lista de arquivos modificados\n    task_info: Informações da tarefa ativa\n    \nReturns:\n    Mensagem de commit em formato Conventional Commits",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context",
          "annotation": "str"
        },
        {
          "name": "files",
          "annotation": "List[str]"
        },
        {
          "name": "task_info",
          "annotation": "Optional[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 387,
      "end_line": 433,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_git_task_integration.py",
      "category": "analysis",
      "file_name": "migrated_migrated_git_task_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_habdel_structure": {
      "name": "analyze_habdel_structure",
      "type": "function",
      "docstring": "Analisa a estrutura da documentação habdel",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 98,
      "end_line": 128,
      "returns": "Dict",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py",
      "category": "analysis",
      "file_name": "migrated_migrated_habdel_wiki_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py.analyze_wiki_structure": {
      "name": "analyze_wiki_structure",
      "type": "function",
      "docstring": "Analisa a estrutura da wiki principal",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 193,
      "end_line": 217,
      "returns": "Dict",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_habdel_wiki_integration.py",
      "category": "analysis",
      "file_name": "migrated_migrated_habdel_wiki_integration.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.analyze_document_content": {
      "name": "analyze_document_content",
      "type": "function",
      "docstring": "Analisa o conteúdo de um documento para extrair informações de navegação.\n\nArgs:\n    file_path: Caminho para o documento\n    \nReturns:\n    Informações extraídas do documento",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 101,
      "end_line": 143,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_intelligent_navigation_system.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py.create_contextual_paths": {
      "name": "create_contextual_paths",
      "type": "function",
      "docstring": "Cria caminhos contextuais entre documentos.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 206,
      "end_line": 255,
      "returns": null,
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_navigation_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_intelligent_navigation_system.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_context": {
      "name": "analyze_context",
      "type": "function",
      "docstring": "Analisa o contexto do pedido do usuário",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "user_request",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 208,
      "end_line": 249,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py.analyze_complexity": {
      "name": "analyze_complexity",
      "type": "function",
      "docstring": "Analisa a complexidade baseada no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        },
        {
          "name": "keywords",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 251,
      "end_line": 270,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_migrated_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_metrics_system.py.analyze_trends": {
      "name": "analyze_trends",
      "type": "function",
      "docstring": "Analisa tendências das métricas coletadas.\n\nReturns:\n    Análise de tendências",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 358,
      "end_line": 456,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_metrics_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_metrics_system.py"
    },
    "maps\\map_updater\\migrated_migrated_optimize_json_maps.py._analyze_structure": {
      "name": "_analyze_structure",
      "type": "private_method",
      "docstring": "Analisa a estrutura dos dados JSON.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "data",
          "annotation": "Any"
        }
      ],
      "decorators": [],
      "start_line": 115,
      "end_line": 129,
      "returns": "str",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_optimize_json_maps.py",
      "category": "analysis",
      "file_name": "migrated_migrated_optimize_json_maps.py"
    },
    "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py.analyze_content_overlap": {
      "name": "analyze_content_overlap",
      "type": "function",
      "docstring": "Analisa sobreposição de conteúdo entre dois arquivos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file1",
          "annotation": "Path"
        },
        {
          "name": "file2",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 82,
      "end_line": 110,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_optimize_wiki_structure.py",
      "category": "analysis",
      "file_name": "migrated_migrated_optimize_wiki_structure.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_crash_dump": {
      "name": "analyze_crash_dump",
      "type": "function",
      "docstring": "Analisa dump de crash",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "crash_file",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 154,
      "end_line": 197,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_debug_tools.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py.analyze_performance": {
      "name": "analyze_performance",
      "type": "function",
      "docstring": "Analisa performance do sistema",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 350,
      "end_line": 440,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_debug_tools.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_debug_tools.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_logs": {
      "name": "analyze_logs",
      "type": "function",
      "docstring": "Analisa logs do OTClient",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "log_file",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 118,
      "end_line": 152,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_level_distribution": {
      "name": "analyze_level_distribution",
      "type": "function",
      "docstring": "Analisa distribuição de níveis de log",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 220,
      "end_line": 223,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_category_distribution": {
      "name": "analyze_category_distribution",
      "type": "function",
      "docstring": "Analisa distribuição de categorias",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 225,
      "end_line": 228,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_errors": {
      "name": "analyze_errors",
      "type": "function",
      "docstring": "Analisa erros nos logs",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 230,
      "end_line": 261,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_performance": {
      "name": "analyze_performance",
      "type": "function",
      "docstring": "Analisa métricas de performance",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 274,
      "end_line": 322,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_crashes": {
      "name": "analyze_crashes",
      "type": "function",
      "docstring": "Analisa crashes do cliente",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 324,
      "end_line": 353,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.analyze_patterns": {
      "name": "analyze_patterns",
      "type": "function",
      "docstring": "Analisa padrões nos logs",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 372,
      "end_line": 404,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_logs": {
      "name": "analyze_logs",
      "type": "function",
      "docstring": "Analisa logs do OTClient",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "log_file",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 104,
      "end_line": 138,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_level_distribution": {
      "name": "analyze_level_distribution",
      "type": "function",
      "docstring": "Analisa distribuição de níveis de log",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 206,
      "end_line": 209,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_category_distribution": {
      "name": "analyze_category_distribution",
      "type": "function",
      "docstring": "Analisa distribuição de categorias",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 211,
      "end_line": 214,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_errors": {
      "name": "analyze_errors",
      "type": "function",
      "docstring": "Analisa erros nos logs",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 216,
      "end_line": 247,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_performance": {
      "name": "analyze_performance",
      "type": "function",
      "docstring": "Analisa métricas de performance",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 260,
      "end_line": 308,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_crashes": {
      "name": "analyze_crashes",
      "type": "function",
      "docstring": "Analisa crashes do cliente",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 310,
      "end_line": 339,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.analyze_patterns": {
      "name": "analyze_patterns",
      "type": "function",
      "docstring": "Analisa padrões nos logs",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "entries",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 358,
      "end_line": 390,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_script_migration_agent.py.analyze_script": {
      "name": "analyze_script",
      "type": "function",
      "docstring": "Analisa um script Python para extrair informações.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "script_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 109,
      "end_line": 177,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_script_migration_agent.py",
      "category": "analysis",
      "file_name": "migrated_script_migration_agent.py"
    },
    "maps\\map_updater\\migrated_update_bmad_maps.py.load_context_data": {
      "name": "load_context_data",
      "type": "function",
      "docstring": "Carrega dados de contexto detectado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 182,
      "end_line": 195,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_update_bmad_maps.py",
      "category": "analysis",
      "file_name": "migrated_update_bmad_maps.py"
    },
    "maps\\map_updater\\migrated_update_bmad_maps.py.get_context_adaptation": {
      "name": "get_context_adaptation",
      "type": "function",
      "docstring": "Retorna adaptação do agente para o contexto atual",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "agent_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 275,
      "end_line": 312,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_update_bmad_maps.py",
      "category": "analysis",
      "file_name": "migrated_update_bmad_maps.py"
    },
    "maps\\map_updater\\migrated_update_bmad_maps.py.get_template_context_adaptation": {
      "name": "get_template_context_adaptation",
      "type": "function",
      "docstring": "Retorna adaptação do template para o contexto atual",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "template_id",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 344,
      "end_line": 378,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "maps\\map_updater\\migrated_update_bmad_maps.py",
      "category": "analysis",
      "file_name": "migrated_update_bmad_maps.py"
    },
    "maps\\modules_indexer\\migrated_update_modules_index.py.analyze_module": {
      "name": "analyze_module",
      "type": "function",
      "docstring": "Analisa um módulo Lua",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "module_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 53,
      "end_line": 110,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\modules_indexer\\migrated_update_modules_index.py",
      "category": "analysis",
      "file_name": "migrated_update_modules_index.py"
    },
    "maps\\resources_indexer\\migrated_update_resources_index.py.analyze_resource": {
      "name": "analyze_resource",
      "type": "function",
      "docstring": "Analisa um recurso",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "resource_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 69,
      "end_line": 102,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\resources_indexer\\migrated_update_resources_index.py",
      "category": "analysis",
      "file_name": "migrated_update_resources_index.py"
    },
    "maps\\styles_indexer\\migrated_update_styles_index.py.analyze_style_file": {
      "name": "analyze_style_file",
      "type": "function",
      "docstring": "Analisa um arquivo de estilo OTUI",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 52,
      "end_line": 91,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\styles_indexer\\migrated_update_styles_index.py",
      "category": "analysis",
      "file_name": "migrated_update_styles_index.py"
    },
    "maps\\tools_indexer\\migrated_update_tools_index.py.analyze_tool": {
      "name": "analyze_tool",
      "type": "function",
      "docstring": "Analisa uma ferramenta",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "tool_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 55,
      "end_line": 89,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\tools_indexer\\migrated_update_tools_index.py",
      "category": "analysis",
      "file_name": "migrated_update_tools_index.py"
    },
    "maps\\wiki_indexer\\migrated_update_wiki_maps.py.load_context_data": {
      "name": "load_context_data",
      "type": "function",
      "docstring": "Carrega dados de contexto detectado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 41,
      "end_line": 55,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "maps\\wiki_indexer\\migrated_update_wiki_maps.py",
      "category": "analysis",
      "file_name": "migrated_update_wiki_maps.py"
    },
    "documentation\\content_validator\\migrated_update_json_maps.py.generate_search_aliases": {
      "name": "generate_search_aliases",
      "type": "function",
      "docstring": "Gera aliases de busca para tags",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files_by_tag",
          "annotation": "Dict[str, List[str]]"
        }
      ],
      "decorators": [],
      "start_line": 132,
      "end_line": 151,
      "returns": "Dict[str, str]",
      "async": false,
      "module_path": "documentation\\content_validator\\migrated_update_json_maps.py",
      "category": "analysis",
      "file_name": "migrated_update_json_maps.py"
    },
    "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_habdel_structure": {
      "name": "analyze_habdel_structure",
      "type": "function",
      "docstring": "Analisa a estrutura da documentação habdel",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 84,
      "end_line": 114,
      "returns": "Dict",
      "async": false,
      "module_path": "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py",
      "category": "analysis",
      "file_name": "migrated_habdel_wiki_integration.py"
    },
    "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py.analyze_wiki_structure": {
      "name": "analyze_wiki_structure",
      "type": "function",
      "docstring": "Analisa a estrutura da wiki principal",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 179,
      "end_line": 203,
      "returns": "Dict",
      "async": false,
      "module_path": "documentation\\documentation_organizer\\migrated_habdel_wiki_integration.py",
      "category": "analysis",
      "file_name": "migrated_habdel_wiki_integration.py"
    },
    "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py.load_context_data": {
      "name": "load_context_data",
      "type": "function",
      "docstring": "Carrega dados de contexto detectado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 119,
      "end_line": 133,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "documentation\\wiki_expander\\migrated_expand_wiki_comprehensive.py",
      "category": "analysis",
      "file_name": "migrated_expand_wiki_comprehensive.py"
    },
    "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py.create_quick_search_guide": {
      "name": "create_quick_search_guide",
      "type": "function",
      "docstring": "Cria guia de busca rápida para brasileiros",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 342,
      "end_line": 434,
      "returns": null,
      "async": false,
      "module_path": "documentation\\wiki_fixer\\migrated_fix_wiki_issues.py",
      "category": "analysis",
      "file_name": "migrated_fix_wiki_issues.py"
    },
    "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py.analyze_content_overlap": {
      "name": "analyze_content_overlap",
      "type": "function",
      "docstring": "Analisa sobreposição de conteúdo entre dois arquivos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file1",
          "annotation": "Path"
        },
        {
          "name": "file2",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 68,
      "end_line": 96,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "documentation\\wiki_optimizer\\migrated_optimize_wiki_structure.py",
      "category": "analysis",
      "file_name": "migrated_optimize_wiki_structure.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_text": {
      "name": "search_by_text",
      "type": "function",
      "docstring": "Busca por texto nos documentos.\n\nArgs:\n    query: Query de busca\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "query",
          "annotation": "str"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 393,
      "end_line": 443,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_tags": {
      "name": "search_by_tags",
      "type": "function",
      "docstring": "Busca por tags.\n\nArgs:\n    tags: Lista de tags para buscar\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "tags",
          "annotation": "List[str]"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 445,
      "end_line": 477,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_by_category": {
      "name": "search_by_category",
      "type": "function",
      "docstring": "Busca por categoria.\n\nArgs:\n    category: Categoria principal\n    subcategory: Subcategoria (opcional)\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "category",
          "annotation": "str"
        },
        {
          "name": "subcategory",
          "annotation": "str"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 479,
      "end_line": 502,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.search_similar": {
      "name": "search_similar",
      "type": "function",
      "docstring": "Busca documentos similares.\n\nArgs:\n    doc_path: Caminho do documento de referência\n    limit: Limite de resultados\n    \nReturns:\n    Lista de documentos similares",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "doc_path",
          "annotation": "str"
        },
        {
          "name": "limit",
          "annotation": "int"
        }
      ],
      "decorators": [],
      "start_line": 504,
      "end_line": 532,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.generate_search_report": {
      "name": "generate_search_report",
      "type": "function",
      "docstring": "Gera relatório do sistema de busca.\n\nReturns:\n    Caminho do relatório",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 588,
      "end_line": 626,
      "returns": "str",
      "async": false,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.build_advanced_search": {
      "name": "build_advanced_search",
      "type": "function",
      "docstring": "Constrói sistema completo de busca avançada.\n\nReturns:\n    Resultados da construção",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 628,
      "end_line": 663,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.analyze_document_content": {
      "name": "analyze_document_content",
      "type": "function",
      "docstring": "Analisa o conteúdo de um documento para extrair informações de navegação.\n\nArgs:\n    file_path: Caminho para o documento\n    \nReturns:\n    Informações extraídas do documento",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 87,
      "end_line": 129,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py",
      "category": "analysis",
      "file_name": "migrated_intelligent_navigation_system.py"
    },
    "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py.create_contextual_paths": {
      "name": "create_contextual_paths",
      "type": "function",
      "docstring": "Cria caminhos contextuais entre documentos.",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 192,
      "end_line": 241,
      "returns": null,
      "async": false,
      "module_path": "analysis\\intelligent_navigator\\migrated_intelligent_navigation_system.py",
      "category": "analysis",
      "file_name": "migrated_intelligent_navigation_system.py"
    },
    "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_crash_dump": {
      "name": "analyze_crash_dump",
      "type": "function",
      "docstring": "Analisa dump de crash",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "crash_file",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 140,
      "end_line": 183,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_otclient_debug_tools.py",
      "category": "analysis",
      "file_name": "migrated_otclient_debug_tools.py"
    },
    "analysis\\source_analyzer\\migrated_otclient_debug_tools.py.analyze_performance": {
      "name": "analyze_performance",
      "type": "function",
      "docstring": "Analisa performance do sistema",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 336,
      "end_line": 426,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_otclient_debug_tools.py",
      "category": "analysis",
      "file_name": "migrated_otclient_debug_tools.py"
    },
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py.analyze_patterns": {
      "name": "analyze_patterns",
      "type": "function",
      "docstring": "Analisa interações e identifica padrões",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "interactions",
          "annotation": "List[Any]"
        }
      ],
      "decorators": [],
      "start_line": 108,
      "end_line": 144,
      "returns": "List[Any]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_pattern_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_pattern_analyzer.py"
    },
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_context_patterns": {
      "name": "_analyze_context_patterns",
      "type": "private_method",
      "docstring": "Analisa padrões de contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "interactions",
          "annotation": "List[Any]"
        }
      ],
      "decorators": [],
      "start_line": 293,
      "end_line": 319,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_pattern_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_pattern_analyzer.py"
    },
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py._analyze_error_patterns": {
      "name": "_analyze_error_patterns",
      "type": "private_method",
      "docstring": "Analisa padrões de erro",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "interactions",
          "annotation": "List[Any]"
        }
      ],
      "decorators": [],
      "start_line": 370,
      "end_line": 393,
      "returns": "List[Dict]",
      "async": false,
      "module_path": "analysis\\source_analyzer\\migrated_pattern_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_pattern_analyzer.py"
    },
    "agents\\agent_monitor\\migrated_auto_monitor.py.analyze_performance": {
      "name": "analyze_performance",
      "type": "function",
      "docstring": "Analisa performance do sistema",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 307,
      "end_line": 326,
      "returns": null,
      "async": false,
      "module_path": "agents\\agent_monitor\\migrated_auto_monitor.py",
      "category": "analysis",
      "file_name": "migrated_auto_monitor.py"
    },
    "agents\\agent_orchestrator\\migrated_analyzer.py.analyze_python_code": {
      "name": "analyze_python_code",
      "type": "function",
      "docstring": "Analisa código python",
      "args": [
        {
          "name": "target",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 21,
      "end_line": 23,
      "returns": "dict",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_analyzer.py"
    },
    "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_file_content": {
      "name": "analyze_file_content",
      "type": "function",
      "docstring": "Analisa o conteúdo detalhado de um arquivo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    Dict: Análise detalhada do arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 196,
      "end_line": 272,
      "returns": "Dict",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_deep_source_analyzer.py"
    },
    "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.analyze_specific_category": {
      "name": "analyze_specific_category",
      "type": "function",
      "docstring": "Analisa uma categoria específica em detalhes.\n\nArgs:\n    category: Categoria a ser analisada\n    \nReturns:\n    bool: True se análise bem-sucedida",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "category",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 370,
      "end_line": 424,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_deep_source_analyzer.py"
    },
    "agents\\agent_orchestrator\\migrated_documentation_agent.py.analyze_code_for_documentation": {
      "name": "analyze_code_for_documentation",
      "type": "function",
      "docstring": "Analisa código para gerar documentação",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "code_file",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 76,
      "end_line": 100,
      "returns": "Dict",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_documentation_agent.py",
      "category": "analysis",
      "file_name": "migrated_documentation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_request": {
      "name": "analyze_request",
      "type": "function",
      "docstring": "Análise completa do pedido do usuário",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "user_request",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 140,
      "end_line": 185,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.detect_context_patterns": {
      "name": "detect_context_patterns",
      "type": "function",
      "docstring": "Detecta padrões de contexto específicos",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 195,
      "end_line": 206,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.analyze_complexity": {
      "name": "analyze_complexity",
      "type": "function",
      "docstring": "Analisa complexidade baseada no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        },
        {
          "name": "analysis",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 246,
      "end_line": 263,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    },
    "agents\\agent_orchestrator\\migrated_file_organization_agent.py.analyze_naming_patterns": {
      "name": "analyze_naming_patterns",
      "type": "function",
      "docstring": "Analisa padrões de nomenclatura atuais",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 48,
      "end_line": 100,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_file_organization_agent.py",
      "category": "analysis",
      "file_name": "migrated_file_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py.analyze_changes": {
      "name": "analyze_changes",
      "type": "function",
      "docstring": "Analisa mudanças no repositório Git.\n\nReturns:\n    Dicionário com informações das mudanças",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 171,
      "end_line": 241,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "analysis",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._detect_task_context": {
      "name": "_detect_task_context",
      "type": "private_method",
      "docstring": "Detecta contexto de tarefa atual.\n\nReturns:\n    Informações do contexto de tarefa",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 243,
      "end_line": 273,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "analysis",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._analyze_commit_groups": {
      "name": "_analyze_commit_groups",
      "type": "private_method",
      "docstring": "Analisa e agrupa mudanças para commits separados.\n\nArgs:\n    changes: Dicionário com informações das mudanças\n    \nReturns:\n    Lista de grupos de commit",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "changes",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 302,
      "end_line": 354,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "analysis",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._group_by_context": {
      "name": "_group_by_context",
      "type": "private_method",
      "docstring": "Agrupa arquivos por contexto (análise de diff).\n\nArgs:\n    files: Lista de arquivos\n    \nReturns:\n    Lista de grupos por contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 408,
      "end_line": 438,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "analysis",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._extract_context_from_diff": {
      "name": "_extract_context_from_diff",
      "type": "private_method",
      "docstring": "Extrai contexto de um diff.\n\nArgs:\n    diff_content: Conteúdo do diff\n    \nReturns:\n    Contexto extraído",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "diff_content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 460,
      "end_line": 484,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "analysis",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_git_automation_agent.py._is_similar_context": {
      "name": "_is_similar_context",
      "type": "private_method",
      "docstring": "Verifica se dois contextos são similares.\n\nArgs:\n    context1: Primeiro contexto\n    context2: Segundo contexto\n    \nReturns:\n    True se similares",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "context1",
          "annotation": "str"
        },
        {
          "name": "context2",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 486,
      "end_line": 502,
      "returns": "bool",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_git_automation_agent.py",
      "category": "analysis",
      "file_name": "migrated_git_automation_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py.detect_file_context": {
      "name": "detect_file_context",
      "type": "function",
      "docstring": "Detecta contexto do arquivo automaticamente.",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "Path"
        }
      ],
      "decorators": [],
      "start_line": 497,
      "end_line": 503,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_intelligent_organization_agent.py",
      "category": "analysis",
      "file_name": "migrated_intelligent_organization_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_success_patterns": {
      "name": "analyze_success_patterns",
      "type": "function",
      "docstring": "Analisa padrões de sucesso",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "successful_variations",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 323,
      "end_line": 350,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "analysis",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_failure_patterns": {
      "name": "analyze_failure_patterns",
      "type": "function",
      "docstring": "Analisa padrões de falha",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "failed_variations",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 352,
      "end_line": 371,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "analysis",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_code_patterns": {
      "name": "analyze_code_patterns",
      "type": "function",
      "docstring": "Analisa padrões de código",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "analysis_results",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 373,
      "end_line": 401,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "analysis",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_structural_patterns": {
      "name": "analyze_structural_patterns",
      "type": "function",
      "docstring": "Analisa padrões estruturais",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "analysis_results",
          "annotation": "Dict[str, Any]"
        },
        {
          "name": "generation_results",
          "annotation": "List[Dict[str, Any]]"
        }
      ],
      "decorators": [],
      "start_line": 403,
      "end_line": 429,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "analysis",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_file_types": {
      "name": "analyze_file_types",
      "type": "function",
      "docstring": "Analisa tipos de arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "files",
          "annotation": "Dict[str, Any]"
        }
      ],
      "decorators": [],
      "start_line": 561,
      "end_line": 567,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "analysis",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_knowledge_manager.py.analyze_score_distribution": {
      "name": "analyze_score_distribution",
      "type": "function",
      "docstring": "Analisa distribuição de scores",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "scores",
          "annotation": "List[float]"
        }
      ],
      "decorators": [],
      "start_line": 569,
      "end_line": 588,
      "returns": "Dict[str, int]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_knowledge_manager.py",
      "category": "analysis",
      "file_name": "migrated_knowledge_manager.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_existing_game_modules": {
      "name": "analyze_existing_game_modules",
      "type": "function",
      "docstring": "Analisa módulos game_ existentes para entender padrões",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 78,
      "end_line": 91,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_single_module": {
      "name": "analyze_single_module",
      "type": "function",
      "docstring": "Analisa um módulo específico",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "module_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 93,
      "end_line": 120,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_file_content": {
      "name": "analyze_file_content",
      "type": "function",
      "docstring": "Analisa conteúdo de um arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        },
        {
          "name": "file_ext",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 122,
      "end_line": 145,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_lua_patterns": {
      "name": "analyze_lua_patterns",
      "type": "function",
      "docstring": "Analisa padrões em arquivos Lua",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 147,
      "end_line": 177,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otmod_patterns": {
      "name": "analyze_otmod_patterns",
      "type": "function",
      "docstring": "Analisa padrões em arquivos OTMod",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 179,
      "end_line": 214,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.analyze_otui_patterns": {
      "name": "analyze_otui_patterns",
      "type": "function",
      "docstring": "Analisa padrões em arquivos OTUI",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "content",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 216,
      "end_line": 236,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_module_creator.py.search_wiki_knowledge": {
      "name": "search_wiki_knowledge",
      "type": "function",
      "docstring": "Busca conhecimento na wiki",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "query",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 238,
      "end_line": 259,
      "returns": "List[Dict[str, Any]]",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_module_creator.py",
      "category": "analysis",
      "file_name": "migrated_module_creator.py"
    },
    "agents\\agent_orchestrator\\migrated_researcher_agent.py.create_research_template": {
      "name": "create_research_template",
      "type": "function",
      "docstring": "Cria template para documentação de pesquisa baseado no habdel.\n\nReturns:\n    str: Template em markdown",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 313,
      "end_line": 425,
      "returns": "str",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_researcher_agent.py",
      "category": "analysis",
      "file_name": "migrated_researcher_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_researcher_agent.py.analyze_otclient_source": {
      "name": "analyze_otclient_source",
      "type": "function",
      "docstring": "Analisa o código-fonte do OTClient para identificar sistemas.\n\nReturns:\n    Dict: Análise estruturada",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 427,
      "end_line": 468,
      "returns": "Dict",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_researcher_agent.py",
      "category": "analysis",
      "file_name": "migrated_researcher_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_researcher_agent.py.generate_research_plan": {
      "name": "generate_research_plan",
      "type": "function",
      "docstring": "Gera plano de pesquisa baseado na análise do código.\n\nReturns:\n    Dict: Plano de pesquisa estruturado",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 470,
      "end_line": 536,
      "returns": "Dict",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_researcher_agent.py",
      "category": "analysis",
      "file_name": "migrated_researcher_agent.py"
    },
    "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py.analyze_conversation_context": {
      "name": "analyze_conversation_context",
      "type": "function",
      "docstring": "Analisa o contexto da conversação atual.\n\nReturns:\n    Dict: Análise do contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        }
      ],
      "decorators": [],
      "start_line": 311,
      "end_line": 347,
      "returns": "Dict",
      "async": false,
      "module_path": "agents\\agent_orchestrator\\migrated_task_supervisor_agent.py",
      "category": "analysis",
      "file_name": "migrated_task_supervisor_agent.py"
    },
    "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py.detect_context_by_extension": {
      "name": "detect_context_by_extension",
      "type": "function",
      "docstring": "Detecta contexto baseado na extensão do arquivo",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "file_path",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 352,
      "end_line": 421,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\agent_specialist\\migrated_aaa_agent_specialization_system.py",
      "category": "analysis",
      "file_name": "migrated_aaa_agent_specialization_system.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_context": {
      "name": "analyze_context",
      "type": "function",
      "docstring": "Analisa o contexto do pedido do usuário",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "user_request",
          "annotation": "str"
        }
      ],
      "decorators": [],
      "start_line": 194,
      "end_line": 235,
      "returns": "Dict[str, Any]",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_intelligent_orchestrator.py"
    },
    "agents\\workflow_manager\\migrated_intelligent_orchestrator.py.analyze_complexity": {
      "name": "analyze_complexity",
      "type": "function",
      "docstring": "Analisa a complexidade baseada no contexto",
      "args": [
        {
          "name": "self",
          "annotation": null
        },
        {
          "name": "text",
          "annotation": "str"
        },
        {
          "name": "keywords",
          "annotation": "List[str]"
        }
      ],
      "decorators": [],
      "start_line": 237,
      "end_line": 256,
      "returns": "str",
      "async": false,
      "module_path": "agents\\workflow_manager\\migrated_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_intelligent_orchestrator.py"
    }
  },
  "classes": {
    "python\\code_analyzer\\code_analyzer.py.CodeanalyzerModule": {
      "name": "CodeanalyzerModule",
      "docstring": "Módulo Análise de código Python",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "python\\code_analyzer\\code_analyzer.py",
      "category": "analysis",
      "file_name": "code_analyzer.py"
    },
    "python\\code_analyzer\\migrated_analyze_navigation_optimization.py.NavigationOptimizationAnalyzer": {
      "name": "NavigationOptimizationAnalyzer",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_tags_index_optimization",
          "type": "function",
          "docstring": "Analisa otimização do tags_index.json",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 81,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_wiki_map_optimization",
          "type": "function",
          "docstring": "Analisa otimização do wiki_map.json",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 83,
          "end_line": 130,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_rules_optimization",
          "type": "function",
          "docstring": "Analisa otimização das regras",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 132,
          "end_line": 185,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_enhanced_context_system",
          "type": "function",
          "docstring": "Analisa otimização do sistema de contexto avançado",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 187,
          "end_line": 228,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_intelligent_navigation",
          "type": "function",
          "docstring": "Analisa otimização da navegação inteligente",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 230,
          "end_line": 271,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_performance_metrics",
          "type": "function",
          "docstring": "Analisa métricas de performance dos caminhos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 273,
          "end_line": 324,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_path_optimization_score",
          "type": "function",
          "docstring": "Calcula score de otimização para um caminho",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "path",
              "annotation": null
            },
            {
              "name": "access_time",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 326,
          "end_line": 340,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_optimization_report",
          "type": "function",
          "docstring": "Gera relatório completo de otimização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 342,
          "end_line": 400,
          "returns": null,
          "async": false
        },
        {
          "name": "get_grade",
          "type": "function",
          "docstring": "Converte score em nota",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "score",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 402,
          "end_line": 415,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_optimization_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas no score",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "score",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 417,
          "end_line": 439,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 27,
      "end_line": 439,
      "module_path": "python\\code_analyzer\\migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_analyze_navigation_optimization.py"
    },
    "python\\code_analyzer\\__init__.py.CodeanalyzerModule": {
      "name": "CodeanalyzerModule",
      "docstring": "Módulo Análise de código Python",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "python\\code_analyzer\\__init__.py",
      "category": "analysis",
      "file_name": "__init__.py"
    },
    "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py.CursorPerformanceAnalyzer": {
      "name": "CursorPerformanceAnalyzer",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 31,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_cursor_structure",
          "type": "function",
          "docstring": "Analisa a estrutura do cursor.md para navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 33,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_navigation_efficiency",
          "type": "function",
          "docstring": "Analisa a eficiência de navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 100,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_cache_effectiveness",
          "type": "function",
          "docstring": "Analisa a eficácia do sistema de cache",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 102,
          "end_line": 132,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_optimization_recommendations",
          "type": "function",
          "docstring": "Gera recomendações de otimização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 134,
          "end_line": 165,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_performance_score",
          "type": "function",
          "docstring": "Calcula score de performance geral",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_data",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 167,
          "end_line": 199,
          "returns": null,
          "async": false
        },
        {
          "name": "get_grade",
          "type": "function",
          "docstring": "Converte score em nota",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "score",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 201,
          "end_line": 214,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_report",
          "type": "function",
          "docstring": "Gera relatório completo de análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 216,
          "end_line": 261,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 27,
      "end_line": 261,
      "module_path": "metrics\\metrics_analyzer\\migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_analyze_cursor_performance.py"
    },
    "maps\\map_updater\\migrated_advanced_searcher.py.AdvancedsearcherModule": {
      "name": "AdvancedsearcherModule",
      "docstring": "Módulo Sistema de busca avançada",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_advanced_searcher.py",
      "category": "analysis",
      "file_name": "migrated_advanced_searcher.py"
    },
    "maps\\map_updater\\migrated_code_analyzer.py.CodeanalyzerModule": {
      "name": "CodeanalyzerModule",
      "docstring": "Módulo Análise de código Python",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_code_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_code_analyzer.py"
    },
    "maps\\map_updater\\migrated_migrated_advanced_search_system.py.AdvancedSearchSystem": {
      "name": "AdvancedSearchSystem",
      "docstring": "Sistema de busca avançada semântica",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o sistema de busca avançada.\n\nArgs:\n    consolidated_dir: Diretório dos documentos consolidados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "consolidated_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 61,
          "end_line": 84,
          "returns": null,
          "async": false
        },
        {
          "name": "load_intelligent_navigation",
          "type": "function",
          "docstring": "Carrega dados de navegação inteligente.\n\nReturns:\n    Dados de navegação inteligente",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 86,
          "end_line": 100,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_document_content",
          "type": "function",
          "docstring": "Extrai conteúdo completo de um documento.\n\nArgs:\n    file_path: Caminho para o documento\n    \nReturns:\n    Conteúdo extraído do documento",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 102,
          "end_line": 158,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "build_content_index",
          "type": "function",
          "docstring": "Constrói índice de conteúdo para busca textual.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 160,
          "end_line": 182,
          "returns": null,
          "async": false
        },
        {
          "name": "build_semantic_index",
          "type": "function",
          "docstring": "Constrói índice semântico baseado em similaridade de conteúdo.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 184,
          "end_line": 216,
          "returns": null,
          "async": false
        },
        {
          "name": "build_category_index",
          "type": "function",
          "docstring": "Constrói índice por categorias.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 218,
          "end_line": 244,
          "returns": null,
          "async": false
        },
        {
          "name": "build_tag_index",
          "type": "function",
          "docstring": "Constrói índice por tags.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 246,
          "end_line": 269,
          "returns": null,
          "async": false
        },
        {
          "name": "build_keyword_index",
          "type": "function",
          "docstring": "Constrói índice por palavras-chave.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 271,
          "end_line": 298,
          "returns": null,
          "async": false
        },
        {
          "name": "build_metadata_index",
          "type": "function",
          "docstring": "Constrói índice por metadados.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 300,
          "end_line": 345,
          "returns": null,
          "async": false
        },
        {
          "name": "build_similarity_matrix",
          "type": "function",
          "docstring": "Constrói matriz de similaridade entre documentos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 347,
          "end_line": 369,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_similarity",
          "type": "function",
          "docstring": "Calcula similaridade entre dois documentos.\n\nArgs:\n    doc1: Dados do primeiro documento\n    doc2: Dados do segundo documento\n    \nReturns:\n    Score de similaridade (0-1)",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "doc1",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "doc2",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 371,
          "end_line": 405,
          "returns": "float",
          "async": false
        },
        {
          "name": "search_by_text",
          "type": "function",
          "docstring": "Busca por texto nos documentos.\n\nArgs:\n    query: Query de busca\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 407,
          "end_line": 457,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "search_by_tags",
          "type": "function",
          "docstring": "Busca por tags.\n\nArgs:\n    tags: Lista de tags para buscar\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tags",
              "annotation": "List[str]"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 459,
          "end_line": 491,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "search_by_category",
          "type": "function",
          "docstring": "Busca por categoria.\n\nArgs:\n    category: Categoria principal\n    subcategory: Subcategoria (opcional)\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "category",
              "annotation": "str"
            },
            {
              "name": "subcategory",
              "annotation": "str"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 493,
          "end_line": 516,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "search_similar",
          "type": "function",
          "docstring": "Busca documentos similares.\n\nArgs:\n    doc_path: Caminho do documento de referência\n    limit: Limite de resultados\n    \nReturns:\n    Lista de documentos similares",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "doc_path",
              "annotation": "str"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 518,
          "end_line": 546,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "extract_snippet",
          "type": "function",
          "docstring": "Extrai snippet do conteúdo com a query destacada.\n\nArgs:\n    content: Conteúdo do documento\n    query: Query de busca\n    max_length: Tamanho máximo do snippet\n    \nReturns:\n    Snippet extraído",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "max_length",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 548,
          "end_line": 589,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_search_index",
          "type": "function",
          "docstring": "Salva o índice de busca avançada.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 591,
          "end_line": 600,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_search_report",
          "type": "function",
          "docstring": "Gera relatório do sistema de busca.\n\nReturns:\n    Caminho do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 602,
          "end_line": 640,
          "returns": "str",
          "async": false
        },
        {
          "name": "build_advanced_search",
          "type": "function",
          "docstring": "Constrói sistema completo de busca avançada.\n\nReturns:\n    Resultados da construção",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 642,
          "end_line": 677,
          "returns": "Dict[str, Any]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 58,
      "end_line": 677,
      "module_path": "maps\\map_updater\\migrated_migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_migrated_advanced_search_system.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py.CursorPerformanceAnalyzer": {
      "name": "CursorPerformanceAnalyzer",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 45,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_cursor_structure",
          "type": "function",
          "docstring": "Analisa a estrutura do cursor.md para navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 47,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_navigation_efficiency",
          "type": "function",
          "docstring": "Analisa a eficiência de navegação",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 114,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_cache_effectiveness",
          "type": "function",
          "docstring": "Analisa a eficácia do sistema de cache",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 116,
          "end_line": 146,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_optimization_recommendations",
          "type": "function",
          "docstring": "Gera recomendações de otimização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 148,
          "end_line": 179,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_performance_score",
          "type": "function",
          "docstring": "Calcula score de performance geral",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis_data",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 181,
          "end_line": 213,
          "returns": null,
          "async": false
        },
        {
          "name": "get_grade",
          "type": "function",
          "docstring": "Converte score em nota",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "score",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 215,
          "end_line": 228,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_report",
          "type": "function",
          "docstring": "Gera relatório completo de análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 230,
          "end_line": 275,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 41,
      "end_line": 275,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_cursor_performance.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_cursor_performance.py"
    },
    "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py.NavigationOptimizationAnalyzer": {
      "name": "NavigationOptimizationAnalyzer",
      "docstring": "",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_tags_index_optimization",
          "type": "function",
          "docstring": "Analisa otimização do tags_index.json",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 95,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_wiki_map_optimization",
          "type": "function",
          "docstring": "Analisa otimização do wiki_map.json",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 97,
          "end_line": 144,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_rules_optimization",
          "type": "function",
          "docstring": "Analisa otimização das regras",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 146,
          "end_line": 199,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_enhanced_context_system",
          "type": "function",
          "docstring": "Analisa otimização do sistema de contexto avançado",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 201,
          "end_line": 242,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_intelligent_navigation",
          "type": "function",
          "docstring": "Analisa otimização da navegação inteligente",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 244,
          "end_line": 285,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_performance_metrics",
          "type": "function",
          "docstring": "Analisa métricas de performance dos caminhos",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 287,
          "end_line": 338,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_path_optimization_score",
          "type": "function",
          "docstring": "Calcula score de otimização para um caminho",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "path",
              "annotation": null
            },
            {
              "name": "access_time",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 340,
          "end_line": 354,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_optimization_report",
          "type": "function",
          "docstring": "Gera relatório completo de otimização",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 356,
          "end_line": 414,
          "returns": null,
          "async": false
        },
        {
          "name": "get_grade",
          "type": "function",
          "docstring": "Converte score em nota",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "score",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 416,
          "end_line": 429,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_optimization_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas no score",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "score",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 431,
          "end_line": 453,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 41,
      "end_line": 453,
      "module_path": "maps\\map_updater\\migrated_migrated_analyze_navigation_optimization.py",
      "category": "analysis",
      "file_name": "migrated_migrated_analyze_navigation_optimization.py"
    },
    "maps\\map_updater\\migrated_migrated_context_detector.py.ContextdetectorModule": {
      "name": "ContextdetectorModule",
      "docstring": "Módulo Detecção de contexto",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 56,
          "end_line": 60,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 62,
          "end_line": 72,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 74,
          "end_line": 78,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 80,
          "end_line": 90,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 92,
          "end_line": 96,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 53,
      "end_line": 96,
      "module_path": "maps\\map_updater\\migrated_migrated_context_detector.py",
      "category": "analysis",
      "file_name": "migrated_migrated_context_detector.py"
    },
    "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py.EnhancedContextAnalyzer": {
      "name": "EnhancedContextAnalyzer",
      "docstring": "Analisador de contexto melhorado com detecção de extensões de arquivo",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 45,
          "end_line": 152,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_request",
          "type": "function",
          "docstring": "Análise completa do pedido do usuário",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 154,
          "end_line": 199,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "detect_file_extensions",
          "type": "function",
          "docstring": "Detecta extensões de arquivo no texto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 201,
          "end_line": 207,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "detect_context_patterns",
          "type": "function",
          "docstring": "Detecta padrões de contexto específicos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 209,
          "end_line": 220,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "detect_technologies",
          "type": "function",
          "docstring": "Detecta tecnologias mencionadas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 222,
          "end_line": 233,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "combine_analysis",
          "type": "function",
          "docstring": "Combina todas as análises",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_extensions",
              "annotation": "List[str]"
            },
            {
              "name": "context_patterns",
              "annotation": "Dict"
            },
            {
              "name": "technologies",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 235,
          "end_line": 258,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_complexity",
          "type": "function",
          "docstring": "Analisa complexidade baseada no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 260,
          "end_line": 277,
          "returns": "str",
          "async": false
        },
        {
          "name": "identify_primary_workflow",
          "type": "function",
          "docstring": "Identifica o workflow principal",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 279,
          "end_line": 297,
          "returns": "str",
          "async": false
        },
        {
          "name": "calculate_confidence",
          "type": "function",
          "docstring": "Calcula score de confiança da análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 299,
          "end_line": 315,
          "returns": "float",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 42,
      "end_line": 315,
      "module_path": "maps\\map_updater\\migrated_migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_migrated_enhanced_intelligent_orchestrator.py"
    },
    "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py.OTClientLogAnalyzer": {
      "name": "OTClientLogAnalyzer",
      "docstring": "Analisador especializado de logs do OTClient",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "work_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 49,
          "end_line": 116,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_logs",
          "type": "function",
          "docstring": "Analisa logs do OTClient",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "log_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 118,
          "end_line": 152,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "parse_log_entries",
          "type": "function",
          "docstring": "Parseia entradas de log",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "log_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 154,
          "end_line": 167,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "parse_log_line",
          "type": "function",
          "docstring": "Parseia uma linha de log",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "line",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 169,
          "end_line": 204,
          "returns": "Optional[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "get_time_range",
          "type": "function",
          "docstring": "Obtém o intervalo de tempo dos logs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 206,
          "end_line": 218,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "analyze_level_distribution",
          "type": "function",
          "docstring": "Analisa distribuição de níveis de log",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 220,
          "end_line": 223,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "analyze_category_distribution",
          "type": "function",
          "docstring": "Analisa distribuição de categorias",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 225,
          "end_line": 228,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "analyze_errors",
          "type": "function",
          "docstring": "Analisa erros nos logs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 230,
          "end_line": 261,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "classify_error",
          "type": "function",
          "docstring": "Classifica o tipo de erro",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 263,
          "end_line": 272,
          "returns": "str",
          "async": false
        },
        {
          "name": "analyze_performance",
          "type": "function",
          "docstring": "Analisa métricas de performance",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 274,
          "end_line": 322,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_crashes",
          "type": "function",
          "docstring": "Analisa crashes do cliente",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 324,
          "end_line": 353,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "identify_crash_pattern",
          "type": "function",
          "docstring": "Identifica padrão de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 355,
          "end_line": 370,
          "returns": "str",
          "async": false
        },
        {
          "name": "analyze_patterns",
          "type": "function",
          "docstring": "Analisa padrões nos logs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 372,
          "end_line": 404,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas na análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 406,
          "end_line": 442,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "generate_report",
          "type": "function",
          "docstring": "Gera relatório de análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 444,
          "end_line": 509,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_analysis",
          "type": "function",
          "docstring": "Salva análise em arquivo JSON",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "output_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 511,
          "end_line": 523,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 46,
      "end_line": 523,
      "module_path": "maps\\map_updater\\migrated_migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_otclient_log_analyzer.py.OTClientLogAnalyzer": {
      "name": "OTClientLogAnalyzer",
      "docstring": "Analisador especializado de logs do OTClient",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "work_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 35,
          "end_line": 102,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_logs",
          "type": "function",
          "docstring": "Analisa logs do OTClient",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "log_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 104,
          "end_line": 138,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "parse_log_entries",
          "type": "function",
          "docstring": "Parseia entradas de log",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "log_content",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 140,
          "end_line": 153,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "parse_log_line",
          "type": "function",
          "docstring": "Parseia uma linha de log",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "line",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 155,
          "end_line": 190,
          "returns": "Optional[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "get_time_range",
          "type": "function",
          "docstring": "Obtém o intervalo de tempo dos logs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 192,
          "end_line": 204,
          "returns": "Dict[str, str]",
          "async": false
        },
        {
          "name": "analyze_level_distribution",
          "type": "function",
          "docstring": "Analisa distribuição de níveis de log",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 206,
          "end_line": 209,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "analyze_category_distribution",
          "type": "function",
          "docstring": "Analisa distribuição de categorias",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 211,
          "end_line": 214,
          "returns": "Dict[str, int]",
          "async": false
        },
        {
          "name": "analyze_errors",
          "type": "function",
          "docstring": "Analisa erros nos logs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 216,
          "end_line": 247,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "classify_error",
          "type": "function",
          "docstring": "Classifica o tipo de erro",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 249,
          "end_line": 258,
          "returns": "str",
          "async": false
        },
        {
          "name": "analyze_performance",
          "type": "function",
          "docstring": "Analisa métricas de performance",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 260,
          "end_line": 308,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_crashes",
          "type": "function",
          "docstring": "Analisa crashes do cliente",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 310,
          "end_line": 339,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "identify_crash_pattern",
          "type": "function",
          "docstring": "Identifica padrão de crash",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "message",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 341,
          "end_line": 356,
          "returns": "str",
          "async": false
        },
        {
          "name": "analyze_patterns",
          "type": "function",
          "docstring": "Analisa padrões nos logs",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 358,
          "end_line": 390,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "generate_recommendations",
          "type": "function",
          "docstring": "Gera recomendações baseadas na análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "entries",
              "annotation": "List[Dict[str, Any]]"
            }
          ],
          "decorators": [],
          "start_line": 392,
          "end_line": 428,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "generate_report",
          "type": "function",
          "docstring": "Gera relatório de análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 430,
          "end_line": 495,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_analysis",
          "type": "function",
          "docstring": "Salva análise em arquivo JSON",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "output_file",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 497,
          "end_line": 509,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 32,
      "end_line": 509,
      "module_path": "maps\\map_updater\\migrated_otclient_log_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_otclient_log_analyzer.py"
    },
    "maps\\map_updater\\migrated_research_manager.py.ResearchmanagerModule": {
      "name": "ResearchmanagerModule",
      "docstring": "Módulo Gerenciamento de pesquisa",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_research_manager.py",
      "category": "analysis",
      "file_name": "migrated_research_manager.py"
    },
    "maps\\map_updater\\migrated_source_analyzer.py.SourceanalyzerModule": {
      "name": "SourceanalyzerModule",
      "docstring": "Módulo Análise do código-fonte",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "maps\\map_updater\\migrated_source_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_source_analyzer.py"
    },
    "analysis\\advanced_searcher\\advanced_searcher.py.AdvancedsearcherModule": {
      "name": "AdvancedsearcherModule",
      "docstring": "Módulo Sistema de busca avançada",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "analysis\\advanced_searcher\\advanced_searcher.py",
      "category": "analysis",
      "file_name": "advanced_searcher.py"
    },
    "analysis\\advanced_searcher\\migrated_advanced_search_system.py.AdvancedSearchSystem": {
      "name": "AdvancedSearchSystem",
      "docstring": "Sistema de busca avançada semântica",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o sistema de busca avançada.\n\nArgs:\n    consolidated_dir: Diretório dos documentos consolidados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "consolidated_dir",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 47,
          "end_line": 70,
          "returns": null,
          "async": false
        },
        {
          "name": "load_intelligent_navigation",
          "type": "function",
          "docstring": "Carrega dados de navegação inteligente.\n\nReturns:\n    Dados de navegação inteligente",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 72,
          "end_line": 86,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "extract_document_content",
          "type": "function",
          "docstring": "Extrai conteúdo completo de um documento.\n\nArgs:\n    file_path: Caminho para o documento\n    \nReturns:\n    Conteúdo extraído do documento",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 88,
          "end_line": 144,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "build_content_index",
          "type": "function",
          "docstring": "Constrói índice de conteúdo para busca textual.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 146,
          "end_line": 168,
          "returns": null,
          "async": false
        },
        {
          "name": "build_semantic_index",
          "type": "function",
          "docstring": "Constrói índice semântico baseado em similaridade de conteúdo.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 170,
          "end_line": 202,
          "returns": null,
          "async": false
        },
        {
          "name": "build_category_index",
          "type": "function",
          "docstring": "Constrói índice por categorias.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 204,
          "end_line": 230,
          "returns": null,
          "async": false
        },
        {
          "name": "build_tag_index",
          "type": "function",
          "docstring": "Constrói índice por tags.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 232,
          "end_line": 255,
          "returns": null,
          "async": false
        },
        {
          "name": "build_keyword_index",
          "type": "function",
          "docstring": "Constrói índice por palavras-chave.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 257,
          "end_line": 284,
          "returns": null,
          "async": false
        },
        {
          "name": "build_metadata_index",
          "type": "function",
          "docstring": "Constrói índice por metadados.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 286,
          "end_line": 331,
          "returns": null,
          "async": false
        },
        {
          "name": "build_similarity_matrix",
          "type": "function",
          "docstring": "Constrói matriz de similaridade entre documentos.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 333,
          "end_line": 355,
          "returns": null,
          "async": false
        },
        {
          "name": "calculate_similarity",
          "type": "function",
          "docstring": "Calcula similaridade entre dois documentos.\n\nArgs:\n    doc1: Dados do primeiro documento\n    doc2: Dados do segundo documento\n    \nReturns:\n    Score de similaridade (0-1)",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "doc1",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "doc2",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 357,
          "end_line": 391,
          "returns": "float",
          "async": false
        },
        {
          "name": "search_by_text",
          "type": "function",
          "docstring": "Busca por texto nos documentos.\n\nArgs:\n    query: Query de busca\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 393,
          "end_line": 443,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "search_by_tags",
          "type": "function",
          "docstring": "Busca por tags.\n\nArgs:\n    tags: Lista de tags para buscar\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "tags",
              "annotation": "List[str]"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 445,
          "end_line": 477,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "search_by_category",
          "type": "function",
          "docstring": "Busca por categoria.\n\nArgs:\n    category: Categoria principal\n    subcategory: Subcategoria (opcional)\n    limit: Limite de resultados\n    \nReturns:\n    Lista de resultados",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "category",
              "annotation": "str"
            },
            {
              "name": "subcategory",
              "annotation": "str"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 479,
          "end_line": 502,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "search_similar",
          "type": "function",
          "docstring": "Busca documentos similares.\n\nArgs:\n    doc_path: Caminho do documento de referência\n    limit: Limite de resultados\n    \nReturns:\n    Lista de documentos similares",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "doc_path",
              "annotation": "str"
            },
            {
              "name": "limit",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 504,
          "end_line": 532,
          "returns": "List[Dict[str, Any]]",
          "async": false
        },
        {
          "name": "extract_snippet",
          "type": "function",
          "docstring": "Extrai snippet do conteúdo com a query destacada.\n\nArgs:\n    content: Conteúdo do documento\n    query: Query de busca\n    max_length: Tamanho máximo do snippet\n    \nReturns:\n    Snippet extraído",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "content",
              "annotation": "str"
            },
            {
              "name": "query",
              "annotation": "str"
            },
            {
              "name": "max_length",
              "annotation": "int"
            }
          ],
          "decorators": [],
          "start_line": 534,
          "end_line": 575,
          "returns": "str",
          "async": false
        },
        {
          "name": "save_search_index",
          "type": "function",
          "docstring": "Salva o índice de busca avançada.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 577,
          "end_line": 586,
          "returns": null,
          "async": false
        },
        {
          "name": "generate_search_report",
          "type": "function",
          "docstring": "Gera relatório do sistema de busca.\n\nReturns:\n    Caminho do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 588,
          "end_line": 626,
          "returns": "str",
          "async": false
        },
        {
          "name": "build_advanced_search",
          "type": "function",
          "docstring": "Constrói sistema completo de busca avançada.\n\nReturns:\n    Resultados da construção",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 628,
          "end_line": 663,
          "returns": "Dict[str, Any]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 44,
      "end_line": 663,
      "module_path": "analysis\\advanced_searcher\\migrated_advanced_search_system.py",
      "category": "analysis",
      "file_name": "migrated_advanced_search_system.py"
    },
    "analysis\\advanced_searcher\\__init__.py.AdvancedsearcherModule": {
      "name": "AdvancedsearcherModule",
      "docstring": "Módulo Sistema de busca avançada",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "analysis\\advanced_searcher\\__init__.py",
      "category": "analysis",
      "file_name": "__init__.py"
    },
    "analysis\\context_detector\\context_detector.py.ContextdetectorModule": {
      "name": "ContextdetectorModule",
      "docstring": "Módulo Detecção de contexto",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "analysis\\context_detector\\context_detector.py",
      "category": "analysis",
      "file_name": "context_detector.py"
    },
    "analysis\\context_detector\\migrated_context_detector.py.ContextdetectorModule": {
      "name": "ContextdetectorModule",
      "docstring": "Módulo Detecção de contexto",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 42,
          "end_line": 46,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 48,
          "end_line": 58,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 60,
          "end_line": 64,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 66,
          "end_line": 76,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 78,
          "end_line": 82,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 39,
      "end_line": 82,
      "module_path": "analysis\\context_detector\\migrated_context_detector.py",
      "category": "analysis",
      "file_name": "migrated_context_detector.py"
    },
    "analysis\\context_detector\\__init__.py.ContextdetectorModule": {
      "name": "ContextdetectorModule",
      "docstring": "Módulo Detecção de contexto",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "analysis\\context_detector\\__init__.py",
      "category": "analysis",
      "file_name": "__init__.py"
    },
    "analysis\\research_manager\\research_manager.py.ResearchmanagerModule": {
      "name": "ResearchmanagerModule",
      "docstring": "Módulo Gerenciamento de pesquisa",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "analysis\\research_manager\\research_manager.py",
      "category": "analysis",
      "file_name": "research_manager.py"
    },
    "analysis\\research_manager\\__init__.py.ResearchmanagerModule": {
      "name": "ResearchmanagerModule",
      "docstring": "Módulo Gerenciamento de pesquisa",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 20,
          "end_line": 23,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 25,
          "end_line": 27,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 29,
          "end_line": 31,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 17,
      "end_line": 31,
      "module_path": "analysis\\research_manager\\__init__.py",
      "category": "analysis",
      "file_name": "__init__.py"
    },
    "analysis\\source_analyzer\\migrated_pattern_analyzer.py.PatternAnalyzer": {
      "name": "PatternAnalyzer",
      "docstring": "Analisador de padrões para identificação de aprendizados",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "models_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 57,
          "end_line": 82,
          "returns": null,
          "async": false
        },
        {
          "name": "load_patterns",
          "type": "function",
          "docstring": "Carrega padrões aprendidos do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 84,
          "end_line": 89,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "load_clusters",
          "type": "function",
          "docstring": "Carrega clusters de padrões do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 91,
          "end_line": 96,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "save_patterns",
          "type": "function",
          "docstring": "Salva padrões aprendidos no arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 98,
          "end_line": 101,
          "returns": null,
          "async": false
        },
        {
          "name": "save_clusters",
          "type": "function",
          "docstring": "Salva clusters de padrões no arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 103,
          "end_line": 106,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_patterns",
          "type": "function",
          "docstring": "Analisa interações e identifica padrões",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            }
          ],
          "decorators": [],
          "start_line": 108,
          "end_line": 144,
          "returns": "List[Any]",
          "async": false
        },
        {
          "name": "_extract_features",
          "type": "private_method",
          "docstring": "Extrai características das interações",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            }
          ],
          "decorators": [],
          "start_line": 146,
          "end_line": 180,
          "returns": "Dict[str, List[Any]]",
          "async": false
        },
        {
          "name": "_identify_success_patterns",
          "type": "private_method",
          "docstring": "Identifica padrões de sucesso",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            },
            {
              "name": "features",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 182,
          "end_line": 221,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_identify_failure_patterns",
          "type": "private_method",
          "docstring": "Identifica padrões de falha",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            },
            {
              "name": "features",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 223,
          "end_line": 258,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_identify_optimization_patterns",
          "type": "private_method",
          "docstring": "Identifica padrões de otimização",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            },
            {
              "name": "features",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 260,
          "end_line": 291,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_analyze_context_patterns",
          "type": "private_method",
          "docstring": "Analisa padrões de contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            }
          ],
          "decorators": [],
          "start_line": 293,
          "end_line": 319,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_analyze_agent_patterns",
          "type": "private_method",
          "docstring": "Analisa padrões de combinação de agentes",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            }
          ],
          "decorators": [],
          "start_line": 321,
          "end_line": 344,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_analyze_workflow_patterns",
          "type": "private_method",
          "docstring": "Analisa padrões de workflow",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            }
          ],
          "decorators": [],
          "start_line": 346,
          "end_line": 368,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_analyze_error_patterns",
          "type": "private_method",
          "docstring": "Analisa padrões de erro",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "interactions",
              "annotation": "List[Any]"
            }
          ],
          "decorators": [],
          "start_line": 370,
          "end_line": 393,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_extract_error_type",
          "type": "private_method",
          "docstring": "Extrai tipo de erro da mensagem",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "error_message",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 395,
          "end_line": 410,
          "returns": "str",
          "async": false
        },
        {
          "name": "_create_pattern_clusters",
          "type": "private_method",
          "docstring": "Cria clusters de padrões similares",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "patterns",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 412,
          "end_line": 465,
          "returns": "List[PatternCluster]",
          "async": false
        },
        {
          "name": "_calculate_cluster_center",
          "type": "private_method",
          "docstring": "Calcula o centro de um cluster de padrões",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "patterns",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 467,
          "end_line": 491,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "_calculate_pattern_scores",
          "type": "private_method",
          "docstring": "Calcula scores de confiança para padrões",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "patterns",
              "annotation": "List[Dict]"
            },
            {
              "name": "clusters",
              "annotation": "List[PatternCluster]"
            }
          ],
          "decorators": [],
          "start_line": 493,
          "end_line": 512,
          "returns": "List[Dict]",
          "async": false
        },
        {
          "name": "_generate_pattern_id",
          "type": "private_method",
          "docstring": "Gera ID único para um padrão",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "pattern_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 514,
          "end_line": 519,
          "returns": "str",
          "async": false
        },
        {
          "name": "_save_learned_patterns",
          "type": "private_method",
          "docstring": "Salva padrões aprendidos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "patterns",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 521,
          "end_line": 540,
          "returns": null,
          "async": false
        },
        {
          "name": "_limit_patterns_per_type",
          "type": "private_method",
          "docstring": "Limita número de padrões por tipo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 542,
          "end_line": 556,
          "returns": null,
          "async": false
        },
        {
          "name": "find_similar_patterns",
          "type": "function",
          "docstring": "Encontra padrões similares ao contexto atual",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "pattern_type",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 558,
          "end_line": 581,
          "returns": "List[PatternMatch]",
          "async": false
        },
        {
          "name": "_calculate_pattern_similarity",
          "type": "private_method",
          "docstring": "Calcula similaridade entre contexto e padrão",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "pattern",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 583,
          "end_line": 594,
          "returns": "float",
          "async": false
        },
        {
          "name": "_get_matched_features",
          "type": "private_method",
          "docstring": "Retorna características que deram match",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "context",
              "annotation": "Dict[str, Any]"
            },
            {
              "name": "pattern",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 596,
          "end_line": 601,
          "returns": "List[str]",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 54,
      "end_line": 601,
      "module_path": "analysis\\source_analyzer\\migrated_pattern_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_pattern_analyzer.py"
    },
    "analysis\\source_analyzer\\source_analyzer.py.SourceanalyzerModule": {
      "name": "SourceanalyzerModule",
      "docstring": "Módulo Análise do código-fonte",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 28,
          "end_line": 32,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 34,
          "end_line": 44,
          "returns": null,
          "async": false
        },
        {
          "name": "_execute_module_logic",
          "type": "private_method",
          "docstring": "Lógica específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 46,
          "end_line": 50,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 52,
          "end_line": 62,
          "returns": null,
          "async": false
        },
        {
          "name": "_validate_module_logic",
          "type": "private_method",
          "docstring": "Lógica de validação específica do módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 64,
          "end_line": 68,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 25,
      "end_line": 68,
      "module_path": "analysis\\source_analyzer\\source_analyzer.py",
      "category": "analysis",
      "file_name": "source_analyzer.py"
    },
    "analysis\\source_analyzer\\__init__.py.SourceanalyzerModule": {
      "name": "SourceanalyzerModule",
      "docstring": "Módulo Análise do código-fonte",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 22,
          "end_line": 25,
          "returns": null,
          "async": false
        },
        {
          "name": "execute",
          "type": "function",
          "docstring": "Executa o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 27,
          "end_line": 29,
          "returns": null,
          "async": false
        },
        {
          "name": "validate",
          "type": "function",
          "docstring": "Valida o módulo",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 33,
          "returns": null,
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 19,
      "end_line": 33,
      "module_path": "analysis\\source_analyzer\\__init__.py",
      "category": "analysis",
      "file_name": "__init__.py"
    },
    "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py.DeepSourceAnalyzer": {
      "name": "DeepSourceAnalyzer",
      "docstring": "Agente especializado em análise profunda do código-fonte.",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "Inicializa o Deep Source Analyzer.",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 54,
          "end_line": 115,
          "returns": null,
          "async": false
        },
        {
          "name": "scan_source_code",
          "type": "function",
          "docstring": "Escaneia o código-fonte para identificar arquivos relevantes.\n\nReturns:\n    Dict: Mapeamento de arquivos por categoria",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 117,
          "end_line": 157,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "categorize_file",
          "type": "function",
          "docstring": "Categoriza um arquivo baseado em seu conteúdo e nome.\n\nArgs:\n    file_path: Caminho do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 159,
          "end_line": 194,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_file_content",
          "type": "function",
          "docstring": "Analisa o conteúdo detalhado de um arquivo.\n\nArgs:\n    file_path: Caminho do arquivo\n    \nReturns:\n    Dict: Análise detalhada do arquivo",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_path",
              "annotation": "Path"
            }
          ],
          "decorators": [],
          "start_line": 196,
          "end_line": 272,
          "returns": "Dict",
          "async": false
        },
        {
          "name": "generate_deep_analysis_report",
          "type": "function",
          "docstring": "Gera relatório de análise profunda.\n\nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 274,
          "end_line": 368,
          "returns": "str",
          "async": false
        },
        {
          "name": "analyze_specific_category",
          "type": "function",
          "docstring": "Analisa uma categoria específica em detalhes.\n\nArgs:\n    category: Categoria a ser analisada\n    \nReturns:\n    bool: True se análise bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "category",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 370,
          "end_line": 424,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_category_detailed_report",
          "type": "function",
          "docstring": "Gera relatório detalhado de uma categoria.\n\nArgs:\n    category: Categoria analisada\n    analyses: Lista de análises detalhadas\n    \nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "category",
              "annotation": "str"
            },
            {
              "name": "analyses",
              "annotation": "List[Dict]"
            }
          ],
          "decorators": [],
          "start_line": 426,
          "end_line": 519,
          "returns": "str",
          "async": false
        },
        {
          "name": "run_deep_analysis",
          "type": "function",
          "docstring": "Executa análise profunda completa.\n\nReturns:\n    bool: True se análise bem-sucedida",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 521,
          "end_line": 555,
          "returns": "bool",
          "async": false
        },
        {
          "name": "generate_final_analysis_report",
          "type": "function",
          "docstring": "Gera relatório final da análise profunda.\n\nReturns:\n    str: Conteúdo do relatório",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 557,
          "end_line": 668,
          "returns": "str",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 49,
      "end_line": 668,
      "module_path": "agents\\agent_orchestrator\\migrated_deep_source_analyzer.py",
      "category": "analysis",
      "file_name": "migrated_deep_source_analyzer.py"
    },
    "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py.EnhancedContextAnalyzer": {
      "name": "EnhancedContextAnalyzer",
      "docstring": "Analisador de contexto melhorado com detecção de extensões de arquivo",
      "methods": [
        {
          "name": "__init__",
          "type": "magic_method",
          "docstring": "",
          "args": [
            {
              "name": "self",
              "annotation": null
            }
          ],
          "decorators": [],
          "start_line": 31,
          "end_line": 138,
          "returns": null,
          "async": false
        },
        {
          "name": "analyze_request",
          "type": "function",
          "docstring": "Análise completa do pedido do usuário",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "user_request",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 140,
          "end_line": 185,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "detect_file_extensions",
          "type": "function",
          "docstring": "Detecta extensões de arquivo no texto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 187,
          "end_line": 193,
          "returns": "List[str]",
          "async": false
        },
        {
          "name": "detect_context_patterns",
          "type": "function",
          "docstring": "Detecta padrões de contexto específicos",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 195,
          "end_line": 206,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "detect_technologies",
          "type": "function",
          "docstring": "Detecta tecnologias mencionadas",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            }
          ],
          "decorators": [],
          "start_line": 208,
          "end_line": 219,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "combine_analysis",
          "type": "function",
          "docstring": "Combina todas as análises",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "file_extensions",
              "annotation": "List[str]"
            },
            {
              "name": "context_patterns",
              "annotation": "Dict"
            },
            {
              "name": "technologies",
              "annotation": "Dict"
            }
          ],
          "decorators": [],
          "start_line": 221,
          "end_line": 244,
          "returns": "Dict[str, Any]",
          "async": false
        },
        {
          "name": "analyze_complexity",
          "type": "function",
          "docstring": "Analisa complexidade baseada no contexto",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "text",
              "annotation": "str"
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 246,
          "end_line": 263,
          "returns": "str",
          "async": false
        },
        {
          "name": "identify_primary_workflow",
          "type": "function",
          "docstring": "Identifica o workflow principal",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 265,
          "end_line": 283,
          "returns": "str",
          "async": false
        },
        {
          "name": "calculate_confidence",
          "type": "function",
          "docstring": "Calcula score de confiança da análise",
          "args": [
            {
              "name": "self",
              "annotation": null
            },
            {
              "name": "analysis",
              "annotation": "Dict[str, Any]"
            }
          ],
          "decorators": [],
          "start_line": 285,
          "end_line": 301,
          "returns": "float",
          "async": false
        }
      ],
      "decorators": [],
      "bases": [],
      "start_line": 28,
      "end_line": 301,
      "module_path": "agents\\agent_orchestrator\\migrated_enhanced_intelligent_orchestrator.py",
      "category": "analysis",
      "file_name": "migrated_enhanced_intelligent_orchestrator.py"
    }
  }
}