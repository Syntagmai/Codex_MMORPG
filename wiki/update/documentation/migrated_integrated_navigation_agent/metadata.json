{
  "module": {
    "name": "migrated_integrated_navigation_agent",
    "path": "wiki\\update\\modules\\agents\\agent_orchestrator\\migrated_integrated_navigation_agent.py",
    "docstring": "",
    "functions": [
      {
        "name": "main",
        "docstring": "Função principal para teste do agente integrado",
        "parameters": [],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 33
      },
      {
        "name": "integrate_with_module",
        "docstring": "Integra o script com o módulo de destino.",
        "parameters": [],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 3
      },
      {
        "name": "__init__",
        "docstring": "",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 18
      },
      {
        "name": "navigate",
        "docstring": "Navegação integrada com múltiplas estratégias\n\nEstratégias:\n- 'json': Navegação JSON tradicional\n- 'graph': Navegação por grafos\n- 'hybrid': Combinação inteligente",
        "parameters": [
          "self",
          "query",
          "context",
          "strategy"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 54
      },
      {
        "name": "json_navigation",
        "docstring": "Navegação JSON tradicional",
        "parameters": [
          "self",
          "query",
          "context"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 41
      },
      {
        "name": "graph_navigation",
        "docstring": "Navegação por grafos",
        "parameters": [
          "self",
          "query",
          "context"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 34
      },
      {
        "name": "hybrid_navigation",
        "docstring": "Navegação híbrida - combina JSON e grafos",
        "parameters": [
          "self",
          "query",
          "context"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 25
      },
      {
        "name": "integrate_results",
        "docstring": "Integra resultados de JSON e grafos",
        "parameters": [
          "self",
          "json_results",
          "graph_results",
          "context"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 54
      },
      {
        "name": "calculate_confidence_scores",
        "docstring": "Calcula scores de confiança para os resultados",
        "parameters": [
          "self",
          "integrated_results"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 30
      },
      {
        "name": "generate_suggestions",
        "docstring": "Gera sugestões de navegação",
        "parameters": [
          "self",
          "query",
          "context",
          "results"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 49
      },
      {
        "name": "get_performance_report",
        "docstring": "Gera relatório de performance",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 20
      },
      {
        "name": "optimize_navigation",
        "docstring": "Otimiza a navegação integrada",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 36
      }
    ],
    "classes": [
      {
        "name": "IntegratedNavigationAgent",
        "docstring": "Agente que integra navegação JSON e grafos",
        "methods": [
          {
            "name": "__init__",
            "docstring": "",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 18
          },
          {
            "name": "navigate",
            "docstring": "Navegação integrada com múltiplas estratégias\n\nEstratégias:\n- 'json': Navegação JSON tradicional\n- 'graph': Navegação por grafos\n- 'hybrid': Combinação inteligente",
            "parameters": [
              "self",
              "query",
              "context",
              "strategy"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 54
          },
          {
            "name": "json_navigation",
            "docstring": "Navegação JSON tradicional",
            "parameters": [
              "self",
              "query",
              "context"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 41
          },
          {
            "name": "graph_navigation",
            "docstring": "Navegação por grafos",
            "parameters": [
              "self",
              "query",
              "context"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 34
          },
          {
            "name": "hybrid_navigation",
            "docstring": "Navegação híbrida - combina JSON e grafos",
            "parameters": [
              "self",
              "query",
              "context"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 25
          },
          {
            "name": "integrate_results",
            "docstring": "Integra resultados de JSON e grafos",
            "parameters": [
              "self",
              "json_results",
              "graph_results",
              "context"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 54
          },
          {
            "name": "calculate_confidence_scores",
            "docstring": "Calcula scores de confiança para os resultados",
            "parameters": [
              "self",
              "integrated_results"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 30
          },
          {
            "name": "generate_suggestions",
            "docstring": "Gera sugestões de navegação",
            "parameters": [
              "self",
              "query",
              "context",
              "results"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 49
          },
          {
            "name": "get_performance_report",
            "docstring": "Gera relatório de performance",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 20
          },
          {
            "name": "optimize_navigation",
            "docstring": "Otimiza a navegação integrada",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 36
          }
        ],
        "attributes": [
          "start_time",
          "cache_key",
          "result",
          "execution_time",
          "results",
          "tags_file",
          "wiki_map_file",
          "results",
          "related_nodes",
          "results",
          "json_results",
          "graph_results",
          "integrated",
          "integrated",
          "json_files",
          "graph_nodes",
          "scores",
          "total_confidence",
          "json_results",
          "graph_results",
          "hybrid_results",
          "suggestions",
          "total_queries",
          "cache_hit_rate",
          "optimization_result",
          "json_opt",
          "graph_opt",
          "node_data",
          "target_node",
          "optimal_path",
          "node_id",
          "confidence",
          "old_cache",
          "tags_data",
          "wiki_data",
          "path",
          "graph_info",
          "path",
          "file_name",
          "file_name",
          "cache_time"
        ],
        "inheritance": [],
        "line_count": 382
      }
    ],
    "imports": [
      ".AgentorchestratorModule",
      "json",
      "time",
      "datetime.datetime"
    ],
    "line_count": 468,
    "complexity_score": 43
  },
  "documentation_files": [
    "docstring.py",
    "README.md",
    "TECHNICAL.md"
  ],
  "generated_at": "2025-08-01T15:05:58.915803"
}