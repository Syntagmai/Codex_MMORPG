{
  "module": {
    "name": "migrated_migrated_optimize_json_maps",
    "path": "wiki\\update\\modules\\maps\\map_updater\\migrated_migrated_optimize_json_maps.py",
    "docstring": "",
    "functions": [
      {
        "name": "main",
        "docstring": "Função principal do script.",
        "parameters": [],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 27
      },
      {
        "name": "integrate_with_module",
        "docstring": "Integra o script com o módulo de destino.",
        "parameters": [],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 3
      },
      {
        "name": "integrate_with_module",
        "docstring": "Integra o script com o módulo de destino.",
        "parameters": [],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 3
      },
      {
        "name": "__init__",
        "docstring": "Inicializa o otimizador.\n\nArgs:\n    maps_dir: Diretório contendo os mapas JSON",
        "parameters": [
          "self",
          "maps_dir"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 17
      },
      {
        "name": "analyze_map_size",
        "docstring": "Analisa o tamanho e estrutura de um mapa JSON.\n\nArgs:\n    file_path: Caminho para o arquivo JSON\n    \nReturns:\n    Dicionário com informações de análise",
        "parameters": [
          "self",
          "file_path"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 33
      },
      {
        "name": "_analyze_structure",
        "docstring": "Analisa a estrutura dos dados JSON.",
        "parameters": [
          "self",
          "data"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 14
      },
      {
        "name": "_count_items",
        "docstring": "Conta o número de itens nos dados.",
        "parameters": [
          "self",
          "data"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 12
      },
      {
        "name": "optimize_map",
        "docstring": "Otimiza um mapa JSON usando a estratégia especificada.\n\nArgs:\n    file_path: Caminho para o arquivo JSON\n    strategy: Estratégia de otimização ('auto', 'compress', 'chunk', 'both')\n    \nReturns:\n    True se a otimização foi bem-sucedida",
        "parameters": [
          "self",
          "file_path",
          "strategy"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 65
      },
      {
        "name": "_compress_data",
        "docstring": "Comprime dados removendo espaços desnecessários e otimizando estrutura.",
        "parameters": [
          "self",
          "data"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 11
      },
      {
        "name": "_chunk_data",
        "docstring": "Divide dados grandes em chunks menores.",
        "parameters": [
          "self",
          "data",
          "file_path"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 26
      },
      {
        "name": "optimize_all_maps",
        "docstring": "Otimiza todos os mapas JSON no diretório.\n\nArgs:\n    strategy: Estratégia de otimização\n    \nReturns:\n    Relatório de otimização",
        "parameters": [
          "self",
          "strategy"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 51
      },
      {
        "name": "generate_optimization_report",
        "docstring": "Gera relatório de otimização.",
        "parameters": [
          "self",
          "results"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 16
      }
    ],
    "classes": [
      {
        "name": "JSONMapOptimizer",
        "docstring": "Otimizador de mapas JSON para melhorar performance.",
        "methods": [
          {
            "name": "__init__",
            "docstring": "Inicializa o otimizador.\n\nArgs:\n    maps_dir: Diretório contendo os mapas JSON",
            "parameters": [
              "self",
              "maps_dir"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 17
          },
          {
            "name": "analyze_map_size",
            "docstring": "Analisa o tamanho e estrutura de um mapa JSON.\n\nArgs:\n    file_path: Caminho para o arquivo JSON\n    \nReturns:\n    Dicionário com informações de análise",
            "parameters": [
              "self",
              "file_path"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 33
          },
          {
            "name": "_analyze_structure",
            "docstring": "Analisa a estrutura dos dados JSON.",
            "parameters": [
              "self",
              "data"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 14
          },
          {
            "name": "_count_items",
            "docstring": "Conta o número de itens nos dados.",
            "parameters": [
              "self",
              "data"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 12
          },
          {
            "name": "optimize_map",
            "docstring": "Otimiza um mapa JSON usando a estratégia especificada.\n\nArgs:\n    file_path: Caminho para o arquivo JSON\n    strategy: Estratégia de otimização ('auto', 'compress', 'chunk', 'both')\n    \nReturns:\n    True se a otimização foi bem-sucedida",
            "parameters": [
              "self",
              "file_path",
              "strategy"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 65
          },
          {
            "name": "_compress_data",
            "docstring": "Comprime dados removendo espaços desnecessários e otimizando estrutura.",
            "parameters": [
              "self",
              "data"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 11
          },
          {
            "name": "_chunk_data",
            "docstring": "Divide dados grandes em chunks menores.",
            "parameters": [
              "self",
              "data",
              "file_path"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 26
          },
          {
            "name": "optimize_all_maps",
            "docstring": "Otimiza todos os mapas JSON no diretório.\n\nArgs:\n    strategy: Estratégia de otimização\n    \nReturns:\n    Relatório de otimização",
            "parameters": [
              "self",
              "strategy"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 51
          },
          {
            "name": "generate_optimization_report",
            "docstring": "Gera relatório de otimização.",
            "parameters": [
              "self",
              "results"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 16
          }
        ],
        "attributes": [
          "json_files",
          "results",
          "report_path",
          "report",
          "file_size",
          "data_size",
          "analysis",
          "backup_path",
          "optimized_data",
          "optimized_path",
          "original_size",
          "optimized_size",
          "savings",
          "compressed",
          "chunks",
          "files_list",
          "index_data",
          "analysis",
          "success",
          "data",
          "data",
          "analysis",
          "optimized_data",
          "optimized_data",
          "compressed_path",
          "chunk_num",
          "chunk_data",
          "chunk_path",
          "strategy",
          "strategy",
          "strategy"
        ],
        "inheritance": [],
        "line_count": 264
      }
    ],
    "imports": [
      ".MapupdaterModule",
      ".MapoptimizerModule",
      "json",
      "gzip",
      "shutil",
      "time",
      "logging"
    ],
    "line_count": 388,
    "complexity_score": 39
  },
  "documentation_files": [
    "docstring.py",
    "README.md",
    "TECHNICAL.md"
  ],
  "generated_at": "2025-08-01T15:05:55.894103"
}