{
  "module": {
    "name": "migrated_agents_orchestrator",
    "path": "wiki\\update\\modules\\agents\\agent_orchestrator\\migrated_agents_orchestrator.py",
    "docstring": "",
    "functions": [
      {
        "name": "integrate_with_module",
        "docstring": "Integra o script com o módulo de destino.",
        "parameters": [],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 3
      },
      {
        "name": "__init__",
        "docstring": "",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 24
      },
      {
        "name": "load_configuration",
        "docstring": "Carrega configurações do sistema",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 51
      },
      {
        "name": "analyze_dashboard",
        "docstring": "Analisa o dashboard para identificar tarefas pendentes",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 22
      },
      {
        "name": "extract_pending_tasks",
        "docstring": "Extrai tarefas pendentes do dashboard",
        "parameters": [
          "self",
          "content"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 42
      },
      {
        "name": "determine_priority",
        "docstring": "Determina prioridade da tarefa",
        "parameters": [
          "self",
          "task_id",
          "task_type"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 20
      },
      {
        "name": "assign_task_to_agent",
        "docstring": "Atribui tarefa ao agente apropriado",
        "parameters": [
          "self",
          "task"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 20
      },
      {
        "name": "execute_agent",
        "docstring": "Executa um agente específico",
        "parameters": [
          "self",
          "agent_name",
          "task"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 37
      },
      {
        "name": "_run_agent_thread",
        "docstring": "Executa agente em thread separada",
        "parameters": [
          "self",
          "agent_file",
          "agent_name",
          "task"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 57
      },
      {
        "name": "execute_auto_commit",
        "docstring": "Executa commit automático após tarefa concluída",
        "parameters": [
          "self",
          "agent_name",
          "task"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 29
      },
      {
        "name": "generate_commit_message",
        "docstring": "Gera mensagem de commit contextual",
        "parameters": [
          "self",
          "agent_name",
          "task"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 49
      },
      {
        "name": "update_dashboard_with_commit",
        "docstring": "Atualiza dashboard com hash do commit",
        "parameters": [
          "self",
          "commit_hash",
          "agent_name",
          "task"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 33
      },
      {
        "name": "orchestrate_workflow",
        "docstring": "Orquestra workflow completo de agentes",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 54
      },
      {
        "name": "wait_for_agents_completion",
        "docstring": "Aguarda conclusão de todos os agentes",
        "parameters": [
          "self",
          "timeout"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 21
      },
      {
        "name": "generate_orchestration_report",
        "docstring": "Gera relatório de orquestração",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 46
      },
      {
        "name": "run",
        "docstring": "Executa o Agents Orchestrator",
        "parameters": [
          "self"
        ],
        "return_type": "Any",
        "complexity": "Low",
        "line_count": 17
      }
    ],
    "classes": [
      {
        "name": "AgentsOrchestrator",
        "docstring": "",
        "methods": [
          {
            "name": "__init__",
            "docstring": "",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 24
          },
          {
            "name": "load_configuration",
            "docstring": "Carrega configurações do sistema",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 51
          },
          {
            "name": "analyze_dashboard",
            "docstring": "Analisa o dashboard para identificar tarefas pendentes",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 22
          },
          {
            "name": "extract_pending_tasks",
            "docstring": "Extrai tarefas pendentes do dashboard",
            "parameters": [
              "self",
              "content"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 42
          },
          {
            "name": "determine_priority",
            "docstring": "Determina prioridade da tarefa",
            "parameters": [
              "self",
              "task_id",
              "task_type"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 20
          },
          {
            "name": "assign_task_to_agent",
            "docstring": "Atribui tarefa ao agente apropriado",
            "parameters": [
              "self",
              "task"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 20
          },
          {
            "name": "execute_agent",
            "docstring": "Executa um agente específico",
            "parameters": [
              "self",
              "agent_name",
              "task"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 37
          },
          {
            "name": "_run_agent_thread",
            "docstring": "Executa agente em thread separada",
            "parameters": [
              "self",
              "agent_file",
              "agent_name",
              "task"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 57
          },
          {
            "name": "execute_auto_commit",
            "docstring": "Executa commit automático após tarefa concluída",
            "parameters": [
              "self",
              "agent_name",
              "task"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 29
          },
          {
            "name": "generate_commit_message",
            "docstring": "Gera mensagem de commit contextual",
            "parameters": [
              "self",
              "agent_name",
              "task"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 49
          },
          {
            "name": "update_dashboard_with_commit",
            "docstring": "Atualiza dashboard com hash do commit",
            "parameters": [
              "self",
              "commit_hash",
              "agent_name",
              "task"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 33
          },
          {
            "name": "orchestrate_workflow",
            "docstring": "Orquestra workflow completo de agentes",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 54
          },
          {
            "name": "wait_for_agents_completion",
            "docstring": "Aguarda conclusão de todos os agentes",
            "parameters": [
              "self",
              "timeout"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 21
          },
          {
            "name": "generate_orchestration_report",
            "docstring": "Gera relatório de orquestração",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 46
          },
          {
            "name": "run",
            "docstring": "Executa o Agents Orchestrator",
            "parameters": [
              "self"
            ],
            "return_type": "Any",
            "complexity": "Low",
            "line_count": 17
          }
        ],
        "attributes": [
          "dashboard_file",
          "pending_tasks",
          "patterns",
          "task_type",
          "agent_mapping",
          "assigned_agent",
          "agent_config",
          "agent_file",
          "task_type",
          "task_id",
          "task_title",
          "category_mapping",
          "category",
          "progress_info",
          "commit_message",
          "start_time",
          "serializable_agent_results",
          "serializable_running_agents",
          "report",
          "report_file",
          "pending_tasks",
          "matches",
          "epic_id",
          "thread",
          "result",
          "success",
          "output",
          "error",
          "commit_message",
          "result",
          "current",
          "target",
          "progress",
          "progress_info",
          "dashboard_file",
          "commit_info",
          "updated_content",
          "analysis",
          "pending_tasks",
          "priority_order",
          "sorted_tasks",
          "completed_agents",
          "serializable_result",
          "serializable_agent_info",
          "success",
          "content",
          "commit_hash",
          "content",
          "agent_name",
          "task_id",
          "title",
          "current_progress",
          "target_progress",
          "task_id",
          "title"
        ],
        "inheritance": [],
        "line_count": 551
      }
    ],
    "imports": [
      ".AgentorchestratorModule",
      "json",
      "logging",
      "subprocess",
      "time",
      "datetime.datetime",
      "threading",
      "queue",
      "re"
    ],
    "line_count": 618,
    "complexity_score": 55
  },
  "documentation_files": [
    "docstring.py",
    "README.md",
    "TECHNICAL.md"
  ],
  "generated_at": "2025-08-01T15:05:58.486364"
}