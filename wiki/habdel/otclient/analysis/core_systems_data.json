{
  "category": "CORE_SYSTEMS",
  "description": "Sistemas fundamentais do OTClient",
  "files_analyzed": 303,
  "detailed_analyses": [
    {
      "file": "src\\androidmain.cpp",
      "total_lines": 27,
      "code_lines": 21,
      "comment_lines": 0,
      "empty_lines": 6,
      "functions": [
        {
          "line": 7,
          "return_type": "int",
          "name": "main"
        },
        {
          "line": 10,
          "return_type": "void",
          "name": "android_main"
        }
      ],
      "classes": [],
      "includes": [
        "framework/platform/androidwindow.h",
        "cstdlib"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\main.cpp",
      "total_lines": 128,
      "code_lines": 82,
      "comment_lines": 29,
      "empty_lines": 17,
      "functions": [
        {
          "line": 45,
          "return_type": "int",
          "name": "main"
        },
        {
          "line": 82,
          "return_type": "new",
          "name": "GraphicalApplicationContext"
        }
      ],
      "classes": [],
      "includes": [
        "client/client.h",
        "client/game.h",
        "client/gameconfig.h",
        "client/localplayer.h",
        "framework/core/application.h",
        "framework/core/resourcemanager.h",
        "framework/luaengine/luainterface.h",
        "framework/discord/discord.h",
        "framework/net/protocolhttp.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\animatedtext.cpp",
      "total_lines": 100,
      "code_lines": 60,
      "comment_lines": 22,
      "empty_lines": 18,
      "functions": [],
      "classes": [],
      "includes": [
        "animatedtext.h",
        "game.h",
        "gameconfig.h",
        "map.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\animatedtext.h",
      "total_lines": 66,
      "code_lines": 34,
      "comment_lines": 22,
      "empty_lines": 10,
      "functions": [
        {
          "line": 40,
          "return_type": "void",
          "name": "drawText"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "onAppear"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setColor"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setText"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setOffset"
        },
        {
          "line": 48,
          "return_type": "Color",
          "name": "getColor"
        },
        {
          "line": 50,
          "return_type": "Point",
          "name": "getOffset"
        },
        {
          "line": 51,
          "return_type": "Timer",
          "name": "getTimer"
        },
        {
          "line": 52,
          "return_type": "string",
          "name": "getText"
        },
        {
          "line": 54,
          "return_type": "bool",
          "name": "merge"
        },
        {
          "line": 55,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 58,
          "return_type": "AnimatedTextPtr",
          "name": "asAnimatedText"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "AnimatedText"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/core/timer.h",
        "framework/graphics/cachedtext.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\animator.cpp",
      "total_lines": 237,
      "code_lines": 175,
      "comment_lines": 21,
      "empty_lines": 41,
      "functions": [
        {
          "line": 92,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 94,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "animator.h",
        "declarations.h",
        "framework/core/clock.h",
        "framework/core/filestream.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\animator.h",
      "total_lines": 92,
      "code_lines": 52,
      "comment_lines": 21,
      "empty_lines": 19,
      "functions": [
        {
          "line": 50,
          "return_type": "void",
          "name": "unserializeAppearance"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "unserialize"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "serialize"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "setPhase"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "resetAnimation"
        },
        {
          "line": 56,
          "return_type": "int",
          "name": "getPhase"
        },
        {
          "line": 57,
          "return_type": "int",
          "name": "getPhaseAt"
        },
        {
          "line": 58,
          "return_type": "int",
          "name": "getStartPhase"
        },
        {
          "line": 59,
          "return_type": "int",
          "name": "getAnimationPhases"
        },
        {
          "line": 60,
          "return_type": "int",
          "name": "getAverageDuration"
        },
        {
          "line": 62,
          "return_type": "uint16_t",
          "name": "getMinDuration"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "isAsync"
        },
        {
          "line": 65,
          "return_type": "bool",
          "name": "isComplete"
        },
        {
          "line": 67,
          "return_type": "uint16_t",
          "name": "getTotalDuration"
        },
        {
          "line": 70,
          "return_type": "int",
          "name": "getPingPongPhase"
        },
        {
          "line": 71,
          "return_type": "int",
          "name": "getLoopPhase"
        },
        {
          "line": 72,
          "return_type": "int",
          "name": "getPhaseDuration"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "calculateSynchronous"
        }
      ],
      "classes": [
        {
          "line": 47,
          "name": "Animator"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/core/declarations.h",
        "framework/core/timer.h",
        "appearances.pb.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\attachableobject.cpp",
      "total_lines": 331,
      "code_lines": 243,
      "comment_lines": 22,
      "empty_lines": 66,
      "functions": [],
      "classes": [],
      "includes": [
        "attachableobject.h",
        "framework/graphics/particleeffect.h",
        "framework/graphics/particlemanager.h",
        "framework/core/eventdispatcher.h",
        "framework/ui/uimanager.h",
        "framework/ui/uiwidget.h",
        "algorithm",
        "client.h",
        "game.h",
        "map.h",
        "uimap.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\attachableobject.h",
      "total_lines": 96,
      "code_lines": 58,
      "comment_lines": 21,
      "empty_lines": 17,
      "functions": [
        {
          "line": 36,
          "return_type": "LuaObjectPtr",
          "name": "attachedObjectToLuaObject"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "isTile"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "isThing"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "attachEffect"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "clearAttachedEffects"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "clearTemporaryAttachedEffects"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "clearPermanentAttachedEffects"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "detachEffectById"
        },
        {
          "line": 45,
          "return_type": "bool",
          "name": "detachEffect"
        },
        {
          "line": 46,
          "return_type": "AttachedEffectPtr",
          "name": "getAttachedEffectById"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "onStartAttachEffect"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "onDispatcherAttachEffect"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "onStartDetachEffect"
        },
        {
          "line": 52,
          "return_type": "bool",
          "name": "isOwnerHidden"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "attachParticleEffect"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "clearAttachedParticlesEffect"
        },
        {
          "line": 58,
          "return_type": "bool",
          "name": "detachParticleEffectByName"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "updateAndAttachParticlesEffects"
        },
        {
          "line": 62,
          "return_type": "bool",
          "name": "hasAttachedWidgets"
        },
        {
          "line": 63,
          "return_type": "bool",
          "name": "hasAttachedEffects"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "hasAttachedParticles"
        },
        {
          "line": 66,
          "return_type": "bool",
          "name": "isWidgetAttached"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "attachWidget"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "clearAttachedWidgets"
        },
        {
          "line": 69,
          "return_type": "bool",
          "name": "detachWidgetById"
        },
        {
          "line": 70,
          "return_type": "bool",
          "name": "detachWidget"
        },
        {
          "line": 71,
          "return_type": "UIWidgetPtr",
          "name": "getAttachedWidgetById"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "drawAttachedEffect"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "drawAttachedLightEffect"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "onDetachEffect"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "drawAttachedParticlesEffect"
        },
        {
          "line": 87,
          "return_type": "auto",
          "name": "getData"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "AttachableObject"
        }
      ],
      "includes": [
        "attachedeffect.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\attachedeffect.cpp",
      "total_lines": 197,
      "code_lines": 138,
      "comment_lines": 22,
      "empty_lines": 37,
      "functions": [
        {
          "line": 69,
          "return_type": "int",
          "name": "getBounce"
        }
      ],
      "classes": [],
      "includes": [
        "attachedeffect.h",
        "gameconfig.h",
        "lightview.h",
        "thingtypemanager.h",
        "framework/core/clock.h",
        "framework/graphics/animatedtexture.h",
        "framework/graphics/shadermanager.h",
        "framework/graphics/texturemanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\attachedeffectmanager.cpp",
      "total_lines": 86,
      "code_lines": 52,
      "comment_lines": 21,
      "empty_lines": 13,
      "functions": [],
      "classes": [],
      "includes": [
        "attachedeffectmanager.h",
        "attachedeffect.h",
        "thingtypemanager.h",
        "framework/core/resourcemanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\client.cpp",
      "total_lines": 158,
      "code_lines": 111,
      "comment_lines": 22,
      "empty_lines": 25,
      "functions": [],
      "classes": [],
      "includes": [
        "client.h",
        "game.h",
        "gameconfig.h",
        "map.h",
        "minimap.h",
        "spriteappearances.h",
        "spritemanager.h",
        "uimap.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/shadermanager.h",
        "framework/ui/ui.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\client.h",
      "total_lines": 62,
      "code_lines": 28,
      "comment_lines": 21,
      "empty_lines": 13,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "registerLuaFunctions"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "preLoad"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 41,
          "return_type": "bool",
          "name": "canDraw"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "isLoadingAsyncTexture"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "isUsingProtobuf"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "onLoadingAsyncTextureChanged"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "doMapScreenshot"
        },
        {
          "line": 48,
          "return_type": "UIMapPtr",
          "name": "getMapWidget"
        },
        {
          "line": 50,
          "return_type": "float",
          "name": "getEffectAlpha"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setEffectAlpha"
        },
        {
          "line": 53,
          "return_type": "float",
          "name": "getMissileAlpha"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "setMissileAlpha"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "Client"
        }
      ],
      "includes": [
        "global.h",
        "uimap.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\const.h",
      "total_lines": 831,
      "code_lines": 745,
      "comment_lines": 32,
      "empty_lines": 54,
      "functions": [
        {
          "line": 572,
          "return_type": "and",
          "name": "deltaX"
        },
        {
          "line": 573,
          "return_type": "and",
          "name": "deltaX"
        }
      ],
      "classes": [],
      "includes": [
        "cstdint"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\container.h",
      "total_lines": 80,
      "code_lines": 48,
      "comment_lines": 22,
      "empty_lines": 10,
      "functions": [
        {
          "line": 35,
          "return_type": "ItemPtr",
          "name": "getItem"
        },
        {
          "line": 37,
          "return_type": "int",
          "name": "getItemsCount"
        },
        {
          "line": 38,
          "return_type": "Position",
          "name": "getSlotPosition"
        },
        {
          "line": 39,
          "return_type": "int",
          "name": "getId"
        },
        {
          "line": 40,
          "return_type": "int",
          "name": "getCapacity"
        },
        {
          "line": 41,
          "return_type": "ItemPtr",
          "name": "getContainerItem"
        },
        {
          "line": 42,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "hasParent"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "isClosed"
        },
        {
          "line": 45,
          "return_type": "bool",
          "name": "isUnlocked"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "hasPages"
        },
        {
          "line": 47,
          "return_type": "int",
          "name": "getSize"
        },
        {
          "line": 48,
          "return_type": "int",
          "name": "getFirstIndex"
        },
        {
          "line": 49,
          "return_type": "ItemPtr",
          "name": "findItemById"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "onOpen"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "onClose"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "onAddItem"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "onAddItems"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "onUpdateItem"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "onRemoveItem"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "updateItemsPositions"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "Container"
        },
        {
          "line": 64,
          "name": "Game"
        }
      ],
      "includes": [
        "declarations.h",
        "item.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\creature.cpp",
      "total_lines": 1264,
      "code_lines": 933,
      "comment_lines": 61,
      "empty_lines": 270,
      "functions": [
        {
          "line": 89,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 106,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 135,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 260,
          "return_type": "Rect",
          "name": "dest"
        },
        {
          "line": 264,
          "return_type": "Rect",
          "name": "numberRect"
        },
        {
          "line": 306,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 351,
          "return_type": "else",
          "name": "drawCreature"
        },
        {
          "line": 368,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 478,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 487,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 521,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 526,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 558,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 616,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 621,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 633,
          "return_type": "Rect",
          "name": "virtualCreatureRect"
        },
        {
          "line": 639,
          "return_type": "Rect",
          "name": "virtualTileRect"
        },
        {
          "line": 754,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 756,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 758,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 760,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 784,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 933,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 937,
          "return_type": "int",
          "name": "getSmoothedElevation"
        },
        {
          "line": 962,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1043,
          "return_type": "return",
          "name": "getMountThingType"
        },
        {
          "line": 1057,
          "return_type": "return",
          "name": "getMountThingType"
        },
        {
          "line": 1092,
          "return_type": "return",
          "name": "isDisabledWalkAnimation"
        },
        {
          "line": 1263,
          "return_type": "return",
          "name": "getTile"
        }
      ],
      "classes": [],
      "includes": [
        "creature.h",
        "game.h",
        "lightview.h",
        "localplayer.h",
        "luavaluecasts_client.h",
        "map.h",
        "thingtypemanager.h",
        "tile.h",
        "framework/core/clock.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/shadermanager.h",
        "framework/graphics/texturemanager.h",
        "framework/ui/uiwidget.h",
        "statictext.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\creature.h",
      "total_lines": 368,
      "code_lines": 266,
      "comment_lines": 28,
      "empty_lines": 74,
      "functions": [
        {
          "line": 49,
          "return_type": "bool",
          "name": "hasSpeedFormula"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "onCreate"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "onAppear"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "onDisappear"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "drawLight"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "internalDraw"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "drawInformation"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "setMasterId"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "setHealthPercent"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "setManaPercent"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "setDirection"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "setOutfit"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "setLight"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "setSpeed"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "setBaseSpeed"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "setSkull"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "setShield"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "setEmblem"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "setType"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "setIcon"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "setIcons"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "setSkullTexture"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "setShieldTexture"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "setEmblemTexture"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "setTypeTexture"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "setIconTexture"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "setPassable"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "setMountShader"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "setStaticWalking"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "setIconsTexture"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "onStartAttachEffect"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "onDispatcherAttachEffect"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "onStartDetachEffect"
        },
        {
          "line": 93,
          "return_type": "void",
          "name": "addTimedSquare"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "removeTimedSquare"
        },
        {
          "line": 95,
          "return_type": "void",
          "name": "showStaticSquare"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "hideStaticSquare"
        },
        {
          "line": 99,
          "return_type": "void",
          "name": "turn"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "jump"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "allowAppearWalk"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "walk"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "stopWalk"
        },
        {
          "line": 105,
          "return_type": "bool",
          "name": "isDrawingOutfitColor"
        },
        {
          "line": 106,
          "return_type": "void",
          "name": "setDrawOutfitColor"
        },
        {
          "line": 108,
          "return_type": "int",
          "name": "getDisplacementX"
        },
        {
          "line": 109,
          "return_type": "int",
          "name": "getDisplacementY"
        },
        {
          "line": 110,
          "return_type": "int",
          "name": "getExactSize"
        },
        {
          "line": 112,
          "return_type": "float",
          "name": "getStepProgress"
        },
        {
          "line": 113,
          "return_type": "float",
          "name": "getStepTicksLeft"
        },
        {
          "line": 115,
          "return_type": "uint8_t",
          "name": "getSkull"
        },
        {
          "line": 116,
          "return_type": "uint8_t",
          "name": "getShield"
        },
        {
          "line": 117,
          "return_type": "uint8_t",
          "name": "getEmblem"
        },
        {
          "line": 118,
          "return_type": "uint8_t",
          "name": "getType"
        },
        {
          "line": 119,
          "return_type": "uint8_t",
          "name": "getIcon"
        },
        {
          "line": 120,
          "return_type": "uint8_t",
          "name": "getHealthPercent"
        },
        {
          "line": 121,
          "return_type": "uint8_t",
          "name": "getManaPercent"
        },
        {
          "line": 123,
          "return_type": "uint16_t",
          "name": "getSpeed"
        },
        {
          "line": 124,
          "return_type": "uint16_t",
          "name": "getBaseSpeed"
        },
        {
          "line": 125,
          "return_type": "uint16_t",
          "name": "getStepDuration"
        },
        {
          "line": 127,
          "return_type": "uint32_t",
          "name": "getId"
        },
        {
          "line": 128,
          "return_type": "uint32_t",
          "name": "getMasterId"
        },
        {
          "line": 129,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 131,
          "return_type": "Point",
          "name": "getDrawOffset"
        },
        {
          "line": 132,
          "return_type": "int",
          "name": "getDrawElevation"
        },
        {
          "line": 134,
          "return_type": "Direction",
          "name": "getDirection"
        },
        {
          "line": 135,
          "return_type": "Outfit",
          "name": "getOutfit"
        },
        {
          "line": 137,
          "return_type": "bool",
          "name": "hasLight"
        },
        {
          "line": 138,
          "return_type": "bool",
          "name": "hasMountShader"
        },
        {
          "line": 140,
          "return_type": "Point",
          "name": "getDisplacement"
        },
        {
          "line": 141,
          "return_type": "Point",
          "name": "getWalkOffset"
        },
        {
          "line": 142,
          "return_type": "PointF",
          "name": "getJumpOffset"
        },
        {
          "line": 143,
          "return_type": "Position",
          "name": "getLastStepFromPosition"
        },
        {
          "line": 144,
          "return_type": "Position",
          "name": "getLastStepToPosition"
        },
        {
          "line": 145,
          "return_type": "bool",
          "name": "isTimedSquareVisible"
        },
        {
          "line": 146,
          "return_type": "Color",
          "name": "getTimedSquareColor"
        },
        {
          "line": 147,
          "return_type": "bool",
          "name": "isStaticSquareVisible"
        },
        {
          "line": 148,
          "return_type": "Color",
          "name": "getStaticSquareColor"
        },
        {
          "line": 150,
          "return_type": "ticks_t",
          "name": "getWalkTicksElapsed"
        },
        {
          "line": 152,
          "return_type": "bool",
          "name": "isPassable"
        },
        {
          "line": 153,
          "return_type": "bool",
          "name": "isWalking"
        },
        {
          "line": 155,
          "return_type": "bool",
          "name": "isRemoved"
        },
        {
          "line": 156,
          "return_type": "bool",
          "name": "isInvisible"
        },
        {
          "line": 157,
          "return_type": "bool",
          "name": "isDead"
        },
        {
          "line": 158,
          "return_type": "bool",
          "name": "isFullHealth"
        },
        {
          "line": 159,
          "return_type": "bool",
          "name": "canBeSeen"
        },
        {
          "line": 160,
          "return_type": "bool",
          "name": "isCreature"
        },
        {
          "line": 161,
          "return_type": "bool",
          "name": "isCovered"
        },
        {
          "line": 163,
          "return_type": "void",
          "name": "setCovered"
        },
        {
          "line": 165,
          "return_type": "bool",
          "name": "isDisabledWalkAnimation"
        },
        {
          "line": 166,
          "return_type": "void",
          "name": "setDisableWalkAnimation"
        },
        {
          "line": 173,
          "return_type": "void",
          "name": "setTyping"
        },
        {
          "line": 174,
          "return_type": "void",
          "name": "sendTyping"
        },
        {
          "line": 175,
          "return_type": "bool",
          "name": "getTyping"
        },
        {
          "line": 176,
          "return_type": "void",
          "name": "setTypingIconTexture"
        },
        {
          "line": 177,
          "return_type": "void",
          "name": "setBounce"
        },
        {
          "line": 184,
          "return_type": "void",
          "name": "setWidgetInformation"
        },
        {
          "line": 185,
          "return_type": "UIWidgetPtr",
          "name": "getWidgetInformation"
        },
        {
          "line": 187,
          "return_type": "void",
          "name": "setText"
        },
        {
          "line": 188,
          "return_type": "string",
          "name": "getText"
        },
        {
          "line": 189,
          "return_type": "void",
          "name": "clearText"
        },
        {
          "line": 190,
          "return_type": "bool",
          "name": "canShoot"
        },
        {
          "line": 197,
          "return_type": "bool",
          "name": "isCameraFollowing"
        },
        {
          "line": 201,
          "return_type": "void",
          "name": "setCameraFollowing"
        },
        {
          "line": 206,
          "return_type": "void",
          "name": "terminateWalk"
        },
        {
          "line": 207,
          "return_type": "void",
          "name": "onWalking"
        },
        {
          "line": 208,
          "return_type": "void",
          "name": "updateWalkOffset"
        },
        {
          "line": 209,
          "return_type": "void",
          "name": "updateWalk"
        },
        {
          "line": 214,
          "return_type": "void",
          "name": "onDeath"
        },
        {
          "line": 215,
          "return_type": "void",
          "name": "onPositionChange"
        },
        {
          "line": 227,
          "return_type": "void",
          "name": "nextWalkUpdate"
        },
        {
          "line": 228,
          "return_type": "void",
          "name": "updateJump"
        },
        {
          "line": 229,
          "return_type": "void",
          "name": "updateShield"
        },
        {
          "line": 230,
          "return_type": "void",
          "name": "updateWalkingTile"
        },
        {
          "line": 231,
          "return_type": "void",
          "name": "updateWalkAnimation"
        },
        {
          "line": 233,
          "return_type": "uint16_t",
          "name": "getCurrentAnimationPhase"
        },
        {
          "line": 244,
          "return_type": "uint16_t",
          "name": "getDuration"
        },
        {
          "line": 360,
          "return_type": "bool",
          "name": "isNpc"
        },
        {
          "line": 367,
          "return_type": "bool",
          "name": "isMonster"
        }
      ],
      "classes": [
        {
          "line": 39,
          "name": "Creature"
        },
        {
          "line": 357,
          "name": "Npc"
        },
        {
          "line": 364,
          "name": "Monster"
        }
      ],
      "includes": [
        "mapview.h",
        "outfit.h",
        "thing.h",
        "framework/core/declarations.h",
        "framework/core/timer.h",
        "framework/graphics/cachedtext.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\creatures.cpp",
      "total_lines": 416,
      "code_lines": 319,
      "comment_lines": 22,
      "empty_lines": 75,
      "functions": [
        {
          "line": 64,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 105,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 183,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 187,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 213,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 236,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 240,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 244,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 271,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 284,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 289,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "creatures.h",
        "creature.h",
        "map.h",
        "framework/core/resourcemanager.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\creatures.h",
      "total_lines": 141,
      "code_lines": 90,
      "comment_lines": 21,
      "empty_lines": 30,
      "functions": [
        {
          "line": 45,
          "return_type": "void",
          "name": "setRadius"
        },
        {
          "line": 46,
          "return_type": "int32_t",
          "name": "getRadius"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "setCenterPos"
        },
        {
          "line": 49,
          "return_type": "Position",
          "name": "getCenterPos"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "addCreature"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "removeCreature"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "save"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "setSpawnTime"
        },
        {
          "line": 75,
          "return_type": "int32_t",
          "name": "getSpawnTime"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 78,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "setOutfit"
        },
        {
          "line": 81,
          "return_type": "Outfit",
          "name": "getOutfit"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "setDirection"
        },
        {
          "line": 84,
          "return_type": "Direction",
          "name": "getDirection"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "setRace"
        },
        {
          "line": 87,
          "return_type": "CreatureRace",
          "name": "getRace"
        },
        {
          "line": 89,
          "return_type": "CreaturePtr",
          "name": "cast"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "clearSpawns"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 107,
          "return_type": "void",
          "name": "loadMonsters"
        },
        {
          "line": 108,
          "return_type": "void",
          "name": "loadSingleCreature"
        },
        {
          "line": 109,
          "return_type": "void",
          "name": "loadNpcs"
        },
        {
          "line": 110,
          "return_type": "void",
          "name": "loadCreatureBuffer"
        },
        {
          "line": 111,
          "return_type": "void",
          "name": "loadSpawns"
        },
        {
          "line": 112,
          "return_type": "void",
          "name": "saveSpawns"
        },
        {
          "line": 118,
          "return_type": "SpawnPtr",
          "name": "getSpawn"
        },
        {
          "line": 119,
          "return_type": "SpawnPtr",
          "name": "getSpawnForPlacePos"
        },
        {
          "line": 120,
          "return_type": "SpawnPtr",
          "name": "addSpawn"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "deleteSpawn"
        },
        {
          "line": 123,
          "return_type": "bool",
          "name": "isLoaded"
        },
        {
          "line": 124,
          "return_type": "bool",
          "name": "isSpawnLoaded"
        },
        {
          "line": 129,
          "return_type": "void",
          "name": "internalLoadCreatureBuffer"
        }
      ],
      "classes": [
        {
          "line": 39,
          "name": "Spawn"
        },
        {
          "line": 62,
          "name": "CreatureManager"
        },
        {
          "line": 68,
          "name": "CreatureType"
        },
        {
          "line": 99,
          "name": "CreatureManager"
        }
      ],
      "includes": [
        "framework/luaengine/luaobject.h",
        "declarations.h",
        "outfit.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\declarations.h",
      "total_lines": 132,
      "code_lines": 94,
      "comment_lines": 24,
      "empty_lines": 14,
      "functions": [],
      "classes": [
        {
          "line": 30,
          "name": "Map"
        },
        {
          "line": 31,
          "name": "Game"
        },
        {
          "line": 32,
          "name": "MapView"
        },
        {
          "line": 33,
          "name": "LightView"
        },
        {
          "line": 34,
          "name": "Tile"
        },
        {
          "line": 35,
          "name": "Thing"
        },
        {
          "line": 36,
          "name": "Item"
        },
        {
          "line": 37,
          "name": "Container"
        },
        {
          "line": 38,
          "name": "Creature"
        },
        {
          "line": 39,
          "name": "Monster"
        },
        {
          "line": 40,
          "name": "Npc"
        },
        {
          "line": 41,
          "name": "Player"
        },
        {
          "line": 42,
          "name": "LocalPlayer"
        },
        {
          "line": 43,
          "name": "Effect"
        },
        {
          "line": 44,
          "name": "Missile"
        },
        {
          "line": 45,
          "name": "AnimatedText"
        },
        {
          "line": 46,
          "name": "StaticText"
        },
        {
          "line": 47,
          "name": "Animator"
        },
        {
          "line": 48,
          "name": "ThingType"
        },
        {
          "line": 49,
          "name": "ItemType"
        },
        {
          "line": 50,
          "name": "TileBlock"
        },
        {
          "line": 51,
          "name": "AttachedEffect"
        },
        {
          "line": 52,
          "name": "AttachableObject"
        },
        {
          "line": 55,
          "name": "House"
        },
        {
          "line": 56,
          "name": "Town"
        },
        {
          "line": 57,
          "name": "CreatureType"
        },
        {
          "line": 58,
          "name": "Spawn"
        },
        {
          "line": 103,
          "name": "ProtocolLogin"
        },
        {
          "line": 104,
          "name": "ProtocolGame"
        },
        {
          "line": 110,
          "name": "UIItem"
        },
        {
          "line": 111,
          "name": "UIEffect"
        },
        {
          "line": 112,
          "name": "UIMissile"
        },
        {
          "line": 113,
          "name": "UICreature"
        },
        {
          "line": 114,
          "name": "UIGraph"
        },
        {
          "line": 115,
          "name": "UIMap"
        },
        {
          "line": 116,
          "name": "UIMinimap"
        },
        {
          "line": 117,
          "name": "UIProgressRect"
        },
        {
          "line": 118,
          "name": "UIMapAnchorLayout"
        },
        {
          "line": 119,
          "name": "UIPositionAnchor"
        },
        {
          "line": 120,
          "name": "UISprite"
        }
      ],
      "includes": [
        "global.h",
        "framework/net/declarations.h",
        "framework/ui/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\effect.cpp",
      "total_lines": 158,
      "code_lines": 102,
      "comment_lines": 26,
      "empty_lines": 30,
      "functions": [],
      "classes": [],
      "includes": [
        "effect.h",
        "game.h",
        "map.h",
        "client/client.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\effect.h",
      "total_lines": 50,
      "code_lines": 20,
      "comment_lines": 22,
      "empty_lines": 8,
      "functions": [
        {
          "line": 32,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 33,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 36,
          "return_type": "bool",
          "name": "isEffect"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "waitFor"
        },
        {
          "line": 39,
          "return_type": "EffectPtr",
          "name": "asEffect"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "onAppear"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "Effect"
        }
      ],
      "includes": [
        "thing.h",
        "framework/core/timer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\game.cpp",
      "total_lines": 2001,
      "code_lines": 1520,
      "comment_lines": 46,
      "empty_lines": 435,
      "functions": [
        {
          "line": 186,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 285,
          "return_type": "new",
          "name": "Container"
        },
        {
          "line": 599,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 602,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 623,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 626,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 630,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 1627,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 1630,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 1645,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 1648,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "game.h",
        "container.h",
        "creature.h",
        "localplayer.h",
        "luavaluecasts_client.h",
        "map.h",
        "protocolcodes.h",
        "protocolgame.h",
        "framework/core/application.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h",
        "tile.h",
        "framework/net/packet_player.h",
        "framework/net/packet_recorder.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\game.h",
      "total_lines": 912,
      "code_lines": 728,
      "comment_lines": 67,
      "empty_lines": 117,
      "functions": [
        {
          "line": 457,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 458,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 461,
          "return_type": "void",
          "name": "resetGameStates"
        },
        {
          "line": 464,
          "return_type": "void",
          "name": "processConnectionError"
        },
        {
          "line": 465,
          "return_type": "void",
          "name": "processDisconnect"
        },
        {
          "line": 466,
          "return_type": "void",
          "name": "processPing"
        },
        {
          "line": 467,
          "return_type": "void",
          "name": "processPingBack"
        },
        {
          "line": 469,
          "return_type": "void",
          "name": "processUpdateNeeded"
        },
        {
          "line": 470,
          "return_type": "void",
          "name": "processLoginError"
        },
        {
          "line": 471,
          "return_type": "void",
          "name": "processLoginAdvice"
        },
        {
          "line": 472,
          "return_type": "void",
          "name": "processLoginWait"
        },
        {
          "line": 473,
          "return_type": "void",
          "name": "processSessionEnd"
        },
        {
          "line": 474,
          "return_type": "void",
          "name": "processLogin"
        },
        {
          "line": 475,
          "return_type": "void",
          "name": "processPendingGame"
        },
        {
          "line": 476,
          "return_type": "void",
          "name": "processEnterGame"
        },
        {
          "line": 478,
          "return_type": "void",
          "name": "processGameStart"
        },
        {
          "line": 479,
          "return_type": "void",
          "name": "processGameEnd"
        },
        {
          "line": 480,
          "return_type": "void",
          "name": "processDeath"
        },
        {
          "line": 482,
          "return_type": "void",
          "name": "processGMActions"
        },
        {
          "line": 483,
          "return_type": "void",
          "name": "processInventoryChange"
        },
        {
          "line": 484,
          "return_type": "void",
          "name": "processAttackCancel"
        },
        {
          "line": 485,
          "return_type": "void",
          "name": "processWalkCancel"
        },
        {
          "line": 487,
          "return_type": "void",
          "name": "processPlayerHelpers"
        },
        {
          "line": 488,
          "return_type": "void",
          "name": "processPlayerModes"
        },
        {
          "line": 491,
          "return_type": "void",
          "name": "processTextMessage"
        },
        {
          "line": 492,
          "return_type": "void",
          "name": "processTalk"
        },
        {
          "line": 495,
          "return_type": "void",
          "name": "processOpenContainer"
        },
        {
          "line": 496,
          "return_type": "void",
          "name": "processCloseContainer"
        },
        {
          "line": 497,
          "return_type": "void",
          "name": "processContainerAddItem"
        },
        {
          "line": 498,
          "return_type": "void",
          "name": "processContainerUpdateItem"
        },
        {
          "line": 499,
          "return_type": "void",
          "name": "processContainerRemoveItem"
        },
        {
          "line": 502,
          "return_type": "void",
          "name": "processChannelList"
        },
        {
          "line": 503,
          "return_type": "void",
          "name": "processOpenChannel"
        },
        {
          "line": 504,
          "return_type": "void",
          "name": "processOpenPrivateChannel"
        },
        {
          "line": 505,
          "return_type": "void",
          "name": "processOpenOwnPrivateChannel"
        },
        {
          "line": 506,
          "return_type": "void",
          "name": "processCloseChannel"
        },
        {
          "line": 509,
          "return_type": "void",
          "name": "processRuleViolationChannel"
        },
        {
          "line": 510,
          "return_type": "void",
          "name": "processRuleViolationRemove"
        },
        {
          "line": 511,
          "return_type": "void",
          "name": "processRuleViolationCancel"
        },
        {
          "line": 512,
          "return_type": "void",
          "name": "processRuleViolationLock"
        },
        {
          "line": 515,
          "return_type": "void",
          "name": "processVipAdd"
        },
        {
          "line": 516,
          "return_type": "void",
          "name": "processVipStateChange"
        },
        {
          "line": 517,
          "return_type": "void",
          "name": "processVipGroupChange"
        },
        {
          "line": 520,
          "return_type": "void",
          "name": "processTutorialHint"
        },
        {
          "line": 521,
          "return_type": "void",
          "name": "processAddAutomapFlag"
        },
        {
          "line": 522,
          "return_type": "void",
          "name": "processRemoveAutomapFlag"
        },
        {
          "line": 534,
          "return_type": "void",
          "name": "processOpenNpcTrade"
        },
        {
          "line": 535,
          "return_type": "void",
          "name": "processPlayerGoods"
        },
        {
          "line": 536,
          "return_type": "void",
          "name": "processCloseNpcTrade"
        },
        {
          "line": 539,
          "return_type": "void",
          "name": "processOwnTrade"
        },
        {
          "line": 540,
          "return_type": "void",
          "name": "processCounterTrade"
        },
        {
          "line": 541,
          "return_type": "void",
          "name": "processCloseTrade"
        },
        {
          "line": 544,
          "return_type": "void",
          "name": "processEditText"
        },
        {
          "line": 545,
          "return_type": "void",
          "name": "processEditList"
        },
        {
          "line": 548,
          "return_type": "void",
          "name": "processQuestLog"
        },
        {
          "line": 549,
          "return_type": "void",
          "name": "processQuestLine"
        },
        {
          "line": 557,
          "return_type": "void",
          "name": "processItemDetail"
        },
        {
          "line": 558,
          "return_type": "void",
          "name": "processBestiaryRaces"
        },
        {
          "line": 569,
          "return_type": "void",
          "name": "processCyclopediaCharacterItemSummary"
        },
        {
          "line": 572,
          "return_type": "void",
          "name": "processCyclopediaCharacterRecentDeaths"
        },
        {
          "line": 573,
          "return_type": "void",
          "name": "processCyclopediaCharacterRecentPvpKills"
        },
        {
          "line": 574,
          "return_type": "void",
          "name": "processParseBestiaryRaces"
        },
        {
          "line": 575,
          "return_type": "void",
          "name": "processParseBestiaryOverview"
        },
        {
          "line": 576,
          "return_type": "void",
          "name": "processUpdateBestiaryMonsterData"
        },
        {
          "line": 577,
          "return_type": "void",
          "name": "processUpdateBestiaryCharmsData"
        },
        {
          "line": 578,
          "return_type": "void",
          "name": "processBosstiaryInfo"
        },
        {
          "line": 579,
          "return_type": "void",
          "name": "processBosstiarySlots"
        },
        {
          "line": 586,
          "return_type": "void",
          "name": "loginWorld"
        },
        {
          "line": 587,
          "return_type": "void",
          "name": "playRecord"
        },
        {
          "line": 588,
          "return_type": "void",
          "name": "cancelLogin"
        },
        {
          "line": 589,
          "return_type": "void",
          "name": "forceLogout"
        },
        {
          "line": 590,
          "return_type": "void",
          "name": "safeLogout"
        },
        {
          "line": 593,
          "return_type": "bool",
          "name": "walk"
        },
        {
          "line": 594,
          "return_type": "void",
          "name": "autoWalk"
        },
        {
          "line": 595,
          "return_type": "void",
          "name": "forceWalk"
        },
        {
          "line": 596,
          "return_type": "void",
          "name": "turn"
        },
        {
          "line": 597,
          "return_type": "void",
          "name": "stop"
        },
        {
          "line": 600,
          "return_type": "void",
          "name": "look"
        },
        {
          "line": 601,
          "return_type": "void",
          "name": "move"
        },
        {
          "line": 602,
          "return_type": "void",
          "name": "moveToParentContainer"
        },
        {
          "line": 603,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 604,
          "return_type": "void",
          "name": "wrap"
        },
        {
          "line": 605,
          "return_type": "void",
          "name": "use"
        },
        {
          "line": 606,
          "return_type": "void",
          "name": "useWith"
        },
        {
          "line": 607,
          "return_type": "void",
          "name": "useInventoryItem"
        },
        {
          "line": 608,
          "return_type": "void",
          "name": "useInventoryItemWith"
        },
        {
          "line": 609,
          "return_type": "ItemPtr",
          "name": "findItemInContainers"
        },
        {
          "line": 612,
          "return_type": "int",
          "name": "open"
        },
        {
          "line": 613,
          "return_type": "void",
          "name": "openParent"
        },
        {
          "line": 614,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 615,
          "return_type": "void",
          "name": "refreshContainer"
        },
        {
          "line": 618,
          "return_type": "void",
          "name": "attack"
        },
        {
          "line": 619,
          "return_type": "void",
          "name": "cancelAttack"
        },
        {
          "line": 620,
          "return_type": "void",
          "name": "follow"
        },
        {
          "line": 621,
          "return_type": "void",
          "name": "cancelFollow"
        },
        {
          "line": 622,
          "return_type": "void",
          "name": "cancelAttackAndFollow"
        },
        {
          "line": 625,
          "return_type": "void",
          "name": "talk"
        },
        {
          "line": 626,
          "return_type": "void",
          "name": "talkChannel"
        },
        {
          "line": 627,
          "return_type": "void",
          "name": "talkPrivate"
        },
        {
          "line": 630,
          "return_type": "void",
          "name": "openPrivateChannel"
        },
        {
          "line": 631,
          "return_type": "void",
          "name": "requestChannels"
        },
        {
          "line": 632,
          "return_type": "void",
          "name": "joinChannel"
        },
        {
          "line": 633,
          "return_type": "void",
          "name": "leaveChannel"
        },
        {
          "line": 634,
          "return_type": "void",
          "name": "closeNpcChannel"
        },
        {
          "line": 635,
          "return_type": "void",
          "name": "openOwnChannel"
        },
        {
          "line": 636,
          "return_type": "void",
          "name": "inviteToOwnChannel"
        },
        {
          "line": 637,
          "return_type": "void",
          "name": "excludeFromOwnChannel"
        },
        {
          "line": 640,
          "return_type": "void",
          "name": "partyInvite"
        },
        {
          "line": 641,
          "return_type": "void",
          "name": "partyJoin"
        },
        {
          "line": 642,
          "return_type": "void",
          "name": "partyRevokeInvitation"
        },
        {
          "line": 643,
          "return_type": "void",
          "name": "partyPassLeadership"
        },
        {
          "line": 644,
          "return_type": "void",
          "name": "partyLeave"
        },
        {
          "line": 645,
          "return_type": "void",
          "name": "partyShareExperience"
        },
        {
          "line": 648,
          "return_type": "void",
          "name": "requestOutfit"
        },
        {
          "line": 649,
          "return_type": "void",
          "name": "changeOutfit"
        },
        {
          "line": 651,
          "return_type": "void",
          "name": "sendTyping"
        },
        {
          "line": 654,
          "return_type": "void",
          "name": "addVip"
        },
        {
          "line": 655,
          "return_type": "void",
          "name": "removeVip"
        },
        {
          "line": 656,
          "return_type": "void",
          "name": "editVip"
        },
        {
          "line": 657,
          "return_type": "void",
          "name": "editVipGroups"
        },
        {
          "line": 659,
          "return_type": "void",
          "name": "setChaseMode"
        },
        {
          "line": 660,
          "return_type": "void",
          "name": "setFightMode"
        },
        {
          "line": 661,
          "return_type": "void",
          "name": "setSafeFight"
        },
        {
          "line": 662,
          "return_type": "void",
          "name": "setPVPMode"
        },
        {
          "line": 663,
          "return_type": "ChaseModes",
          "name": "getChaseMode"
        },
        {
          "line": 664,
          "return_type": "FightModes",
          "name": "getFightMode"
        },
        {
          "line": 665,
          "return_type": "bool",
          "name": "isSafeFight"
        },
        {
          "line": 666,
          "return_type": "PVPModes",
          "name": "getPVPMode"
        },
        {
          "line": 669,
          "return_type": "void",
          "name": "setUnjustifiedPoints"
        },
        {
          "line": 670,
          "return_type": "UnjustifiedPoints",
          "name": "getUnjustifiedPoints"
        },
        {
          "line": 671,
          "return_type": "void",
          "name": "setOpenPvpSituations"
        },
        {
          "line": 672,
          "return_type": "int",
          "name": "getOpenPvpSituations"
        },
        {
          "line": 675,
          "return_type": "void",
          "name": "inspectNpcTrade"
        },
        {
          "line": 676,
          "return_type": "void",
          "name": "buyItem"
        },
        {
          "line": 677,
          "return_type": "void",
          "name": "sellItem"
        },
        {
          "line": 678,
          "return_type": "void",
          "name": "closeNpcTrade"
        },
        {
          "line": 681,
          "return_type": "void",
          "name": "requestTrade"
        },
        {
          "line": 682,
          "return_type": "void",
          "name": "inspectTrade"
        },
        {
          "line": 683,
          "return_type": "void",
          "name": "acceptTrade"
        },
        {
          "line": 684,
          "return_type": "void",
          "name": "rejectTrade"
        },
        {
          "line": 687,
          "return_type": "void",
          "name": "editText"
        },
        {
          "line": 688,
          "return_type": "void",
          "name": "editList"
        },
        {
          "line": 691,
          "return_type": "void",
          "name": "openRuleViolation"
        },
        {
          "line": 692,
          "return_type": "void",
          "name": "closeRuleViolation"
        },
        {
          "line": 693,
          "return_type": "void",
          "name": "cancelRuleViolation"
        },
        {
          "line": 696,
          "return_type": "void",
          "name": "reportBug"
        },
        {
          "line": 697,
          "return_type": "void",
          "name": "reportRuleViolation"
        },
        {
          "line": 698,
          "return_type": "void",
          "name": "debugReport"
        },
        {
          "line": 701,
          "return_type": "void",
          "name": "requestQuestLog"
        },
        {
          "line": 702,
          "return_type": "void",
          "name": "requestQuestLine"
        },
        {
          "line": 705,
          "return_type": "void",
          "name": "equipItem"
        },
        {
          "line": 706,
          "return_type": "void",
          "name": "mount"
        },
        {
          "line": 709,
          "return_type": "void",
          "name": "requestItemInfo"
        },
        {
          "line": 712,
          "return_type": "void",
          "name": "answerModalDialog"
        },
        {
          "line": 715,
          "return_type": "void",
          "name": "browseField"
        },
        {
          "line": 716,
          "return_type": "void",
          "name": "seekInContainer"
        },
        {
          "line": 719,
          "return_type": "void",
          "name": "buyStoreOffer"
        },
        {
          "line": 720,
          "return_type": "void",
          "name": "requestTransactionHistory"
        },
        {
          "line": 721,
          "return_type": "void",
          "name": "requestStoreOffers"
        },
        {
          "line": 722,
          "return_type": "void",
          "name": "sendRequestStoreHome"
        },
        {
          "line": 723,
          "return_type": "void",
          "name": "sendRequestStorePremiumBoost"
        },
        {
          "line": 724,
          "return_type": "void",
          "name": "sendRequestUsefulThings"
        },
        {
          "line": 725,
          "return_type": "void",
          "name": "sendRequestStoreOfferById"
        },
        {
          "line": 726,
          "return_type": "void",
          "name": "sendRequestStoreSearch"
        },
        {
          "line": 727,
          "return_type": "void",
          "name": "openStore"
        },
        {
          "line": 728,
          "return_type": "void",
          "name": "transferCoins"
        },
        {
          "line": 729,
          "return_type": "void",
          "name": "openTransactionHistory"
        },
        {
          "line": 732,
          "return_type": "void",
          "name": "ping"
        },
        {
          "line": 733,
          "return_type": "void",
          "name": "setPingDelay"
        },
        {
          "line": 736,
          "return_type": "void",
          "name": "changeMapAwareRange"
        },
        {
          "line": 739,
          "return_type": "void",
          "name": "enableFeature"
        },
        {
          "line": 740,
          "return_type": "void",
          "name": "disableFeature"
        },
        {
          "line": 741,
          "return_type": "void",
          "name": "setFeature"
        },
        {
          "line": 742,
          "return_type": "bool",
          "name": "getFeature"
        },
        {
          "line": 744,
          "return_type": "void",
          "name": "setProtocolVersion"
        },
        {
          "line": 745,
          "return_type": "int",
          "name": "getProtocolVersion"
        },
        {
          "line": 747,
          "return_type": "bool",
          "name": "isUsingProtobuf"
        },
        {
          "line": 749,
          "return_type": "void",
          "name": "setClientVersion"
        },
        {
          "line": 750,
          "return_type": "int",
          "name": "getClientVersion"
        },
        {
          "line": 752,
          "return_type": "void",
          "name": "setCustomOs"
        },
        {
          "line": 753,
          "return_type": "OperatingSystem_t",
          "name": "getOs"
        },
        {
          "line": 755,
          "return_type": "bool",
          "name": "canPerformGameAction"
        },
        {
          "line": 757,
          "return_type": "bool",
          "name": "isOnline"
        },
        {
          "line": 758,
          "return_type": "bool",
          "name": "isLogging"
        },
        {
          "line": 759,
          "return_type": "bool",
          "name": "isDead"
        },
        {
          "line": 760,
          "return_type": "bool",
          "name": "isAttacking"
        },
        {
          "line": 761,
          "return_type": "bool",
          "name": "isFollowing"
        },
        {
          "line": 762,
          "return_type": "bool",
          "name": "isConnectionOk"
        },
        {
          "line": 763,
          "return_type": "auto",
          "name": "mapUpdatedAt"
        },
        {
          "line": 764,
          "return_type": "void",
          "name": "resetMapUpdatedAt"
        },
        {
          "line": 766,
          "return_type": "int",
          "name": "getPing"
        },
        {
          "line": 767,
          "return_type": "ContainerPtr",
          "name": "getContainer"
        },
        {
          "line": 770,
          "return_type": "CreaturePtr",
          "name": "getAttackingCreature"
        },
        {
          "line": 771,
          "return_type": "CreaturePtr",
          "name": "getFollowingCreature"
        },
        {
          "line": 772,
          "return_type": "void",
          "name": "setServerBeat"
        },
        {
          "line": 773,
          "return_type": "int",
          "name": "getServerBeat"
        },
        {
          "line": 774,
          "return_type": "void",
          "name": "setCanReportBugs"
        },
        {
          "line": 775,
          "return_type": "bool",
          "name": "canReportBugs"
        },
        {
          "line": 776,
          "return_type": "void",
          "name": "setExpertPvpMode"
        },
        {
          "line": 777,
          "return_type": "bool",
          "name": "getExpertPvpMode"
        },
        {
          "line": 778,
          "return_type": "LocalPlayerPtr",
          "name": "getLocalPlayer"
        },
        {
          "line": 779,
          "return_type": "ProtocolGamePtr",
          "name": "getProtocolGame"
        },
        {
          "line": 780,
          "return_type": "string",
          "name": "getCharacterName"
        },
        {
          "line": 781,
          "return_type": "string",
          "name": "getWorldName"
        },
        {
          "line": 783,
          "return_type": "bool",
          "name": "isGM"
        },
        {
          "line": 785,
          "return_type": "string",
          "name": "formatCreatureName"
        },
        {
          "line": 786,
          "return_type": "int",
          "name": "findEmptyContainerId"
        },
        {
          "line": 789,
          "return_type": "void",
          "name": "leaveMarket"
        },
        {
          "line": 790,
          "return_type": "void",
          "name": "browseMarket"
        },
        {
          "line": 791,
          "return_type": "void",
          "name": "createMarketOffer"
        },
        {
          "line": 792,
          "return_type": "void",
          "name": "cancelMarketOffer"
        },
        {
          "line": 793,
          "return_type": "void",
          "name": "acceptMarketOffer"
        },
        {
          "line": 796,
          "return_type": "void",
          "name": "preyAction"
        },
        {
          "line": 797,
          "return_type": "void",
          "name": "preyRequest"
        },
        {
          "line": 800,
          "return_type": "void",
          "name": "applyImbuement"
        },
        {
          "line": 801,
          "return_type": "void",
          "name": "clearImbuement"
        },
        {
          "line": 802,
          "return_type": "void",
          "name": "closeImbuingWindow"
        },
        {
          "line": 803,
          "return_type": "void",
          "name": "imbuementDurations"
        },
        {
          "line": 805,
          "return_type": "void",
          "name": "enableTileThingLuaCallback"
        },
        {
          "line": 806,
          "return_type": "bool",
          "name": "isTileThingLuaCallbackEnabled"
        },
        {
          "line": 808,
          "return_type": "void",
          "name": "stashWithdraw"
        },
        {
          "line": 811,
          "return_type": "void",
          "name": "requestHighscore"
        },
        {
          "line": 818,
          "return_type": "void",
          "name": "requestBless"
        },
        {
          "line": 821,
          "return_type": "void",
          "name": "sendQuickLoot"
        },
        {
          "line": 822,
          "return_type": "void",
          "name": "requestQuickLootBlackWhiteList"
        },
        {
          "line": 823,
          "return_type": "void",
          "name": "openContainerQuickLoot"
        },
        {
          "line": 825,
          "return_type": "void",
          "name": "sendGmTeleport"
        },
        {
          "line": 828,
          "return_type": "void",
          "name": "inspectionNormalObject"
        },
        {
          "line": 829,
          "return_type": "void",
          "name": "inspectionObject"
        },
        {
          "line": 830,
          "return_type": "void",
          "name": "requestBestiary"
        },
        {
          "line": 831,
          "return_type": "void",
          "name": "requestBestiaryOverview"
        },
        {
          "line": 832,
          "return_type": "void",
          "name": "requestBestiarySearch"
        },
        {
          "line": 833,
          "return_type": "void",
          "name": "requestSendBuyCharmRune"
        },
        {
          "line": 834,
          "return_type": "void",
          "name": "requestSendCharacterInfo"
        },
        {
          "line": 835,
          "return_type": "void",
          "name": "requestSendCyclopediaHouseAuction"
        },
        {
          "line": 836,
          "return_type": "void",
          "name": "requestBosstiaryInfo"
        },
        {
          "line": 837,
          "return_type": "void",
          "name": "requestBossSlootInfo"
        },
        {
          "line": 838,
          "return_type": "void",
          "name": "requestBossSlotAction"
        },
        {
          "line": 839,
          "return_type": "void",
          "name": "sendStatusTrackerBestiary"
        },
        {
          "line": 840,
          "return_type": "void",
          "name": "sendOpenRewardWall"
        },
        {
          "line": 841,
          "return_type": "void",
          "name": "requestOpenRewardHistory"
        },
        {
          "line": 842,
          "return_type": "void",
          "name": "requestGetRewardDaily"
        },
        {
          "line": 843,
          "return_type": "void",
          "name": "sendRequestTrackerQuestLog"
        },
        {
          "line": 845,
          "return_type": "void",
          "name": "updateMapLatency"
        },
        {
          "line": 852,
          "return_type": "auto",
          "name": "getWalkMaxSteps"
        },
        {
          "line": 853,
          "return_type": "void",
          "name": "setWalkMaxSteps"
        },
        {
          "line": 856,
          "return_type": "void",
          "name": "enableBotCall"
        },
        {
          "line": 857,
          "return_type": "void",
          "name": "disableBotCall"
        },
        {
          "line": 860,
          "return_type": "void",
          "name": "setAttackingCreature"
        },
        {
          "line": 861,
          "return_type": "void",
          "name": "setFollowingCreature"
        }
      ],
      "classes": [
        {
          "line": 454,
          "name": "Game"
        },
        {
          "line": 581,
          "name": "ProtocolGame"
        },
        {
          "line": 582,
          "name": "Map"
        }
      ],
      "includes": [
        "container.h",
        "creature.h",
        "declarations.h",
        "outfit.h",
        "protocolgame.h",
        "bitset",
        "framework/core/timer.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\gameconfig.cpp",
      "total_lines": 174,
      "code_lines": 137,
      "comment_lines": 21,
      "empty_lines": 16,
      "functions": [
        {
          "line": 43,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 73,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 75,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 77,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 79,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 81,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 83,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 85,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 87,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 96,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 98,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 100,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 109,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 111,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 113,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 115,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 124,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 126,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 135,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 137,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 139,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 141,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 143,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 159,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 161,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 163,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 165,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 167,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 169,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 171,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "gameconfig.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/fontmanager.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\gameconfig.h",
      "total_lines": 143,
      "code_lines": 91,
      "comment_lines": 28,
      "empty_lines": 24,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 37,
          "return_type": "uint8_t",
          "name": "getSpriteSize"
        },
        {
          "line": 38,
          "return_type": "uint16_t",
          "name": "getLastSupportedVersion"
        },
        {
          "line": 39,
          "return_type": "bool",
          "name": "drawTyping"
        },
        {
          "line": 40,
          "return_type": "string",
          "name": "getTypingIcon"
        },
        {
          "line": 42,
          "return_type": "Size",
          "name": "getMapViewPort"
        },
        {
          "line": 43,
          "return_type": "uint8_t",
          "name": "getMapMaxZ"
        },
        {
          "line": 44,
          "return_type": "uint8_t",
          "name": "getMapSeaFloor"
        },
        {
          "line": 45,
          "return_type": "uint8_t",
          "name": "getMapUndergroundFloorRange"
        },
        {
          "line": 46,
          "return_type": "uint8_t",
          "name": "getMapAwareUndergroundFloorRange"
        },
        {
          "line": 48,
          "return_type": "uint8_t",
          "name": "getTileMaxElevation"
        },
        {
          "line": 49,
          "return_type": "uint8_t",
          "name": "getTileMaxThings"
        },
        {
          "line": 50,
          "return_type": "uint8_t",
          "name": "getTileTransparentFloorViewRange"
        },
        {
          "line": 52,
          "return_type": "bool",
          "name": "isDrawingInformationByWidget"
        },
        {
          "line": 53,
          "return_type": "bool",
          "name": "isForcingNewWalkingFormula"
        },
        {
          "line": 54,
          "return_type": "bool",
          "name": "isAdjustCreatureInformationBasedCropSize"
        },
        {
          "line": 55,
          "return_type": "uint16_t",
          "name": "getShieldBlinkTicks"
        },
        {
          "line": 56,
          "return_type": "uint16_t",
          "name": "getVolatileSquareDuration"
        },
        {
          "line": 58,
          "return_type": "bool",
          "name": "isDrawingCoveredThings"
        },
        {
          "line": 59,
          "return_type": "uint16_t",
          "name": "getInvisibleTicksPerFrame"
        },
        {
          "line": 60,
          "return_type": "uint16_t",
          "name": "getItemTicksPerFrame"
        },
        {
          "line": 61,
          "return_type": "uint16_t",
          "name": "getEffectTicksPerFrame"
        },
        {
          "line": 62,
          "return_type": "uint16_t",
          "name": "getMissileTicksPerFrame"
        },
        {
          "line": 63,
          "return_type": "uint16_t",
          "name": "getAnimatedTextDuration"
        },
        {
          "line": 64,
          "return_type": "uint16_t",
          "name": "getStaticDurationPerCharacter"
        },
        {
          "line": 65,
          "return_type": "uint16_t",
          "name": "getMinStatictextDuration"
        },
        {
          "line": 67,
          "return_type": "double",
          "name": "getPlayerDiagonalWalkSpeed"
        },
        {
          "line": 68,
          "return_type": "double",
          "name": "getCreatureDiagonalWalkSpeed"
        },
        {
          "line": 70,
          "return_type": "BitmapFontPtr",
          "name": "getCreatureNameFont"
        },
        {
          "line": 71,
          "return_type": "BitmapFontPtr",
          "name": "getAnimatedTextFont"
        },
        {
          "line": 72,
          "return_type": "BitmapFontPtr",
          "name": "getStaticTextFont"
        },
        {
          "line": 73,
          "return_type": "BitmapFontPtr",
          "name": "getWidgetTextFont"
        },
        {
          "line": 75,
          "return_type": "string",
          "name": "getCreatureNameFontName"
        },
        {
          "line": 76,
          "return_type": "string",
          "name": "getAnimatedTextFontName"
        },
        {
          "line": 77,
          "return_type": "string",
          "name": "getStaticTextFontName"
        },
        {
          "line": 78,
          "return_type": "string",
          "name": "getWidgetTextFontName"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "loadFonts"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "loadGameNode"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "loadFontNode"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "loadMapNode"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "loadTileNode"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "loadCreatureNode"
        },
        {
          "line": 88,
          "return_type": "void",
          "name": "loadPlayerNode"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "loadRenderNode"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "GameConfig"
        },
        {
          "line": 140,
          "name": "FontManager"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/graphics/bitmapfont.h",
        "framework/otml/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\global.h",
      "total_lines": 29,
      "code_lines": 4,
      "comment_lines": 22,
      "empty_lines": 3,
      "functions": [],
      "classes": [],
      "includes": [
        "framework/global.h",
        "const.h",
        "position.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\houses.cpp",
      "total_lines": 204,
      "code_lines": 149,
      "comment_lines": 22,
      "empty_lines": 33,
      "functions": [
        {
          "line": 67,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 143,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 176,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "houses.h",
        "map.h",
        "framework/core/resourcemanager.h",
        "pugixml.hpp"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\houses.h",
      "total_lines": 111,
      "code_lines": 65,
      "comment_lines": 21,
      "empty_lines": 25,
      "functions": [
        {
          "line": 38,
          "return_type": "void",
          "name": "setTile"
        },
        {
          "line": 39,
          "return_type": "TilePtr",
          "name": "getTile"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 42,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 45,
          "return_type": "uint32_t",
          "name": "getId"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "setTownId"
        },
        {
          "line": 48,
          "return_type": "uint32_t",
          "name": "getTownId"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setSize"
        },
        {
          "line": 51,
          "return_type": "uint32_t",
          "name": "getSize"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "setRent"
        },
        {
          "line": 54,
          "return_type": "uint32_t",
          "name": "getRent"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "setEntry"
        },
        {
          "line": 57,
          "return_type": "Position",
          "name": "getEntry"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "addDoor"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "removeDoor"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "removeDoorById"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "save"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "addHouse"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "removeHouse"
        },
        {
          "line": 91,
          "return_type": "HousePtr",
          "name": "getHouse"
        },
        {
          "line": 92,
          "return_type": "HousePtr",
          "name": "getHouseByName"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 95,
          "return_type": "void",
          "name": "save"
        },
        {
          "line": 97,
          "return_type": "void",
          "name": "sort"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 99,
          "return_type": "HouseList",
          "name": "getHouseList"
        },
        {
          "line": 100,
          "return_type": "HouseList",
          "name": "filterHouses"
        },
        {
          "line": 106,
          "return_type": "iterator",
          "name": "findHouse"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "House"
        },
        {
          "line": 81,
          "name": "HouseManager"
        },
        {
          "line": 84,
          "name": "HouseManager"
        }
      ],
      "includes": [
        "declarations.h",
        "tile.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\item.cpp",
      "total_lines": 456,
      "code_lines": 365,
      "comment_lines": 31,
      "empty_lines": 60,
      "functions": [
        {
          "line": 58,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 98,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 153,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 156,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 159,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 162,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 169,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 174,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 177,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 263,
          "return_type": "return",
          "name": "getIdleAnimator"
        },
        {
          "line": 390,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "item.h",
        "container.h",
        "game.h",
        "spritemanager.h",
        "thing.h",
        "thingtypemanager.h",
        "tile.h",
        "framework/core/clock.h",
        "framework/core/filestream.h",
        "framework/graphics/shadermanager.h",
        "framework/core/binarytree.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\item.h",
      "total_lines": 184,
      "code_lines": 129,
      "comment_lines": 26,
      "empty_lines": 29,
      "functions": [
        {
          "line": 72,
          "return_type": "pragma",
          "name": "pack"
        },
        {
          "line": 76,
          "return_type": "ItemPtr",
          "name": "create"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "drawLight"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "setCountOrSubType"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "setCount"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "setSubType"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "setColor"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 88,
          "return_type": "void",
          "name": "setTooltip"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "setDurationTime"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "setCharges"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "setTier"
        },
        {
          "line": 93,
          "return_type": "int",
          "name": "getCountOrSubType"
        },
        {
          "line": 94,
          "return_type": "int",
          "name": "getSubType"
        },
        {
          "line": 95,
          "return_type": "int",
          "name": "getCount"
        },
        {
          "line": 96,
          "return_type": "string",
          "name": "getTooltip"
        },
        {
          "line": 97,
          "return_type": "uint32_t",
          "name": "getDurationTime"
        },
        {
          "line": 98,
          "return_type": "uint32_t",
          "name": "getCharges"
        },
        {
          "line": 99,
          "return_type": "uint8_t",
          "name": "getTier"
        },
        {
          "line": 101,
          "return_type": "bool",
          "name": "isValid"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "setAsync"
        },
        {
          "line": 105,
          "return_type": "ItemPtr",
          "name": "clone"
        },
        {
          "line": 106,
          "return_type": "ItemPtr",
          "name": "asItem"
        },
        {
          "line": 107,
          "return_type": "bool",
          "name": "isItem"
        },
        {
          "line": 109,
          "return_type": "void",
          "name": "updatePatterns"
        },
        {
          "line": 110,
          "return_type": "int",
          "name": "calculateAnimationPhase"
        },
        {
          "line": 111,
          "return_type": "int",
          "name": "getExactSize"
        },
        {
          "line": 115,
          "return_type": "void",
          "name": "onPositionChange"
        },
        {
          "line": 118,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 119,
          "return_type": "ItemPtr",
          "name": "createFromOtb"
        },
        {
          "line": 120,
          "return_type": "uint16_t",
          "name": "getServerId"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "setOtbId"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "unserializeItem"
        },
        {
          "line": 123,
          "return_type": "void",
          "name": "serializeItem"
        },
        {
          "line": 125,
          "return_type": "void",
          "name": "setDepotId"
        },
        {
          "line": 126,
          "return_type": "uint16_t",
          "name": "getDepotId"
        },
        {
          "line": 128,
          "return_type": "void",
          "name": "setDoorId"
        },
        {
          "line": 129,
          "return_type": "uint8_t",
          "name": "getDoorId"
        },
        {
          "line": 131,
          "return_type": "uint16_t",
          "name": "getUniqueId"
        },
        {
          "line": 132,
          "return_type": "uint16_t",
          "name": "getActionId"
        },
        {
          "line": 133,
          "return_type": "void",
          "name": "setActionId"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "setUniqueId"
        },
        {
          "line": 136,
          "return_type": "string",
          "name": "getText"
        },
        {
          "line": 137,
          "return_type": "string",
          "name": "getDescription"
        },
        {
          "line": 138,
          "return_type": "void",
          "name": "setDescription"
        },
        {
          "line": 139,
          "return_type": "void",
          "name": "setText"
        },
        {
          "line": 141,
          "return_type": "Position",
          "name": "getTeleportDestination"
        },
        {
          "line": 142,
          "return_type": "void",
          "name": "setTeleportDestination"
        },
        {
          "line": 144,
          "return_type": "bool",
          "name": "isHouseDoor"
        },
        {
          "line": 145,
          "return_type": "bool",
          "name": "isDepot"
        },
        {
          "line": 146,
          "return_type": "bool",
          "name": "isContainer"
        },
        {
          "line": 147,
          "return_type": "bool",
          "name": "isDoor"
        },
        {
          "line": 148,
          "return_type": "bool",
          "name": "isTeleport"
        },
        {
          "line": 150,
          "return_type": "ItemVector",
          "name": "getContainerItems"
        },
        {
          "line": 151,
          "return_type": "ItemPtr",
          "name": "getContainerItem"
        },
        {
          "line": 152,
          "return_type": "void",
          "name": "addContainerItemIndexed"
        },
        {
          "line": 153,
          "return_type": "void",
          "name": "addContainerItem"
        },
        {
          "line": 154,
          "return_type": "void",
          "name": "removeContainerItem"
        },
        {
          "line": 155,
          "return_type": "void",
          "name": "clearContainerItems"
        },
        {
          "line": 161,
          "return_type": "void",
          "name": "internalDraw"
        },
        {
          "line": 162,
          "return_type": "void",
          "name": "setConductor"
        },
        {
          "line": 184,
          "return_type": "pragma",
          "name": "pack"
        }
      ],
      "classes": [
        {
          "line": 73,
          "name": "Item"
        }
      ],
      "includes": [
        "thing.h",
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\itemtype.cpp",
      "total_lines": 93,
      "code_lines": 61,
      "comment_lines": 21,
      "empty_lines": 11,
      "functions": [
        {
          "line": 52,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 62,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "game.h",
        "thingtypemanager.h",
        "framework/core/binarytree.h",
        "framework/core/filestream.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\itemtype.h",
      "total_lines": 162,
      "code_lines": 127,
      "comment_lines": 21,
      "empty_lines": 14,
      "functions": [
        {
          "line": 132,
          "return_type": "void",
          "name": "unserialize"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "setServerId"
        },
        {
          "line": 135,
          "return_type": "uint16_t",
          "name": "getServerId"
        },
        {
          "line": 137,
          "return_type": "void",
          "name": "setClientId"
        },
        {
          "line": 138,
          "return_type": "uint16_t",
          "name": "getClientId"
        },
        {
          "line": 140,
          "return_type": "void",
          "name": "setCategory"
        },
        {
          "line": 141,
          "return_type": "ItemCategory",
          "name": "getCategory"
        },
        {
          "line": 143,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 144,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 146,
          "return_type": "void",
          "name": "setDesc"
        },
        {
          "line": 147,
          "return_type": "string",
          "name": "getDesc"
        },
        {
          "line": 149,
          "return_type": "bool",
          "name": "isNull"
        },
        {
          "line": 150,
          "return_type": "bool",
          "name": "isWritable"
        }
      ],
      "classes": [
        {
          "line": 129,
          "name": "ItemType"
        }
      ],
      "includes": [
        "framework/core/declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\lightview.cpp",
      "total_lines": 183,
      "code_lines": 126,
      "comment_lines": 21,
      "empty_lines": 36,
      "functions": [],
      "classes": [],
      "includes": [
        "lightview.h",
        "map.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\lightview.h",
      "total_lines": 87,
      "code_lines": 51,
      "comment_lines": 21,
      "empty_lines": 15,
      "functions": [
        {
          "line": 36,
          "return_type": "void",
          "name": "resize"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "addLightSource"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "resetShade"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setGlobalLight"
        },
        {
          "line": 48,
          "return_type": "bool",
          "name": "isDark"
        },
        {
          "line": 49,
          "return_type": "bool",
          "name": "isEnabled"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setEnabled"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "updateCoords"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "updatePixels"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "LightView"
        }
      ],
      "includes": [
        "declarations.h",
        "thingtype.h",
        "framework/graphics/declarations.h",
        "framework/graphics/framebuffer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\localplayer.cpp",
      "total_lines": 517,
      "code_lines": 368,
      "comment_lines": 30,
      "empty_lines": 119,
      "functions": [
        {
          "line": 48,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 236,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "localplayer.h",
        "game.h",
        "map.h",
        "tile.h",
        "framework/core/eventdispatcher.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\localplayer.h",
      "total_lines": 190,
      "code_lines": 134,
      "comment_lines": 23,
      "empty_lines": 33,
      "functions": [
        {
          "line": 31,
          "return_type": "void",
          "name": "unlockWalk"
        },
        {
          "line": 32,
          "return_type": "void",
          "name": "lockWalk"
        },
        {
          "line": 33,
          "return_type": "bool",
          "name": "isWalkLocked"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "stopAutoWalk"
        },
        {
          "line": 36,
          "return_type": "bool",
          "name": "autoWalk"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "canWalk"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setStates"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setSkill"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setBaseSkill"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setHealth"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setFreeCapacity"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setTotalCapacity"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setExperience"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setLevel"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "setMana"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "setMagicLevel"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setBaseMagicLevel"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setSoul"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setStamina"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setKnown"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "setPendingGame"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "setInventoryItem"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "setVocation"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "setPremium"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "setRegenerationTime"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "setOfflineTrainingTime"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "setSpells"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "setBlessings"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "setResourceBalance"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "takeScreenshot"
        },
        {
          "line": 64,
          "return_type": "uint32_t",
          "name": "getFreeCapacity"
        },
        {
          "line": 65,
          "return_type": "uint32_t",
          "name": "getTotalCapacity"
        },
        {
          "line": 67,
          "return_type": "uint8_t",
          "name": "getVocation"
        },
        {
          "line": 68,
          "return_type": "uint16_t",
          "name": "getMagicLevel"
        },
        {
          "line": 69,
          "return_type": "uint16_t",
          "name": "getMagicLevelPercent"
        },
        {
          "line": 70,
          "return_type": "uint16_t",
          "name": "getBaseMagicLevel"
        },
        {
          "line": 71,
          "return_type": "uint8_t",
          "name": "getSoul"
        },
        {
          "line": 72,
          "return_type": "uint8_t",
          "name": "getLevelPercent"
        },
        {
          "line": 74,
          "return_type": "uint16_t",
          "name": "getLevel"
        },
        {
          "line": 75,
          "return_type": "uint16_t",
          "name": "getSkillLevel"
        },
        {
          "line": 76,
          "return_type": "uint16_t",
          "name": "getSkillBaseLevel"
        },
        {
          "line": 77,
          "return_type": "uint16_t",
          "name": "getSkillLevelPercent"
        },
        {
          "line": 78,
          "return_type": "uint16_t",
          "name": "getStamina"
        },
        {
          "line": 79,
          "return_type": "uint16_t",
          "name": "getBlessings"
        },
        {
          "line": 80,
          "return_type": "uint16_t",
          "name": "getRegenerationTime"
        },
        {
          "line": 81,
          "return_type": "uint16_t",
          "name": "getOfflineTrainingTime"
        },
        {
          "line": 83,
          "return_type": "uint32_t",
          "name": "getStates"
        },
        {
          "line": 84,
          "return_type": "uint32_t",
          "name": "getMana"
        },
        {
          "line": 85,
          "return_type": "uint32_t",
          "name": "getMaxMana"
        },
        {
          "line": 86,
          "return_type": "uint32_t",
          "name": "getHealth"
        },
        {
          "line": 87,
          "return_type": "uint32_t",
          "name": "getMaxHealth"
        },
        {
          "line": 88,
          "return_type": "uint64_t",
          "name": "getExperience"
        },
        {
          "line": 91,
          "return_type": "ItemPtr",
          "name": "getInventoryItem"
        },
        {
          "line": 93,
          "return_type": "uint64_t",
          "name": "getResourceBalance"
        },
        {
          "line": 99,
          "return_type": "uint64_t",
          "name": "getTotalMoney"
        },
        {
          "line": 106,
          "return_type": "bool",
          "name": "hasSight"
        },
        {
          "line": 107,
          "return_type": "bool",
          "name": "isKnown"
        },
        {
          "line": 108,
          "return_type": "bool",
          "name": "isServerWalking"
        },
        {
          "line": 109,
          "return_type": "bool",
          "name": "isPreWalking"
        },
        {
          "line": 111,
          "return_type": "bool",
          "name": "isAutoWalking"
        },
        {
          "line": 112,
          "return_type": "bool",
          "name": "isPremium"
        },
        {
          "line": 113,
          "return_type": "bool",
          "name": "isPendingGame"
        },
        {
          "line": 114,
          "return_type": "bool",
          "name": "isParalyzed"
        },
        {
          "line": 116,
          "return_type": "LocalPlayerPtr",
          "name": "asLocalPlayer"
        },
        {
          "line": 117,
          "return_type": "bool",
          "name": "isLocalPlayer"
        },
        {
          "line": 119,
          "return_type": "void",
          "name": "onPositionChange"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "preWalk"
        },
        {
          "line": 123,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 124,
          "return_type": "void",
          "name": "resetPreWalk"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "onWalking"
        },
        {
          "line": 136,
          "return_type": "void",
          "name": "walk"
        },
        {
          "line": 137,
          "return_type": "void",
          "name": "terminateWalk"
        },
        {
          "line": 138,
          "return_type": "void",
          "name": "cancelWalk"
        },
        {
          "line": 139,
          "return_type": "void",
          "name": "cancelAjustInvalidPosEvent"
        },
        {
          "line": 141,
          "return_type": "bool",
          "name": "retryAutoWalk"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "LocalPlayer"
        },
        {
          "line": 189,
          "name": "Game"
        }
      ],
      "includes": [
        "player.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\luafunctions.cpp",
      "total_lines": 1103,
      "code_lines": 1015,
      "comment_lines": 22,
      "empty_lines": 66,
      "functions": [],
      "classes": [],
      "includes": [
        "animatedtext.h",
        "attachedeffect.h",
        "attachedeffectmanager.h",
        "client.h",
        "container.h",
        "creature.h",
        "effect.h",
        "game.h",
        "gameconfig.h",
        "item.h",
        "localplayer.h",
        "luavaluecasts_client.h",
        "map.h",
        "minimap.h",
        "missile.h",
        "outfit.h",
        "player.h",
        "protocolgame.h",
        "spriteappearances.h",
        "spritemanager.h",
        "statictext.h",
        "thingtypemanager.h",
        "tile.h",
        "towns.h",
        "uicreature.h",
        "uieffect.h",
        "uiitem.h",
        "uimissile.h",
        "attachableobject.h",
        "uigraph.h",
        "uimap.h",
        "uimapanchorlayout.h",
        "uiminimap.h",
        "uiprogressrect.h",
        "uisprite.h",
        "houses.h",
        "framework/luaengine/luainterface.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\luavaluecasts_client.cpp",
      "total_lines": 1285,
      "code_lines": 1146,
      "comment_lines": 22,
      "empty_lines": 117,
      "functions": [
        {
          "line": 26,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 66,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 109,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 125,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 140,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 161,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 189,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 208,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 229,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 240,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 253,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 274,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 310,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 336,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 358,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 369,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 380,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 421,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 456,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 502,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 543,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 546,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 549,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 560,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 591,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 615,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 618,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 621,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 652,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 667,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 724,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 737,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 752,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 815,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 836,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 857,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 870,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 928,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 947,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 960,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 979,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 988,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1038,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1049,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1090,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1101,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1110,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1119,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1128,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1149,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1164,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1177,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1190,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1204,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1215,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1228,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 1251,
          "return_type": "int",
          "name": "push_luavalue"
        }
      ],
      "classes": [],
      "includes": [
        "luavaluecasts_client.h",
        "framework/luaengine/luainterface.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\map.cpp",
      "total_lines": 1472,
      "code_lines": 1208,
      "comment_lines": 46,
      "empty_lines": 218,
      "functions": [
        {
          "line": 274,
          "return_type": "return",
          "name": "removeThing"
        },
        {
          "line": 304,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 322,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 445,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 698,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 717,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 801,
          "return_type": "bool",
          "name": "operator"
        },
        {
          "line": 839,
          "return_type": "new",
          "name": "SNode"
        },
        {
          "line": 919,
          "return_type": "new",
          "name": "SNode"
        },
        {
          "line": 996,
          "return_type": "bool",
          "name": "operator"
        },
        {
          "line": 1140,
          "return_type": "Position",
          "name": "start"
        },
        {
          "line": 1141,
          "return_type": "Position",
          "name": "destination"
        },
        {
          "line": 1219,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1262,
          "return_type": "bool",
          "name": "operator"
        },
        {
          "line": 1356,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1372,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1421,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1423,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1425,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1427,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1429,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1455,
          "return_type": "be",
          "name": "odd"
        }
      ],
      "classes": [],
      "includes": [
        "map.h",
        "game.h",
        "item.h",
        "localplayer.h",
        "mapview.h",
        "minimap.h",
        "missile.h",
        "statictext.h",
        "tile.h",
        "algorithm",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h",
        "framework/ui/uiwidget.h",
        "queue",
        "houses.h",
        "towns.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\map.h",
      "total_lines": 353,
      "code_lines": 256,
      "comment_lines": 27,
      "empty_lines": 70,
      "functions": [
        {
          "line": 119,
          "return_type": "void",
          "name": "remove"
        },
        {
          "line": 121,
          "return_type": "uint32_t",
          "name": "getTileIndex"
        },
        {
          "line": 153,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 154,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 156,
          "return_type": "void",
          "name": "addMapView"
        },
        {
          "line": 157,
          "return_type": "void",
          "name": "removeMapView"
        },
        {
          "line": 158,
          "return_type": "MapViewPtr",
          "name": "getMapView"
        },
        {
          "line": 160,
          "return_type": "void",
          "name": "notificateTileUpdate"
        },
        {
          "line": 161,
          "return_type": "void",
          "name": "notificateCameraMove"
        },
        {
          "line": 162,
          "return_type": "void",
          "name": "notificateKeyRelease"
        },
        {
          "line": 165,
          "return_type": "bool",
          "name": "loadOtcm"
        },
        {
          "line": 166,
          "return_type": "void",
          "name": "saveOtcm"
        },
        {
          "line": 168,
          "return_type": "void",
          "name": "loadOtbm"
        },
        {
          "line": 169,
          "return_type": "void",
          "name": "saveOtbm"
        },
        {
          "line": 172,
          "return_type": "void",
          "name": "setHouseFile"
        },
        {
          "line": 173,
          "return_type": "void",
          "name": "setSpawnFile"
        },
        {
          "line": 174,
          "return_type": "void",
          "name": "setDescription"
        },
        {
          "line": 176,
          "return_type": "void",
          "name": "clearDescriptions"
        },
        {
          "line": 178,
          "return_type": "string",
          "name": "getHouseFile"
        },
        {
          "line": 179,
          "return_type": "string",
          "name": "getSpawnFile"
        },
        {
          "line": 182,
          "return_type": "void",
          "name": "setShowZone"
        },
        {
          "line": 183,
          "return_type": "void",
          "name": "setShowZones"
        },
        {
          "line": 184,
          "return_type": "void",
          "name": "setZoneColor"
        },
        {
          "line": 185,
          "return_type": "void",
          "name": "setZoneOpacity"
        },
        {
          "line": 187,
          "return_type": "float",
          "name": "getZoneOpacity"
        },
        {
          "line": 188,
          "return_type": "Color",
          "name": "getZoneColor"
        },
        {
          "line": 189,
          "return_type": "tileflags_t",
          "name": "getZoneFlags"
        },
        {
          "line": 190,
          "return_type": "bool",
          "name": "showZones"
        },
        {
          "line": 191,
          "return_type": "bool",
          "name": "showZone"
        },
        {
          "line": 193,
          "return_type": "void",
          "name": "setForceShowAnimations"
        },
        {
          "line": 194,
          "return_type": "bool",
          "name": "isShowingAnimations"
        },
        {
          "line": 195,
          "return_type": "bool",
          "name": "isForcingAnimations"
        },
        {
          "line": 197,
          "return_type": "void",
          "name": "setShowAnimations"
        },
        {
          "line": 200,
          "return_type": "void",
          "name": "setWidth"
        },
        {
          "line": 201,
          "return_type": "void",
          "name": "setHeight"
        },
        {
          "line": 202,
          "return_type": "Size",
          "name": "getSize"
        },
        {
          "line": 204,
          "return_type": "void",
          "name": "clean"
        },
        {
          "line": 205,
          "return_type": "void",
          "name": "cleanDynamicThings"
        },
        {
          "line": 206,
          "return_type": "void",
          "name": "cleanTexts"
        },
        {
          "line": 209,
          "return_type": "ThingPtr",
          "name": "getThing"
        },
        {
          "line": 210,
          "return_type": "void",
          "name": "addThing"
        },
        {
          "line": 211,
          "return_type": "bool",
          "name": "removeThing"
        },
        {
          "line": 212,
          "return_type": "bool",
          "name": "removeThingByPos"
        },
        {
          "line": 214,
          "return_type": "void",
          "name": "addStaticText"
        },
        {
          "line": 215,
          "return_type": "bool",
          "name": "removeStaticText"
        },
        {
          "line": 217,
          "return_type": "void",
          "name": "addAnimatedText"
        },
        {
          "line": 218,
          "return_type": "bool",
          "name": "removeAnimatedText"
        },
        {
          "line": 220,
          "return_type": "bool",
          "name": "isWidgetAttached"
        },
        {
          "line": 221,
          "return_type": "void",
          "name": "addAttachedWidgetToObject"
        },
        {
          "line": 222,
          "return_type": "bool",
          "name": "removeAttachedWidgetFromObject"
        },
        {
          "line": 223,
          "return_type": "void",
          "name": "updateAttachedWidgets"
        },
        {
          "line": 225,
          "return_type": "void",
          "name": "colorizeThing"
        },
        {
          "line": 226,
          "return_type": "void",
          "name": "removeThingColor"
        },
        {
          "line": 228,
          "return_type": "StaticTextPtr",
          "name": "getStaticText"
        },
        {
          "line": 236,
          "return_type": "TileList",
          "name": "getTiles"
        },
        {
          "line": 237,
          "return_type": "void",
          "name": "cleanTile"
        },
        {
          "line": 239,
          "return_type": "void",
          "name": "beginGhostMode"
        },
        {
          "line": 240,
          "return_type": "void",
          "name": "endGhostMode"
        },
        {
          "line": 244,
          "return_type": "CreaturePtr",
          "name": "getCreatureById"
        },
        {
          "line": 245,
          "return_type": "void",
          "name": "addCreature"
        },
        {
          "line": 246,
          "return_type": "void",
          "name": "removeCreatureById"
        },
        {
          "line": 250,
          "return_type": "return",
          "name": "getSpectatorsInRangeEx"
        },
        {
          "line": 255,
          "return_type": "return",
          "name": "getSpectatorsInRangeEx"
        },
        {
          "line": 260,
          "return_type": "return",
          "name": "getSpectatorsInRangeEx"
        },
        {
          "line": 265,
          "return_type": "void",
          "name": "setLight"
        },
        {
          "line": 267,
          "return_type": "void",
          "name": "setCentralPosition"
        },
        {
          "line": 269,
          "return_type": "bool",
          "name": "isLookPossible"
        },
        {
          "line": 270,
          "return_type": "bool",
          "name": "isCovered"
        },
        {
          "line": 271,
          "return_type": "bool",
          "name": "isCompletelyCovered"
        },
        {
          "line": 272,
          "return_type": "bool",
          "name": "isAwareOfPosition"
        },
        {
          "line": 273,
          "return_type": "bool",
          "name": "isAwareOfPosition"
        },
        {
          "line": 275,
          "return_type": "void",
          "name": "resetLastCamera"
        },
        {
          "line": 277,
          "return_type": "void",
          "name": "setAwareRange"
        },
        {
          "line": 278,
          "return_type": "void",
          "name": "resetAwareRange"
        },
        {
          "line": 279,
          "return_type": "AwareRange",
          "name": "getAwareRange"
        },
        {
          "line": 281,
          "return_type": "Light",
          "name": "getLight"
        },
        {
          "line": 282,
          "return_type": "Position",
          "name": "getCentralPosition"
        },
        {
          "line": 283,
          "return_type": "uint8_t",
          "name": "getFirstAwareFloor"
        },
        {
          "line": 284,
          "return_type": "uint8_t",
          "name": "getLastAwareFloor"
        },
        {
          "line": 292,
          "return_type": "PathFindResult_ptr",
          "name": "newFindPath"
        },
        {
          "line": 296,
          "return_type": "void",
          "name": "setFloatingEffect"
        },
        {
          "line": 297,
          "return_type": "bool",
          "name": "isDrawingFloatingEffects"
        },
        {
          "line": 302,
          "return_type": "int",
          "name": "getMinimapColor"
        },
        {
          "line": 303,
          "return_type": "bool",
          "name": "isSightClear"
        },
        {
          "line": 314,
          "return_type": "void",
          "name": "removeUnawareThings"
        },
        {
          "line": 316,
          "return_type": "uint16_t",
          "name": "getBlockIndex"
        }
      ],
      "classes": [
        {
          "line": 100,
          "name": "TileBlock"
        },
        {
          "line": 150,
          "name": "Map"
        }
      ],
      "includes": [
        "animatedtext.h",
        "tile.h",
        "creatures.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\mapio.cpp",
      "total_lines": 551,
      "code_lines": 413,
      "comment_lines": 35,
      "empty_lines": 103,
      "functions": [
        {
          "line": 43,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 47,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 53,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 56,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 60,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 64,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 71,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 82,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 98,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 113,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 137,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 139,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 156,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 163,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 171,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 193,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 197,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 211,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 214,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 227,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 241,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 409,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 414,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 434,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "game.h",
        "map.h",
        "tile.h",
        "framework/core/application.h",
        "framework/core/binarytree.h",
        "framework/core/eventdispatcher.h",
        "framework/core/filestream.h",
        "framework/core/resourcemanager.h",
        "framework/ui/uiwidget.h",
        "houses.h",
        "towns.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\mapview.cpp",
      "total_lines": 974,
      "code_lines": 735,
      "comment_lines": 44,
      "empty_lines": 195,
      "functions": [
        {
          "line": 178,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 324,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 330,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 381,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 675,
          "return_type": "return",
          "name": "getPosition"
        },
        {
          "line": 738,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 748,
          "return_type": "return",
          "name": "Rect"
        },
        {
          "line": 934,
          "return_type": "return",
          "name": "isFollowingCreature"
        }
      ],
      "classes": [],
      "includes": [
        "mapview.h",
        "animatedtext.h",
        "client.h",
        "creature.h",
        "game.h",
        "lightview.h",
        "map.h",
        "missile.h",
        "statictext.h",
        "tile.h",
        "framework/graphics/texturemanager.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/graphics.h",
        "framework/graphics/shadermanager.h",
        "framework/platform/platformwindow.h",
        "framework/core/asyncdispatcher.h",
        "algorithm"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\mapview.h",
      "total_lines": 350,
      "code_lines": 244,
      "comment_lines": 26,
      "empty_lines": 80,
      "functions": [
        {
          "line": 37,
          "return_type": "uint8_t",
          "name": "horizontal"
        },
        {
          "line": 38,
          "return_type": "uint8_t",
          "name": "vertical"
        },
        {
          "line": 40,
          "return_type": "Size",
          "name": "dimension"
        },
        {
          "line": 55,
          "return_type": "bool",
          "name": "isInRange"
        },
        {
          "line": 60,
          "return_type": "bool",
          "name": "isInRangeEx"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "drawForeground"
        },
        {
          "line": 95,
          "return_type": "void",
          "name": "drawCreatureInformation"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "preLoad"
        },
        {
          "line": 99,
          "return_type": "uint8_t",
          "name": "getLockedFirstVisibleFloor"
        },
        {
          "line": 100,
          "return_type": "uint8_t",
          "name": "getCachedFirstVisibleFloor"
        },
        {
          "line": 101,
          "return_type": "uint8_t",
          "name": "getCachedLastVisibleFloor"
        },
        {
          "line": 102,
          "return_type": "uint8_t",
          "name": "getTileSize"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "lockFirstVisibleFloor"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "unlockFirstVisibleFloor"
        },
        {
          "line": 108,
          "return_type": "Size",
          "name": "getVisibleDimension"
        },
        {
          "line": 109,
          "return_type": "void",
          "name": "setVisibleDimension"
        },
        {
          "line": 112,
          "return_type": "FloorViewMode",
          "name": "getFloorViewMode"
        },
        {
          "line": 113,
          "return_type": "void",
          "name": "setFloorViewMode"
        },
        {
          "line": 116,
          "return_type": "CreaturePtr",
          "name": "getFollowingCreature"
        },
        {
          "line": 117,
          "return_type": "void",
          "name": "followCreature"
        },
        {
          "line": 118,
          "return_type": "bool",
          "name": "isFollowingCreature"
        },
        {
          "line": 120,
          "return_type": "Position",
          "name": "getCameraPosition"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "setCameraPosition"
        },
        {
          "line": 123,
          "return_type": "void",
          "name": "setMinimumAmbientLight"
        },
        {
          "line": 124,
          "return_type": "float",
          "name": "getMinimumAmbientLight"
        },
        {
          "line": 126,
          "return_type": "void",
          "name": "setShadowFloorIntensity"
        },
        {
          "line": 127,
          "return_type": "float",
          "name": "getShadowFloorIntensity"
        },
        {
          "line": 129,
          "return_type": "void",
          "name": "setDrawNames"
        },
        {
          "line": 130,
          "return_type": "bool",
          "name": "isDrawingNames"
        },
        {
          "line": 132,
          "return_type": "void",
          "name": "setDrawHealthBars"
        },
        {
          "line": 133,
          "return_type": "bool",
          "name": "isDrawingHealthBars"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "setDrawLights"
        },
        {
          "line": 136,
          "return_type": "bool",
          "name": "isDrawingLights"
        },
        {
          "line": 138,
          "return_type": "void",
          "name": "setLimitVisibleDimension"
        },
        {
          "line": 139,
          "return_type": "bool",
          "name": "isLimitedVisibleDimension"
        },
        {
          "line": 141,
          "return_type": "void",
          "name": "setDrawManaBar"
        },
        {
          "line": 142,
          "return_type": "bool",
          "name": "isDrawingManaBar"
        },
        {
          "line": 144,
          "return_type": "void",
          "name": "move"
        },
        {
          "line": 146,
          "return_type": "void",
          "name": "setShader"
        },
        {
          "line": 147,
          "return_type": "PainterShaderProgramPtr",
          "name": "getShader"
        },
        {
          "line": 149,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 151,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 153,
          "return_type": "MapViewPtr",
          "name": "asMapView"
        },
        {
          "line": 155,
          "return_type": "void",
          "name": "resetLastCamera"
        },
        {
          "line": 160,
          "return_type": "bool",
          "name": "isInRange"
        },
        {
          "line": 162,
          "return_type": "return",
          "name": "getCameraPosition"
        },
        {
          "line": 165,
          "return_type": "bool",
          "name": "isInRangeEx"
        },
        {
          "line": 167,
          "return_type": "return",
          "name": "getCameraPosition"
        },
        {
          "line": 170,
          "return_type": "TilePtr",
          "name": "getTopTile"
        },
        {
          "line": 172,
          "return_type": "void",
          "name": "setCrosshairTexture"
        },
        {
          "line": 173,
          "return_type": "void",
          "name": "setAntiAliasingMode"
        },
        {
          "line": 175,
          "return_type": "void",
          "name": "onMouseMove"
        },
        {
          "line": 176,
          "return_type": "void",
          "name": "onKeyRelease"
        },
        {
          "line": 178,
          "return_type": "void",
          "name": "setLastMousePosition"
        },
        {
          "line": 181,
          "return_type": "void",
          "name": "setDrawHighlightTarget"
        },
        {
          "line": 183,
          "return_type": "void",
          "name": "setFloorFading"
        },
        {
          "line": 185,
          "return_type": "PainterShaderProgramPtr",
          "name": "getNextShader"
        },
        {
          "line": 186,
          "return_type": "bool",
          "name": "isSwitchingShader"
        },
        {
          "line": 188,
          "return_type": "void",
          "name": "addForegroundTile"
        },
        {
          "line": 189,
          "return_type": "void",
          "name": "removeForegroundTile"
        },
        {
          "line": 192,
          "return_type": "void",
          "name": "onGlobalLightChange"
        },
        {
          "line": 193,
          "return_type": "void",
          "name": "onFloorChange"
        },
        {
          "line": 194,
          "return_type": "void",
          "name": "onTileUpdate"
        },
        {
          "line": 195,
          "return_type": "void",
          "name": "onMapCenterChange"
        },
        {
          "line": 196,
          "return_type": "void",
          "name": "onCameraMove"
        },
        {
          "line": 197,
          "return_type": "void",
          "name": "onFadeInFinished"
        },
        {
          "line": 214,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 230,
          "return_type": "void",
          "name": "updateHighlightTile"
        },
        {
          "line": 231,
          "return_type": "void",
          "name": "destroyHighlightTile"
        },
        {
          "line": 233,
          "return_type": "void",
          "name": "updateLight"
        },
        {
          "line": 234,
          "return_type": "void",
          "name": "updateViewportDirectionCache"
        },
        {
          "line": 235,
          "return_type": "void",
          "name": "updateGeometry"
        },
        {
          "line": 236,
          "return_type": "void",
          "name": "updateVisibleTiles"
        },
        {
          "line": 237,
          "return_type": "void",
          "name": "updateRect"
        },
        {
          "line": 238,
          "return_type": "void",
          "name": "updateViewport"
        },
        {
          "line": 239,
          "return_type": "void",
          "name": "requestUpdateVisibleTiles"
        },
        {
          "line": 240,
          "return_type": "void",
          "name": "requestUpdateMapPosInfo"
        },
        {
          "line": 242,
          "return_type": "void",
          "name": "registerEvents"
        },
        {
          "line": 244,
          "return_type": "uint8_t",
          "name": "calcFirstVisibleFloor"
        },
        {
          "line": 245,
          "return_type": "uint8_t",
          "name": "calcLastVisibleFloor"
        },
        {
          "line": 247,
          "return_type": "void",
          "name": "drawFloor"
        },
        {
          "line": 248,
          "return_type": "void",
          "name": "drawLights"
        },
        {
          "line": 250,
          "return_type": "bool",
          "name": "canFloorFade"
        },
        {
          "line": 252,
          "return_type": "float",
          "name": "getFadeLevel"
        },
        {
          "line": 262,
          "return_type": "Rect",
          "name": "calcFramebufferSource"
        },
        {
          "line": 264,
          "return_type": "Point",
          "name": "transformPositionTo2D"
        },
        {
          "line": 265,
          "return_type": "return",
          "name": "transformPositionTo2D"
        },
        {
          "line": 268,
          "return_type": "Point",
          "name": "transformPositionTo2D"
        }
      ],
      "classes": [
        {
          "line": 69,
          "name": "MapView"
        },
        {
          "line": 73,
          "name": "MapView"
        },
        {
          "line": 199,
          "name": "Map"
        },
        {
          "line": 200,
          "name": "UIMap"
        },
        {
          "line": 201,
          "name": "Tile"
        },
        {
          "line": 202,
          "name": "LightView"
        },
        {
          "line": 205,
          "name": "FadeType"
        }
      ],
      "includes": [
        "lightview.h",
        "framework/core/inputevent.h",
        "framework/graphics/declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\minimap.cpp",
      "total_lines": 434,
      "code_lines": 325,
      "comment_lines": 30,
      "empty_lines": 79,
      "functions": [
        {
          "line": 89,
          "return_type": "scoped_lock",
          "name": "lock"
        },
        {
          "line": 128,
          "return_type": "Rect",
          "name": "src"
        },
        {
          "line": 129,
          "return_type": "Rect",
          "name": "dest"
        },
        {
          "line": 168,
          "return_type": "Rect",
          "name": "tileRect"
        },
        {
          "line": 178,
          "return_type": "Rect",
          "name": "mapRect"
        },
        {
          "line": 218,
          "return_type": "scoped_lock",
          "name": "lock"
        },
        {
          "line": 288,
          "return_type": "Position",
          "name": "pos"
        },
        {
          "line": 316,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 322,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 335,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "minimap.h",
        "tile.h",
        "framework/core/filestream.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/image.h",
        "framework/graphics/texture.h",
        "zlib.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\minimap.h",
      "total_lines": 135,
      "code_lines": 96,
      "comment_lines": 21,
      "empty_lines": 18,
      "functions": [
        {
          "line": 41,
          "return_type": "pragma",
          "name": "pack"
        },
        {
          "line": 47,
          "return_type": "bool",
          "name": "hasFlag"
        },
        {
          "line": 48,
          "return_type": "int",
          "name": "getSpeed"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "clean"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "updateTile"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "resetTile"
        },
        {
          "line": 61,
          "return_type": "uint32_t",
          "name": "getTileIndex"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "mustUpdate"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "justSaw"
        },
        {
          "line": 66,
          "return_type": "bool",
          "name": "wasSeen"
        },
        {
          "line": 79,
          "return_type": "pragma",
          "name": "pack"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "clean"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 92,
          "return_type": "Point",
          "name": "getTilePoint"
        },
        {
          "line": 93,
          "return_type": "Position",
          "name": "getTilePosition"
        },
        {
          "line": 94,
          "return_type": "Rect",
          "name": "getTileRect"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "updateTile"
        },
        {
          "line": 100,
          "return_type": "bool",
          "name": "loadImage"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "saveImage"
        },
        {
          "line": 102,
          "return_type": "bool",
          "name": "loadOtmm"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "saveOtmm"
        },
        {
          "line": 106,
          "return_type": "Rect",
          "name": "calcMapRect"
        },
        {
          "line": 107,
          "return_type": "bool",
          "name": "hasBlock"
        },
        {
          "line": 110,
          "return_type": "scoped_lock",
          "name": "lock"
        },
        {
          "line": 116,
          "return_type": "Point",
          "name": "getBlockOffset"
        },
        {
          "line": 123,
          "return_type": "Position",
          "name": "getIndexPosition"
        },
        {
          "line": 130,
          "return_type": "uint32_t",
          "name": "getBlockIndex"
        }
      ],
      "classes": [
        {
          "line": 53,
          "name": "MinimapBlock"
        },
        {
          "line": 83,
          "name": "Minimap"
        }
      ],
      "includes": [
        "declarations.h",
        "gameconfig.h",
        "framework/graphics/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\missile.cpp",
      "total_lines": 115,
      "code_lines": 77,
      "comment_lines": 22,
      "empty_lines": 16,
      "functions": [
        {
          "line": 78,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 81,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 84,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 87,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 90,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 93,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 96,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "missile.h",
        "map.h",
        "thingtypemanager.h",
        "tile.h",
        "client/client.h",
        "framework/core/eventdispatcher.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\missile.h",
      "total_lines": 57,
      "code_lines": 23,
      "comment_lines": 22,
      "empty_lines": 12,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "setPath"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "isMissile"
        },
        {
          "line": 40,
          "return_type": "MissilePtr",
          "name": "asMissile"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setDirection"
        },
        {
          "line": 43,
          "return_type": "auto",
          "name": "getDirection"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "Missile"
        }
      ],
      "includes": [
        "thing.h",
        "framework/core/timer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\outfit.h",
      "total_lines": 131,
      "code_lines": 91,
      "comment_lines": 21,
      "empty_lines": 19,
      "functions": [
        {
          "line": 37,
          "return_type": "Color",
          "name": "getColor"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setAuxId"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setMount"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setFamiliar"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setWing"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setAura"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setEffect"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setShader"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "setHead"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setBody"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setLegs"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setFeet"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setAddons"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "setTemp"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "setCategory"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "resetClothes"
        },
        {
          "line": 59,
          "return_type": "uint16_t",
          "name": "getId"
        },
        {
          "line": 60,
          "return_type": "uint16_t",
          "name": "getAuxId"
        },
        {
          "line": 61,
          "return_type": "uint16_t",
          "name": "getMount"
        },
        {
          "line": 62,
          "return_type": "uint16_t",
          "name": "getFamiliar"
        },
        {
          "line": 63,
          "return_type": "uint16_t",
          "name": "getWing"
        },
        {
          "line": 64,
          "return_type": "uint16_t",
          "name": "getAura"
        },
        {
          "line": 65,
          "return_type": "uint16_t",
          "name": "getEffect"
        },
        {
          "line": 66,
          "return_type": "string",
          "name": "getShader"
        },
        {
          "line": 68,
          "return_type": "uint8_t",
          "name": "getHead"
        },
        {
          "line": 69,
          "return_type": "uint8_t",
          "name": "getBody"
        },
        {
          "line": 70,
          "return_type": "uint8_t",
          "name": "getLegs"
        },
        {
          "line": 71,
          "return_type": "uint8_t",
          "name": "getFeet"
        },
        {
          "line": 72,
          "return_type": "uint8_t",
          "name": "getAddons"
        },
        {
          "line": 74,
          "return_type": "bool",
          "name": "hasMount"
        },
        {
          "line": 76,
          "return_type": "ThingCategory",
          "name": "getCategory"
        },
        {
          "line": 77,
          "return_type": "bool",
          "name": "isCreature"
        },
        {
          "line": 78,
          "return_type": "bool",
          "name": "isInvalid"
        },
        {
          "line": 79,
          "return_type": "bool",
          "name": "isEffect"
        },
        {
          "line": 80,
          "return_type": "bool",
          "name": "isItem"
        },
        {
          "line": 81,
          "return_type": "bool",
          "name": "isTemp"
        },
        {
          "line": 83,
          "return_type": "Color",
          "name": "getHeadColor"
        },
        {
          "line": 84,
          "return_type": "Color",
          "name": "getBodyColor"
        },
        {
          "line": 85,
          "return_type": "Color",
          "name": "getLegsColor"
        },
        {
          "line": 86,
          "return_type": "Color",
          "name": "getFeetColor"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "Outfit"
        }
      ],
      "includes": [
        "thingtype.h",
        "framework/util/color.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\position.h",
      "total_lines": 303,
      "code_lines": 230,
      "comment_lines": 26,
      "empty_lines": 47,
      "functions": [
        {
          "line": 45,
          "return_type": "Position",
          "name": "translatedToDirection"
        },
        {
          "line": 83,
          "return_type": "Position",
          "name": "translatedToReverseDirection"
        },
        {
          "line": 141,
          "return_type": "bool",
          "name": "isDiagonal"
        },
        {
          "line": 143,
          "return_type": "double",
          "name": "getAngleFromPositions"
        },
        {
          "line": 158,
          "return_type": "double",
          "name": "getAngleFromPosition"
        },
        {
          "line": 160,
          "return_type": "Direction",
          "name": "getDirectionFromPositions"
        },
        {
          "line": 191,
          "return_type": "Direction",
          "name": "getDirectionFromPosition"
        },
        {
          "line": 193,
          "return_type": "bool",
          "name": "isMapPosition"
        },
        {
          "line": 194,
          "return_type": "bool",
          "name": "isValid"
        },
        {
          "line": 195,
          "return_type": "double",
          "name": "distance"
        },
        {
          "line": 196,
          "return_type": "uint16_t",
          "name": "manhattanDistance"
        },
        {
          "line": 198,
          "return_type": "void",
          "name": "translate"
        },
        {
          "line": 199,
          "return_type": "Position",
          "name": "translated"
        },
        {
          "line": 230,
          "return_type": "bool",
          "name": "isInRange"
        },
        {
          "line": 241,
          "return_type": "bool",
          "name": "isInRange"
        },
        {
          "line": 255,
          "return_type": "bool",
          "name": "up"
        },
        {
          "line": 256,
          "return_type": "bool",
          "name": "down"
        },
        {
          "line": 257,
          "return_type": "bool",
          "name": "coveredUp"
        },
        {
          "line": 258,
          "return_type": "bool",
          "name": "coveredDown"
        },
        {
          "line": 260,
          "return_type": "string",
          "name": "toString"
        },
        {
          "line": 272,
          "return_type": "size_t",
          "name": "operator"
        },
        {
          "line": 300,
          "return_type": "auto",
          "name": "format"
        }
      ],
      "classes": [
        {
          "line": 38,
          "name": "Position"
        }
      ],
      "includes": [
        "const.h",
        "framework/const.h",
        "framework/util/point.h",
        "array",
        "istream",
        "math.h",
        "ostream",
        "string",
        "vector",
        "fmt/format.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\protocolcodes.h",
      "total_lines": 390,
      "code_lines": 342,
      "comment_lines": 31,
      "empty_lines": 17,
      "functions": [
        {
          "line": 387,
          "return_type": "void",
          "name": "buildMessageModesMap"
        },
        {
          "line": 388,
          "return_type": "MessageMode",
          "name": "translateMessageModeFromServer"
        },
        {
          "line": 389,
          "return_type": "uint8_t",
          "name": "translateMessageModeToServer"
        }
      ],
      "classes": [],
      "includes": [
        "global.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\protocolgame.cpp",
      "total_lines": 86,
      "code_lines": 52,
      "comment_lines": 21,
      "empty_lines": 13,
      "functions": [],
      "classes": [],
      "includes": [
        "protocolgame.h",
        "framework/net/inputmessage.h",
        "game.h",
        "framework/net/packet_player.h",
        "framework/net/packet_recorder.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\protocolgame.h",
      "total_lines": 393,
      "code_lines": 351,
      "comment_lines": 24,
      "empty_lines": 18,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "login"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "sendExtendedOpcode"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "sendLoginPacket"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "sendEnterGame"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "sendLogout"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "sendPing"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "sendPingBack"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "sendAutoWalk"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "sendWalkNorth"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "sendWalkEast"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "sendWalkSouth"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "sendWalkWest"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "sendStop"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "sendWalkNorthEast"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "sendWalkSouthEast"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "sendWalkSouthWest"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "sendWalkNorthWest"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "sendTurnNorth"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "sendTurnEast"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "sendTurnSouth"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "sendTurnWest"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "sendGmTeleport"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "sendEquipItemWithTier"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "sendEquipItemWithCountOrSubType"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "sendMove"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "sendInspectNpcTrade"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "sendBuyItem"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "sendSellItem"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "sendCloseNpcTrade"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "sendRequestTrade"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "sendInspectTrade"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "sendAcceptTrade"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "sendRejectTrade"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "sendUseItem"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "sendUseItemWith"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "sendUseOnCreature"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "sendRotateItem"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "sendOnWrapItem"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "sendCloseContainer"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "sendUpContainer"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "sendEditText"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "sendEditList"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "sendLook"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "sendLookCreature"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "sendTalk"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "sendRequestChannels"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "sendJoinChannel"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "sendLeaveChannel"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "sendOpenPrivateChannel"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "sendOpenRuleViolation"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "sendCloseRuleViolation"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "sendCancelRuleViolation"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "sendCloseNpcChannel"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "sendChangeFightModes"
        },
        {
          "line": 88,
          "return_type": "void",
          "name": "sendAttack"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "sendFollow"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "sendInviteToParty"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "sendJoinParty"
        },
        {
          "line": 92,
          "return_type": "void",
          "name": "sendRevokeInvitation"
        },
        {
          "line": 93,
          "return_type": "void",
          "name": "sendPassLeadership"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "sendLeaveParty"
        },
        {
          "line": 95,
          "return_type": "void",
          "name": "sendShareExperience"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "sendOpenOwnChannel"
        },
        {
          "line": 97,
          "return_type": "void",
          "name": "sendInviteToOwnChannel"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "sendExcludeFromOwnChannel"
        },
        {
          "line": 99,
          "return_type": "void",
          "name": "sendCancelAttackAndFollow"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "sendRefreshContainer"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "sendRequestBless"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "sendRequestTrackerQuestLog"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "sendRequestOutfit"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "sendTyping"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "sendChangeOutfit"
        },
        {
          "line": 106,
          "return_type": "void",
          "name": "sendMountStatus"
        },
        {
          "line": 107,
          "return_type": "void",
          "name": "sendAddVip"
        },
        {
          "line": 108,
          "return_type": "void",
          "name": "sendRemoveVip"
        },
        {
          "line": 109,
          "return_type": "void",
          "name": "sendEditVip"
        },
        {
          "line": 110,
          "return_type": "void",
          "name": "sendEditVipGroups"
        },
        {
          "line": 111,
          "return_type": "void",
          "name": "sendBugReport"
        },
        {
          "line": 112,
          "return_type": "void",
          "name": "sendRuleViolation"
        },
        {
          "line": 113,
          "return_type": "void",
          "name": "sendDebugReport"
        },
        {
          "line": 114,
          "return_type": "void",
          "name": "sendRequestQuestLog"
        },
        {
          "line": 115,
          "return_type": "void",
          "name": "sendRequestQuestLine"
        },
        {
          "line": 116,
          "return_type": "void",
          "name": "sendNewNewRuleViolation"
        },
        {
          "line": 117,
          "return_type": "void",
          "name": "sendRequestItemInfo"
        },
        {
          "line": 118,
          "return_type": "void",
          "name": "sendAnswerModalDialog"
        },
        {
          "line": 119,
          "return_type": "void",
          "name": "sendBrowseField"
        },
        {
          "line": 120,
          "return_type": "void",
          "name": "sendSeekInContainer"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "sendBuyStoreOffer"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "sendRequestTransactionHistory"
        },
        {
          "line": 123,
          "return_type": "void",
          "name": "sendRequestStoreOffers"
        },
        {
          "line": 124,
          "return_type": "void",
          "name": "sendRequestStoreHome"
        },
        {
          "line": 125,
          "return_type": "void",
          "name": "sendRequestStorePremiumBoost"
        },
        {
          "line": 126,
          "return_type": "void",
          "name": "sendRequestUsefulThings"
        },
        {
          "line": 127,
          "return_type": "void",
          "name": "sendRequestStoreOfferById"
        },
        {
          "line": 128,
          "return_type": "void",
          "name": "sendRequestStoreSearch"
        },
        {
          "line": 129,
          "return_type": "void",
          "name": "sendOpenStore"
        },
        {
          "line": 130,
          "return_type": "void",
          "name": "sendTransferCoins"
        },
        {
          "line": 131,
          "return_type": "void",
          "name": "sendOpenTransactionHistory"
        },
        {
          "line": 132,
          "return_type": "void",
          "name": "sendMarketLeave"
        },
        {
          "line": 133,
          "return_type": "void",
          "name": "sendMarketBrowse"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "sendMarketCreateOffer"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "sendMarketCancelOffer"
        },
        {
          "line": 136,
          "return_type": "void",
          "name": "sendMarketAcceptOffer"
        },
        {
          "line": 137,
          "return_type": "void",
          "name": "sendPreyAction"
        },
        {
          "line": 138,
          "return_type": "void",
          "name": "sendPreyRequest"
        },
        {
          "line": 139,
          "return_type": "void",
          "name": "sendApplyImbuement"
        },
        {
          "line": 140,
          "return_type": "void",
          "name": "sendClearImbuement"
        },
        {
          "line": 141,
          "return_type": "void",
          "name": "sendCloseImbuingWindow"
        },
        {
          "line": 142,
          "return_type": "void",
          "name": "sendOpenRewardWall"
        },
        {
          "line": 143,
          "return_type": "void",
          "name": "sendOpenRewardHistory"
        },
        {
          "line": 144,
          "return_type": "void",
          "name": "sendGetRewardDaily"
        },
        {
          "line": 145,
          "return_type": "void",
          "name": "sendStashWithdraw"
        },
        {
          "line": 146,
          "return_type": "void",
          "name": "sendHighscoreInfo"
        },
        {
          "line": 147,
          "return_type": "void",
          "name": "sendImbuementDurations"
        },
        {
          "line": 148,
          "return_type": "void",
          "name": "sendRequestBestiary"
        },
        {
          "line": 149,
          "return_type": "void",
          "name": "sendRequestBestiaryOverview"
        },
        {
          "line": 150,
          "return_type": "void",
          "name": "sendRequestBestiarySearch"
        },
        {
          "line": 151,
          "return_type": "void",
          "name": "sendBuyCharmRune"
        },
        {
          "line": 152,
          "return_type": "void",
          "name": "sendCyclopediaRequestCharacterInfo"
        },
        {
          "line": 153,
          "return_type": "void",
          "name": "sendCyclopediaHouseAuction"
        },
        {
          "line": 154,
          "return_type": "void",
          "name": "sendRequestBosstiaryInfo"
        },
        {
          "line": 155,
          "return_type": "void",
          "name": "sendRequestBossSlootInfo"
        },
        {
          "line": 156,
          "return_type": "void",
          "name": "sendRequestBossSlotAction"
        },
        {
          "line": 157,
          "return_type": "void",
          "name": "sendStatusTrackerBestiary"
        },
        {
          "line": 158,
          "return_type": "void",
          "name": "sendQuickLoot"
        },
        {
          "line": 159,
          "return_type": "void",
          "name": "requestQuickLootBlackWhiteList"
        },
        {
          "line": 160,
          "return_type": "void",
          "name": "openContainerQuickLoot"
        },
        {
          "line": 161,
          "return_type": "void",
          "name": "sendInspectionNormalObject"
        },
        {
          "line": 162,
          "return_type": "void",
          "name": "sendInspectionObject"
        },
        {
          "line": 165,
          "return_type": "void",
          "name": "sendChangeMapAwareRange"
        },
        {
          "line": 168,
          "return_type": "void",
          "name": "onConnect"
        },
        {
          "line": 169,
          "return_type": "void",
          "name": "onRecv"
        },
        {
          "line": 170,
          "return_type": "void",
          "name": "onError"
        },
        {
          "line": 171,
          "return_type": "void",
          "name": "onSend"
        },
        {
          "line": 176,
          "return_type": "void",
          "name": "addPosition"
        },
        {
          "line": 179,
          "return_type": "void",
          "name": "parseStoreButtonIndicators"
        },
        {
          "line": 180,
          "return_type": "void",
          "name": "parseSetStoreDeepLink"
        },
        {
          "line": 181,
          "return_type": "void",
          "name": "parseStore"
        },
        {
          "line": 182,
          "return_type": "void",
          "name": "parseStoreError"
        },
        {
          "line": 183,
          "return_type": "void",
          "name": "parseStoreTransactionHistory"
        },
        {
          "line": 184,
          "return_type": "void",
          "name": "parseStoreOffers"
        },
        {
          "line": 185,
          "return_type": "void",
          "name": "parseCompleteStorePurchase"
        },
        {
          "line": 186,
          "return_type": "void",
          "name": "parseRequestPurchaseData"
        },
        {
          "line": 187,
          "return_type": "void",
          "name": "parseResourceBalance"
        },
        {
          "line": 188,
          "return_type": "void",
          "name": "parseWorldTime"
        },
        {
          "line": 189,
          "return_type": "void",
          "name": "parseCoinBalance"
        },
        {
          "line": 190,
          "return_type": "void",
          "name": "parseCoinBalanceUpdating"
        },
        {
          "line": 191,
          "return_type": "void",
          "name": "parseBlessings"
        },
        {
          "line": 192,
          "return_type": "void",
          "name": "parseUnjustifiedStats"
        },
        {
          "line": 193,
          "return_type": "void",
          "name": "parsePvpSituations"
        },
        {
          "line": 194,
          "return_type": "void",
          "name": "parsePreset"
        },
        {
          "line": 195,
          "return_type": "void",
          "name": "parseCreatureType"
        },
        {
          "line": 196,
          "return_type": "void",
          "name": "parsePlayerHelpers"
        },
        {
          "line": 197,
          "return_type": "void",
          "name": "parseMessage"
        },
        {
          "line": 198,
          "return_type": "void",
          "name": "parseBugReport"
        },
        {
          "line": 199,
          "return_type": "void",
          "name": "parsePendingGame"
        },
        {
          "line": 200,
          "return_type": "void",
          "name": "parseEnterGame"
        },
        {
          "line": 201,
          "return_type": "void",
          "name": "parseLogin"
        },
        {
          "line": 202,
          "return_type": "void",
          "name": "parseGMActions"
        },
        {
          "line": 203,
          "return_type": "void",
          "name": "parseUpdateNeeded"
        },
        {
          "line": 204,
          "return_type": "void",
          "name": "parseLoginError"
        },
        {
          "line": 205,
          "return_type": "void",
          "name": "parseLoginAdvice"
        },
        {
          "line": 206,
          "return_type": "void",
          "name": "parseLoginWait"
        },
        {
          "line": 207,
          "return_type": "void",
          "name": "parseSessionEnd"
        },
        {
          "line": 208,
          "return_type": "void",
          "name": "parsePing"
        },
        {
          "line": 209,
          "return_type": "void",
          "name": "parsePingBack"
        },
        {
          "line": 210,
          "return_type": "void",
          "name": "parseChallenge"
        },
        {
          "line": 211,
          "return_type": "void",
          "name": "parseDeath"
        },
        {
          "line": 212,
          "return_type": "void",
          "name": "parseFloorDescription"
        },
        {
          "line": 213,
          "return_type": "void",
          "name": "parseMapDescription"
        },
        {
          "line": 214,
          "return_type": "void",
          "name": "parseCreatureTyping"
        },
        {
          "line": 215,
          "return_type": "void",
          "name": "parseFeatures"
        },
        {
          "line": 216,
          "return_type": "void",
          "name": "parseMapMoveNorth"
        },
        {
          "line": 217,
          "return_type": "void",
          "name": "parseMapMoveEast"
        },
        {
          "line": 218,
          "return_type": "void",
          "name": "parseMapMoveSouth"
        },
        {
          "line": 219,
          "return_type": "void",
          "name": "parseMapMoveWest"
        },
        {
          "line": 220,
          "return_type": "void",
          "name": "parseUpdateTile"
        },
        {
          "line": 221,
          "return_type": "void",
          "name": "parseTileAddThing"
        },
        {
          "line": 222,
          "return_type": "void",
          "name": "parseTileTransformThing"
        },
        {
          "line": 223,
          "return_type": "void",
          "name": "parseTileRemoveThing"
        },
        {
          "line": 224,
          "return_type": "void",
          "name": "parseCreatureMove"
        },
        {
          "line": 225,
          "return_type": "void",
          "name": "parseOpenContainer"
        },
        {
          "line": 226,
          "return_type": "void",
          "name": "parseCloseContainer"
        },
        {
          "line": 227,
          "return_type": "void",
          "name": "parseContainerAddItem"
        },
        {
          "line": 228,
          "return_type": "void",
          "name": "parseContainerUpdateItem"
        },
        {
          "line": 229,
          "return_type": "void",
          "name": "parseContainerRemoveItem"
        },
        {
          "line": 230,
          "return_type": "void",
          "name": "parseBosstiaryInfo"
        },
        {
          "line": 231,
          "return_type": "void",
          "name": "parseTakeScreenshot"
        },
        {
          "line": 232,
          "return_type": "void",
          "name": "parseCyclopediaItemDetail"
        },
        {
          "line": 233,
          "return_type": "void",
          "name": "parseAddInventoryItem"
        },
        {
          "line": 234,
          "return_type": "void",
          "name": "parseRemoveInventoryItem"
        },
        {
          "line": 235,
          "return_type": "void",
          "name": "parseOpenNpcTrade"
        },
        {
          "line": 236,
          "return_type": "void",
          "name": "parsePlayerGoods"
        },
        {
          "line": 237,
          "return_type": "void",
          "name": "parseCloseNpcTrade"
        },
        {
          "line": 238,
          "return_type": "void",
          "name": "parseWorldLight"
        },
        {
          "line": 239,
          "return_type": "void",
          "name": "parseMagicEffect"
        },
        {
          "line": 240,
          "return_type": "void",
          "name": "parseRemoveMagicEffect"
        },
        {
          "line": 241,
          "return_type": "void",
          "name": "parseAnimatedText"
        },
        {
          "line": 242,
          "return_type": "void",
          "name": "parseDistanceMissile"
        },
        {
          "line": 243,
          "return_type": "void",
          "name": "parseAnthem"
        },
        {
          "line": 244,
          "return_type": "void",
          "name": "parseItemClasses"
        },
        {
          "line": 245,
          "return_type": "void",
          "name": "parseCreatureMark"
        },
        {
          "line": 246,
          "return_type": "void",
          "name": "parseTrappers"
        },
        {
          "line": 247,
          "return_type": "void",
          "name": "addCreatureIcon"
        },
        {
          "line": 248,
          "return_type": "void",
          "name": "parseCloseForgeWindow"
        },
        {
          "line": 249,
          "return_type": "void",
          "name": "parseCreatureData"
        },
        {
          "line": 250,
          "return_type": "void",
          "name": "parseCreatureHealth"
        },
        {
          "line": 251,
          "return_type": "void",
          "name": "parseCreatureLight"
        },
        {
          "line": 252,
          "return_type": "void",
          "name": "parseCreatureOutfit"
        },
        {
          "line": 253,
          "return_type": "void",
          "name": "parseCreatureSpeed"
        },
        {
          "line": 254,
          "return_type": "void",
          "name": "parseCreatureSkulls"
        },
        {
          "line": 255,
          "return_type": "void",
          "name": "parseCreatureShields"
        },
        {
          "line": 256,
          "return_type": "void",
          "name": "parseCreatureUnpass"
        },
        {
          "line": 257,
          "return_type": "void",
          "name": "parseEditText"
        },
        {
          "line": 258,
          "return_type": "void",
          "name": "parseEditList"
        },
        {
          "line": 259,
          "return_type": "void",
          "name": "parsePremiumTrigger"
        },
        {
          "line": 260,
          "return_type": "void",
          "name": "parsePlayerInfo"
        },
        {
          "line": 261,
          "return_type": "void",
          "name": "parsePlayerStats"
        },
        {
          "line": 262,
          "return_type": "void",
          "name": "parsePlayerSkills"
        },
        {
          "line": 263,
          "return_type": "void",
          "name": "parsePlayerState"
        },
        {
          "line": 264,
          "return_type": "void",
          "name": "parsePlayerCancelAttack"
        },
        {
          "line": 265,
          "return_type": "void",
          "name": "parsePlayerModes"
        },
        {
          "line": 266,
          "return_type": "void",
          "name": "parseSpellCooldown"
        },
        {
          "line": 267,
          "return_type": "void",
          "name": "parseSpellGroupCooldown"
        },
        {
          "line": 268,
          "return_type": "void",
          "name": "parseMultiUseCooldown"
        },
        {
          "line": 269,
          "return_type": "void",
          "name": "parseTalk"
        },
        {
          "line": 270,
          "return_type": "void",
          "name": "parseChannelList"
        },
        {
          "line": 271,
          "return_type": "void",
          "name": "parseOpenChannel"
        },
        {
          "line": 272,
          "return_type": "void",
          "name": "parseOpenPrivateChannel"
        },
        {
          "line": 273,
          "return_type": "void",
          "name": "parseOpenOwnPrivateChannel"
        },
        {
          "line": 274,
          "return_type": "void",
          "name": "parseCloseChannel"
        },
        {
          "line": 275,
          "return_type": "void",
          "name": "parseRuleViolationChannel"
        },
        {
          "line": 276,
          "return_type": "void",
          "name": "parseRuleViolationRemove"
        },
        {
          "line": 277,
          "return_type": "void",
          "name": "parseRuleViolationCancel"
        },
        {
          "line": 278,
          "return_type": "void",
          "name": "parseRuleViolationLock"
        },
        {
          "line": 279,
          "return_type": "void",
          "name": "parseOwnTrade"
        },
        {
          "line": 280,
          "return_type": "void",
          "name": "parseCounterTrade"
        },
        {
          "line": 281,
          "return_type": "void",
          "name": "parseCloseTrade"
        },
        {
          "line": 282,
          "return_type": "void",
          "name": "parseTextMessage"
        },
        {
          "line": 283,
          "return_type": "void",
          "name": "parseCancelWalk"
        },
        {
          "line": 284,
          "return_type": "void",
          "name": "parseWalkWait"
        },
        {
          "line": 285,
          "return_type": "void",
          "name": "parseFloorChangeUp"
        },
        {
          "line": 286,
          "return_type": "void",
          "name": "parseFloorChangeDown"
        },
        {
          "line": 287,
          "return_type": "void",
          "name": "parseQuestTracker"
        },
        {
          "line": 288,
          "return_type": "void",
          "name": "parseKillTracker"
        },
        {
          "line": 289,
          "return_type": "void",
          "name": "parseOpenOutfitWindow"
        },
        {
          "line": 290,
          "return_type": "void",
          "name": "parseVipAdd"
        },
        {
          "line": 291,
          "return_type": "void",
          "name": "parseVipState"
        },
        {
          "line": 292,
          "return_type": "void",
          "name": "parseVipLogout"
        },
        {
          "line": 293,
          "return_type": "void",
          "name": "parseTutorialHint"
        },
        {
          "line": 294,
          "return_type": "void",
          "name": "parseAutomapFlag"
        },
        {
          "line": 295,
          "return_type": "void",
          "name": "parseQuestLog"
        },
        {
          "line": 296,
          "return_type": "void",
          "name": "parseQuestLine"
        },
        {
          "line": 297,
          "return_type": "void",
          "name": "parseChannelEvent"
        },
        {
          "line": 298,
          "return_type": "void",
          "name": "parseItemInfo"
        },
        {
          "line": 299,
          "return_type": "void",
          "name": "parsePlayerInventory"
        },
        {
          "line": 300,
          "return_type": "void",
          "name": "parseModalDialog"
        },
        {
          "line": 301,
          "return_type": "void",
          "name": "parseExtendedOpcode"
        },
        {
          "line": 302,
          "return_type": "void",
          "name": "parseChangeMapAwareRange"
        },
        {
          "line": 303,
          "return_type": "void",
          "name": "parseCreaturesMark"
        },
        {
          "line": 305,
          "return_type": "void",
          "name": "parseShowDescription"
        },
        {
          "line": 306,
          "return_type": "void",
          "name": "parseBestiaryTracker"
        },
        {
          "line": 307,
          "return_type": "void",
          "name": "parseTaskHuntingBasicData"
        },
        {
          "line": 308,
          "return_type": "void",
          "name": "parseTaskHuntingData"
        },
        {
          "line": 309,
          "return_type": "void",
          "name": "parseExperienceTracker"
        },
        {
          "line": 310,
          "return_type": "void",
          "name": "parseLootContainers"
        },
        {
          "line": 311,
          "return_type": "void",
          "name": "parseCyclopediaHouseAuctionMessage"
        },
        {
          "line": 312,
          "return_type": "void",
          "name": "parseCyclopediaHousesInfo"
        },
        {
          "line": 313,
          "return_type": "void",
          "name": "parseCyclopediaHouseList"
        },
        {
          "line": 315,
          "return_type": "void",
          "name": "parseSupplyStash"
        },
        {
          "line": 316,
          "return_type": "void",
          "name": "parseSpecialContainer"
        },
        {
          "line": 317,
          "return_type": "void",
          "name": "parsePartyAnalyzer"
        },
        {
          "line": 318,
          "return_type": "void",
          "name": "parseImbuementDurations"
        },
        {
          "line": 319,
          "return_type": "void",
          "name": "parsePassiveCooldown"
        },
        {
          "line": 320,
          "return_type": "void",
          "name": "parseClientCheck"
        },
        {
          "line": 321,
          "return_type": "void",
          "name": "parseGameNews"
        },
        {
          "line": 322,
          "return_type": "void",
          "name": "parseBlessDialog"
        },
        {
          "line": 323,
          "return_type": "void",
          "name": "parseRestingAreaState"
        },
        {
          "line": 324,
          "return_type": "void",
          "name": "parseUpdateImpactTracker"
        },
        {
          "line": 325,
          "return_type": "void",
          "name": "parseItemsPrice"
        },
        {
          "line": 326,
          "return_type": "void",
          "name": "parseUpdateSupplyTracker"
        },
        {
          "line": 327,
          "return_type": "void",
          "name": "parseUpdateLootTracker"
        },
        {
          "line": 328,
          "return_type": "void",
          "name": "parseBestiaryEntryChanged"
        },
        {
          "line": 329,
          "return_type": "void",
          "name": "parseCyclopediaCharacterInfo"
        },
        {
          "line": 330,
          "return_type": "void",
          "name": "parseDailyRewardCollectionState"
        },
        {
          "line": 331,
          "return_type": "void",
          "name": "parseOpenRewardWall"
        },
        {
          "line": 332,
          "return_type": "void",
          "name": "parseDailyReward"
        },
        {
          "line": 333,
          "return_type": "void",
          "name": "parseRewardHistory"
        },
        {
          "line": 334,
          "return_type": "void",
          "name": "parsePreyFreeRerolls"
        },
        {
          "line": 335,
          "return_type": "void",
          "name": "parsePreyTimeLeft"
        },
        {
          "line": 336,
          "return_type": "void",
          "name": "parsePreyData"
        },
        {
          "line": 337,
          "return_type": "void",
          "name": "parsePreyRerollPrice"
        },
        {
          "line": 338,
          "return_type": "void",
          "name": "parseImbuementWindow"
        },
        {
          "line": 339,
          "return_type": "void",
          "name": "parseCloseImbuementWindow"
        },
        {
          "line": 340,
          "return_type": "void",
          "name": "parseError"
        },
        {
          "line": 341,
          "return_type": "void",
          "name": "parseMarketEnter"
        },
        {
          "line": 342,
          "return_type": "void",
          "name": "parseMarketEnterOld"
        },
        {
          "line": 343,
          "return_type": "void",
          "name": "parseMarketDetail"
        },
        {
          "line": 344,
          "return_type": "void",
          "name": "parseMarketBrowse"
        },
        {
          "line": 347,
          "return_type": "void",
          "name": "parseBosstiaryData"
        },
        {
          "line": 348,
          "return_type": "void",
          "name": "parseBosstiarySlots"
        },
        {
          "line": 349,
          "return_type": "void",
          "name": "parseBosstiaryCooldownTimer"
        },
        {
          "line": 350,
          "return_type": "void",
          "name": "parseBosstiaryEntryChanged"
        },
        {
          "line": 351,
          "return_type": "void",
          "name": "parseBestiaryRaces"
        },
        {
          "line": 352,
          "return_type": "void",
          "name": "parseBestiaryOverview"
        },
        {
          "line": 353,
          "return_type": "void",
          "name": "parseBestiaryMonsterData"
        },
        {
          "line": 354,
          "return_type": "void",
          "name": "parseBestiaryCharmsData"
        },
        {
          "line": 356,
          "return_type": "void",
          "name": "parseHighscores"
        },
        {
          "line": 357,
          "return_type": "void",
          "name": "parseAttachedEffect"
        },
        {
          "line": 358,
          "return_type": "void",
          "name": "parseDetachEffect"
        },
        {
          "line": 359,
          "return_type": "void",
          "name": "parseCreatureShader"
        },
        {
          "line": 360,
          "return_type": "void",
          "name": "parseMapShader"
        },
        {
          "line": 362,
          "return_type": "MarketOffer",
          "name": "readMarketOffer"
        },
        {
          "line": 364,
          "return_type": "Imbuement",
          "name": "getImbuementInfo"
        },
        {
          "line": 365,
          "return_type": "PreyMonster",
          "name": "getPreyMonster"
        },
        {
          "line": 369,
          "return_type": "void",
          "name": "setMapDescription"
        },
        {
          "line": 370,
          "return_type": "int",
          "name": "setFloorDescription"
        },
        {
          "line": 371,
          "return_type": "int",
          "name": "setTileDescription"
        },
        {
          "line": 373,
          "return_type": "Outfit",
          "name": "getOutfit"
        },
        {
          "line": 374,
          "return_type": "ThingPtr",
          "name": "getThing"
        },
        {
          "line": 375,
          "return_type": "ThingPtr",
          "name": "getMappedThing"
        },
        {
          "line": 376,
          "return_type": "CreaturePtr",
          "name": "getCreature"
        },
        {
          "line": 377,
          "return_type": "ItemPtr",
          "name": "getItem"
        },
        {
          "line": 378,
          "return_type": "Position",
          "name": "getPosition"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "ProtocolGame"
        },
        {
          "line": 173,
          "name": "Game"
        }
      ],
      "includes": [
        "creature.h",
        "declarations.h",
        "protocolcodes.h",
        "framework/net/protocol.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\protocolgameparse.cpp",
      "total_lines": 5572,
      "code_lines": 4665,
      "comment_lines": 80,
      "empty_lines": 827,
      "functions": [
        {
          "line": 605,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 611,
          "return_type": "message",
          "name": "exception"
        },
        {
          "line": 621,
          "return_type": "ofstream",
          "name": "packet"
        },
        {
          "line": 627,
          "return_type": "message",
          "name": "exception"
        },
        {
          "line": 676,
          "return_type": "button",
          "name": "enabled"
        },
        {
          "line": 678,
          "return_type": "Tournament",
          "name": "button"
        },
        {
          "line": 979,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 981,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 983,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1053,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1055,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1057,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1063,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1200,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1553,
          "return_type": "creature",
          "name": "ID"
        },
        {
          "line": 2166,
          "return_type": "shield",
          "name": "active"
        },
        {
          "line": 2222,
          "return_type": "boost",
          "name": "time"
        },
        {
          "line": 2255,
          "return_type": "loyalty",
          "name": "bonus"
        },
        {
          "line": 2275,
          "return_type": "loyalty",
          "name": "bonus"
        },
        {
          "line": 2428,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 2581,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 2617,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 2643,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 2681,
          "return_type": "0x01",
          "name": "store"
        },
        {
          "line": 2714,
          "return_type": "0x01",
          "name": "store"
        },
        {
          "line": 2730,
          "return_type": "0x01",
          "name": "store"
        },
        {
          "line": 2739,
          "return_type": "outfit",
          "name": "mode"
        },
        {
          "line": 3186,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 3273,
          "return_type": "Position",
          "name": "tilePos"
        },
        {
          "line": 3387,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 3391,
          "return_type": "return",
          "name": "getCreature"
        },
        {
          "line": 3394,
          "return_type": "return",
          "name": "getItem"
        },
        {
          "line": 3456,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 3551,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 3639,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 3660,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 3675,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 3679,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 3761,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 4123,
          "return_type": "ImbuementTrackerItem",
          "name": "item"
        },
        {
          "line": 4131,
          "return_type": "ImbuementSlot",
          "name": "slot"
        },
        {
          "line": 4157,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 4229,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 4317,
          "return_type": "tournament",
          "name": "exp"
        },
        {
          "line": 4350,
          "return_type": "loyalty",
          "name": "bonus"
        },
        {
          "line": 4725,
          "return_type": "bonus",
          "name": "shrine"
        },
        {
          "line": 4753,
          "return_type": "DailyRewardDay",
          "name": "parseRewardDay"
        },
        {
          "line": 4769,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 4814,
          "return_type": "Reward",
          "name": "count"
        },
        {
          "line": 5065,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 5069,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 5275,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [
        {
          "line": 1829,
          "name": "id"
        }
      ],
      "includes": [
        "protocolgame.h",
        "effect.h",
        "framework/net/inputmessage.h",
        "attachedeffectmanager.h",
        "item.h",
        "localplayer.h",
        "luavaluecasts_client.h",
        "map.h",
        "missile.h",
        "thingtypemanager.h",
        "tile.h",
        "ctime",
        "framework/core/eventdispatcher.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\protocolgamesend.cpp",
      "total_lines": 1503,
      "code_lines": 1302,
      "comment_lines": 25,
      "empty_lines": 176,
      "functions": [
        {
          "line": 1359,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1497,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1499,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "framework/net/outputmessage.h",
        "game.h",
        "protocolgame.h",
        "framework/util/crypt.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\shadermanager.cpp",
      "total_lines": 150,
      "code_lines": 109,
      "comment_lines": 21,
      "empty_lines": 20,
      "functions": [],
      "classes": [],
      "includes": [
        "shadermanager.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/graphics.h",
        "framework/graphics/paintershaderprogram.h",
        "framework/graphics/shader/shadersources.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\spriteappearances.cpp",
      "total_lines": 261,
      "code_lines": 173,
      "comment_lines": 32,
      "empty_lines": 56,
      "functions": [
        {
          "line": 75,
          "return_type": "always",
          "name": "32"
        },
        {
          "line": 77,
          "return_type": "of",
          "name": "NULL"
        },
        {
          "line": 80,
          "return_type": "file",
          "name": "size"
        },
        {
          "line": 252,
          "return_type": "Image",
          "name": "image"
        },
        {
          "line": 259,
          "return_type": "Image",
          "name": "image"
        }
      ],
      "classes": [],
      "includes": [
        "spriteappearances.h",
        "game.h",
        "framework/core/filestream.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/image.h",
        "algorithm",
        "framework/core/asyncdispatcher.h",
        "nlohmann/json.hpp",
        "lzma.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\spriteappearances.h",
      "total_lines": 113,
      "code_lines": 69,
      "comment_lines": 23,
      "empty_lines": 21,
      "functions": [
        {
          "line": 55,
          "return_type": "Size",
          "name": "getSpriteSize"
        },
        {
          "line": 57,
          "return_type": "Size",
          "name": "size"
        },
        {
          "line": 71,
          "return_type": "int",
          "name": "getColumns"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "unload"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "setSpritesCount"
        },
        {
          "line": 92,
          "return_type": "int",
          "name": "getSpritesCount"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "setPath"
        },
        {
          "line": 95,
          "return_type": "string",
          "name": "getPath"
        },
        {
          "line": 97,
          "return_type": "bool",
          "name": "loadSpriteSheet"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "saveSheetToFileBySprite"
        },
        {
          "line": 99,
          "return_type": "void",
          "name": "saveSheetToFile"
        },
        {
          "line": 100,
          "return_type": "SpriteSheetPtr",
          "name": "getSheetBySpriteId"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "addSpriteSheet"
        },
        {
          "line": 104,
          "return_type": "ImagePtr",
          "name": "getSpriteImage"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "saveSpriteToFile"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "SpriteLayout"
        },
        {
          "line": 38,
          "name": "SpriteLoadState"
        },
        {
          "line": 45,
          "name": "SpriteSheet"
        },
        {
          "line": 83,
          "name": "SpriteAppearances"
        }
      ],
      "includes": [
        "gameconfig.h",
        "framework/core/declarations.h",
        "framework/graphics/declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\spritemanager.cpp",
      "total_lines": 336,
      "code_lines": 241,
      "comment_lines": 28,
      "empty_lines": 67,
      "functions": [
        {
          "line": 66,
          "return_type": "return",
          "name": "loadCwmSpr"
        },
        {
          "line": 71,
          "return_type": "return",
          "name": "loadRegularSpr"
        },
        {
          "line": 146,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 154,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 237,
          "return_type": "string",
          "name": "buffer"
        }
      ],
      "classes": [],
      "includes": [
        "spritemanager.h",
        "game.h",
        "gameconfig.h",
        "spriteappearances.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/filestream.h",
        "framework/core/graphicalapplication.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/image.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\spritemanager.h",
      "total_lines": 111,
      "code_lines": 71,
      "comment_lines": 22,
      "empty_lines": 18,
      "functions": [
        {
          "line": 41,
          "return_type": "uint32_t",
          "name": "getSpriteId"
        },
        {
          "line": 43,
          "return_type": "uint32_t",
          "name": "getOffset"
        },
        {
          "line": 44,
          "return_type": "uint32_t",
          "name": "getFileSize"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 59,
          "return_type": "bool",
          "name": "loadSpr"
        },
        {
          "line": 60,
          "return_type": "bool",
          "name": "loadRegularSpr"
        },
        {
          "line": 61,
          "return_type": "bool",
          "name": "loadCwmSpr"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "reload"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "unload"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "saveSpr"
        },
        {
          "line": 69,
          "return_type": "uint32_t",
          "name": "getSignature"
        },
        {
          "line": 70,
          "return_type": "int",
          "name": "getSpritesCount"
        },
        {
          "line": 72,
          "return_type": "ImagePtr",
          "name": "getSpriteImage"
        },
        {
          "line": 73,
          "return_type": "bool",
          "name": "isLoaded"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 92,
          "return_type": "FileStreamPtr",
          "name": "getSpriteFile"
        },
        {
          "line": 96,
          "return_type": "ImagePtr",
          "name": "getSpriteImageHd"
        },
        {
          "line": 97,
          "return_type": "ImagePtr",
          "name": "getSpriteImage"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "FileMetadata"
        },
        {
          "line": 53,
          "name": "SpriteManager"
        },
        {
          "line": 76,
          "name": "SpriteLoadState"
        }
      ],
      "includes": [
        "gameconfig.h",
        "framework/core/declarations.h",
        "framework/core/filestream.h",
        "framework/graphics/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\statictext.cpp",
      "total_lines": 152,
      "code_lines": 101,
      "comment_lines": 30,
      "empty_lines": 21,
      "functions": [
        {
          "line": 62,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 67,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 124,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 128,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 135,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "statictext.h",
        "framework/core/graphicalapplication.h",
        "map.h",
        "framework/core/clock.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/fontmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\statictext.h",
      "total_lines": 70,
      "code_lines": 35,
      "comment_lines": 22,
      "empty_lines": 13,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "drawText"
        },
        {
          "line": 36,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 37,
          "return_type": "string",
          "name": "getText"
        },
        {
          "line": 38,
          "return_type": "Size",
          "name": "getTextSize"
        },
        {
          "line": 39,
          "return_type": "bool",
          "name": "hasText"
        },
        {
          "line": 41,
          "return_type": "MessageMode",
          "name": "getMessageMode"
        },
        {
          "line": 42,
          "return_type": "string",
          "name": "getFirstMessage"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "isYell"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setText"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "setFont"
        },
        {
          "line": 48,
          "return_type": "bool",
          "name": "addMessage"
        },
        {
          "line": 50,
          "return_type": "StaticTextPtr",
          "name": "asStaticText"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setColor"
        },
        {
          "line": 53,
          "return_type": "Color",
          "name": "getColor"
        },
        {
          "line": 55,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "scheduleUpdate"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "compose"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "StaticText"
        }
      ],
      "includes": [
        "thing.h",
        "framework/graphics/cachedtext.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\thing.cpp",
      "total_lines": 102,
      "code_lines": 59,
      "comment_lines": 23,
      "empty_lines": 20,
      "functions": [],
      "classes": [],
      "includes": [
        "thing.h",
        "game.h",
        "map.h",
        "framework/graphics/shadermanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\thing.h",
      "total_lines": 275,
      "code_lines": 198,
      "comment_lines": 23,
      "empty_lines": 54,
      "functions": [
        {
          "line": 35,
          "return_type": "pragma",
          "name": "pack"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "drawLight"
        },
        {
          "line": 42,
          "return_type": "LuaObjectPtr",
          "name": "attachedObjectToLuaObject"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "isThing"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 48,
          "return_type": "uint32_t",
          "name": "getId"
        },
        {
          "line": 49,
          "return_type": "uint16_t",
          "name": "getClientId"
        },
        {
          "line": 51,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 52,
          "return_type": "Position",
          "name": "getServerPosition"
        },
        {
          "line": 55,
          "return_type": "ContainerPtr",
          "name": "getParentContainer"
        },
        {
          "line": 57,
          "return_type": "int",
          "name": "getStackPos"
        },
        {
          "line": 58,
          "return_type": "int",
          "name": "getStackPriority"
        },
        {
          "line": 60,
          "return_type": "bool",
          "name": "isItem"
        },
        {
          "line": 61,
          "return_type": "bool",
          "name": "isEffect"
        },
        {
          "line": 62,
          "return_type": "bool",
          "name": "isMissile"
        },
        {
          "line": 63,
          "return_type": "bool",
          "name": "isCreature"
        },
        {
          "line": 65,
          "return_type": "bool",
          "name": "isNpc"
        },
        {
          "line": 66,
          "return_type": "bool",
          "name": "isMonster"
        },
        {
          "line": 67,
          "return_type": "bool",
          "name": "isPlayer"
        },
        {
          "line": 68,
          "return_type": "bool",
          "name": "isLocalPlayer"
        },
        {
          "line": 70,
          "return_type": "return",
          "name": "getThingType"
        },
        {
          "line": 71,
          "return_type": "return",
          "name": "getThingType"
        },
        {
          "line": 73,
          "return_type": "Point",
          "name": "getDisplacement"
        },
        {
          "line": 74,
          "return_type": "int",
          "name": "getDisplacementX"
        },
        {
          "line": 75,
          "return_type": "int",
          "name": "getDisplacementY"
        },
        {
          "line": 76,
          "return_type": "int",
          "name": "getExactSize"
        },
        {
          "line": 78,
          "return_type": "return",
          "name": "getThingType"
        },
        {
          "line": 79,
          "return_type": "bool",
          "name": "hasLight"
        },
        {
          "line": 81,
          "return_type": "return",
          "name": "getThingType"
        },
        {
          "line": 82,
          "return_type": "return",
          "name": "getThingType"
        },
        {
          "line": 83,
          "return_type": "int",
          "name": "getMeanPrice"
        },
        {
          "line": 84,
          "return_type": "return",
          "name": "getThingType"
        },
        {
          "line": 86,
          "return_type": "int",
          "name": "getWidth"
        },
        {
          "line": 87,
          "return_type": "int",
          "name": "getHeight"
        },
        {
          "line": 88,
          "return_type": "int",
          "name": "getRealSize"
        },
        {
          "line": 89,
          "return_type": "int",
          "name": "getLayers"
        },
        {
          "line": 90,
          "return_type": "int",
          "name": "getNumPatternX"
        },
        {
          "line": 91,
          "return_type": "int",
          "name": "getNumPatternY"
        },
        {
          "line": 92,
          "return_type": "int",
          "name": "getNumPatternZ"
        },
        {
          "line": 93,
          "return_type": "int",
          "name": "getAnimationPhases"
        },
        {
          "line": 94,
          "return_type": "int",
          "name": "getGroundSpeed"
        },
        {
          "line": 95,
          "return_type": "int",
          "name": "getMaxTextLength"
        },
        {
          "line": 96,
          "return_type": "int",
          "name": "getMinimapColor"
        },
        {
          "line": 97,
          "return_type": "int",
          "name": "getLensHelp"
        },
        {
          "line": 98,
          "return_type": "int",
          "name": "getElevation"
        },
        {
          "line": 100,
          "return_type": "int",
          "name": "getClothSlot"
        },
        {
          "line": 102,
          "return_type": "bool",
          "name": "blockProjectile"
        },
        {
          "line": 104,
          "return_type": "bool",
          "name": "isContainer"
        },
        {
          "line": 106,
          "return_type": "bool",
          "name": "isCommon"
        },
        {
          "line": 108,
          "return_type": "bool",
          "name": "isTopGround"
        },
        {
          "line": 109,
          "return_type": "bool",
          "name": "isTopGroundBorder"
        },
        {
          "line": 110,
          "return_type": "bool",
          "name": "isSingleGround"
        },
        {
          "line": 111,
          "return_type": "bool",
          "name": "isSingleGroundBorder"
        },
        {
          "line": 112,
          "return_type": "bool",
          "name": "isGround"
        },
        {
          "line": 113,
          "return_type": "bool",
          "name": "isGroundBorder"
        },
        {
          "line": 114,
          "return_type": "bool",
          "name": "isOnBottom"
        },
        {
          "line": 115,
          "return_type": "bool",
          "name": "isOnTop"
        },
        {
          "line": 117,
          "return_type": "bool",
          "name": "isMarketable"
        },
        {
          "line": 118,
          "return_type": "bool",
          "name": "isStackable"
        },
        {
          "line": 119,
          "return_type": "bool",
          "name": "isFluidContainer"
        },
        {
          "line": 120,
          "return_type": "bool",
          "name": "isForceUse"
        },
        {
          "line": 121,
          "return_type": "bool",
          "name": "isMultiUse"
        },
        {
          "line": 122,
          "return_type": "bool",
          "name": "isWritable"
        },
        {
          "line": 123,
          "return_type": "bool",
          "name": "isChargeable"
        },
        {
          "line": 124,
          "return_type": "bool",
          "name": "isWritableOnce"
        },
        {
          "line": 125,
          "return_type": "bool",
          "name": "isSplash"
        },
        {
          "line": 126,
          "return_type": "bool",
          "name": "isNotWalkable"
        },
        {
          "line": 127,
          "return_type": "bool",
          "name": "isNotMoveable"
        },
        {
          "line": 128,
          "return_type": "bool",
          "name": "isMoveable"
        },
        {
          "line": 129,
          "return_type": "bool",
          "name": "isNotPathable"
        },
        {
          "line": 130,
          "return_type": "bool",
          "name": "isPickupable"
        },
        {
          "line": 131,
          "return_type": "bool",
          "name": "isHangable"
        },
        {
          "line": 132,
          "return_type": "bool",
          "name": "isHookSouth"
        },
        {
          "line": 133,
          "return_type": "bool",
          "name": "isHookEast"
        },
        {
          "line": 134,
          "return_type": "bool",
          "name": "isRotateable"
        },
        {
          "line": 135,
          "return_type": "bool",
          "name": "isDontHide"
        },
        {
          "line": 136,
          "return_type": "bool",
          "name": "isTranslucent"
        },
        {
          "line": 137,
          "return_type": "bool",
          "name": "isLyingCorpse"
        },
        {
          "line": 138,
          "return_type": "bool",
          "name": "isAnimateAlways"
        },
        {
          "line": 139,
          "return_type": "bool",
          "name": "isFullGround"
        },
        {
          "line": 140,
          "return_type": "bool",
          "name": "isIgnoreLook"
        },
        {
          "line": 141,
          "return_type": "bool",
          "name": "isCloth"
        },
        {
          "line": 142,
          "return_type": "bool",
          "name": "isUsable"
        },
        {
          "line": 143,
          "return_type": "bool",
          "name": "isWrapable"
        },
        {
          "line": 144,
          "return_type": "bool",
          "name": "isUnwrapable"
        },
        {
          "line": 145,
          "return_type": "bool",
          "name": "isTopEffect"
        },
        {
          "line": 146,
          "return_type": "bool",
          "name": "isPodium"
        },
        {
          "line": 147,
          "return_type": "bool",
          "name": "isOpaque"
        },
        {
          "line": 148,
          "return_type": "bool",
          "name": "isSingleDimension"
        },
        {
          "line": 149,
          "return_type": "bool",
          "name": "isTall"
        },
        {
          "line": 151,
          "return_type": "bool",
          "name": "hasMiniMapColor"
        },
        {
          "line": 152,
          "return_type": "bool",
          "name": "hasLensHelp"
        },
        {
          "line": 153,
          "return_type": "bool",
          "name": "hasDisplacement"
        },
        {
          "line": 154,
          "return_type": "bool",
          "name": "hasElevation"
        },
        {
          "line": 155,
          "return_type": "bool",
          "name": "hasAction"
        },
        {
          "line": 156,
          "return_type": "bool",
          "name": "hasWearOut"
        },
        {
          "line": 157,
          "return_type": "bool",
          "name": "hasClockExpire"
        },
        {
          "line": 158,
          "return_type": "bool",
          "name": "hasExpire"
        },
        {
          "line": 159,
          "return_type": "bool",
          "name": "hasExpireStop"
        },
        {
          "line": 160,
          "return_type": "bool",
          "name": "hasAnimationPhases"
        },
        {
          "line": 161,
          "return_type": "bool",
          "name": "isDecoKit"
        },
        {
          "line": 163,
          "return_type": "PLAYER_ACTION",
          "name": "getDefaultAction"
        },
        {
          "line": 165,
          "return_type": "uint16_t",
          "name": "getClassification"
        },
        {
          "line": 167,
          "return_type": "void",
          "name": "canDraw"
        },
        {
          "line": 169,
          "return_type": "bool",
          "name": "canDraw"
        },
        {
          "line": 173,
          "return_type": "void",
          "name": "setShader"
        },
        {
          "line": 174,
          "return_type": "uint8_t",
          "name": "getShaderId"
        },
        {
          "line": 175,
          "return_type": "PainterShaderProgramPtr",
          "name": "getShader"
        },
        {
          "line": 177,
          "return_type": "bool",
          "name": "hasShader"
        },
        {
          "line": 179,
          "return_type": "void",
          "name": "ungroup"
        },
        {
          "line": 181,
          "return_type": "void",
          "name": "onPositionChange"
        },
        {
          "line": 182,
          "return_type": "void",
          "name": "onAppear"
        },
        {
          "line": 183,
          "return_type": "void",
          "name": "onDisappear"
        },
        {
          "line": 192,
          "return_type": "bool",
          "name": "isMarked"
        },
        {
          "line": 193,
          "return_type": "void",
          "name": "setMarked"
        },
        {
          "line": 203,
          "return_type": "bool",
          "name": "isHighlighted"
        },
        {
          "line": 204,
          "return_type": "void",
          "name": "setHighlight"
        },
        {
          "line": 206,
          "return_type": "bool",
          "name": "isHided"
        },
        {
          "line": 208,
          "return_type": "uint8_t",
          "name": "getPatternX"
        },
        {
          "line": 209,
          "return_type": "uint8_t",
          "name": "getPatternY"
        },
        {
          "line": 210,
          "return_type": "uint8_t",
          "name": "getPatternZ"
        },
        {
          "line": 212,
          "return_type": "float",
          "name": "getScaleFactor"
        },
        {
          "line": 220,
          "return_type": "void",
          "name": "setScaleFactor"
        },
        {
          "line": 226,
          "return_type": "bool",
          "name": "canAnimate"
        },
        {
          "line": 227,
          "return_type": "void",
          "name": "setAnimate"
        },
        {
          "line": 232,
          "return_type": "void",
          "name": "setAttachedEffectDirection"
        },
        {
          "line": 266,
          "return_type": "void",
          "name": "lua_setMarked"
        },
        {
          "line": 267,
          "return_type": "void",
          "name": "lua_setHighlight"
        },
        {
          "line": 275,
          "return_type": "pragma",
          "name": "pack"
        }
      ],
      "classes": [
        {
          "line": 36,
          "name": "Thing"
        },
        {
          "line": 272,
          "name": "Client"
        },
        {
          "line": 273,
          "name": "Tile"
        }
      ],
      "includes": [
        "attachableobject.h",
        "declarations.h",
        "spritemanager.h",
        "thingtype.h",
        "thingtypemanager.h",
        "framework/core/clock.h",
        "framework/graphics/drawpool.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\thingtype.cpp",
      "total_lines": 1080,
      "code_lines": 839,
      "comment_lines": 72,
      "empty_lines": 169,
      "functions": [
        {
          "line": 82,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 89,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 186,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 370,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 372,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 374,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 376,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 381,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 392,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 396,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 403,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 405,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 407,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 409,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 411,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 413,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 415,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 417,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 419,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 421,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 423,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 425,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 431,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 483,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 523,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 530,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 554,
          "return_type": "vector",
          "name": "sprites"
        },
        {
          "line": 589,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 591,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 638,
          "return_type": "Rect",
          "name": "screenRect"
        },
        {
          "line": 973,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 975,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 978,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1054,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 1057,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "thingtype.h",
        "game.h",
        "lightview.h",
        "localplayer.h",
        "map.h",
        "spriteappearances.h",
        "spritemanager.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/core/filestream.h",
        "framework/core/graphicalapplication.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/image.h",
        "framework/graphics/texture.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\thingtype.h",
      "total_lines": 546,
      "code_lines": 452,
      "comment_lines": 23,
      "empty_lines": 71,
      "functions": [
        {
          "line": 317,
          "return_type": "void",
          "name": "unserializeAppearance"
        },
        {
          "line": 318,
          "return_type": "void",
          "name": "unserialize"
        },
        {
          "line": 319,
          "return_type": "void",
          "name": "unserializeOtml"
        },
        {
          "line": 320,
          "return_type": "void",
          "name": "applyAppearanceFlags"
        },
        {
          "line": 323,
          "return_type": "void",
          "name": "serialize"
        },
        {
          "line": 324,
          "return_type": "void",
          "name": "exportImage"
        },
        {
          "line": 327,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 329,
          "return_type": "void",
          "name": "drawWithFrameBuffer"
        },
        {
          "line": 331,
          "return_type": "uint16_t",
          "name": "getId"
        },
        {
          "line": 332,
          "return_type": "ThingCategory",
          "name": "getCategory"
        },
        {
          "line": 333,
          "return_type": "bool",
          "name": "isNull"
        },
        {
          "line": 334,
          "return_type": "bool",
          "name": "hasAttr"
        },
        {
          "line": 336,
          "return_type": "int",
          "name": "getWidth"
        },
        {
          "line": 337,
          "return_type": "int",
          "name": "getHeight"
        },
        {
          "line": 338,
          "return_type": "int",
          "name": "getExactSize"
        },
        {
          "line": 339,
          "return_type": "int",
          "name": "getRealSize"
        },
        {
          "line": 340,
          "return_type": "int",
          "name": "getLayers"
        },
        {
          "line": 341,
          "return_type": "int",
          "name": "getNumPatternX"
        },
        {
          "line": 342,
          "return_type": "int",
          "name": "getNumPatternY"
        },
        {
          "line": 343,
          "return_type": "int",
          "name": "getNumPatternZ"
        },
        {
          "line": 344,
          "return_type": "int",
          "name": "getAnimationPhases"
        },
        {
          "line": 353,
          "return_type": "int",
          "name": "getMeanPrice"
        },
        {
          "line": 379,
          "return_type": "int",
          "name": "getDisplacementX"
        },
        {
          "line": 380,
          "return_type": "int",
          "name": "getDisplacementY"
        },
        {
          "line": 381,
          "return_type": "int",
          "name": "getElevation"
        },
        {
          "line": 383,
          "return_type": "uint16_t",
          "name": "getGroundSpeed"
        },
        {
          "line": 384,
          "return_type": "int",
          "name": "getMaxTextLength"
        },
        {
          "line": 386,
          "return_type": "int",
          "name": "getMinimapColor"
        },
        {
          "line": 387,
          "return_type": "int",
          "name": "getLensHelp"
        },
        {
          "line": 388,
          "return_type": "int",
          "name": "getClothSlot"
        },
        {
          "line": 390,
          "return_type": "bool",
          "name": "isTopGround"
        },
        {
          "line": 391,
          "return_type": "bool",
          "name": "isTopGroundBorder"
        },
        {
          "line": 392,
          "return_type": "bool",
          "name": "isSingleGround"
        },
        {
          "line": 393,
          "return_type": "bool",
          "name": "isSingleGroundBorder"
        },
        {
          "line": 394,
          "return_type": "bool",
          "name": "isTall"
        },
        {
          "line": 395,
          "return_type": "bool",
          "name": "isSingleDimension"
        },
        {
          "line": 397,
          "return_type": "bool",
          "name": "isGround"
        },
        {
          "line": 398,
          "return_type": "bool",
          "name": "isGroundBorder"
        },
        {
          "line": 399,
          "return_type": "bool",
          "name": "isOnBottom"
        },
        {
          "line": 400,
          "return_type": "bool",
          "name": "isOnTop"
        },
        {
          "line": 401,
          "return_type": "bool",
          "name": "isContainer"
        },
        {
          "line": 402,
          "return_type": "bool",
          "name": "isStackable"
        },
        {
          "line": 403,
          "return_type": "bool",
          "name": "isForceUse"
        },
        {
          "line": 404,
          "return_type": "bool",
          "name": "isMultiUse"
        },
        {
          "line": 405,
          "return_type": "bool",
          "name": "isWritable"
        },
        {
          "line": 406,
          "return_type": "bool",
          "name": "isChargeable"
        },
        {
          "line": 407,
          "return_type": "bool",
          "name": "isWritableOnce"
        },
        {
          "line": 408,
          "return_type": "bool",
          "name": "isFluidContainer"
        },
        {
          "line": 409,
          "return_type": "bool",
          "name": "isSplash"
        },
        {
          "line": 410,
          "return_type": "bool",
          "name": "isNotWalkable"
        },
        {
          "line": 411,
          "return_type": "bool",
          "name": "isNotMoveable"
        },
        {
          "line": 412,
          "return_type": "bool",
          "name": "blockProjectile"
        },
        {
          "line": 413,
          "return_type": "bool",
          "name": "isNotPathable"
        },
        {
          "line": 414,
          "return_type": "bool",
          "name": "isPickupable"
        },
        {
          "line": 415,
          "return_type": "bool",
          "name": "isHangable"
        },
        {
          "line": 416,
          "return_type": "bool",
          "name": "isHookSouth"
        },
        {
          "line": 417,
          "return_type": "bool",
          "name": "isHookEast"
        },
        {
          "line": 418,
          "return_type": "bool",
          "name": "isRotateable"
        },
        {
          "line": 419,
          "return_type": "bool",
          "name": "hasLight"
        },
        {
          "line": 420,
          "return_type": "bool",
          "name": "isDontHide"
        },
        {
          "line": 421,
          "return_type": "bool",
          "name": "isTranslucent"
        },
        {
          "line": 422,
          "return_type": "bool",
          "name": "hasDisplacement"
        },
        {
          "line": 423,
          "return_type": "bool",
          "name": "hasElevation"
        },
        {
          "line": 424,
          "return_type": "bool",
          "name": "isLyingCorpse"
        },
        {
          "line": 425,
          "return_type": "bool",
          "name": "isAnimateAlways"
        },
        {
          "line": 426,
          "return_type": "bool",
          "name": "hasMiniMapColor"
        },
        {
          "line": 427,
          "return_type": "bool",
          "name": "hasLensHelp"
        },
        {
          "line": 428,
          "return_type": "bool",
          "name": "isFullGround"
        },
        {
          "line": 429,
          "return_type": "bool",
          "name": "isIgnoreLook"
        },
        {
          "line": 430,
          "return_type": "bool",
          "name": "isCloth"
        },
        {
          "line": 431,
          "return_type": "bool",
          "name": "isMarketable"
        },
        {
          "line": 432,
          "return_type": "bool",
          "name": "isUsable"
        },
        {
          "line": 433,
          "return_type": "bool",
          "name": "isWrapable"
        },
        {
          "line": 434,
          "return_type": "bool",
          "name": "isUnwrapable"
        },
        {
          "line": 435,
          "return_type": "bool",
          "name": "hasWearOut"
        },
        {
          "line": 436,
          "return_type": "bool",
          "name": "hasClockExpire"
        },
        {
          "line": 437,
          "return_type": "bool",
          "name": "hasExpire"
        },
        {
          "line": 438,
          "return_type": "bool",
          "name": "hasExpireStop"
        },
        {
          "line": 439,
          "return_type": "bool",
          "name": "isPodium"
        },
        {
          "line": 440,
          "return_type": "bool",
          "name": "isTopEffect"
        },
        {
          "line": 441,
          "return_type": "bool",
          "name": "hasAction"
        },
        {
          "line": 442,
          "return_type": "bool",
          "name": "isOpaque"
        },
        {
          "line": 443,
          "return_type": "bool",
          "name": "isDecoKit"
        },
        {
          "line": 445,
          "return_type": "bool",
          "name": "isItem"
        },
        {
          "line": 446,
          "return_type": "bool",
          "name": "isEffect"
        },
        {
          "line": 447,
          "return_type": "bool",
          "name": "isMissile"
        },
        {
          "line": 448,
          "return_type": "bool",
          "name": "isCreature"
        },
        {
          "line": 450,
          "return_type": "bool",
          "name": "hasTexture"
        },
        {
          "line": 451,
          "return_type": "Timer",
          "name": "getLastTimeUsage"
        },
        {
          "line": 453,
          "return_type": "void",
          "name": "unload"
        },
        {
          "line": 460,
          "return_type": "PLAYER_ACTION",
          "name": "getDefaultAction"
        },
        {
          "line": 462,
          "return_type": "uint16_t",
          "name": "getClassification"
        },
        {
          "line": 466,
          "return_type": "float",
          "name": "getOpacity"
        },
        {
          "line": 467,
          "return_type": "void",
          "name": "setPathable"
        },
        {
          "line": 468,
          "return_type": "int",
          "name": "getExactHeight"
        },
        {
          "line": 471,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 472,
          "return_type": "string",
          "name": "getDescription"
        },
        {
          "line": 475,
          "return_type": "ThingFlagAttr",
          "name": "thingAttrToThingFlagAttr"
        },
        {
          "line": 476,
          "return_type": "Size",
          "name": "getBestTextureDimension"
        },
        {
          "line": 478,
          "return_type": "void",
          "name": "loadTexture"
        },
        {
          "line": 493,
          "return_type": "uint32_t",
          "name": "getSpriteIndex"
        },
        {
          "line": 494,
          "return_type": "uint32_t",
          "name": "getTextureIndex"
        }
      ],
      "classes": [
        {
          "line": 314,
          "name": "ThingType"
        }
      ],
      "includes": [
        "animator.h",
        "declarations.h",
        "framework/core/declarations.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/luaengine/luaobject.h",
        "framework/otml/declarations.h",
        "variant"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\thingtypemanager.cpp",
      "total_lines": 607,
      "code_lines": 494,
      "comment_lines": 31,
      "empty_lines": 82,
      "functions": [
        {
          "line": 123,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 125,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 127,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 130,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 137,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 160,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 225,
          "return_type": "void",
          "name": "loadCreatureBank"
        },
        {
          "line": 303,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 386,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 388,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 390,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 392,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 394,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 400,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 402,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 404,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 475,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 480,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 513,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 520,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 524,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 559,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 564,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 568,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "thingtypemanager.h",
        "creature.h",
        "game.h",
        "thingtype.h",
        "itemtype.h",
        "creatures.h",
        "framework/core/binarytree.h",
        "framework/core/filestream.h",
        "framework/core/resourcemanager.h",
        "framework/otml/otml.h",
        "client/spriteappearances.h",
        "appearances.pb.h",
        "staticdata.pb.h",
        "nlohmann/json.hpp"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\thingtypemanager.h",
      "total_lines": 111,
      "code_lines": 68,
      "comment_lines": 21,
      "empty_lines": 22,
      "functions": [
        {
          "line": 39,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "loadDat"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "loadOtml"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "loadAppearances"
        },
        {
          "line": 45,
          "return_type": "bool",
          "name": "loadStaticData"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "parseItemType"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "loadOtb"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "loadXml"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "saveDat"
        },
        {
          "line": 52,
          "return_type": "uint32_t",
          "name": "getOtbMajorVersion"
        },
        {
          "line": 53,
          "return_type": "uint32_t",
          "name": "getOtbMinorVersion"
        },
        {
          "line": 54,
          "return_type": "bool",
          "name": "isXmlLoaded"
        },
        {
          "line": 55,
          "return_type": "bool",
          "name": "isOtbLoaded"
        },
        {
          "line": 56,
          "return_type": "bool",
          "name": "isValidOtbId"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "addItemType"
        },
        {
          "line": 61,
          "return_type": "ItemTypeList",
          "name": "findItemTypesByName"
        },
        {
          "line": 62,
          "return_type": "ItemTypeList",
          "name": "findItemTypesByString"
        },
        {
          "line": 66,
          "return_type": "ItemTypeList",
          "name": "findItemTypeByCategory"
        },
        {
          "line": 69,
          "return_type": "ThingTypeList",
          "name": "findThingTypeByAttr"
        },
        {
          "line": 72,
          "return_type": "RaceList",
          "name": "getRacesByName"
        },
        {
          "line": 81,
          "return_type": "uint32_t",
          "name": "getDatSignature"
        },
        {
          "line": 82,
          "return_type": "uint16_t",
          "name": "getContentRevision"
        },
        {
          "line": 84,
          "return_type": "bool",
          "name": "isDatLoaded"
        },
        {
          "line": 85,
          "return_type": "bool",
          "name": "isValidDatId"
        }
      ],
      "classes": [
        {
          "line": 36,
          "name": "ThingTypeManager"
        },
        {
          "line": 108,
          "name": "GarbageCollection"
        }
      ],
      "includes": [
        "thingtype.h",
        "staticdata.h",
        "framework/global.h",
        "itemtype.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\tile.cpp",
      "total_lines": 1004,
      "code_lines": 744,
      "comment_lines": 46,
      "empty_lines": 214,
      "functions": [
        {
          "line": 43,
          "return_type": "void",
          "name": "updateElevation"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "drawThing"
        },
        {
          "line": 245,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 294,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 508,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 657,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 917,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 919,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 971,
          "return_type": "is",
          "name": "300000"
        }
      ],
      "classes": [],
      "includes": [
        "tile.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/ui/uiwidget.h",
        "ranges",
        "client.h",
        "effect.h",
        "game.h",
        "item.h",
        "map.h",
        "protocolgame.h",
        "uimap.h",
        "localplayer.h",
        "algorithm"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\client\\tile.h",
      "total_lines": 271,
      "code_lines": 201,
      "comment_lines": 22,
      "empty_lines": 48,
      "functions": [
        {
          "line": 98,
          "return_type": "LuaObjectPtr",
          "name": "attachedObjectToLuaObject"
        },
        {
          "line": 99,
          "return_type": "bool",
          "name": "isTile"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "onAddInMapView"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "drawLight"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "clean"
        },
        {
          "line": 107,
          "return_type": "void",
          "name": "addWalkingCreature"
        },
        {
          "line": 108,
          "return_type": "void",
          "name": "removeWalkingCreature"
        },
        {
          "line": 110,
          "return_type": "void",
          "name": "addThing"
        },
        {
          "line": 111,
          "return_type": "bool",
          "name": "removeThing"
        },
        {
          "line": 112,
          "return_type": "ThingPtr",
          "name": "getThing"
        },
        {
          "line": 113,
          "return_type": "EffectPtr",
          "name": "getEffect"
        },
        {
          "line": 114,
          "return_type": "bool",
          "name": "hasThing"
        },
        {
          "line": 115,
          "return_type": "int",
          "name": "getThingStackPos"
        },
        {
          "line": 116,
          "return_type": "ThingPtr",
          "name": "getTopThing"
        },
        {
          "line": 118,
          "return_type": "ThingPtr",
          "name": "getTopLookThing"
        },
        {
          "line": 119,
          "return_type": "ThingPtr",
          "name": "getTopUseThing"
        },
        {
          "line": 120,
          "return_type": "CreaturePtr",
          "name": "getTopCreature"
        },
        {
          "line": 121,
          "return_type": "ThingPtr",
          "name": "getTopMoveThing"
        },
        {
          "line": 122,
          "return_type": "ThingPtr",
          "name": "getTopMultiUseThing"
        },
        {
          "line": 124,
          "return_type": "int",
          "name": "getDrawElevation"
        },
        {
          "line": 131,
          "return_type": "ItemPtr",
          "name": "getGround"
        },
        {
          "line": 132,
          "return_type": "int",
          "name": "getGroundSpeed"
        },
        {
          "line": 133,
          "return_type": "uint8_t",
          "name": "getMinimapColorByte"
        },
        {
          "line": 134,
          "return_type": "int",
          "name": "getThingCount"
        },
        {
          "line": 136,
          "return_type": "bool",
          "name": "isWalkable"
        },
        {
          "line": 137,
          "return_type": "bool",
          "name": "isClickable"
        },
        {
          "line": 138,
          "return_type": "bool",
          "name": "isPathable"
        },
        {
          "line": 139,
          "return_type": "bool",
          "name": "isFullGround"
        },
        {
          "line": 140,
          "return_type": "bool",
          "name": "isFullyOpaque"
        },
        {
          "line": 141,
          "return_type": "bool",
          "name": "isSingleDimension"
        },
        {
          "line": 142,
          "return_type": "bool",
          "name": "isLookPossible"
        },
        {
          "line": 143,
          "return_type": "bool",
          "name": "isEmpty"
        },
        {
          "line": 144,
          "return_type": "bool",
          "name": "isDrawable"
        },
        {
          "line": 145,
          "return_type": "bool",
          "name": "isCovered"
        },
        {
          "line": 146,
          "return_type": "bool",
          "name": "isCompletelyCovered"
        },
        {
          "line": 148,
          "return_type": "bool",
          "name": "hasBlockingCreature"
        },
        {
          "line": 150,
          "return_type": "bool",
          "name": "hasEffect"
        },
        {
          "line": 151,
          "return_type": "bool",
          "name": "hasGround"
        },
        {
          "line": 152,
          "return_type": "bool",
          "name": "hasTopGround"
        },
        {
          "line": 154,
          "return_type": "bool",
          "name": "hasCreatures"
        },
        {
          "line": 156,
          "return_type": "bool",
          "name": "hasTopItem"
        },
        {
          "line": 157,
          "return_type": "bool",
          "name": "hasCommonItem"
        },
        {
          "line": 158,
          "return_type": "bool",
          "name": "hasBottomItem"
        },
        {
          "line": 160,
          "return_type": "bool",
          "name": "hasIgnoreLook"
        },
        {
          "line": 161,
          "return_type": "bool",
          "name": "hasDisplacement"
        },
        {
          "line": 162,
          "return_type": "bool",
          "name": "hasLight"
        },
        {
          "line": 163,
          "return_type": "bool",
          "name": "hasTallThings"
        },
        {
          "line": 164,
          "return_type": "bool",
          "name": "hasWideThings"
        },
        {
          "line": 165,
          "return_type": "bool",
          "name": "hasTallThings2"
        },
        {
          "line": 166,
          "return_type": "bool",
          "name": "hasWideThings2"
        },
        {
          "line": 167,
          "return_type": "bool",
          "name": "hasWall"
        },
        {
          "line": 169,
          "return_type": "bool",
          "name": "mustHookSouth"
        },
        {
          "line": 170,
          "return_type": "bool",
          "name": "mustHookEast"
        },
        {
          "line": 172,
          "return_type": "bool",
          "name": "limitsFloorsView"
        },
        {
          "line": 174,
          "return_type": "bool",
          "name": "canShade"
        },
        {
          "line": 175,
          "return_type": "bool",
          "name": "canRender"
        },
        {
          "line": 176,
          "return_type": "bool",
          "name": "canErase"
        },
        {
          "line": 185,
          "return_type": "bool",
          "name": "hasElevation"
        },
        {
          "line": 188,
          "return_type": "void",
          "name": "overwriteMinimapColor"
        },
        {
          "line": 190,
          "return_type": "void",
          "name": "remFlag"
        },
        {
          "line": 191,
          "return_type": "void",
          "name": "setFlag"
        },
        {
          "line": 192,
          "return_type": "void",
          "name": "setFlags"
        },
        {
          "line": 193,
          "return_type": "bool",
          "name": "hasFlag"
        },
        {
          "line": 194,
          "return_type": "uint32_t",
          "name": "getFlags"
        },
        {
          "line": 196,
          "return_type": "void",
          "name": "setHouseId"
        },
        {
          "line": 197,
          "return_type": "uint32_t",
          "name": "getHouseId"
        },
        {
          "line": 198,
          "return_type": "bool",
          "name": "isHouseTile"
        },
        {
          "line": 201,
          "return_type": "void",
          "name": "select"
        },
        {
          "line": 202,
          "return_type": "void",
          "name": "unselect"
        },
        {
          "line": 203,
          "return_type": "bool",
          "name": "isSelected"
        },
        {
          "line": 205,
          "return_type": "TilePtr",
          "name": "asTile"
        },
        {
          "line": 207,
          "return_type": "bool",
          "name": "checkForDetachableThing"
        },
        {
          "line": 209,
          "return_type": "void",
          "name": "drawTexts"
        },
        {
          "line": 210,
          "return_type": "void",
          "name": "setText"
        },
        {
          "line": 211,
          "return_type": "string",
          "name": "getText"
        },
        {
          "line": 212,
          "return_type": "void",
          "name": "setTimer"
        },
        {
          "line": 213,
          "return_type": "int",
          "name": "getTimer"
        },
        {
          "line": 214,
          "return_type": "void",
          "name": "setFill"
        },
        {
          "line": 215,
          "return_type": "void",
          "name": "resetFill"
        },
        {
          "line": 216,
          "return_type": "bool",
          "name": "canShoot"
        },
        {
          "line": 219,
          "return_type": "void",
          "name": "updateThingStackPos"
        },
        {
          "line": 220,
          "return_type": "void",
          "name": "drawTop"
        },
        {
          "line": 221,
          "return_type": "void",
          "name": "drawCreature"
        },
        {
          "line": 223,
          "return_type": "void",
          "name": "setThingFlag"
        },
        {
          "line": 225,
          "return_type": "void",
          "name": "recalculateThingFlag"
        },
        {
          "line": 232,
          "return_type": "bool",
          "name": "hasThingWithElevation"
        },
        {
          "line": 233,
          "return_type": "void",
          "name": "markHighlightedThing"
        }
      ],
      "classes": [
        {
          "line": 58,
          "name": "TileSelectType"
        },
        {
          "line": 93,
          "name": "Tile"
        }
      ],
      "includes": [
        "framework/luaengine/luaobject.h",
        "attachableobject.h",
        "declarations.h",
        "item.h",
        "mapview.h",
        "statictext.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\towns.cpp",
      "total_lines": 83,
      "code_lines": 50,
      "comment_lines": 21,
      "empty_lines": 12,
      "functions": [],
      "classes": [],
      "includes": [
        "towns.h",
        "utility"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\towns.h",
      "total_lines": 74,
      "code_lines": 39,
      "comment_lines": 21,
      "empty_lines": 14,
      "functions": [
        {
          "line": 36,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "setPos"
        },
        {
          "line": 40,
          "return_type": "uint32_t",
          "name": "getId"
        },
        {
          "line": 41,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 42,
          "return_type": "Position",
          "name": "getPos"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "addTown"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "removeTown"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "sort"
        },
        {
          "line": 61,
          "return_type": "TownList",
          "name": "getTowns"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 69,
          "return_type": "iterator",
          "name": "findTown"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "Town"
        },
        {
          "line": 50,
          "name": "TownManager"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uicreature.h",
      "total_lines": 68,
      "code_lines": 35,
      "comment_lines": 25,
      "empty_lines": 8,
      "functions": [
        {
          "line": 32,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "setCreature"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "setOutfit"
        },
        {
          "line": 37,
          "return_type": "CreaturePtr",
          "name": "getCreature"
        },
        {
          "line": 38,
          "return_type": "uint8_t",
          "name": "getCreatureSize"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setCreatureSize"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setCenter"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "isCentered"
        },
        {
          "line": 50,
          "return_type": "function",
          "name": "updatePreview"
        },
        {
          "line": 55,
          "return_type": "Direction",
          "name": "getDirection"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "onStyleApply"
        },
        {
          "line": 64,
          "return_type": "Outfit",
          "name": "getOutfit"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "UICreature"
        }
      ],
      "includes": [
        "creature.h",
        "declarations.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uieffect.h",
      "total_lines": 53,
      "code_lines": 25,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "setEffectId"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "setEffectVisible"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setEffect"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "setVirtual"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "clearEffect"
        },
        {
          "line": 41,
          "return_type": "int",
          "name": "getEffectId"
        },
        {
          "line": 42,
          "return_type": "auto",
          "name": "getEffect"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "isVirtual"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "isEffectVisible"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "onStyleApply"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "UIEffect"
        }
      ],
      "includes": [
        "declarations.h",
        "effect.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uigraph.cpp",
      "total_lines": 431,
      "code_lines": 339,
      "comment_lines": 10,
      "empty_lines": 82,
      "functions": [
        {
          "line": 406,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 408,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 410,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uigraph.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/platform/platformwindow.h",
        "algorithm"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\client\\uigraph.h",
      "total_lines": 101,
      "code_lines": 65,
      "comment_lines": 22,
      "empty_lines": 14,
      "functions": [
        {
          "line": 54,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 57,
          "return_type": "size_t",
          "name": "createGraph"
        },
        {
          "line": 58,
          "return_type": "size_t",
          "name": "getGraphsCount"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "addValue"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "setCapacity"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "setTitle"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "setShowLabels"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "setShowInfo"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "setLineWidth"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "setLineColor"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "setInfoText"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "setInfoLineColor"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "setTextBackground"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "setGraphVisible"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "onStyleApply"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "onGeometryChange"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "onLayoutUpdate"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "onVisibilityChange"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "cacheGraphs"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "updateGraph"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "updateInfoBoxes"
        }
      ],
      "classes": [
        {
          "line": 49,
          "name": "UIGraph"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uiitem.cpp",
      "total_lines": 120,
      "code_lines": 78,
      "comment_lines": 22,
      "empty_lines": 20,
      "functions": [
        {
          "line": 52,
          "return_type": "Color",
          "name": "STACK_COLOR"
        },
        {
          "line": 73,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 109,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 111,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 113,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 115,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 117,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uiitem.h",
        "lightview.h",
        "framework/graphics/fontmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uiitem.h",
      "total_lines": 60,
      "code_lines": 32,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "setItemId"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "setItemCount"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setItemSubType"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "setItemVisible"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setItem"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setShowCount"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setVirtual"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "clearItem"
        },
        {
          "line": 44,
          "return_type": "int",
          "name": "getItemId"
        },
        {
          "line": 45,
          "return_type": "int",
          "name": "getItemCount"
        },
        {
          "line": 46,
          "return_type": "int",
          "name": "getItemSubType"
        },
        {
          "line": 47,
          "return_type": "int",
          "name": "getItemCountOrSubType"
        },
        {
          "line": 48,
          "return_type": "ItemPtr",
          "name": "getItem"
        },
        {
          "line": 49,
          "return_type": "bool",
          "name": "isVirtual"
        },
        {
          "line": 50,
          "return_type": "bool",
          "name": "isItemVisible"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "onStyleApply"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "UIItem"
        }
      ],
      "includes": [
        "declarations.h",
        "item.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uimap.cpp",
      "total_lines": 237,
      "code_lines": 172,
      "comment_lines": 22,
      "empty_lines": 43,
      "functions": [
        {
          "line": 56,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 62,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 66,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uimap.h",
        "game.h",
        "map.h",
        "mapview.h",
        "framework/graphics/drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uimap.h",
      "total_lines": 130,
      "code_lines": 88,
      "comment_lines": 21,
      "empty_lines": 21,
      "functions": [
        {
          "line": 37,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "movePixels"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "followCreature"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setCameraPosition"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setMaxZoomIn"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setMaxZoomOut"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "lockVisibleFloor"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "unlockVisibleFloor"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "setVisibleDimension"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "setFloorViewMode"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setDrawNames"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setDrawHealthBars"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setDrawLights"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setLimitVisibleDimension"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "setDrawManaBar"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "setKeepAspectRatio"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "setShader"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "setMinimumAmbientLight"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "setLimitVisibleRange"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "setDrawViewportEdge"
        },
        {
          "line": 60,
          "return_type": "bool",
          "name": "zoomIn"
        },
        {
          "line": 61,
          "return_type": "bool",
          "name": "zoomOut"
        },
        {
          "line": 62,
          "return_type": "bool",
          "name": "setZoom"
        },
        {
          "line": 63,
          "return_type": "bool",
          "name": "isDrawingNames"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "isDrawingHealthBars"
        },
        {
          "line": 65,
          "return_type": "bool",
          "name": "isDrawingLights"
        },
        {
          "line": 66,
          "return_type": "bool",
          "name": "isLimitedVisibleDimension"
        },
        {
          "line": 67,
          "return_type": "bool",
          "name": "isDrawingManaBar"
        },
        {
          "line": 68,
          "return_type": "bool",
          "name": "isKeepAspectRatioEnabled"
        },
        {
          "line": 69,
          "return_type": "bool",
          "name": "isLimitVisibleRangeEnabled"
        },
        {
          "line": 70,
          "return_type": "bool",
          "name": "isSwitchingShader"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "setShadowFloorIntensity"
        },
        {
          "line": 76,
          "return_type": "bool",
          "name": "isInRange"
        },
        {
          "line": 78,
          "return_type": "PainterShaderProgramPtr",
          "name": "getShader"
        },
        {
          "line": 79,
          "return_type": "PainterShaderProgramPtr",
          "name": "getNextShader"
        },
        {
          "line": 80,
          "return_type": "FloorViewMode",
          "name": "getFloorViewMode"
        },
        {
          "line": 81,
          "return_type": "CreaturePtr",
          "name": "getFollowingCreature"
        },
        {
          "line": 82,
          "return_type": "Position",
          "name": "getCameraPosition"
        },
        {
          "line": 83,
          "return_type": "Position",
          "name": "getPosition"
        },
        {
          "line": 84,
          "return_type": "TilePtr",
          "name": "getTile"
        },
        {
          "line": 85,
          "return_type": "Size",
          "name": "getVisibleDimension"
        },
        {
          "line": 87,
          "return_type": "int",
          "name": "getMaxZoomIn"
        },
        {
          "line": 88,
          "return_type": "int",
          "name": "getMaxZoomOut"
        },
        {
          "line": 89,
          "return_type": "int",
          "name": "getZoom"
        },
        {
          "line": 91,
          "return_type": "float",
          "name": "getMinimumAmbientLight"
        },
        {
          "line": 93,
          "return_type": "void",
          "name": "setCrosshairTexture"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "setDrawHighlightTarget"
        },
        {
          "line": 95,
          "return_type": "void",
          "name": "setAntiAliasingMode"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "setFloorFading"
        },
        {
          "line": 97,
          "return_type": "MapViewPtr",
          "name": "getMapView"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "clearTiles"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "updateMapRect"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "onStyleApply"
        },
        {
          "line": 106,
          "return_type": "void",
          "name": "onGeometryChange"
        },
        {
          "line": 107,
          "return_type": "bool",
          "name": "onMouseMove"
        },
        {
          "line": 108,
          "return_type": "bool",
          "name": "onMousePress"
        },
        {
          "line": 109,
          "return_type": "bool",
          "name": "onMouseRelease"
        },
        {
          "line": 110,
          "return_type": "bool",
          "name": "onMouseWheel"
        },
        {
          "line": 113,
          "return_type": "void",
          "name": "updateVisibleDimension"
        },
        {
          "line": 114,
          "return_type": "void",
          "name": "updateMapSize"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "UIMap"
        },
        {
          "line": 129,
          "name": "Client"
        }
      ],
      "includes": [
        "declarations.h",
        "tile.h",
        "framework/ui/uiwidget.h",
        "mapview.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uimapanchorlayout.cpp",
      "total_lines": 77,
      "code_lines": 45,
      "comment_lines": 22,
      "empty_lines": 10,
      "functions": [],
      "classes": [],
      "includes": [
        "uimapanchorlayout.h",
        "declarations.h",
        "uiminimap.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uimapanchorlayout.h",
      "total_lines": 54,
      "code_lines": 25,
      "comment_lines": 21,
      "empty_lines": 8,
      "functions": [
        {
          "line": 38,
          "return_type": "UIWidgetPtr",
          "name": "getHookedWidget"
        },
        {
          "line": 39,
          "return_type": "int",
          "name": "getHookedPoint"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "centerInPosition"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "fillPosition"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "UIPositionAnchor"
        },
        {
          "line": 45,
          "name": "UIMapAnchorLayout"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/ui/uianchorlayout.h",
        "utility"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uiminimap.h",
      "total_lines": 69,
      "code_lines": 38,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 31,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 33,
          "return_type": "bool",
          "name": "zoomIn"
        },
        {
          "line": 34,
          "return_type": "bool",
          "name": "zoomOut"
        },
        {
          "line": 36,
          "return_type": "bool",
          "name": "setZoom"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setMinZoom"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "setMaxZoom"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setCameraPosition"
        },
        {
          "line": 40,
          "return_type": "bool",
          "name": "floorUp"
        },
        {
          "line": 41,
          "return_type": "bool",
          "name": "floorDown"
        },
        {
          "line": 43,
          "return_type": "Point",
          "name": "getTilePoint"
        },
        {
          "line": 44,
          "return_type": "Rect",
          "name": "getTileRect"
        },
        {
          "line": 45,
          "return_type": "Position",
          "name": "getTilePosition"
        },
        {
          "line": 47,
          "return_type": "Position",
          "name": "getCameraPosition"
        },
        {
          "line": 48,
          "return_type": "int8_t",
          "name": "getZoom"
        },
        {
          "line": 49,
          "return_type": "int8_t",
          "name": "getMinZoom"
        },
        {
          "line": 50,
          "return_type": "int8_t",
          "name": "getMaxZoom"
        },
        {
          "line": 51,
          "return_type": "float",
          "name": "getScale"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "anchorPosition"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "fillPosition"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "centerInPosition"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "onZoomChange"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "onCameraPositionChange"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "onStyleApply"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "UIMinimap"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uimissile.h",
      "total_lines": 55,
      "code_lines": 27,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "setMissileId"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "setMissileVisible"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setMissile"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "setVirtual"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setDirection"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "clearMissile"
        },
        {
          "line": 42,
          "return_type": "int",
          "name": "getMissileId"
        },
        {
          "line": 43,
          "return_type": "auto",
          "name": "getDirection"
        },
        {
          "line": 44,
          "return_type": "auto",
          "name": "getMissile"
        },
        {
          "line": 45,
          "return_type": "bool",
          "name": "isVirtual"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "isMissileVisible"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "onStyleApply"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "UIMissile"
        }
      ],
      "includes": [
        "declarations.h",
        "missile.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uiprogressrect.cpp",
      "total_lines": 96,
      "code_lines": 49,
      "comment_lines": 33,
      "empty_lines": 14,
      "functions": [],
      "classes": [],
      "includes": [
        "uiprogressrect.h",
        "framework/graphics/drawpool.h",
        "framework/graphics/drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uiprogressrect.h",
      "total_lines": 41,
      "code_lines": 14,
      "comment_lines": 21,
      "empty_lines": 6,
      "functions": [
        {
          "line": 32,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "setPercent"
        },
        {
          "line": 35,
          "return_type": "float",
          "name": "getPercent"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "onStyleApply"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "UIProgressRect"
        }
      ],
      "includes": [
        "declarations.h",
        "item.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uisprite.cpp",
      "total_lines": 82,
      "code_lines": 48,
      "comment_lines": 22,
      "empty_lines": 12,
      "functions": [
        {
          "line": 77,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 79,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uisprite.h",
        "client/spritemanager.h",
        "framework/graphics/texturemanager.h",
        "framework/graphics/drawpool.h",
        "framework/graphics/drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\client\\uisprite.h",
      "total_lines": 52,
      "code_lines": 21,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 31,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 33,
          "return_type": "void",
          "name": "setSpriteId"
        },
        {
          "line": 34,
          "return_type": "int",
          "name": "getSpriteId"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "clearSprite"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setSpriteColor"
        },
        {
          "line": 39,
          "return_type": "bool",
          "name": "isSpriteVisible"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setSpriteVisible"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "hasSprite"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "onStyleApply"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "UISprite"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\const.h",
      "total_lines": 299,
      "code_lines": 257,
      "comment_lines": 24,
      "empty_lines": 18,
      "functions": [
        {
          "line": 28,
          "return_type": "define",
          "name": "DEG_TO_RAD"
        },
        {
          "line": 29,
          "return_type": "define",
          "name": "RAD_TO_DEC"
        },
        {
          "line": 36,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 38,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 40,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 42,
          "return_type": "elif",
          "name": "defined"
        }
      ],
      "classes": [],
      "includes": [
        "cstdint",
        "numbers"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\global.h",
      "total_lines": 50,
      "code_lines": 15,
      "comment_lines": 26,
      "empty_lines": 9,
      "functions": [],
      "classes": [],
      "includes": [
        "config.h",
        "stdext/compiler.h",
        "pch.h",
        "const.h",
        "stdext/stdext.h",
        "util/color.h",
        "util/matrix.h",
        "util/point.h",
        "util/rect.h",
        "util/size.h",
        "core/logger.h",
        "platform/androidmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\luafunctions.cpp",
      "total_lines": 1045,
      "code_lines": 922,
      "comment_lines": 65,
      "empty_lines": 58,
      "functions": [
        {
          "line": 91,
          "return_type": "regex",
          "name": "e"
        }
      ],
      "classes": [],
      "includes": [
        "framework/core/application.h",
        "framework/core/config.h",
        "framework/core/configmanager.h",
        "framework/core/eventdispatcher.h",
        "framework/core/module.h",
        "framework/core/modulemanager.h",
        "framework/core/resourcemanager.h",
        "framework/luaengine/luainterface.h",
        "framework/platform/platform.h",
        "framework/proxy/proxy.h",
        "framework/stdext/net.h",
        "framework/util/crypt.h",
        "framework/graphics/fontmanager.h",
        "framework/graphics/graphics.h",
        "framework/graphics/particleeffect.h",
        "framework/graphics/particlemanager.h",
        "framework/graphics/shadermanager.h",
        "framework/graphics/texturemanager.h",
        "framework/input/mouse.h",
        "framework/platform/platformwindow.h",
        "framework/ui/ui.h",
        "framework/sound/combinedsoundsource.h",
        "framework/sound/soundchannel.h",
        "framework/sound/soundeffect.h",
        "framework/sound/soundmanager.h",
        "framework/sound/soundsource.h",
        "framework/sound/streamsoundsource.h",
        "framework/net/httplogin.h",
        "framework/net/protocol.h",
        "framework/net/protocolhttp.h",
        "framework/net/server.h",
        "regex",
        "net/inputmessage.h",
        "net/outputmessage.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\pch.h",
      "total_lines": 69,
      "code_lines": 37,
      "comment_lines": 25,
      "empty_lines": 7,
      "functions": [],
      "classes": [],
      "includes": [
        "cassert",
        "cmath",
        "cstddef",
        "cstdio",
        "cstdlib",
        "cstring",
        "algorithm",
        "array",
        "deque",
        "functional",
        "iomanip",
        "iostream",
        "list",
        "map",
        "memory",
        "sstream",
        "string",
        "string_view",
        "tuple",
        "typeinfo",
        "unordered_map",
        "vector",
        "parallel_hashmap/btree.h",
        "parallel_hashmap/phmap.h",
        "pugixml.hpp",
        "fmt/chrono.h",
        "fmt/core.h",
        "fmt/format.h",
        "fmt/args.h",
        "fmt/ranges.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\adaptativeframecounter.cpp",
      "total_lines": 51,
      "code_lines": 22,
      "comment_lines": 21,
      "empty_lines": 8,
      "functions": [],
      "classes": [],
      "includes": [
        "adaptativeframecounter.h",
        "framework/graphics/drawpool.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\adaptativeframecounter.h",
      "total_lines": 68,
      "code_lines": 30,
      "comment_lines": 24,
      "empty_lines": 14,
      "functions": [
        {
          "line": 35,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 36,
          "return_type": "bool",
          "name": "update"
        },
        {
          "line": 38,
          "return_type": "uint16_t",
          "name": "getFps"
        },
        {
          "line": 39,
          "return_type": "uint16_t",
          "name": "getMaxFps"
        },
        {
          "line": 40,
          "return_type": "uint16_t",
          "name": "getTargetFps"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setMaxFps"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setTargetFps"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "resetTargetFps"
        },
        {
          "line": 47,
          "return_type": "float",
          "name": "getPercent"
        },
        {
          "line": 52,
          "return_type": "float",
          "name": "getFpsPercent"
        },
        {
          "line": 53,
          "return_type": "return",
          "name": "getFps"
        },
        {
          "line": 57,
          "return_type": "uint32_t",
          "name": "getMaxPeriod"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "AdaptativeFrameCounter"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\application.cpp",
      "total_lines": 232,
      "code_lines": 155,
      "comment_lines": 37,
      "empty_lines": 40,
      "functions": [
        {
          "line": 39,
          "return_type": "define",
          "name": "ADD_QUOTES_HELPER"
        },
        {
          "line": 40,
          "return_type": "define",
          "name": "ADD_QUOTES"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "exitSignalHandler"
        },
        {
          "line": 209,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 211,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 231,
          "return_type": "return",
          "name": "ADD_QUOTES"
        },
        {
          "line": 232,
          "return_type": "return",
          "name": "ADD_QUOTES"
        }
      ],
      "classes": [],
      "includes": [
        "application.h",
        "asyncdispatcher.h",
        "framework/core/configmanager.h",
        "framework/core/eventdispatcher.h",
        "framework/core/modulemanager.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/luaengine/luainterface.h",
        "framework/platform/crashhandler.h",
        "framework/platform/platform.h",
        "framework/proxy/proxy.h",
        "csignal",
        "gitinfo.h",
        "locale",
        "framework/net/webconnection.h",
        "framework/net/connection.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\application.h",
      "total_lines": 96,
      "code_lines": 60,
      "comment_lines": 22,
      "empty_lines": 14,
      "functions": [
        {
          "line": 39,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "deinit"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "run"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "exit"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "restart"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "setCompactName"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "setOrganizationName"
        },
        {
          "line": 57,
          "return_type": "bool",
          "name": "isRunning"
        },
        {
          "line": 58,
          "return_type": "bool",
          "name": "isStopping"
        },
        {
          "line": 59,
          "return_type": "bool",
          "name": "isTerminated"
        },
        {
          "line": 63,
          "return_type": "string",
          "name": "getVersion"
        },
        {
          "line": 65,
          "return_type": "string",
          "name": "getCharset"
        },
        {
          "line": 66,
          "return_type": "string",
          "name": "getBuildCompiler"
        },
        {
          "line": 67,
          "return_type": "string",
          "name": "getBuildDate"
        },
        {
          "line": 68,
          "return_type": "string",
          "name": "getBuildType"
        },
        {
          "line": 69,
          "return_type": "string",
          "name": "getBuildArch"
        },
        {
          "line": 70,
          "return_type": "string",
          "name": "getBuildRevision"
        },
        {
          "line": 71,
          "return_type": "string",
          "name": "getBuildCommit"
        },
        {
          "line": 72,
          "return_type": "string",
          "name": "getOs"
        },
        {
          "line": 73,
          "return_type": "string",
          "name": "getStartupOptions"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "registerLuaFunctions"
        }
      ],
      "classes": [
        {
          "line": 27,
          "name": "ApplicationContext"
        },
        {
          "line": 34,
          "name": "Application"
        }
      ],
      "includes": [
        "framework/global.h",
        "consoleapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\asyncdispatcher.cpp",
      "total_lines": 41,
      "code_lines": 7,
      "comment_lines": 29,
      "empty_lines": 5,
      "functions": [
        {
          "line": 25,
          "return_type": "uint8_t",
          "name": "getThreadCount"
        }
      ],
      "classes": [],
      "includes": [
        "asyncdispatcher.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\config.cpp",
      "total_lines": 173,
      "code_lines": 126,
      "comment_lines": 21,
      "empty_lines": 26,
      "functions": [],
      "classes": [],
      "includes": [
        "config.h",
        "resourcemanager.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\config.h",
      "total_lines": 63,
      "code_lines": 30,
      "comment_lines": 23,
      "empty_lines": 10,
      "functions": [
        {
          "line": 36,
          "return_type": "bool",
          "name": "load"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "unload"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "save"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setValue"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setList"
        },
        {
          "line": 42,
          "return_type": "string",
          "name": "getValue"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setNode"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "mergeNode"
        },
        {
          "line": 47,
          "return_type": "OTMLNodePtr",
          "name": "getNode"
        },
        {
          "line": 48,
          "return_type": "int",
          "name": "getNodeSize"
        },
        {
          "line": 49,
          "return_type": "OTMLNodePtr",
          "name": "getOrCreateNode"
        },
        {
          "line": 51,
          "return_type": "bool",
          "name": "exists"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "remove"
        },
        {
          "line": 54,
          "return_type": "string",
          "name": "getFileName"
        },
        {
          "line": 55,
          "return_type": "bool",
          "name": "isLoaded"
        },
        {
          "line": 58,
          "return_type": "ConfigPtr",
          "name": "asConfig"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "Config"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h",
        "framework/otml/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\consoleapplication.cpp",
      "total_lines": 73,
      "code_lines": 35,
      "comment_lines": 24,
      "empty_lines": 14,
      "functions": [
        {
          "line": 48,
          "return_type": "thread",
          "name": "t1"
        }
      ],
      "classes": [],
      "includes": [
        "consoleapplication.h",
        "framework/core/clock.h",
        "framework/luaengine/luainterface.h",
        "framework/core/eventdispatcher.h",
        "framework/core/asyncdispatcher.h",
        "framework/stdext/time.h",
        "iostream",
        "framework/net/connection.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\consoleapplication.h",
      "total_lines": 46,
      "code_lines": 17,
      "comment_lines": 22,
      "empty_lines": 7,
      "functions": [
        {
          "line": 41,
          "return_type": "void",
          "name": "run"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "mainPoll"
        }
      ],
      "classes": [
        {
          "line": 27,
          "name": "ConsoleApplicationContext"
        },
        {
          "line": 38,
          "name": "ConsoleApplication"
        }
      ],
      "includes": [
        "application.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\declarations.h",
      "total_lines": 47,
      "code_lines": 20,
      "comment_lines": 21,
      "empty_lines": 6,
      "functions": [],
      "classes": [
        {
          "line": 27,
          "name": "ConfigManager"
        },
        {
          "line": 28,
          "name": "ModuleManager"
        },
        {
          "line": 29,
          "name": "ResourceManager"
        },
        {
          "line": 30,
          "name": "Module"
        },
        {
          "line": 31,
          "name": "Config"
        },
        {
          "line": 32,
          "name": "Event"
        },
        {
          "line": 33,
          "name": "ScheduledEvent"
        },
        {
          "line": 34,
          "name": "FileStream"
        },
        {
          "line": 35,
          "name": "BinaryTree"
        },
        {
          "line": 36,
          "name": "OutputBinaryTree"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\event.h",
      "total_lines": 45,
      "code_lines": 17,
      "comment_lines": 22,
      "empty_lines": 6,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "execute"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "cancel"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "isCanceled"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "isExecuted"
        },
        {
          "line": 39,
          "return_type": "bool",
          "name": "isPending"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "Event"
        }
      ],
      "includes": [
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\eventdispatcher.cpp",
      "total_lines": 198,
      "code_lines": 137,
      "comment_lines": 21,
      "empty_lines": 40,
      "functions": [],
      "classes": [],
      "includes": [
        "eventdispatcher.h",
        "asyncdispatcher.h",
        "timer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\eventdispatcher.h",
      "total_lines": 164,
      "code_lines": 112,
      "comment_lines": 24,
      "empty_lines": 28,
      "functions": [
        {
          "line": 47,
          "return_type": "bool",
          "name": "isGroup"
        },
        {
          "line": 51,
          "return_type": "bool",
          "name": "isAsync"
        },
        {
          "line": 55,
          "return_type": "auto",
          "name": "getGroup"
        },
        {
          "line": 59,
          "return_type": "auto",
          "name": "getType"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "shutdown"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 85,
          "return_type": "EventPtr",
          "name": "addEvent"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "deferEvent"
        },
        {
          "line": 87,
          "return_type": "ScheduledEventPtr",
          "name": "scheduleEvent"
        },
        {
          "line": 88,
          "return_type": "ScheduledEventPtr",
          "name": "cycleEvent"
        },
        {
          "line": 118,
          "return_type": "void",
          "name": "waitWhileStateIs"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "setState"
        },
        {
          "line": 127,
          "return_type": "void",
          "name": "mergeEvents"
        },
        {
          "line": 128,
          "return_type": "void",
          "name": "executeEvents"
        },
        {
          "line": 129,
          "return_type": "void",
          "name": "executeDeferEvents"
        },
        {
          "line": 130,
          "return_type": "void",
          "name": "executeScheduledEvents"
        },
        {
          "line": 137,
          "return_type": "Result",
          "name": "pushThreadTask"
        },
        {
          "line": 141,
          "return_type": "if",
          "name": "constexpr"
        }
      ],
      "classes": [
        {
          "line": 27,
          "name": "TaskGroup"
        },
        {
          "line": 35,
          "name": "DispatcherType"
        },
        {
          "line": 72,
          "name": "EventDispatcher"
        },
        {
          "line": 76,
          "name": "EventDispatcher"
        },
        {
          "line": 97,
          "name": "ThreadTaskEventState"
        }
      ],
      "includes": [
        "scheduledevent.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\filestream.cpp",
      "total_lines": 479,
      "code_lines": 402,
      "comment_lines": 22,
      "empty_lines": 55,
      "functions": [
        {
          "line": 30,
          "return_type": "void",
          "name": "grow"
        },
        {
          "line": 186,
          "return_type": "return",
          "name": "PHYSFS_fileLength"
        },
        {
          "line": 193,
          "return_type": "return",
          "name": "PHYSFS_tell"
        },
        {
          "line": 200,
          "return_type": "return",
          "name": "PHYSFS_eof"
        },
        {
          "line": 349,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 357,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 478,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "filestream.h",
        "binarytree.h",
        "graphicalapplication.h",
        "framework/core/application.h",
        "physfs.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\core\\filestream.h",
      "total_lines": 87,
      "code_lines": 55,
      "comment_lines": 22,
      "empty_lines": 10,
      "functions": [
        {
          "line": 40,
          "return_type": "void",
          "name": "cache"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "flush"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "write"
        },
        {
          "line": 44,
          "return_type": "int",
          "name": "read"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "seek"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "skip"
        },
        {
          "line": 47,
          "return_type": "uint32_t",
          "name": "size"
        },
        {
          "line": 48,
          "return_type": "uint32_t",
          "name": "tell"
        },
        {
          "line": 49,
          "return_type": "bool",
          "name": "eof"
        },
        {
          "line": 50,
          "return_type": "string",
          "name": "name"
        },
        {
          "line": 52,
          "return_type": "uint8_t",
          "name": "getU8"
        },
        {
          "line": 53,
          "return_type": "uint16_t",
          "name": "getU16"
        },
        {
          "line": 54,
          "return_type": "uint32_t",
          "name": "getU32"
        },
        {
          "line": 55,
          "return_type": "uint64_t",
          "name": "getU64"
        },
        {
          "line": 56,
          "return_type": "int8_t",
          "name": "get8"
        },
        {
          "line": 57,
          "return_type": "int16_t",
          "name": "get16"
        },
        {
          "line": 58,
          "return_type": "int32_t",
          "name": "get32"
        },
        {
          "line": 59,
          "return_type": "int64_t",
          "name": "get64"
        },
        {
          "line": 60,
          "return_type": "string",
          "name": "getString"
        },
        {
          "line": 61,
          "return_type": "BinaryTreePtr",
          "name": "getBinaryTree"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "startNode"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "endNode"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "addU8"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "addU16"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "addU32"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "addU64"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "add8"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "add16"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "add32"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "add64"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "addString"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "addPos"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "addPoint"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "throwError"
        }
      ],
      "classes": [
        {
          "line": 33,
          "name": "FileStream"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/core/resourcemanager.h",
        "framework/luaengine/luaobject.h",
        "framework/util/point.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\garbagecollection.cpp",
      "total_lines": 101,
      "code_lines": 62,
      "comment_lines": 21,
      "empty_lines": 18,
      "functions": [],
      "classes": [],
      "includes": [
        "garbagecollection.h",
        "client/thingtypemanager.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/animatedtexture.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/texturemanager.h",
        "framework/luaengine/luainterface.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\garbagecollection.h",
      "total_lines": 44,
      "code_lines": 19,
      "comment_lines": 21,
      "empty_lines": 4,
      "functions": [
        {
          "line": 31,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 32,
          "return_type": "void",
          "name": "lua"
        },
        {
          "line": 33,
          "return_type": "void",
          "name": "texture"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "drawpoll"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "thingType"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "canCheck"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "GarbageCollection"
        }
      ],
      "includes": [
        "timer.h",
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\graphicalapplication.cpp",
      "total_lines": 350,
      "code_lines": 245,
      "comment_lines": 36,
      "empty_lines": 69,
      "functions": [
        {
          "line": 207,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 306,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 330,
          "return_type": "Image",
          "name": "image"
        }
      ],
      "classes": [],
      "includes": [
        "graphicalapplication.h",
        "garbagecollection.h",
        "framework/stdext/time.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/clock.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/drawpool.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/graphics.h",
        "framework/graphics/image.h",
        "framework/graphics/particlemanager.h",
        "framework/graphics/texturemanager.h",
        "framework/input/mouse.h",
        "framework/platform/platformwindow.h",
        "framework/ui/uimanager.h",
        "framework/ui/uiwidget.h",
        "framework/sound/soundmanager.h",
        "emscripten/emscripten.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\core\\graphicalapplication.h",
      "total_lines": 160,
      "code_lines": 108,
      "comment_lines": 21,
      "empty_lines": 31,
      "functions": [
        {
          "line": 35,
          "return_type": "void",
          "name": "preLoad"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "canDraw"
        },
        {
          "line": 39,
          "return_type": "bool",
          "name": "isLoadingAsyncTexture"
        },
        {
          "line": 40,
          "return_type": "bool",
          "name": "isUsingProtobuf"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "onLoadingAsyncTextureChanged"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "doMapScreenshot"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "setSpriteSize"
        },
        {
          "line": 58,
          "return_type": "uint8_t",
          "name": "getSpriteSize"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "setDrawEvents"
        },
        {
          "line": 61,
          "return_type": "ApplicationDrawEventsPtr",
          "name": "getDrawEvents"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "deinit"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "run"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "mainPoll"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "setMaxFps"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "setTargetFps"
        },
        {
          "line": 82,
          "return_type": "uint16_t",
          "name": "getFps"
        },
        {
          "line": 83,
          "return_type": "uint8_t",
          "name": "getMaxFps"
        },
        {
          "line": 84,
          "return_type": "uint8_t",
          "name": "getTargetFps"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "resetTargetFps"
        },
        {
          "line": 88,
          "return_type": "bool",
          "name": "isOnInputEvent"
        },
        {
          "line": 89,
          "return_type": "bool",
          "name": "mustOptimize"
        },
        {
          "line": 96,
          "return_type": "bool",
          "name": "isForcedEffectOptimization"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "optimize"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "forceEffectOptimization"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "setDrawEffectOnTop"
        },
        {
          "line": 102,
          "return_type": "bool",
          "name": "isDrawingEffectsOnTop"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "setDrawTexts"
        },
        {
          "line": 105,
          "return_type": "bool",
          "name": "isDrawingTexts"
        },
        {
          "line": 107,
          "return_type": "float",
          "name": "getHUDScale"
        },
        {
          "line": 108,
          "return_type": "void",
          "name": "setHUDScale"
        },
        {
          "line": 110,
          "return_type": "float",
          "name": "getCreatureInformationScale"
        },
        {
          "line": 111,
          "return_type": "void",
          "name": "setCreatureInformationScale"
        },
        {
          "line": 113,
          "return_type": "float",
          "name": "getAnimatedTextScale"
        },
        {
          "line": 114,
          "return_type": "void",
          "name": "setAnimatedTextScale"
        },
        {
          "line": 116,
          "return_type": "float",
          "name": "getStaticTextScale"
        },
        {
          "line": 117,
          "return_type": "void",
          "name": "setStaticTextScale"
        },
        {
          "line": 119,
          "return_type": "bool",
          "name": "isLoadingAsyncTexture"
        },
        {
          "line": 120,
          "return_type": "void",
          "name": "setLoadingAsyncTexture"
        },
        {
          "line": 122,
          "return_type": "bool",
          "name": "isScaled"
        },
        {
          "line": 124,
          "return_type": "bool",
          "name": "isEncrypted"
        },
        {
          "line": 131,
          "return_type": "void",
          "name": "setDrawEvents"
        },
        {
          "line": 132,
          "return_type": "void",
          "name": "doScreenshot"
        },
        {
          "line": 133,
          "return_type": "void",
          "name": "doMapScreenshot"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "mainLoop"
        },
        {
          "line": 139,
          "return_type": "void",
          "name": "resize"
        },
        {
          "line": 140,
          "return_type": "void",
          "name": "inputEvent"
        }
      ],
      "classes": [
        {
          "line": 32,
          "name": "ApplicationDrawEvents"
        },
        {
          "line": 44,
          "name": "GraphicalApplication"
        },
        {
          "line": 47,
          "name": "GraphicalApplicationContext"
        },
        {
          "line": 68,
          "name": "GraphicalApplication"
        }
      ],
      "includes": [
        "application.h",
        "framework/core/adaptativeframecounter.h",
        "framework/core/inputevent.h",
        "framework/graphics/declarations.h",
        "framework/platform/platformwindow.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\logger.cpp",
      "total_lines": 150,
      "code_lines": 102,
      "comment_lines": 22,
      "empty_lines": 26,
      "functions": [],
      "classes": [],
      "includes": [
        "logger.h",
        "eventdispatcher.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/luaengine/luainterface.h",
        "framework/platform/platform.h",
        "framework/platform/platformwindow.h",
        "android/log.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\module.cpp",
      "total_lines": 274,
      "code_lines": 200,
      "comment_lines": 26,
      "empty_lines": 48,
      "functions": [
        {
          "line": 52,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 56,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 59,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 62,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 113,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 164,
          "return_type": "return",
          "name": "load"
        }
      ],
      "classes": [],
      "includes": [
        "module.h",
        "modulemanager.h",
        "resourcemanager.h",
        "framework/luaengine/luainterface.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\module.h",
      "total_lines": 88,
      "code_lines": 54,
      "comment_lines": 23,
      "empty_lines": 11,
      "functions": [
        {
          "line": 36,
          "return_type": "bool",
          "name": "load"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "unload"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "reload"
        },
        {
          "line": 40,
          "return_type": "bool",
          "name": "canUnload"
        },
        {
          "line": 41,
          "return_type": "bool",
          "name": "canReload"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "isEnabled"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "isLoaded"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "isReloadable"
        },
        {
          "line": 45,
          "return_type": "bool",
          "name": "isDependent"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "isSandboxed"
        },
        {
          "line": 47,
          "return_type": "bool",
          "name": "hasDependency"
        },
        {
          "line": 48,
          "return_type": "bool",
          "name": "hasSupportedDevice"
        },
        {
          "line": 49,
          "return_type": "int",
          "name": "getSandbox"
        },
        {
          "line": 51,
          "return_type": "string",
          "name": "getDescription"
        },
        {
          "line": 52,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 53,
          "return_type": "string",
          "name": "getAuthor"
        },
        {
          "line": 54,
          "return_type": "string",
          "name": "getWebsite"
        },
        {
          "line": 55,
          "return_type": "string",
          "name": "getVersion"
        },
        {
          "line": 56,
          "return_type": "bool",
          "name": "isAutoLoad"
        },
        {
          "line": 57,
          "return_type": "int",
          "name": "getAutoLoadPriority"
        },
        {
          "line": 60,
          "return_type": "ModulePtr",
          "name": "asModule"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "discover"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "Module"
        },
        {
          "line": 64,
          "name": "ModuleManager"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h",
        "framework/otml/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\modulemanager.cpp",
      "total_lines": 226,
      "code_lines": 166,
      "comment_lines": 24,
      "empty_lines": 36,
      "functions": [
        {
          "line": 184,
          "return_type": "for",
          "name": "module"
        }
      ],
      "classes": [],
      "includes": [
        "modulemanager.h",
        "resourcemanager.h",
        "graphicalapplication.h",
        "framework/platform/platformwindow.h",
        "framework/core/application.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/otml/otml.h",
        "algorithm"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\resourcemanager.cpp",
      "total_lines": 792,
      "code_lines": 641,
      "comment_lines": 28,
      "empty_lines": 123,
      "functions": [
        {
          "line": 47,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 51,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 110,
          "return_type": "return",
          "name": "setWriteDir"
        },
        {
          "line": 238,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 241,
          "return_type": "string",
          "name": "buffer"
        },
        {
          "line": 316,
          "return_type": "return",
          "name": "writeFileBuffer"
        },
        {
          "line": 318,
          "return_type": "return",
          "name": "writeFileBuffer"
        },
        {
          "line": 328,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 336,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 344,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 350,
          "return_type": "return",
          "name": "PHYSFS_delete"
        },
        {
          "line": 355,
          "return_type": "return",
          "name": "PHYSFS_mkdir"
        },
        {
          "line": 394,
          "return_type": "path",
          "name": "p"
        },
        {
          "line": 395,
          "return_type": "return",
          "name": "discoverPath"
        },
        {
          "line": 405,
          "return_type": "directory_iterator",
          "name": "it"
        },
        {
          "line": 425,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 450,
          "return_type": "return",
          "name": "getRealDir"
        },
        {
          "line": 458,
          "return_type": "return",
          "name": "PHYSFS_getBaseDir"
        },
        {
          "line": 465,
          "return_type": "return",
          "name": "getBaseDir"
        },
        {
          "line": 466,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 472,
          "return_type": "return",
          "name": "PHYSFS_getPrefDir"
        },
        {
          "line": 582,
          "return_type": "ifstream",
          "name": "ifs"
        },
        {
          "line": 583,
          "return_type": "string",
          "name": "data"
        },
        {
          "line": 611,
          "return_type": "string",
          "name": "buffer"
        },
        {
          "line": 631,
          "return_type": "string",
          "name": "buffer"
        },
        {
          "line": 650,
          "return_type": "ifstream",
          "name": "file"
        },
        {
          "line": 654,
          "return_type": "string",
          "name": "buffer"
        },
        {
          "line": 692,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 708,
          "return_type": "path",
          "name": "path"
        },
        {
          "line": 724,
          "return_type": "path",
          "name": "newBinaryPath"
        },
        {
          "line": 736,
          "return_type": "path",
          "name": "path"
        }
      ],
      "classes": [],
      "includes": [
        "algorithm",
        "filesystem",
        "ranges",
        "filestream.h",
        "resourcemanager.h",
        "client/game.h",
        "framework/core/application.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/luaengine/luainterface.h",
        "framework/net/protocolhttp.h",
        "framework/platform/platform.h",
        "framework/util/crypt.h",
        "physfs.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\core\\resourcemanager.h",
      "total_lines": 109,
      "code_lines": 64,
      "comment_lines": 28,
      "empty_lines": 17,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "discoverWorkDir"
        },
        {
          "line": 39,
          "return_type": "bool",
          "name": "setupUserWriteDir"
        },
        {
          "line": 40,
          "return_type": "bool",
          "name": "setWriteDir"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "addSearchPath"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "removeSearchPath"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "searchAndAddPackages"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "fileExists"
        },
        {
          "line": 47,
          "return_type": "bool",
          "name": "directoryExists"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "readFileStream"
        },
        {
          "line": 51,
          "return_type": "string",
          "name": "readFileContents"
        },
        {
          "line": 53,
          "return_type": "bool",
          "name": "writeFileBuffer"
        },
        {
          "line": 54,
          "return_type": "bool",
          "name": "writeFileContents"
        },
        {
          "line": 56,
          "return_type": "bool",
          "name": "writeFileStream"
        },
        {
          "line": 59,
          "return_type": "FileStreamPtr",
          "name": "openFile"
        },
        {
          "line": 60,
          "return_type": "FileStreamPtr",
          "name": "appendFile"
        },
        {
          "line": 61,
          "return_type": "FileStreamPtr",
          "name": "createFile"
        },
        {
          "line": 62,
          "return_type": "bool",
          "name": "deleteFile"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "makeDir"
        },
        {
          "line": 68,
          "return_type": "string",
          "name": "resolvePath"
        },
        {
          "line": 69,
          "return_type": "string",
          "name": "getRealDir"
        },
        {
          "line": 70,
          "return_type": "string",
          "name": "getRealPath"
        },
        {
          "line": 71,
          "return_type": "string",
          "name": "getBaseDir"
        },
        {
          "line": 72,
          "return_type": "string",
          "name": "getUserDir"
        },
        {
          "line": 73,
          "return_type": "string",
          "name": "getWriteDir"
        },
        {
          "line": 74,
          "return_type": "string",
          "name": "getWorkDir"
        },
        {
          "line": 77,
          "return_type": "string",
          "name": "guessFilePath"
        },
        {
          "line": 78,
          "return_type": "bool",
          "name": "isFileType"
        },
        {
          "line": 79,
          "return_type": "string",
          "name": "getFileName"
        },
        {
          "line": 80,
          "return_type": "ticks_t",
          "name": "getFileTime"
        },
        {
          "line": 82,
          "return_type": "string",
          "name": "encrypt"
        },
        {
          "line": 83,
          "return_type": "string",
          "name": "decrypt"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "runEncryption"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "save_string_into_file"
        },
        {
          "line": 88,
          "return_type": "string",
          "name": "fileChecksum"
        },
        {
          "line": 90,
          "return_type": "string",
          "name": "selfChecksum"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "updateFiles"
        },
        {
          "line": 92,
          "return_type": "void",
          "name": "updateExecutable"
        },
        {
          "line": 93,
          "return_type": "bool",
          "name": "launchCorrect"
        },
        {
          "line": 94,
          "return_type": "string",
          "name": "createArchive"
        },
        {
          "line": 97,
          "return_type": "string",
          "name": "getBinaryPath"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "ResourceManager"
        }
      ],
      "includes": [
        "declarations.h",
        "filesystem",
        "set"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\scheduledevent.h",
      "total_lines": 56,
      "code_lines": 28,
      "comment_lines": 22,
      "empty_lines": 6,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "execute"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "postpone"
        },
        {
          "line": 35,
          "return_type": "bool",
          "name": "nextCycle"
        },
        {
          "line": 37,
          "return_type": "int",
          "name": "ticks"
        },
        {
          "line": 38,
          "return_type": "int",
          "name": "remainingTicks"
        },
        {
          "line": 39,
          "return_type": "int",
          "name": "delay"
        },
        {
          "line": 40,
          "return_type": "int",
          "name": "cyclesExecuted"
        },
        {
          "line": 41,
          "return_type": "int",
          "name": "maxCycles"
        },
        {
          "line": 45,
          "return_type": "bool",
          "name": "operator"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "ScheduledEvent"
        }
      ],
      "includes": [
        "clock.h",
        "event.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\timer.h",
      "total_lines": 45,
      "code_lines": 17,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 32,
          "return_type": "void",
          "name": "restart"
        },
        {
          "line": 33,
          "return_type": "void",
          "name": "stop"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 36,
          "return_type": "ticks_t",
          "name": "startTicks"
        },
        {
          "line": 37,
          "return_type": "ticks_t",
          "name": "ticksElapsed"
        },
        {
          "line": 38,
          "return_type": "float",
          "name": "timeElapsed"
        },
        {
          "line": 40,
          "return_type": "bool",
          "name": "running"
        }
      ],
      "classes": [
        {
          "line": 27,
          "name": "Timer"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\core\\unzipper.cpp",
      "total_lines": 144,
      "code_lines": 96,
      "comment_lines": 30,
      "empty_lines": 18,
      "functions": [],
      "classes": [],
      "includes": [
        "unzipper.h",
        "logger.h",
        "resourcemanager.h",
        "filesystem",
        "ioapi.h",
        "ioapi_mem.h",
        "unzip.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\discord\\discord.cpp",
      "total_lines": 69,
      "code_lines": 40,
      "comment_lines": 21,
      "empty_lines": 8,
      "functions": [],
      "classes": [],
      "includes": [
        "discord.h",
        "framework/core/eventdispatcher.h",
        "time.h",
        "chrono"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\discord\\discord.h",
      "total_lines": 48,
      "code_lines": 20,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 37,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "update"
        }
      ],
      "classes": [
        {
          "line": 34,
          "name": "Discord"
        }
      ],
      "includes": [
        "framework/config.h",
        "functional",
        "string",
        "discord_register.h",
        "discord_rpc.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\animatedtexture.cpp",
      "total_lines": 122,
      "code_lines": 79,
      "comment_lines": 21,
      "empty_lines": 22,
      "functions": [
        {
          "line": 108,
          "return_type": "before",
          "name": "stop"
        }
      ],
      "classes": [],
      "includes": [
        "animatedtexture.h",
        "graphics.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/drawpoolmanager.h",
        "utility"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\animatedtexture.h",
      "total_lines": 71,
      "code_lines": 36,
      "comment_lines": 21,
      "empty_lines": 14,
      "functions": [
        {
          "line": 34,
          "return_type": "TexturePtr",
          "name": "get"
        },
        {
          "line": 35,
          "return_type": "TexturePtr",
          "name": "getCurrentFrame"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "create"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "buildHardwareMipmaps"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setSmooth"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setRepeat"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setCached"
        },
        {
          "line": 48,
          "return_type": "uint32_t",
          "name": "getNumPlays"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setNumPlays"
        },
        {
          "line": 51,
          "return_type": "bool",
          "name": "isOnMap"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setOnMap"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "restart"
        },
        {
          "line": 57,
          "return_type": "bool",
          "name": "isAnimatedTexture"
        },
        {
          "line": 58,
          "return_type": "bool",
          "name": "running"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "AnimatedTexture"
        }
      ],
      "includes": [
        "texture.h",
        "framework/core/timer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\apngloader.cpp",
      "total_lines": 1053,
      "code_lines": 848,
      "comment_lines": 66,
      "empty_lines": 139,
      "functions": [
        {
          "line": 34,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 35,
          "return_type": "define",
          "name": "swap16"
        },
        {
          "line": 36,
          "return_type": "define",
          "name": "swap32"
        },
        {
          "line": 39,
          "return_type": "define",
          "name": "swap16"
        },
        {
          "line": 40,
          "return_type": "define",
          "name": "swap32"
        },
        {
          "line": 42,
          "return_type": "define",
          "name": "swap16"
        },
        {
          "line": 43,
          "return_type": "define",
          "name": "swap32"
        },
        {
          "line": 55,
          "return_type": "define",
          "name": "notabc"
        },
        {
          "line": 57,
          "return_type": "define",
          "name": "ROWBYTES"
        },
        {
          "line": 81,
          "return_type": "pragma",
          "name": "warning"
        },
        {
          "line": 82,
          "return_type": "pragma",
          "name": "warning"
        },
        {
          "line": 84,
          "return_type": "uint32_t",
          "name": "read32"
        },
        {
          "line": 94,
          "return_type": "uint16_t",
          "name": "read16"
        },
        {
          "line": 102,
          "return_type": "uint16_t",
          "name": "readshort"
        },
        {
          "line": 107,
          "return_type": "void",
          "name": "read_sub_row"
        },
        {
          "line": 113,
          "return_type": "void",
          "name": "read_up_row"
        },
        {
          "line": 120,
          "return_type": "void",
          "name": "read_average_row"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "read_paeth_row"
        },
        {
          "line": 159,
          "return_type": "void",
          "name": "unpack"
        },
        {
          "line": 184,
          "return_type": "void",
          "name": "compose0"
        },
        {
          "line": 218,
          "return_type": "void",
          "name": "compose2"
        },
        {
          "line": 274,
          "return_type": "void",
          "name": "compose3"
        },
        {
          "line": 334,
          "return_type": "void",
          "name": "compose4"
        },
        {
          "line": 381,
          "return_type": "void",
          "name": "compose6"
        },
        {
          "line": 434,
          "return_type": "int",
          "name": "load_apng"
        },
        {
          "line": 503,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 505,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 556,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 585,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 603,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 680,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 685,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 692,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 758,
          "return_type": "void",
          "name": "write_chunk"
        },
        {
          "line": 776,
          "return_type": "void",
          "name": "write_IDATs"
        },
        {
          "line": 813,
          "return_type": "void",
          "name": "save_png"
        },
        {
          "line": 820,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 822,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1043,
          "return_type": "void",
          "name": "free_apng"
        },
        {
          "line": 1052,
          "return_type": "pragma",
          "name": "warning"
        }
      ],
      "classes": [],
      "includes": [
        "apngloader.h",
        "cstdlib",
        "cstring",
        "fstream",
        "sstream",
        "zlib.h",
        "byteswap.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\graphics\\bitmapfont.cpp",
      "total_lines": 549,
      "code_lines": 380,
      "comment_lines": 79,
      "empty_lines": 90,
      "functions": [
        {
          "line": 93,
          "return_type": "Rect",
          "name": "screenCoords"
        },
        {
          "line": 123,
          "return_type": "Rect",
          "name": "glyphScreenCoords"
        },
        {
          "line": 129,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 137,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 201,
          "return_type": "Rect",
          "name": "glyphScreenCoords"
        },
        {
          "line": 207,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 215,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 302,
          "return_type": "Rect",
          "name": "glyphScreenCoords"
        },
        {
          "line": 308,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 316,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 392,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 402,
          "return_type": "Point",
          "name": "virtualPos"
        },
        {
          "line": 417,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 459,
          "return_type": "Rect",
          "name": "glyphCoords"
        },
        {
          "line": 521,
          "return_type": "string",
          "name": "line"
        }
      ],
      "classes": [],
      "includes": [
        "bitmapfont.h",
        "graphics.h",
        "image.h",
        "texturemanager.h",
        "framework/otml/otml.h",
        "drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\graphics\\bitmapfont.h",
      "total_lines": 91,
      "code_lines": 47,
      "comment_lines": 27,
      "empty_lines": 17,
      "functions": [
        {
          "line": 37,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "drawText"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "drawText"
        },
        {
          "line": 66,
          "return_type": "Size",
          "name": "calculateTextRectSize"
        },
        {
          "line": 68,
          "return_type": "string",
          "name": "wrapText"
        },
        {
          "line": 71,
          "return_type": "int",
          "name": "getGlyphHeight"
        },
        {
          "line": 75,
          "return_type": "int",
          "name": "getYOffset"
        },
        {
          "line": 76,
          "return_type": "Size",
          "name": "getGlyphSpacing"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "calculateGlyphsWidthsAutomatically"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "updateColors"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "BitmapFont"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/otml/declarations.h",
        "utility"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\cachedtext.cpp",
      "total_lines": 83,
      "code_lines": 49,
      "comment_lines": 21,
      "empty_lines": 13,
      "functions": [],
      "classes": [],
      "includes": [
        "cachedtext.h",
        "fontmanager.h",
        "framework/graphics/drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\declarations.h",
      "total_lines": 78,
      "code_lines": 51,
      "comment_lines": 21,
      "empty_lines": 6,
      "functions": [],
      "classes": [
        {
          "line": 28,
          "name": "DrawPoolType"
        },
        {
          "line": 30,
          "name": "Texture"
        },
        {
          "line": 31,
          "name": "TextureManager"
        },
        {
          "line": 32,
          "name": "Image"
        },
        {
          "line": 33,
          "name": "AnimatedTexture"
        },
        {
          "line": 34,
          "name": "BitmapFont"
        },
        {
          "line": 35,
          "name": "CachedText"
        },
        {
          "line": 36,
          "name": "FrameBuffer"
        },
        {
          "line": 37,
          "name": "FrameBufferManager"
        },
        {
          "line": 38,
          "name": "Shader"
        },
        {
          "line": 39,
          "name": "ShaderProgram"
        },
        {
          "line": 40,
          "name": "PainterShaderProgram"
        },
        {
          "line": 41,
          "name": "Particle"
        },
        {
          "line": 42,
          "name": "ParticleType"
        },
        {
          "line": 43,
          "name": "ParticleEmitter"
        },
        {
          "line": 44,
          "name": "ParticleAffector"
        },
        {
          "line": 45,
          "name": "ParticleSystem"
        },
        {
          "line": 46,
          "name": "ParticleEffect"
        },
        {
          "line": 47,
          "name": "ParticleEffectType"
        },
        {
          "line": 48,
          "name": "SpriteSheet"
        },
        {
          "line": 49,
          "name": "DrawPool"
        },
        {
          "line": 50,
          "name": "DrawPoolManager"
        },
        {
          "line": 51,
          "name": "CoordsBuffer"
        },
        {
          "line": 52,
          "name": "ApplicationDrawEvents"
        },
        {
          "line": 53,
          "name": "ApplicationContext"
        },
        {
          "line": 54,
          "name": "GraphicalApplicationContext"
        }
      ],
      "includes": [
        "glutil.h",
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\drawpool.h",
      "total_lines": 434,
      "code_lines": 324,
      "comment_lines": 21,
      "empty_lines": 89,
      "functions": [
        {
          "line": 68,
          "return_type": "bool",
          "name": "put"
        },
        {
          "line": 78,
          "return_type": "bool",
          "name": "isLast"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "forceUpdate"
        },
        {
          "line": 86,
          "return_type": "bool",
          "name": "wasModified"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "setEnable"
        },
        {
          "line": 124,
          "return_type": "DrawPoolType",
          "name": "getType"
        },
        {
          "line": 126,
          "return_type": "bool",
          "name": "isEnabled"
        },
        {
          "line": 127,
          "return_type": "bool",
          "name": "isType"
        },
        {
          "line": 129,
          "return_type": "bool",
          "name": "isValid"
        },
        {
          "line": 130,
          "return_type": "bool",
          "name": "hasFrameBuffer"
        },
        {
          "line": 131,
          "return_type": "FrameBufferPtr",
          "name": "getFrameBuffer"
        },
        {
          "line": 133,
          "return_type": "bool",
          "name": "canRepaint"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "repaint"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "resetState"
        },
        {
          "line": 136,
          "return_type": "void",
          "name": "scale"
        },
        {
          "line": 138,
          "return_type": "void",
          "name": "agroup"
        },
        {
          "line": 140,
          "return_type": "void",
          "name": "setScaleFactor"
        },
        {
          "line": 141,
          "return_type": "float",
          "name": "getScaleFactor"
        },
        {
          "line": 142,
          "return_type": "bool",
          "name": "isScaled"
        },
        {
          "line": 144,
          "return_type": "void",
          "name": "setFramebuffer"
        },
        {
          "line": 145,
          "return_type": "void",
          "name": "removeFramebuffer"
        },
        {
          "line": 147,
          "return_type": "void",
          "name": "onBeforeDraw"
        },
        {
          "line": 148,
          "return_type": "void",
          "name": "onAfterDraw"
        },
        {
          "line": 150,
          "return_type": "bool",
          "name": "isDrawState"
        },
        {
          "line": 158,
          "return_type": "void",
          "name": "resetBuffer"
        },
        {
          "line": 166,
          "return_type": "void",
          "name": "release"
        },
        {
          "line": 241,
          "return_type": "void",
          "name": "execute"
        },
        {
          "line": 265,
          "return_type": "void",
          "name": "addCoords"
        },
        {
          "line": 279,
          "return_type": "void",
          "name": "addAction"
        },
        {
          "line": 280,
          "return_type": "void",
          "name": "bindFrameBuffer"
        },
        {
          "line": 281,
          "return_type": "void",
          "name": "releaseFrameBuffer"
        },
        {
          "line": 283,
          "return_type": "void",
          "name": "setFPS"
        },
        {
          "line": 285,
          "return_type": "bool",
          "name": "updateHash"
        },
        {
          "line": 286,
          "return_type": "PoolState",
          "name": "getState"
        },
        {
          "line": 291,
          "return_type": "float",
          "name": "getOpacity"
        },
        {
          "line": 292,
          "return_type": "Rect",
          "name": "getClipRect"
        },
        {
          "line": 294,
          "return_type": "void",
          "name": "setCompositionMode"
        },
        {
          "line": 295,
          "return_type": "void",
          "name": "setBlendEquation"
        },
        {
          "line": 296,
          "return_type": "void",
          "name": "setClipRect"
        },
        {
          "line": 297,
          "return_type": "void",
          "name": "setOpacity"
        },
        {
          "line": 298,
          "return_type": "void",
          "name": "setShaderProgram"
        },
        {
          "line": 300,
          "return_type": "void",
          "name": "resetOpacity"
        },
        {
          "line": 301,
          "return_type": "void",
          "name": "resetClipRect"
        },
        {
          "line": 302,
          "return_type": "void",
          "name": "resetShaderProgram"
        },
        {
          "line": 303,
          "return_type": "void",
          "name": "resetCompositionMode"
        },
        {
          "line": 304,
          "return_type": "void",
          "name": "resetBlendEquation"
        },
        {
          "line": 305,
          "return_type": "void",
          "name": "resetTransformMatrix"
        },
        {
          "line": 307,
          "return_type": "void",
          "name": "pushTransformMatrix"
        },
        {
          "line": 308,
          "return_type": "void",
          "name": "popTransformMatrix"
        },
        {
          "line": 309,
          "return_type": "void",
          "name": "translate"
        },
        {
          "line": 310,
          "return_type": "void",
          "name": "translate"
        },
        {
          "line": 311,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 312,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 313,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 315,
          "return_type": "void",
          "name": "waitWhileStateIs"
        },
        {
          "line": 319,
          "return_type": "void",
          "name": "setDrawState"
        },
        {
          "line": 326,
          "return_type": "void",
          "name": "setParameter"
        },
        {
          "line": 330,
          "return_type": "T",
          "name": "getParameter"
        },
        {
          "line": 336,
          "return_type": "return",
          "name": "T"
        },
        {
          "line": 338,
          "return_type": "bool",
          "name": "containsParameter"
        },
        {
          "line": 341,
          "return_type": "void",
          "name": "removeParameter"
        },
        {
          "line": 347,
          "return_type": "void",
          "name": "flush"
        },
        {
          "line": 356,
          "return_type": "void",
          "name": "resetOnlyOnceParameters"
        },
        {
          "line": 377,
          "return_type": "void",
          "name": "nextStateAndReset"
        },
        {
          "line": 381,
          "return_type": "void",
          "name": "backState"
        }
      ],
      "classes": [
        {
          "line": 36,
          "name": "DrawPoolType"
        },
        {
          "line": 56,
          "name": "DrawPoolState"
        },
        {
          "line": 114,
          "name": "DrawPool"
        },
        {
          "line": 208,
          "name": "DrawMethodType"
        },
        {
          "line": 431,
          "name": "DrawPoolManager"
        }
      ],
      "includes": [
        "utility",
        "declarations.h",
        "framebuffer.h",
        "framework/core/timer.h",
        "framework/core/graphicalapplication.h",
        "framework/platform/platformwindow.h",
        "../stdext/storage.h",
        "unordered_set"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\graphics\\drawpoolmanager.h",
      "total_lines": 130,
      "code_lines": 81,
      "comment_lines": 21,
      "empty_lines": 28,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "select"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "preDraw"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "preDraw"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "preDraw"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "addTexturedPoint"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "addTexturedPos"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "addTexturedRect"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "addTexturedRect"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "addTexturedCoordsBuffer"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "addUpsideDownTexturedRect"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "addTexturedRepeatedRect"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "addFilledRect"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "addFilledTriangle"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "addBoundingRect"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "addAction"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "bindFrameBuffer"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "releaseFrameBuffer"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "setOpacity"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "setClipRect"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "setBlendEquation"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "setCompositionMode"
        },
        {
          "line": 65,
          "return_type": "bool",
          "name": "shaderNeedFramebuffer"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "setShaderProgram"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "setShaderProgram"
        },
        {
          "line": 69,
          "return_type": "float",
          "name": "getOpacity"
        },
        {
          "line": 70,
          "return_type": "Rect",
          "name": "getClipRect"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "resetState"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "resetOpacity"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "resetClipRect"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "resetShaderProgram"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "resetCompositionMode"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "pushTransformMatrix"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "popTransformMatrix"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "scale"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "translate"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "translate"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "setScaleFactor"
        },
        {
          "line": 88,
          "return_type": "float",
          "name": "getScaleFactor"
        },
        {
          "line": 89,
          "return_type": "bool",
          "name": "isScaled"
        },
        {
          "line": 90,
          "return_type": "uint16_t",
          "name": "getScaledSpriteSize"
        },
        {
          "line": 93,
          "return_type": "void",
          "name": "setParameter"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "removeParameter"
        },
        {
          "line": 97,
          "return_type": "T",
          "name": "getParameter"
        },
        {
          "line": 98,
          "return_type": "bool",
          "name": "containsParameter"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "flush"
        },
        {
          "line": 102,
          "return_type": "DrawPoolType",
          "name": "getCurrentType"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "repaint"
        },
        {
          "line": 108,
          "return_type": "bool",
          "name": "isPreDrawing"
        },
        {
          "line": 113,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 114,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 115,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 116,
          "return_type": "void",
          "name": "drawObject"
        },
        {
          "line": 117,
          "return_type": "void",
          "name": "drawPool"
        },
        {
          "line": 118,
          "return_type": "void",
          "name": "drawObjects"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "DrawPoolManager"
        },
        {
          "line": 127,
          "name": "GraphicalApplication"
        }
      ],
      "includes": [
        "framework/graphics/declarations.h",
        "framework/graphics/drawpool.h",
        "framework/graphics/framebuffer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\fontmanager.cpp",
      "total_lines": 92,
      "code_lines": 54,
      "comment_lines": 25,
      "empty_lines": 13,
      "functions": [
        {
          "line": 62,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "fontmanager.h",
        "texture.h",
        "framework/core/resourcemanager.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\framebuffer.cpp",
      "total_lines": 209,
      "code_lines": 149,
      "comment_lines": 21,
      "empty_lines": 39,
      "functions": [
        {
          "line": 200,
          "return_type": "Image",
          "name": "image"
        }
      ],
      "classes": [],
      "includes": [
        "framebuffer.h",
        "graphics.h",
        "texture.h",
        "framework/core/application.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/image.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\graphics.cpp",
      "total_lines": 99,
      "code_lines": 54,
      "comment_lines": 25,
      "empty_lines": 20,
      "functions": [
        {
          "line": 32,
          "return_type": "string_view",
          "name": "glString"
        }
      ],
      "classes": [],
      "includes": [
        "graphics.h",
        "fontmanager.h",
        "painter.h",
        "texturemanager.h",
        "framework/platform/platformwindow.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\image.cpp",
      "total_lines": 278,
      "code_lines": 205,
      "comment_lines": 24,
      "empty_lines": 49,
      "functions": [
        {
          "line": 44,
          "return_type": "return",
          "name": "loadPNG"
        },
        {
          "line": 53,
          "return_type": "stringstream",
          "name": "fin"
        },
        {
          "line": 78,
          "return_type": "return",
          "name": "loadPNG"
        },
        {
          "line": 85,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 105,
          "return_type": "Color",
          "name": "pixelColor"
        },
        {
          "line": 125,
          "return_type": "Color",
          "name": "pixelColor"
        },
        {
          "line": 264,
          "return_type": "ImagePtr",
          "name": "image"
        }
      ],
      "classes": [],
      "includes": [
        "image.h",
        "framework/core/filestream.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/apngloader.h",
        "framework/stdext/qrcodegen.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\graphics\\painter.cpp",
      "total_lines": 289,
      "code_lines": 198,
      "comment_lines": 44,
      "empty_lines": 47,
      "functions": [
        {
          "line": 195,
          "return_type": "else",
          "name": "resetTexture"
        }
      ],
      "classes": [],
      "includes": [
        "painter.h",
        "framework/graphics/texture.h",
        "framework/graphics/texturemanager.h",
        "framework/platform/platformwindow.h",
        "shader/shadersources.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\painter.h",
      "total_lines": 147,
      "code_lines": 104,
      "comment_lines": 21,
      "empty_lines": 22,
      "functions": [
        {
          "line": 60,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "clearRect"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "drawCoords"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "drawLine"
        },
        {
          "line": 66,
          "return_type": "float",
          "name": "getOpacity"
        },
        {
          "line": 67,
          "return_type": "bool",
          "name": "getAlphaWriting"
        },
        {
          "line": 70,
          "return_type": "Matrix3",
          "name": "getTransformMatrix"
        },
        {
          "line": 71,
          "return_type": "Matrix3",
          "name": "getTransformMatrix"
        },
        {
          "line": 72,
          "return_type": "Matrix3",
          "name": "getProjectionMatrix"
        },
        {
          "line": 74,
          "return_type": "Color",
          "name": "getColor"
        },
        {
          "line": 75,
          "return_type": "Rect",
          "name": "getClipRect"
        },
        {
          "line": 76,
          "return_type": "Size",
          "name": "getResolution"
        },
        {
          "line": 77,
          "return_type": "BlendEquation",
          "name": "getBlendEquation"
        },
        {
          "line": 78,
          "return_type": "CompositionMode",
          "name": "getCompositionMode"
        },
        {
          "line": 80,
          "return_type": "PainterShaderProgramPtr",
          "name": "getReplaceColorShader"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "setColor"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "setTexture"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "setTexture"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "setOpacity"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "setClipRect"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "setResolution"
        },
        {
          "line": 88,
          "return_type": "void",
          "name": "setDrawProgram"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "setAlphaWriting"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "setBlendEquation"
        },
        {
          "line": 91,
          "return_type": "void",
          "name": "setShaderProgram"
        },
        {
          "line": 92,
          "return_type": "void",
          "name": "setShaderProgram"
        },
        {
          "line": 93,
          "return_type": "void",
          "name": "setCompositionMode"
        },
        {
          "line": 95,
          "return_type": "void",
          "name": "setTextureMatrix"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "setTransformMatrix"
        },
        {
          "line": 97,
          "return_type": "void",
          "name": "setProjectionMatrix"
        },
        {
          "line": 99,
          "return_type": "void",
          "name": "resetState"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "resetBlendEquation"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "resetTexture"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "resetAlphaWriting"
        },
        {
          "line": 103,
          "return_type": "void",
          "name": "resetClipRect"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "resetOpacity"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "resetCompositionMode"
        },
        {
          "line": 106,
          "return_type": "void",
          "name": "resetColor"
        },
        {
          "line": 107,
          "return_type": "void",
          "name": "resetShaderProgram"
        },
        {
          "line": 108,
          "return_type": "void",
          "name": "resetTransformMatrix"
        },
        {
          "line": 109,
          "return_type": "bool",
          "name": "isReplaceColorShader"
        },
        {
          "line": 112,
          "return_type": "void",
          "name": "refreshState"
        },
        {
          "line": 113,
          "return_type": "void",
          "name": "updateGlTexture"
        },
        {
          "line": 114,
          "return_type": "void",
          "name": "updateGlCompositionMode"
        },
        {
          "line": 115,
          "return_type": "void",
          "name": "updateGlBlendEquation"
        },
        {
          "line": 116,
          "return_type": "void",
          "name": "updateGlClipRect"
        },
        {
          "line": 117,
          "return_type": "void",
          "name": "updateGlAlphaWriting"
        },
        {
          "line": 118,
          "return_type": "void",
          "name": "updateGlViewport"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "CompositionMode"
        },
        {
          "line": 39,
          "name": "DrawMode"
        },
        {
          "line": 46,
          "name": "BlendEquation"
        },
        {
          "line": 55,
          "name": "Painter"
        },
        {
          "line": 136,
          "name": "FrameBuffer"
        },
        {
          "line": 137,
          "name": "DrawPoolManager"
        },
        {
          "line": 138,
          "name": "DrawPool"
        }
      ],
      "includes": [
        "framework/graphics/coordsbuffer.h",
        "framework/graphics/declarations.h",
        "framework/graphics/paintershaderprogram.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\paintershaderprogram.cpp",
      "total_lines": 171,
      "code_lines": 123,
      "comment_lines": 21,
      "empty_lines": 27,
      "functions": [],
      "classes": [],
      "includes": [
        "paintershaderprogram.h",
        "texture.h",
        "texturemanager.h",
        "framework/core/clock.h",
        "framework/platform/platformwindow.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particle.cpp",
      "total_lines": 102,
      "code_lines": 63,
      "comment_lines": 24,
      "empty_lines": 15,
      "functions": [
        {
          "line": 96,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 99,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "particle.h",
        "drawpoolmanager.h",
        "framework/graphics/animatedtexture.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particle.h",
      "total_lines": 86,
      "code_lines": 47,
      "comment_lines": 21,
      "empty_lines": 18,
      "functions": [
        {
          "line": 43,
          "return_type": "void",
          "name": "render"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "hasFinished"
        },
        {
          "line": 48,
          "return_type": "PointF",
          "name": "getPosition"
        },
        {
          "line": 49,
          "return_type": "PointF",
          "name": "getVelocity"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setVelocity"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "updateColor"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "updatePosition"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "updateSize"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "Particle"
        }
      ],
      "includes": [
        "declarations.h",
        "painter.h",
        "framework/core/timer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particleaffector.h",
      "total_lines": 69,
      "code_lines": 38,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "updateParticle"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "hasFinished"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "updateParticle"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "updateParticle"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "ParticleAffector"
        },
        {
          "line": 47,
          "name": "GravityAffector"
        },
        {
          "line": 58,
          "name": "AttractionAffector"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particleeffect.h",
      "total_lines": 59,
      "code_lines": 29,
      "comment_lines": 21,
      "empty_lines": 9,
      "functions": [
        {
          "line": 32,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 34,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 35,
          "return_type": "string",
          "name": "getDescription"
        },
        {
          "line": 36,
          "return_type": "OTMLNodePtr",
          "name": "getNode"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 50,
          "return_type": "bool",
          "name": "hasFinished"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "render"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "update"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "ParticleEffectType"
        },
        {
          "line": 44,
          "name": "ParticleEffect"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particleemitter.h",
      "total_lines": 52,
      "code_lines": 22,
      "comment_lines": 22,
      "empty_lines": 8,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "hasFinished"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "ParticleEmitter"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/global.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particlemanager.cpp",
      "total_lines": 87,
      "code_lines": 57,
      "comment_lines": 21,
      "empty_lines": 9,
      "functions": [
        {
          "line": 42,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "particlemanager.h",
        "framework/core/resourcemanager.h",
        "framework/otml/otml.h",
        "particleeffect.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particlesystem.cpp",
      "total_lines": 120,
      "code_lines": 77,
      "comment_lines": 27,
      "empty_lines": 16,
      "functions": [
        {
          "line": 38,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 43,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "particlesystem.h",
        "particle.h",
        "particleaffector.h",
        "framework/core/clock.h",
        "framework/graphics/drawpoolmanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particletype.cpp",
      "total_lines": 136,
      "code_lines": 99,
      "comment_lines": 25,
      "empty_lines": 12,
      "functions": [
        {
          "line": 31,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 34,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 36,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 38,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 41,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 43,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 47,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 50,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 52,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 54,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 57,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 59,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 61,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 67,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 69,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 71,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 74,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 76,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 80,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 83,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 85,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 87,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 91,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 94,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 96,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 98,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 101,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 103,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 105,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 113,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 116,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 118,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 129,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "particletype.h",
        "framework/graphics/texturemanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\particletype.h",
      "total_lines": 79,
      "code_lines": 38,
      "comment_lines": 29,
      "empty_lines": 12,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "load"
        },
        {
          "line": 34,
          "return_type": "string",
          "name": "getName"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "ParticleType"
        },
        {
          "line": 78,
          "name": "ParticleEmitter"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/graphics/animatedtexture.h",
        "framework/graphics/painter.h",
        "framework/otml/otml.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\shader.cpp",
      "total_lines": 98,
      "code_lines": 67,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 80,
          "return_type": "return",
          "name": "compileSourceCode"
        }
      ],
      "classes": [],
      "includes": [
        "shader.h",
        "graphics.h",
        "framework/core/application.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\shadermanager.cpp",
      "total_lines": 163,
      "code_lines": 119,
      "comment_lines": 21,
      "empty_lines": 23,
      "functions": [],
      "classes": [],
      "includes": [
        "shadermanager.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/graphics.h",
        "framework/graphics/paintershaderprogram.h",
        "framework/graphics/shader/shadersources.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\shadermanager.h",
      "total_lines": 72,
      "code_lines": 38,
      "comment_lines": 23,
      "empty_lines": 11,
      "functions": [
        {
          "line": 44,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "clear"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setupMapShader"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setupItemShader"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setupOutfitShader"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setupMountShader"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "createShader"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "createFragmentShader"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "createFragmentShaderFromCode"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "addMultiTexture"
        },
        {
          "line": 60,
          "return_type": "PainterShaderProgramPtr",
          "name": "getShader"
        },
        {
          "line": 61,
          "return_type": "PainterShaderProgramPtr",
          "name": "getShaderById"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "putShader"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "ShaderManager"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/graphics/paintershaderprogram.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\shaderprogram.cpp",
      "total_lines": 161,
      "code_lines": 112,
      "comment_lines": 21,
      "empty_lines": 28,
      "functions": [
        {
          "line": 66,
          "return_type": "return",
          "name": "addShader"
        },
        {
          "line": 76,
          "return_type": "return",
          "name": "addShader"
        },
        {
          "line": 152,
          "return_type": "return",
          "name": "glGetAttribLocation"
        },
        {
          "line": 154,
          "return_type": "return",
          "name": "glBindAttribLocation"
        }
      ],
      "classes": [],
      "includes": [
        "shaderprogram.h",
        "graphics.h",
        "framework/core/application.h",
        "framework/core/eventdispatcher.h",
        "framework/stdext/hash.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\shaderprogram.h",
      "total_lines": 122,
      "code_lines": 87,
      "comment_lines": 23,
      "empty_lines": 12,
      "functions": [
        {
          "line": 42,
          "return_type": "bool",
          "name": "addShader"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "addShaderFromSourceCode"
        },
        {
          "line": 44,
          "return_type": "bool",
          "name": "addShaderFromSourceFile"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "removeShader"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "removeAllShaders"
        },
        {
          "line": 47,
          "return_type": "bool",
          "name": "link"
        },
        {
          "line": 48,
          "return_type": "bool",
          "name": "bind"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "release"
        },
        {
          "line": 50,
          "return_type": "string",
          "name": "log"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "disableAttributeArray"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "enableAttributeArray"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "disableAttributeArray"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "enableAttributeArray"
        },
        {
          "line": 59,
          "return_type": "int",
          "name": "getAttributeLocation"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "bindAttributeLocation"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "bindUniformLocation"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "setAttributeArray"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "setAttributeValue"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "setAttributeValue"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "setAttributeValue"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "setAttributeArray"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "setAttributeValue"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "setAttributeValue"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "setAttributeValue"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 88,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 90,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 92,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 96,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 102,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 104,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 106,
          "return_type": "void",
          "name": "setUniformValue"
        },
        {
          "line": 110,
          "return_type": "bool",
          "name": "isLinked"
        },
        {
          "line": 111,
          "return_type": "uint32_t",
          "name": "getProgramId"
        },
        {
          "line": 112,
          "return_type": "size_t",
          "name": "hash"
        },
        {
          "line": 113,
          "return_type": "ShaderList",
          "name": "getShaders"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "ShaderProgram"
        }
      ],
      "includes": [
        "glutil.h",
        "framework/luaengine/luaobject.h",
        "shader.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\texture.cpp",
      "total_lines": 252,
      "code_lines": 186,
      "comment_lines": 24,
      "empty_lines": 42,
      "functions": [
        {
          "line": 34,
          "return_type": "atomic_uint32_t",
          "name": "UID"
        }
      ],
      "classes": [],
      "includes": [
        "texture.h",
        "framebuffer.h",
        "graphics.h",
        "image.h",
        "texturemanager.h",
        "framework/core/application.h",
        "framework/core/eventdispatcher.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\texture.h",
      "total_lines": 106,
      "code_lines": 66,
      "comment_lines": 21,
      "empty_lines": 19,
      "functions": [
        {
          "line": 36,
          "return_type": "void",
          "name": "create"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "uploadPixels"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "updateImage"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "updatePixels"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "buildHardwareMipmaps"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setSmooth"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setRepeat"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setUpsideDown"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setTime"
        },
        {
          "line": 49,
          "return_type": "auto",
          "name": "getTransformMatrixId"
        },
        {
          "line": 51,
          "return_type": "ticks_t",
          "name": "getTime"
        },
        {
          "line": 52,
          "return_type": "uint32_t",
          "name": "getId"
        },
        {
          "line": 53,
          "return_type": "uint32_t",
          "name": "getUniqueId"
        },
        {
          "line": 54,
          "return_type": "size_t",
          "name": "hash"
        },
        {
          "line": 56,
          "return_type": "int",
          "name": "getWidth"
        },
        {
          "line": 57,
          "return_type": "int",
          "name": "getHeight"
        },
        {
          "line": 59,
          "return_type": "bool",
          "name": "isEmpty"
        },
        {
          "line": 60,
          "return_type": "bool",
          "name": "hasRepeat"
        },
        {
          "line": 61,
          "return_type": "bool",
          "name": "hasMipmaps"
        },
        {
          "line": 62,
          "return_type": "bool",
          "name": "isCached"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "setCached"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "isAnimatedTexture"
        },
        {
          "line": 65,
          "return_type": "bool",
          "name": "setupSize"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "bind"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "setupWrap"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "setupFilters"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "createTexture"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "setupTranformMatrix"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "setupPixels"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "generateHash"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "setProp"
        },
        {
          "line": 102,
          "return_type": "bool",
          "name": "getProp"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "Texture"
        },
        {
          "line": 104,
          "name": "GarbageCollection"
        },
        {
          "line": 105,
          "name": "TextureManager"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/core/timer.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\texturemanager.cpp",
      "total_lines": 215,
      "code_lines": 154,
      "comment_lines": 27,
      "empty_lines": 34,
      "functions": [
        {
          "line": 64,
          "return_type": "shared_lock",
          "name": "l"
        },
        {
          "line": 71,
          "return_type": "unique_lock",
          "name": "l"
        },
        {
          "line": 82,
          "return_type": "shared_lock",
          "name": "l"
        },
        {
          "line": 106,
          "return_type": "shared_lock",
          "name": "l"
        },
        {
          "line": 119,
          "return_type": "stringstream",
          "name": "fin"
        },
        {
          "line": 144,
          "return_type": "unique_lock",
          "name": "l"
        },
        {
          "line": 162,
          "return_type": "Size",
          "name": "imageSize"
        },
        {
          "line": 174,
          "return_type": "scoped_lock",
          "name": "l"
        },
        {
          "line": 187,
          "return_type": "Matrix3",
          "name": "toMatrix"
        }
      ],
      "classes": [],
      "includes": [
        "texturemanager.h",
        "animatedtexture.h",
        "graphics.h",
        "image.h",
        "framework/core/clock.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/apngloader.h",
        "framework/graphics/drawpool.h",
        "framework/net/protocolhttp.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\texturemanager.h",
      "total_lines": 62,
      "code_lines": 31,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 31,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 32,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 33,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "clearCache"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "liveReload"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "preload"
        },
        {
          "line": 39,
          "return_type": "TexturePtr",
          "name": "getTexture"
        },
        {
          "line": 41,
          "return_type": "TexturePtr",
          "name": "loadTexture"
        },
        {
          "line": 44,
          "return_type": "uint16_t",
          "name": "getMatrixId"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "TextureManager"
        },
        {
          "line": 59,
          "name": "GarbageCollection"
        }
      ],
      "includes": [
        "texture.h",
        "framework/core/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\input\\mouse.cpp",
      "total_lines": 116,
      "code_lines": 80,
      "comment_lines": 21,
      "empty_lines": 15,
      "functions": [],
      "classes": [],
      "includes": [
        "mouse.h",
        "framework/core/resourcemanager.h",
        "framework/platform/platformwindow.h",
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\input\\mouse.h",
      "total_lines": 47,
      "code_lines": 19,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 30,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 31,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 33,
          "return_type": "void",
          "name": "loadCursors"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "addCursor"
        },
        {
          "line": 35,
          "return_type": "bool",
          "name": "pushCursor"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "popCursor"
        },
        {
          "line": 37,
          "return_type": "bool",
          "name": "isCursorChanged"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "isPressed"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "checkStackSize"
        }
      ],
      "classes": [
        {
          "line": 27,
          "name": "Mouse"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\luaengine\\declarations.h",
      "total_lines": 32,
      "code_lines": 7,
      "comment_lines": 21,
      "empty_lines": 4,
      "functions": [],
      "classes": [
        {
          "line": 27,
          "name": "LuaInterface"
        },
        {
          "line": 28,
          "name": "LuaObject"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\luaengine\\luabinder.h",
      "total_lines": 236,
      "code_lines": 174,
      "comment_lines": 43,
      "empty_lines": 19,
      "functions": [
        {
          "line": 45,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 85,
          "return_type": "int",
          "name": "call"
        },
        {
          "line": 94,
          "return_type": "int",
          "name": "call"
        },
        {
          "line": 102,
          "return_type": "LuaCppFunction",
          "name": "bind_fun_specializer"
        },
        {
          "line": 120,
          "return_type": "LuaCppFunction",
          "name": "bind_fun"
        },
        {
          "line": 127,
          "return_type": "LuaCppFunction",
          "name": "bind_fun"
        },
        {
          "line": 142,
          "return_type": "LuaCppFunction",
          "name": "call"
        },
        {
          "line": 152,
          "return_type": "LuaCppFunction",
          "name": "bind_fun"
        },
        {
          "line": 161,
          "return_type": "LuaCppFunction",
          "name": "bind_fun"
        },
        {
          "line": 163,
          "return_type": "return",
          "name": "bind_fun"
        },
        {
          "line": 173,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 174,
          "return_type": "return",
          "name": "mf"
        },
        {
          "line": 183,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 193,
          "return_type": "return",
          "name": "mf"
        },
        {
          "line": 204,
          "return_type": "LuaCppFunction",
          "name": "bind_mem_fun"
        },
        {
          "line": 215,
          "return_type": "LuaCppFunction",
          "name": "bind_singleton_mem_fun"
        },
        {
          "line": 227,
          "return_type": "LuaCppFunction",
          "name": "bind_mem_fun"
        },
        {
          "line": 233,
          "return_type": "return",
          "name": "mf"
        }
      ],
      "classes": [
        {
          "line": 203,
          "name": "FC"
        },
        {
          "line": 214,
          "name": "FC"
        }
      ],
      "includes": [
        "luaexception.h",
        "framework/stdext/traits.h",
        "tuple"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\luaengine\\luainterface.cpp",
      "total_lines": 1394,
      "code_lines": 1060,
      "comment_lines": 114,
      "empty_lines": 220,
      "functions": [
        {
          "line": 402,
          "return_type": "return",
          "name": "popString"
        },
        {
          "line": 468,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 498,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 502,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 519,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 520,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 522,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 533,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 538,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 561,
          "return_type": "return",
          "name": "ref"
        },
        {
          "line": 836,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 842,
          "return_type": "return",
          "name": "lua_pcall"
        },
        {
          "line": 896,
          "return_type": "return",
          "name": "lua_typename"
        },
        {
          "line": 934,
          "return_type": "return",
          "name": "lua_next"
        },
        {
          "line": 1106,
          "return_type": "return",
          "name": "lua_newuserdata"
        },
        {
          "line": 1167,
          "return_type": "return",
          "name": "lua_touserdata"
        },
        {
          "line": 1233,
          "return_type": "new",
          "name": "LuaCppFunction"
        },
        {
          "line": 1256,
          "return_type": "return",
          "name": "lua_isnil"
        },
        {
          "line": 1262,
          "return_type": "return",
          "name": "lua_isboolean"
        },
        {
          "line": 1268,
          "return_type": "return",
          "name": "lua_isnumber"
        },
        {
          "line": 1274,
          "return_type": "return",
          "name": "lua_isstring"
        },
        {
          "line": 1280,
          "return_type": "return",
          "name": "lua_istable"
        },
        {
          "line": 1286,
          "return_type": "return",
          "name": "lua_isfunction"
        },
        {
          "line": 1292,
          "return_type": "return",
          "name": "lua_iscfunction"
        },
        {
          "line": 1298,
          "return_type": "return",
          "name": "lua_isuserdata"
        },
        {
          "line": 1310,
          "return_type": "return",
          "name": "lua_tointeger"
        },
        {
          "line": 1316,
          "return_type": "return",
          "name": "lua_tonumber"
        },
        {
          "line": 1340,
          "return_type": "return",
          "name": "lua_touserdata"
        },
        {
          "line": 1356,
          "return_type": "return",
          "name": "lua_gettop"
        }
      ],
      "classes": [],
      "includes": [
        "luainterface.h",
        "luaobject.h",
        "bitlib/lbitlib.c",
        "framework/core/resourcemanager.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\luaengine\\luainterface.h",
      "total_lines": 534,
      "code_lines": 364,
      "comment_lines": 78,
      "empty_lines": 92,
      "functions": [
        {
          "line": 29,
          "return_type": "if",
          "name": "__has_include"
        },
        {
          "line": 31,
          "return_type": "elif",
          "name": "__has_include"
        },
        {
          "line": 33,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 51,
          "return_type": "define",
          "name": "luaL_register"
        },
        {
          "line": 54,
          "return_type": "define",
          "name": "lua_equal"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "registerSingletonClass"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "registerClass"
        },
        {
          "line": 93,
          "return_type": "void",
          "name": "registerClass"
        },
        {
          "line": 99,
          "return_type": "void",
          "name": "registerClassStaticFunction"
        },
        {
          "line": 105,
          "return_type": "void",
          "name": "registerClassMemberFunction"
        },
        {
          "line": 120,
          "return_type": "void",
          "name": "bindSingletonFunction"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "bindSingletonFunction"
        },
        {
          "line": 125,
          "return_type": "void",
          "name": "bindClassStaticFunction"
        },
        {
          "line": 127,
          "return_type": "void",
          "name": "bindClassStaticFunction"
        },
        {
          "line": 130,
          "return_type": "void",
          "name": "bindClassMemberFunction"
        },
        {
          "line": 132,
          "return_type": "void",
          "name": "bindClassMemberFunction"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "bindClassMemberField"
        },
        {
          "line": 137,
          "return_type": "void",
          "name": "bindClassMemberField"
        },
        {
          "line": 140,
          "return_type": "void",
          "name": "bindClassMemberGetField"
        },
        {
          "line": 142,
          "return_type": "void",
          "name": "bindClassMemberGetField"
        },
        {
          "line": 145,
          "return_type": "void",
          "name": "bindClassMemberSetField"
        },
        {
          "line": 147,
          "return_type": "void",
          "name": "bindClassMemberSetField"
        },
        {
          "line": 150,
          "return_type": "void",
          "name": "bindGlobalFunction"
        },
        {
          "line": 154,
          "return_type": "int",
          "name": "luaObjectGetEvent"
        },
        {
          "line": 156,
          "return_type": "int",
          "name": "luaObjectSetEvent"
        },
        {
          "line": 158,
          "return_type": "int",
          "name": "luaObjectEqualEvent"
        },
        {
          "line": 163,
          "return_type": "int",
          "name": "luaObjectCollectEvent"
        },
        {
          "line": 167,
          "return_type": "bool",
          "name": "safeRunScript"
        },
        {
          "line": 171,
          "return_type": "void",
          "name": "runScript"
        },
        {
          "line": 175,
          "return_type": "void",
          "name": "runBuffer"
        },
        {
          "line": 179,
          "return_type": "void",
          "name": "loadScript"
        },
        {
          "line": 183,
          "return_type": "void",
          "name": "loadFunction"
        },
        {
          "line": 187,
          "return_type": "void",
          "name": "evaluateExpression"
        },
        {
          "line": 193,
          "return_type": "string",
          "name": "traceback"
        },
        {
          "line": 198,
          "return_type": "void",
          "name": "throwError"
        },
        {
          "line": 201,
          "return_type": "string",
          "name": "getCurrentSourcePath"
        },
        {
          "line": 208,
          "return_type": "int",
          "name": "safeCall"
        },
        {
          "line": 214,
          "return_type": "int",
          "name": "signalCall"
        },
        {
          "line": 220,
          "return_type": "int",
          "name": "newSandboxEnv"
        },
        {
          "line": 223,
          "return_type": "int",
          "name": "luaCallGlobalField"
        },
        {
          "line": 226,
          "return_type": "void",
          "name": "callGlobalField"
        },
        {
          "line": 229,
          "return_type": "R",
          "name": "callGlobalField"
        },
        {
          "line": 231,
          "return_type": "bool",
          "name": "isInCppCallback"
        },
        {
          "line": 235,
          "return_type": "int",
          "name": "luaScriptLoader"
        },
        {
          "line": 237,
          "return_type": "int",
          "name": "lua_dofile"
        },
        {
          "line": 239,
          "return_type": "int",
          "name": "lua_dofiles"
        },
        {
          "line": 241,
          "return_type": "int",
          "name": "lua_loadfile"
        },
        {
          "line": 243,
          "return_type": "int",
          "name": "luaErrorHandler"
        },
        {
          "line": 245,
          "return_type": "int",
          "name": "luaCppFunctionCallback"
        },
        {
          "line": 247,
          "return_type": "int",
          "name": "luaCollectCppFunction"
        },
        {
          "line": 251,
          "return_type": "int",
          "name": "luaBitAnd"
        },
        {
          "line": 252,
          "return_type": "int",
          "name": "luaBitNot"
        },
        {
          "line": 253,
          "return_type": "int",
          "name": "luaBitOr"
        },
        {
          "line": 254,
          "return_type": "int",
          "name": "luaBitXor"
        },
        {
          "line": 255,
          "return_type": "int",
          "name": "luaBitRightShift"
        },
        {
          "line": 256,
          "return_type": "int",
          "name": "luaBitLeftShift"
        },
        {
          "line": 260,
          "return_type": "void",
          "name": "registerTable"
        },
        {
          "line": 261,
          "return_type": "void",
          "name": "registerMethod"
        },
        {
          "line": 263,
          "return_type": "void",
          "name": "createLuaState"
        },
        {
          "line": 264,
          "return_type": "void",
          "name": "closeLuaState"
        },
        {
          "line": 266,
          "return_type": "void",
          "name": "collectGarbage"
        },
        {
          "line": 268,
          "return_type": "void",
          "name": "loadBuffer"
        },
        {
          "line": 270,
          "return_type": "int",
          "name": "pcall"
        },
        {
          "line": 271,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 272,
          "return_type": "void",
          "name": "error"
        },
        {
          "line": 274,
          "return_type": "int",
          "name": "ref"
        },
        {
          "line": 275,
          "return_type": "int",
          "name": "weakRef"
        },
        {
          "line": 276,
          "return_type": "void",
          "name": "unref"
        },
        {
          "line": 277,
          "return_type": "void",
          "name": "useValue"
        },
        {
          "line": 280,
          "return_type": "string",
          "name": "functionSourcePath"
        },
        {
          "line": 282,
          "return_type": "void",
          "name": "insert"
        },
        {
          "line": 283,
          "return_type": "void",
          "name": "remove"
        },
        {
          "line": 284,
          "return_type": "bool",
          "name": "next"
        },
        {
          "line": 286,
          "return_type": "void",
          "name": "checkStack"
        },
        {
          "line": 287,
          "return_type": "void",
          "name": "getStackFunction"
        },
        {
          "line": 289,
          "return_type": "void",
          "name": "getRef"
        },
        {
          "line": 290,
          "return_type": "void",
          "name": "getWeakRef"
        },
        {
          "line": 292,
          "return_type": "int",
          "name": "getGlobalEnvironment"
        },
        {
          "line": 293,
          "return_type": "void",
          "name": "setGlobalEnvironment"
        },
        {
          "line": 294,
          "return_type": "void",
          "name": "resetGlobalEnvironment"
        },
        {
          "line": 296,
          "return_type": "void",
          "name": "setMetatable"
        },
        {
          "line": 297,
          "return_type": "void",
          "name": "getMetatable"
        },
        {
          "line": 299,
          "return_type": "void",
          "name": "getField"
        },
        {
          "line": 300,
          "return_type": "void",
          "name": "setField"
        },
        {
          "line": 302,
          "return_type": "void",
          "name": "getTable"
        },
        {
          "line": 303,
          "return_type": "void",
          "name": "setTable"
        },
        {
          "line": 304,
          "return_type": "void",
          "name": "clearTable"
        },
        {
          "line": 306,
          "return_type": "void",
          "name": "getEnv"
        },
        {
          "line": 307,
          "return_type": "void",
          "name": "setEnv"
        },
        {
          "line": 309,
          "return_type": "void",
          "name": "getGlobal"
        },
        {
          "line": 310,
          "return_type": "void",
          "name": "getGlobalField"
        },
        {
          "line": 311,
          "return_type": "void",
          "name": "setGlobal"
        },
        {
          "line": 313,
          "return_type": "void",
          "name": "rawGet"
        },
        {
          "line": 314,
          "return_type": "void",
          "name": "rawGeti"
        },
        {
          "line": 315,
          "return_type": "void",
          "name": "rawSet"
        },
        {
          "line": 316,
          "return_type": "void",
          "name": "rawSeti"
        },
        {
          "line": 318,
          "return_type": "void",
          "name": "newTable"
        },
        {
          "line": 319,
          "return_type": "void",
          "name": "createTable"
        },
        {
          "line": 322,
          "return_type": "void",
          "name": "pop"
        },
        {
          "line": 323,
          "return_type": "long",
          "name": "popInteger"
        },
        {
          "line": 324,
          "return_type": "double",
          "name": "popNumber"
        },
        {
          "line": 325,
          "return_type": "bool",
          "name": "popBoolean"
        },
        {
          "line": 326,
          "return_type": "string",
          "name": "popString"
        },
        {
          "line": 329,
          "return_type": "LuaObjectPtr",
          "name": "popObject"
        },
        {
          "line": 331,
          "return_type": "void",
          "name": "pushNil"
        },
        {
          "line": 332,
          "return_type": "void",
          "name": "pushInteger"
        },
        {
          "line": 333,
          "return_type": "void",
          "name": "pushNumber"
        },
        {
          "line": 334,
          "return_type": "void",
          "name": "pushBoolean"
        },
        {
          "line": 335,
          "return_type": "void",
          "name": "pushString"
        },
        {
          "line": 336,
          "return_type": "void",
          "name": "pushLightUserdata"
        },
        {
          "line": 337,
          "return_type": "void",
          "name": "pushThread"
        },
        {
          "line": 338,
          "return_type": "void",
          "name": "pushValue"
        },
        {
          "line": 339,
          "return_type": "void",
          "name": "pushObject"
        },
        {
          "line": 340,
          "return_type": "void",
          "name": "pushCFunction"
        },
        {
          "line": 341,
          "return_type": "void",
          "name": "pushCppFunction"
        },
        {
          "line": 343,
          "return_type": "bool",
          "name": "isNil"
        },
        {
          "line": 344,
          "return_type": "bool",
          "name": "isBoolean"
        },
        {
          "line": 345,
          "return_type": "bool",
          "name": "isNumber"
        },
        {
          "line": 346,
          "return_type": "bool",
          "name": "isString"
        },
        {
          "line": 347,
          "return_type": "bool",
          "name": "isTable"
        },
        {
          "line": 348,
          "return_type": "bool",
          "name": "isFunction"
        },
        {
          "line": 349,
          "return_type": "bool",
          "name": "isCFunction"
        },
        {
          "line": 350,
          "return_type": "bool",
          "name": "isLuaFunction"
        },
        {
          "line": 351,
          "return_type": "bool",
          "name": "isUserdata"
        },
        {
          "line": 353,
          "return_type": "bool",
          "name": "toBoolean"
        },
        {
          "line": 354,
          "return_type": "int",
          "name": "toInteger"
        },
        {
          "line": 355,
          "return_type": "double",
          "name": "toNumber"
        },
        {
          "line": 356,
          "return_type": "string_view",
          "name": "toVString"
        },
        {
          "line": 357,
          "return_type": "string",
          "name": "toString"
        },
        {
          "line": 359,
          "return_type": "LuaObjectPtr",
          "name": "toObject"
        },
        {
          "line": 361,
          "return_type": "int",
          "name": "getTop"
        },
        {
          "line": 362,
          "return_type": "int",
          "name": "stackSize"
        },
        {
          "line": 363,
          "return_type": "void",
          "name": "clearStack"
        },
        {
          "line": 364,
          "return_type": "bool",
          "name": "hasIndex"
        },
        {
          "line": 366,
          "return_type": "string",
          "name": "getSource"
        },
        {
          "line": 368,
          "return_type": "void",
          "name": "loadFiles"
        },
        {
          "line": 372,
          "return_type": "int",
          "name": "polymorphicPush"
        },
        {
          "line": 373,
          "return_type": "int",
          "name": "polymorphicPush"
        },
        {
          "line": 378,
          "return_type": "T",
          "name": "castValue"
        },
        {
          "line": 382,
          "return_type": "T",
          "name": "polymorphicPop"
        },
        {
          "line": 486,
          "return_type": "if",
          "name": "constexpr"
        },
        {
          "line": 488,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 489,
          "return_type": "throw",
          "name": "LuaBadValueCastException"
        },
        {
          "line": 523,
          "return_type": "return",
          "name": "R"
        }
      ],
      "classes": [
        {
          "line": 62,
          "name": "LuaInterface"
        },
        {
          "line": 92,
          "name": "C"
        },
        {
          "line": 98,
          "name": "C"
        },
        {
          "line": 104,
          "name": "C"
        },
        {
          "line": 110,
          "name": "C"
        },
        {
          "line": 119,
          "name": "C"
        },
        {
          "line": 121,
          "name": "C"
        },
        {
          "line": 124,
          "name": "C"
        },
        {
          "line": 129,
          "name": "C"
        },
        {
          "line": 131,
          "name": "C"
        },
        {
          "line": 134,
          "name": "C"
        },
        {
          "line": 136,
          "name": "C"
        },
        {
          "line": 139,
          "name": "C"
        },
        {
          "line": 141,
          "name": "C"
        },
        {
          "line": 144,
          "name": "C"
        },
        {
          "line": 146,
          "name": "C"
        },
        {
          "line": 377,
          "name": "T"
        },
        {
          "line": 381,
          "name": "T"
        },
        {
          "line": 409,
          "name": "C"
        },
        {
          "line": 415,
          "name": "C"
        },
        {
          "line": 421,
          "name": "C"
        },
        {
          "line": 432,
          "name": "C"
        },
        {
          "line": 437,
          "name": "C"
        },
        {
          "line": 443,
          "name": "C"
        },
        {
          "line": 448,
          "name": "C"
        },
        {
          "line": 454,
          "name": "C"
        },
        {
          "line": 459,
          "name": "C"
        },
        {
          "line": 465,
          "name": "C"
        },
        {
          "line": 470,
          "name": "C"
        },
        {
          "line": 482,
          "name": "T"
        }
      ],
      "includes": [
        "declarations.h",
        "luajit/lua.hpp",
        "lua.hpp",
        "lua51/lua.h",
        "lua51/lualib.h",
        "lua51/lauxlib.h",
        "lua.hpp",
        "luabinder.h",
        "luaexception.h",
        "luavaluecasts.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\luaengine\\luaobject.cpp",
      "total_lines": 130,
      "code_lines": 90,
      "comment_lines": 23,
      "empty_lines": 17,
      "functions": [],
      "classes": [],
      "includes": [
        "luaobject.h",
        "luainterface.h",
        "framework/core/application.h",
        "framework/core/graphicalapplication.h",
        "typeinfo"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\luaengine\\luaobject.h",
      "total_lines": 241,
      "code_lines": 154,
      "comment_lines": 46,
      "empty_lines": 41,
      "functions": [
        {
          "line": 37,
          "return_type": "void",
          "name": "connectLuaField"
        },
        {
          "line": 43,
          "return_type": "int",
          "name": "luaCallLuaField"
        },
        {
          "line": 46,
          "return_type": "R",
          "name": "callLuaField"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "callLuaField"
        },
        {
          "line": 51,
          "return_type": "bool",
          "name": "hasLuaField"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "setLuaField"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "clearLuaField"
        },
        {
          "line": 61,
          "return_type": "T",
          "name": "getLuaField"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "releaseLuaFieldsTable"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "luaSetField"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "luaGetField"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "luaGetMetatable"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "luaGetFieldsTable"
        },
        {
          "line": 79,
          "return_type": "string",
          "name": "getClassName"
        },
        {
          "line": 81,
          "return_type": "LuaObjectPtr",
          "name": "asLuaObject"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "connect"
        },
        {
          "line": 120,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 133,
          "return_type": "void",
          "name": "connect"
        },
        {
          "line": 146,
          "return_type": "void",
          "name": "call"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "LuaObject"
        },
        {
          "line": 92,
          "name": "LuaInterface"
        }
      ],
      "includes": [
        "declarations.h",
        "unordered_map",
        "luainterface.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\luaengine\\luavaluecasts.cpp",
      "total_lines": 366,
      "code_lines": 309,
      "comment_lines": 33,
      "empty_lines": 24,
      "functions": [
        {
          "line": 27,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 33,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 40,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 55,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 61,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 70,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 76,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 83,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 90,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 104,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 128,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 142,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 166,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 176,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 196,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 206,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 226,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 236,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 253,
          "return_type": "void",
          "name": "push_otml_subnode_luavalue"
        },
        {
          "line": 265,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 267,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 271,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 296,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 313,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 355,
          "return_type": "bool",
          "name": "luavalue_cast"
        }
      ],
      "classes": [],
      "includes": [
        "luainterface.h",
        "framework/otml/otmlnode.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\luaengine\\luavaluecasts.h",
      "total_lines": 637,
      "code_lines": 502,
      "comment_lines": 60,
      "empty_lines": 75,
      "functions": [
        {
          "line": 34,
          "return_type": "int",
          "name": "push_internal_luavalue"
        },
        {
          "line": 37,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 41,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 45,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 49,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 50,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 57,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 58,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 64,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 65,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 71,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 72,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 78,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 79,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 85,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 86,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 92,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 93,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 101,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 102,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 110,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 111,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 118,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 119,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 120,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 123,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 126,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 127,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 130,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 131,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 134,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 135,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 138,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 139,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 142,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 143,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 146,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 147,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 152,
          "return_type": "return",
          "name": "push_luavalue"
        },
        {
          "line": 163,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 171,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 174,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 182,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 185,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 189,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 192,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 196,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 199,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 203,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 206,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 209,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 212,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 215,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 218,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 222,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 226,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 229,
          "return_type": "int",
          "name": "push_internal_luavalue"
        },
        {
          "line": 238,
          "return_type": "int",
          "name": "push_internal_luavalue"
        },
        {
          "line": 240,
          "return_type": "return",
          "name": "push_luavalue"
        },
        {
          "line": 278,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 289,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 338,
          "return_type": "throw",
          "name": "LuaException"
        },
        {
          "line": 346,
          "return_type": "return",
          "name": "Ret"
        },
        {
          "line": 358,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 371,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 387,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 400,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 416,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 429,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 445,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 458,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 474,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 486,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 503,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 515,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 532,
          "return_type": "int",
          "name": "push_luavalue"
        },
        {
          "line": 544,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 561,
          "return_type": "bool",
          "name": "luavalue_cast"
        },
        {
          "line": 591,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 603,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 607,
          "return_type": "int",
          "name": "push_internal_luavalue"
        },
        {
          "line": 618,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 629,
          "return_type": "void",
          "name": "call"
        },
        {
          "line": 633,
          "return_type": "int",
          "name": "push_luavalue"
        }
      ],
      "classes": [
        {
          "line": 150,
          "name": "T"
        },
        {
          "line": 154,
          "name": "T"
        },
        {
          "line": 159,
          "name": "T"
        },
        {
          "line": 165,
          "name": "T"
        },
        {
          "line": 195,
          "name": "T"
        },
        {
          "line": 202,
          "name": "K"
        },
        {
          "line": 205,
          "name": "K"
        },
        {
          "line": 208,
          "name": "K"
        },
        {
          "line": 211,
          "name": "K"
        },
        {
          "line": 214,
          "name": "K"
        },
        {
          "line": 217,
          "name": "K"
        },
        {
          "line": 221,
          "name": "K"
        },
        {
          "line": 243,
          "name": "T"
        },
        {
          "line": 254,
          "name": "T"
        },
        {
          "line": 265,
          "name": "T"
        },
        {
          "line": 473,
          "name": "K"
        },
        {
          "line": 485,
          "name": "K"
        },
        {
          "line": 502,
          "name": "K"
        },
        {
          "line": 514,
          "name": "K"
        },
        {
          "line": 531,
          "name": "K"
        },
        {
          "line": 543,
          "name": "K"
        },
        {
          "line": 560,
          "name": "K"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/otml/declarations.h",
        "framework/platform/platform.h",
        "set",
        "luaexception.h",
        "luainterface.h",
        "luaobject.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\net\\connection.cpp",
      "total_lines": 350,
      "code_lines": 257,
      "comment_lines": 27,
      "empty_lines": 66,
      "functions": [
        {
          "line": 102,
          "return_type": "query",
          "name": "query"
        },
        {
          "line": 147,
          "return_type": "ostream",
          "name": "os"
        },
        {
          "line": 259,
          "return_type": "no_delay",
          "name": "option"
        }
      ],
      "classes": [],
      "includes": [
        "connection.h",
        "framework/core/application.h",
        "framework/core/graphicalapplication.h",
        "asio/read.hpp",
        "asio/read_until.hpp",
        "utility",
        "asio/io_service.hpp"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\net\\connection.h",
      "total_lines": 101,
      "code_lines": 63,
      "comment_lines": 21,
      "empty_lines": 17,
      "functions": [
        {
          "line": 48,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "connect"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "write"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "read"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "read_until"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "read_some"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "setErrorCallback"
        },
        {
          "line": 61,
          "return_type": "int",
          "name": "getIp"
        },
        {
          "line": 62,
          "return_type": "error_code",
          "name": "getError"
        },
        {
          "line": 63,
          "return_type": "bool",
          "name": "isConnecting"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "isConnected"
        },
        {
          "line": 65,
          "return_type": "ticks_t",
          "name": "getElapsedTicksSinceLastRead"
        },
        {
          "line": 67,
          "return_type": "ConnectionPtr",
          "name": "asConnection"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "internal_connect"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "internal_write"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "onResolve"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "onConnect"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "onCanWrite"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "onRecv"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "onTimeout"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "handleError"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "Connection"
        },
        {
          "line": 99,
          "name": "Server"
        }
      ],
      "includes": [
        "asio/streambuf.hpp",
        "declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\httplogin.cpp",
      "total_lines": 308,
      "code_lines": 243,
      "comment_lines": 21,
      "empty_lines": 44,
      "functions": [
        {
          "line": 72,
          "return_type": "SSLClient",
          "name": "cli"
        },
        {
          "line": 209,
          "return_type": "SSLClient",
          "name": "client"
        },
        {
          "line": 225,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 246,
          "return_type": "Client",
          "name": "client"
        },
        {
          "line": 257,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "httplogin.h",
        "framework/core/asyncdispatcher.h",
        "framework/core/eventdispatcher.h",
        "httplib.h",
        "iostream",
        "nlohmann/json.hpp",
        "string",
        "emscripten/fetch.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\net\\httplogin.h",
      "total_lines": 69,
      "code_lines": 34,
      "comment_lines": 21,
      "empty_lines": 14,
      "functions": [
        {
          "line": 38,
          "return_type": "void",
          "name": "Logger"
        },
        {
          "line": 40,
          "return_type": "string",
          "name": "getCharacterList"
        },
        {
          "line": 42,
          "return_type": "string",
          "name": "getWorldList"
        },
        {
          "line": 44,
          "return_type": "string",
          "name": "getSession"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "parseJsonResponse"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "LoginHttp"
        }
      ],
      "includes": [
        "framework/luaengine/luaobject.h",
        "httplib.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\inputmessage.cpp",
      "total_lines": 143,
      "code_lines": 106,
      "comment_lines": 21,
      "empty_lines": 16,
      "functions": [],
      "classes": [],
      "includes": [
        "inputmessage.h",
        "framework/util/crypt.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\inputmessage.h",
      "total_lines": 104,
      "code_lines": 66,
      "comment_lines": 22,
      "empty_lines": 16,
      "functions": [
        {
          "line": 38,
          "return_type": "void",
          "name": "setBuffer"
        },
        {
          "line": 39,
          "return_type": "string_view",
          "name": "getBuffer"
        },
        {
          "line": 40,
          "return_type": "string",
          "name": "getBodyBuffer"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "skipBytes"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setReadPos"
        },
        {
          "line": 44,
          "return_type": "uint8_t",
          "name": "getU8"
        },
        {
          "line": 45,
          "return_type": "uint16_t",
          "name": "getU16"
        },
        {
          "line": 46,
          "return_type": "uint32_t",
          "name": "getU32"
        },
        {
          "line": 47,
          "return_type": "uint64_t",
          "name": "getU64"
        },
        {
          "line": 48,
          "return_type": "int64_t",
          "name": "get64"
        },
        {
          "line": 49,
          "return_type": "string",
          "name": "getString"
        },
        {
          "line": 50,
          "return_type": "double",
          "name": "getDouble"
        },
        {
          "line": 52,
          "return_type": "uint8_t",
          "name": "peekU8"
        },
        {
          "line": 56,
          "return_type": "uint16_t",
          "name": "peekU16"
        },
        {
          "line": 60,
          "return_type": "uint32_t",
          "name": "peekU32"
        },
        {
          "line": 64,
          "return_type": "uint64_t",
          "name": "peekU64"
        },
        {
          "line": 69,
          "return_type": "bool",
          "name": "decryptRsa"
        },
        {
          "line": 71,
          "return_type": "int",
          "name": "getReadSize"
        },
        {
          "line": 72,
          "return_type": "int",
          "name": "getReadPos"
        },
        {
          "line": 73,
          "return_type": "int",
          "name": "getUnreadSize"
        },
        {
          "line": 74,
          "return_type": "uint16_t",
          "name": "getMessageSize"
        },
        {
          "line": 76,
          "return_type": "bool",
          "name": "eof"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "fillBuffer"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "setHeaderSize"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "setMessageSize"
        },
        {
          "line": 88,
          "return_type": "uint16_t",
          "name": "getHeaderSize"
        },
        {
          "line": 90,
          "return_type": "uint16_t",
          "name": "readSize"
        },
        {
          "line": 91,
          "return_type": "bool",
          "name": "readChecksum"
        },
        {
          "line": 96,
          "return_type": "bool",
          "name": "canRead"
        },
        {
          "line": 97,
          "return_type": "void",
          "name": "checkRead"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "checkWrite"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "InputMessage"
        },
        {
          "line": 93,
          "name": "Protocol"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\outputmessage.cpp",
      "total_lines": 141,
      "code_lines": 104,
      "comment_lines": 21,
      "empty_lines": 16,
      "functions": [],
      "classes": [],
      "includes": [
        "framework/net/outputmessage.h",
        "framework/util/crypt.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\outputmessage.h",
      "total_lines": 79,
      "code_lines": 43,
      "comment_lines": 22,
      "empty_lines": 14,
      "functions": [
        {
          "line": 39,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setBuffer"
        },
        {
          "line": 42,
          "return_type": "string_view",
          "name": "getBuffer"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "addU8"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "addU16"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "addU32"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "addU64"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "addString"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "addPaddingBytes"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "encryptRsa"
        },
        {
          "line": 53,
          "return_type": "uint16_t",
          "name": "getWritePos"
        },
        {
          "line": 54,
          "return_type": "uint16_t",
          "name": "getMessageSize"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "setWritePos"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "setMessageSize"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "writeChecksum"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "writeSequence"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "writeMessageSize"
        },
        {
          "line": 72,
          "return_type": "bool",
          "name": "canWrite"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "checkWrite"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "OutputMessage"
        },
        {
          "line": 68,
          "name": "Protocol"
        },
        {
          "line": 69,
          "name": "PacketPlayer"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\packet_player.cpp",
      "total_lines": 105,
      "code_lines": 74,
      "comment_lines": 22,
      "empty_lines": 9,
      "functions": [
        {
          "line": 38,
          "return_type": "ifstream",
          "name": "f"
        },
        {
          "line": 40,
          "return_type": "ifstream",
          "name": "f"
        },
        {
          "line": 57,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "framework/global.h",
        "framework/core/clock.h",
        "filesystem",
        "packet_player.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\packet_player.h",
      "total_lines": 48,
      "code_lines": 20,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "start"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "stop"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "onOutputPacket"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "process"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "PacketPlayer"
        }
      ],
      "includes": [
        "deque",
        "framework/core/eventdispatcher.h",
        "framework/net/outputmessage.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\packet_recorder.cpp",
      "total_lines": 69,
      "code_lines": 39,
      "comment_lines": 22,
      "empty_lines": 8,
      "functions": [],
      "classes": [],
      "includes": [
        "framework/global.h",
        "framework/core/clock.h",
        "framework/core/resourcemanager.h",
        "packet_recorder.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\packet_recorder.h",
      "total_lines": 40,
      "code_lines": 14,
      "comment_lines": 21,
      "empty_lines": 5,
      "functions": [
        {
          "line": 33,
          "return_type": "void",
          "name": "addInputPacket"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "addOutputPacket"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "PacketRecorder"
        }
      ],
      "includes": [
        "framework/net/inputmessage.h",
        "framework/net/outputmessage.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\protocol.cpp",
      "total_lines": 426,
      "code_lines": 332,
      "comment_lines": 33,
      "empty_lines": 61,
      "functions": [
        {
          "line": 66,
          "return_type": "return",
          "name": "onConnect"
        },
        {
          "line": 142,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 216,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 266,
          "return_type": "return",
          "name": "unif"
        },
        {
          "line": 274,
          "return_type": "void",
          "name": "apply_rounds"
        },
        {
          "line": 357,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 380,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 395,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 420,
          "return_type": "return",
          "name": "onConnect"
        }
      ],
      "classes": [],
      "includes": [
        "protocol.h",
        "algorithm",
        "framework/core/application.h",
        "random",
        "inputmessage.h",
        "outputmessage.h",
        "framework/core/graphicalapplication.h",
        "webconnection.h",
        "connection.h",
        "framework/net/packet_player.h",
        "framework/net/packet_recorder.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\net\\protocol.h",
      "total_lines": 114,
      "code_lines": 75,
      "comment_lines": 22,
      "empty_lines": 17,
      "functions": [
        {
          "line": 43,
          "return_type": "void",
          "name": "connect"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "connect"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "disconnect"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setRecorder"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "playRecord"
        },
        {
          "line": 52,
          "return_type": "bool",
          "name": "isConnected"
        },
        {
          "line": 53,
          "return_type": "bool",
          "name": "isConnecting"
        },
        {
          "line": 54,
          "return_type": "ticks_t",
          "name": "getElapsedTicksSinceLastRead"
        },
        {
          "line": 56,
          "return_type": "WebConnectionPtr",
          "name": "getConnection"
        },
        {
          "line": 58,
          "return_type": "ConnectionPtr",
          "name": "getConnection"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "setConnection"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "setConnection"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "generateXteaKey"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "setXteaKey"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "enableXteaEncryption"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "enableChecksum"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "enabledSequencedPackets"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "send"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "recv"
        },
        {
          "line": 77,
          "return_type": "ProtocolPtr",
          "name": "asProtocol"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "onConnect"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "onRecv"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "onError"
        },
        {
          "line": 83,
          "return_type": "void",
          "name": "onSend"
        },
        {
          "line": 85,
          "return_type": "void",
          "name": "onProxyPacket"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "onPlayerPacket"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "onLocalDisconnected"
        },
        {
          "line": 97,
          "return_type": "void",
          "name": "internalRecvHeader"
        },
        {
          "line": 98,
          "return_type": "void",
          "name": "internalRecvData"
        },
        {
          "line": 100,
          "return_type": "bool",
          "name": "xteaDecrypt"
        },
        {
          "line": 101,
          "return_type": "void",
          "name": "xteaEncrypt"
        }
      ],
      "classes": [
        {
          "line": 36,
          "name": "Protocol"
        }
      ],
      "includes": [
        "webconnection.h",
        "connection.h",
        "declarations.h",
        "framework/luaengine/luaobject.h",
        "framework/proxy/proxy.h",
        "zlib.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\protocolhttp.cpp",
      "total_lines": 1096,
      "code_lines": 936,
      "comment_lines": 46,
      "empty_lines": 114,
      "functions": [
        {
          "line": 181,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 183,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 185,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 240,
          "return_type": "query",
          "name": "query_resolver"
        },
        {
          "line": 419,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 542,
          "return_type": "query",
          "name": "query_resolver"
        },
        {
          "line": 772,
          "return_type": "string",
          "name": "received_data"
        },
        {
          "line": 793,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 831,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 833,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 835,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 963,
          "return_type": "Payload",
          "name": "Length"
        },
        {
          "line": 964,
          "return_type": "Payload",
          "name": "length"
        },
        {
          "line": 983,
          "return_type": "Payload",
          "name": "Length"
        },
        {
          "line": 984,
          "return_type": "Payload",
          "name": "length"
        },
        {
          "line": 995,
          "return_type": "Payload",
          "name": "Length"
        },
        {
          "line": 996,
          "return_type": "Payload",
          "name": "length"
        },
        {
          "line": 1053,
          "return_type": "Connection",
          "name": "Close"
        }
      ],
      "classes": [],
      "includes": [
        "framework/core/eventdispatcher.h",
        "framework/util/crypt.h",
        "utility",
        "protocolhttp.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\net\\protocolhttp.h",
      "total_lines": 243,
      "code_lines": 179,
      "comment_lines": 24,
      "empty_lines": 40,
      "functions": [
        {
          "line": 86,
          "return_type": "void",
          "name": "start"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "cancel"
        },
        {
          "line": 88,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 115,
          "return_type": "void",
          "name": "on_resolve"
        },
        {
          "line": 116,
          "return_type": "void",
          "name": "on_connect"
        },
        {
          "line": 118,
          "return_type": "void",
          "name": "on_request_sent"
        },
        {
          "line": 120,
          "return_type": "void",
          "name": "on_write"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "on_read"
        },
        {
          "line": 123,
          "return_type": "void",
          "name": "onTimeout"
        },
        {
          "line": 124,
          "return_type": "void",
          "name": "onError"
        },
        {
          "line": 152,
          "return_type": "void",
          "name": "start"
        },
        {
          "line": 153,
          "return_type": "void",
          "name": "send"
        },
        {
          "line": 154,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 181,
          "return_type": "void",
          "name": "on_resolve"
        },
        {
          "line": 182,
          "return_type": "void",
          "name": "on_connect"
        },
        {
          "line": 183,
          "return_type": "void",
          "name": "on_request_sent"
        },
        {
          "line": 185,
          "return_type": "void",
          "name": "on_write"
        },
        {
          "line": 186,
          "return_type": "void",
          "name": "on_read"
        },
        {
          "line": 188,
          "return_type": "void",
          "name": "on_close"
        },
        {
          "line": 189,
          "return_type": "void",
          "name": "onTimeout"
        },
        {
          "line": 190,
          "return_type": "void",
          "name": "onError"
        },
        {
          "line": 198,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 199,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 201,
          "return_type": "int",
          "name": "get"
        },
        {
          "line": 202,
          "return_type": "int",
          "name": "post"
        },
        {
          "line": 203,
          "return_type": "int",
          "name": "download"
        },
        {
          "line": 204,
          "return_type": "int",
          "name": "ws"
        },
        {
          "line": 205,
          "return_type": "bool",
          "name": "wsSend"
        },
        {
          "line": 206,
          "return_type": "bool",
          "name": "wsClose"
        },
        {
          "line": 207,
          "return_type": "bool",
          "name": "cancel"
        },
        {
          "line": 211,
          "return_type": "void",
          "name": "clearDownloads"
        },
        {
          "line": 213,
          "return_type": "HttpResult_ptr",
          "name": "getFile"
        },
        {
          "line": 223,
          "return_type": "void",
          "name": "setUserAgent"
        },
        {
          "line": 225,
          "return_type": "void",
          "name": "addCustomHeader"
        },
        {
          "line": 227,
          "return_type": "void",
          "name": "setEnableTimeOutOnReadWrite"
        }
      ],
      "classes": [
        {
          "line": 36,
          "name": "HttpSession"
        },
        {
          "line": 61,
          "name": "HttpSession"
        },
        {
          "line": 128,
          "name": "WebsocketCallbackType"
        },
        {
          "line": 131,
          "name": "WebsocketSession"
        },
        {
          "line": 193,
          "name": "Http"
        }
      ],
      "includes": [
        "framework/global.h",
        "framework/stdext/uri.h",
        "queue",
        "asio.hpp",
        "asio/ssl.hpp",
        "zlib.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\server.h",
      "total_lines": 41,
      "code_lines": 15,
      "comment_lines": 21,
      "empty_lines": 5,
      "functions": [
        {
          "line": 32,
          "return_type": "ServerPtr",
          "name": "create"
        },
        {
          "line": 33,
          "return_type": "bool",
          "name": "isOpen"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "acceptNext"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "Server"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\net\\webconnection.cpp",
      "total_lines": 290,
      "code_lines": 204,
      "comment_lines": 24,
      "empty_lines": 62,
      "functions": [
        {
          "line": 165,
          "return_type": "ostream",
          "name": "os"
        },
        {
          "line": 197,
          "return_type": "ostream",
          "name": "os"
        }
      ],
      "classes": [],
      "includes": [
        "webconnection.h",
        "framework/core/application.h",
        "client/game.h",
        "utility",
        "asio/read.hpp",
        "asio/read_until.hpp",
        "framework/core/eventdispatcher.h",
        "emscripten/threading.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\net\\webconnection.h",
      "total_lines": 97,
      "code_lines": 56,
      "comment_lines": 21,
      "empty_lines": 20,
      "functions": [
        {
          "line": 51,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "connect"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "close"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "write"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "read"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "setErrorCallback"
        },
        {
          "line": 62,
          "return_type": "int",
          "name": "getIp"
        },
        {
          "line": 63,
          "return_type": "bool",
          "name": "isConnecting"
        },
        {
          "line": 64,
          "return_type": "bool",
          "name": "isConnected"
        },
        {
          "line": 65,
          "return_type": "ticks_t",
          "name": "getElapsedTicksSinceLastRead"
        },
        {
          "line": 67,
          "return_type": "WebConnectionPtr",
          "name": "asWebConnection"
        },
        {
          "line": 70,
          "return_type": "bool",
          "name": "sendPacket"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "internal_write"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "onRecv"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "onTimeout"
        },
        {
          "line": 78,
          "return_type": "void",
          "name": "runOnConnectCallback"
        },
        {
          "line": 79,
          "return_type": "void",
          "name": "runOnErrorCallback"
        }
      ],
      "classes": [
        {
          "line": 34,
          "name": "WebConnection"
        }
      ],
      "includes": [
        "asio/streambuf.hpp",
        "framework/luaengine/luaobject.h",
        "declarations.h",
        "emscripten/websocket.h",
        "queue"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\otml\\declarations.h",
      "total_lines": 34,
      "code_lines": 9,
      "comment_lines": 21,
      "empty_lines": 4,
      "functions": [],
      "classes": [
        {
          "line": 27,
          "name": "OTMLNode"
        },
        {
          "line": 28,
          "name": "OTMLDocument"
        },
        {
          "line": 29,
          "name": "OTMLParser"
        },
        {
          "line": 30,
          "name": "OTMLEmitter"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\otml\\otmldocument.cpp",
      "total_lines": 58,
      "code_lines": 30,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 41,
          "return_type": "return",
          "name": "parse"
        },
        {
          "line": 48,
          "return_type": "OTMLParser",
          "name": "parser"
        }
      ],
      "classes": [],
      "includes": [
        "otmldocument.h",
        "otmlemitter.h",
        "otmlparser.h",
        "framework/core/resourcemanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\androidmanager.cpp",
      "total_lines": 129,
      "code_lines": 78,
      "comment_lines": 24,
      "empty_lines": 27,
      "functions": [
        {
          "line": 123,
          "return_type": "void",
          "name": "Java_com_otclient_AndroidManager_nativeInit"
        }
      ],
      "classes": [
        {
          "line": 42,
          "name": "androidManagerJClass"
        }
      ],
      "includes": [
        "androidmanager.h",
        "framework/global.h",
        "framework/core/unzipper.h",
        "framework/core/resourcemanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\androidmanager.h",
      "total_lines": 60,
      "code_lines": 26,
      "comment_lines": 21,
      "empty_lines": 13,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "setAndroidApp"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "setAndroidManager"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "showKeyboardSoft"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "hideKeyboard"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "unZipAssetData"
        },
        {
          "line": 42,
          "return_type": "string",
          "name": "getStringFromJString"
        },
        {
          "line": 43,
          "return_type": "string",
          "name": "getAppBaseDir"
        },
        {
          "line": 45,
          "return_type": "float",
          "name": "getScreenDensity"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "attachToAppMainThread"
        }
      ],
      "classes": [
        {
          "line": 30,
          "name": "AndroidManager"
        }
      ],
      "includes": [
        "game-activity/native_app_glue/android_native_app_glue.h",
        "string"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\androidwindow.cpp",
      "total_lines": 510,
      "code_lines": 384,
      "comment_lines": 26,
      "empty_lines": 100,
      "functions": [
        {
          "line": 230,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 262,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 277,
          "return_type": "Point",
          "name": "lastMousePos"
        },
        {
          "line": 283,
          "return_type": "Point",
          "name": "newMousePos"
        },
        {
          "line": 299,
          "return_type": "Point",
          "name": "newMousePos"
        }
      ],
      "classes": [],
      "includes": [
        "androidwindow.h",
        "androidmanager.h",
        "game-activity/native_app_glue/android_native_app_glue.h",
        "framework/core/eventdispatcher.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\platform\\browserplatform.cpp",
      "total_lines": 127,
      "code_lines": 82,
      "comment_lines": 22,
      "empty_lines": 23,
      "functions": [
        {
          "line": 53,
          "return_type": "return",
          "name": "getpid"
        }
      ],
      "classes": [],
      "includes": [
        "platform.h",
        "cstring",
        "fstream",
        "unistd.h",
        "framework/stdext/stdext.h",
        "framework/core/eventdispatcher.h",
        "errno.h",
        "sys/stat.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\browserwindow.cpp",
      "total_lines": 582,
      "code_lines": 492,
      "comment_lines": 33,
      "empty_lines": 57,
      "functions": [
        {
          "line": 273,
          "return_type": "new",
          "name": "KeyboardEvent"
        },
        {
          "line": 274,
          "return_type": "new",
          "name": "KeyboardEvent"
        },
        {
          "line": 286,
          "return_type": "new",
          "name": "KeyboardEvent"
        },
        {
          "line": 287,
          "return_type": "new",
          "name": "KeyboardEvent"
        },
        {
          "line": 288,
          "return_type": "new",
          "name": "KeyboardEvent"
        },
        {
          "line": 316,
          "return_type": "int",
          "name": "paste_return"
        },
        {
          "line": 380,
          "return_type": "Point",
          "name": "newMousePos"
        },
        {
          "line": 397,
          "return_type": "Point",
          "name": "newMousePos"
        },
        {
          "line": 403,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 420,
          "return_type": "Point",
          "name": "newMousePos"
        },
        {
          "line": 447,
          "return_type": "size_t",
          "name": "number_of_characters_in_utf8_string"
        },
        {
          "line": 456,
          "return_type": "bool",
          "name": "string_eq"
        },
        {
          "line": 479,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 488,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "framework/core/application.h",
        "browserwindow.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/util/crypt.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\platform\\platform.h",
      "total_lines": 112,
      "code_lines": 79,
      "comment_lines": 21,
      "empty_lines": 12,
      "functions": [
        {
          "line": 66,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "processArgs"
        },
        {
          "line": 68,
          "return_type": "bool",
          "name": "spawnProcess"
        },
        {
          "line": 69,
          "return_type": "int",
          "name": "getProcessId"
        },
        {
          "line": 70,
          "return_type": "bool",
          "name": "isProcessRunning"
        },
        {
          "line": 71,
          "return_type": "bool",
          "name": "killProcess"
        },
        {
          "line": 72,
          "return_type": "string",
          "name": "getTempPath"
        },
        {
          "line": 73,
          "return_type": "string",
          "name": "getCurrentDir"
        },
        {
          "line": 74,
          "return_type": "bool",
          "name": "copyFile"
        },
        {
          "line": 75,
          "return_type": "bool",
          "name": "fileExists"
        },
        {
          "line": 76,
          "return_type": "bool",
          "name": "removeFile"
        },
        {
          "line": 77,
          "return_type": "ticks_t",
          "name": "getFileModificationTime"
        },
        {
          "line": 78,
          "return_type": "bool",
          "name": "openUrl"
        },
        {
          "line": 79,
          "return_type": "bool",
          "name": "openDir"
        },
        {
          "line": 80,
          "return_type": "string",
          "name": "getCPUName"
        },
        {
          "line": 81,
          "return_type": "double",
          "name": "getTotalSystemMemory"
        },
        {
          "line": 82,
          "return_type": "string",
          "name": "getOSName"
        },
        {
          "line": 83,
          "return_type": "Device",
          "name": "getDevice"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "setDevice"
        },
        {
          "line": 85,
          "return_type": "bool",
          "name": "isDesktop"
        },
        {
          "line": 86,
          "return_type": "bool",
          "name": "isMobile"
        },
        {
          "line": 95,
          "return_type": "bool",
          "name": "isBrowser"
        },
        {
          "line": 96,
          "return_type": "bool",
          "name": "isConsole"
        },
        {
          "line": 97,
          "return_type": "string",
          "name": "getDeviceShortName"
        },
        {
          "line": 98,
          "return_type": "string",
          "name": "getOsShortName"
        },
        {
          "line": 99,
          "return_type": "string",
          "name": "traceback"
        },
        {
          "line": 100,
          "return_type": "void",
          "name": "addKeyListener"
        },
        {
          "line": 102,
          "return_type": "DeviceType",
          "name": "getDeviceTypeByName"
        },
        {
          "line": 103,
          "return_type": "OperatingSystem",
          "name": "getOsByName"
        }
      ],
      "classes": [
        {
          "line": 34,
          "name": "Platform"
        }
      ],
      "includes": [
        "framework/core/inputevent.h",
        "framework/stdext/types.h",
        "string",
        "vector",
        "emscripten/emscripten.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\platformwindow.cpp",
      "total_lines": 202,
      "code_lines": 151,
      "comment_lines": 22,
      "empty_lines": 29,
      "functions": [
        {
          "line": 63,
          "return_type": "return",
          "name": "internalLoadMouseCursor"
        },
        {
          "line": 82,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 83,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 127,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 128,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "platformwindow.h",
        "win32window.h",
        "androidwindow.h",
        "browserwindow.h",
        "x11window.h",
        "framework/core/clock.h",
        "framework/core/clock.h",
        "framework/graphics/image.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\platformwindow.h",
      "total_lines": 155,
      "code_lines": 104,
      "comment_lines": 22,
      "empty_lines": 29,
      "functions": [
        {
          "line": 52,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "move"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "resize"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "show"
        },
        {
          "line": 58,
          "return_type": "void",
          "name": "hide"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "maximize"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "swapBuffers"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "showMouse"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "hideMouse"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "displayFatalError"
        },
        {
          "line": 66,
          "return_type": "int",
          "name": "loadMouseCursor"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "setMouseCursor"
        },
        {
          "line": 68,
          "return_type": "void",
          "name": "restoreMouseCursor"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "setTitle"
        },
        {
          "line": 71,
          "return_type": "void",
          "name": "setMinimumSize"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "setFullscreen"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "setVerticalSync"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "setIcon"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "setClipboardText"
        },
        {
          "line": 77,
          "return_type": "Size",
          "name": "getDisplaySize"
        },
        {
          "line": 78,
          "return_type": "string",
          "name": "getClipboardText"
        },
        {
          "line": 79,
          "return_type": "string",
          "name": "getPlatformType"
        },
        {
          "line": 81,
          "return_type": "int",
          "name": "getDisplayWidth"
        },
        {
          "line": 82,
          "return_type": "int",
          "name": "getDisplayHeight"
        },
        {
          "line": 83,
          "return_type": "float",
          "name": "getDisplayDensity"
        },
        {
          "line": 84,
          "return_type": "void",
          "name": "setDisplayDensity"
        },
        {
          "line": 86,
          "return_type": "Size",
          "name": "getUnmaximizedSize"
        },
        {
          "line": 87,
          "return_type": "Size",
          "name": "getSize"
        },
        {
          "line": 88,
          "return_type": "Size",
          "name": "getMinimumSize"
        },
        {
          "line": 89,
          "return_type": "int",
          "name": "getWidth"
        },
        {
          "line": 90,
          "return_type": "int",
          "name": "getHeight"
        },
        {
          "line": 91,
          "return_type": "Point",
          "name": "getUnmaximizedPos"
        },
        {
          "line": 92,
          "return_type": "Point",
          "name": "getPosition"
        },
        {
          "line": 93,
          "return_type": "int",
          "name": "getX"
        },
        {
          "line": 94,
          "return_type": "int",
          "name": "getY"
        },
        {
          "line": 95,
          "return_type": "Point",
          "name": "getMousePosition"
        },
        {
          "line": 96,
          "return_type": "int",
          "name": "getKeyboardModifiers"
        },
        {
          "line": 98,
          "return_type": "bool",
          "name": "isKeyPressed"
        },
        {
          "line": 99,
          "return_type": "bool",
          "name": "isMouseButtonPressed"
        },
        {
          "line": 101,
          "return_type": "bool",
          "name": "isVisible"
        },
        {
          "line": 102,
          "return_type": "bool",
          "name": "isMaximized"
        },
        {
          "line": 103,
          "return_type": "bool",
          "name": "isFullscreen"
        },
        {
          "line": 104,
          "return_type": "bool",
          "name": "hasFocus"
        },
        {
          "line": 106,
          "return_type": "bool",
          "name": "vsyncEnabled"
        },
        {
          "line": 108,
          "return_type": "void",
          "name": "setOnClose"
        },
        {
          "line": 109,
          "return_type": "void",
          "name": "setOnResize"
        },
        {
          "line": 110,
          "return_type": "void",
          "name": "setOnInputEvent"
        },
        {
          "line": 112,
          "return_type": "void",
          "name": "addKeyListener"
        },
        {
          "line": 114,
          "return_type": "void",
          "name": "setKeyDelay"
        },
        {
          "line": 118,
          "return_type": "int",
          "name": "internalLoadMouseCursor"
        },
        {
          "line": 120,
          "return_type": "void",
          "name": "updateUnmaximizedCoords"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "processKeyDown"
        },
        {
          "line": 123,
          "return_type": "void",
          "name": "processKeyUp"
        },
        {
          "line": 124,
          "return_type": "void",
          "name": "releaseAllKeys"
        },
        {
          "line": 125,
          "return_type": "void",
          "name": "fireKeysPress"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "PlatformWindow"
        }
      ],
      "includes": [
        "framework/core/inputevent.h",
        "framework/core/timer.h",
        "framework/global.h",
        "framework/graphics/declarations.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\unixcrashhandler.cpp",
      "total_lines": 138,
      "code_lines": 101,
      "comment_lines": 21,
      "empty_lines": 16,
      "functions": [
        {
          "line": 40,
          "return_type": "void",
          "name": "crashHandler"
        },
        {
          "line": 67,
          "return_type": "elif",
          "name": "defined"
        },
        {
          "line": 109,
          "return_type": "ofstream",
          "name": "fout"
        },
        {
          "line": 125,
          "return_type": "void",
          "name": "installCrashHandler"
        },
        {
          "line": 135,
          "return_type": "process",
          "name": "aborted"
        }
      ],
      "classes": [],
      "includes": [
        "crashhandler.h",
        "framework/global.h",
        "framework/core/application.h",
        "csignal",
        "execinfo.h",
        "ucontext.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\unixplatform.cpp",
      "total_lines": 267,
      "code_lines": 205,
      "comment_lines": 22,
      "empty_lines": 40,
      "functions": [
        {
          "line": 90,
          "return_type": "return",
          "name": "getpid"
        },
        {
          "line": 121,
          "return_type": "return",
          "name": "system"
        },
        {
          "line": 151,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 152,
          "return_type": "return",
          "name": "system"
        },
        {
          "line": 154,
          "return_type": "return",
          "name": "system"
        },
        {
          "line": 159,
          "return_type": "return",
          "name": "action"
        },
        {
          "line": 169,
          "return_type": "return",
          "name": "system"
        },
        {
          "line": 173,
          "return_type": "return",
          "name": "action"
        },
        {
          "line": 183,
          "return_type": "ifstream",
          "name": "in"
        },
        {
          "line": 200,
          "return_type": "ifstream",
          "name": "in"
        },
        {
          "line": 217,
          "return_type": "ifstream",
          "name": "in"
        }
      ],
      "classes": [],
      "includes": [
        "platform.h",
        "cstring",
        "fstream",
        "unistd.h",
        "framework/stdext/stdext.h",
        "framework/core/eventdispatcher.h",
        "sys/stat.h",
        "errno.h",
        "execinfo.h",
        "TargetConditionals.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\platform\\win32crashhandler.cpp",
      "total_lines": 202,
      "code_lines": 150,
      "comment_lines": 21,
      "empty_lines": 31,
      "functions": [
        {
          "line": 24,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 34,
          "return_type": "pragma",
          "name": "warning"
        },
        {
          "line": 35,
          "return_type": "pragma",
          "name": "warning"
        },
        {
          "line": 37,
          "return_type": "pragma",
          "name": "warning"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "Stacktrace"
        },
        {
          "line": 133,
          "return_type": "CALLBACK",
          "name": "ExceptionHandler"
        },
        {
          "line": 178,
          "return_type": "ofstream",
          "name": "fout"
        },
        {
          "line": 197,
          "return_type": "void",
          "name": "installCrashHandler"
        }
      ],
      "classes": [],
      "includes": [
        "framework/core/application.h",
        "crashhandler.h",
        "framework/global.h",
        "windows.h",
        "winsock2.h",
        "imagehlp.h",
        "imagehlp.h",
        "framework/core/graphicalapplication.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\platform\\win32platform.cpp",
      "total_lines": 454,
      "code_lines": 380,
      "comment_lines": 21,
      "empty_lines": 53,
      "functions": [
        {
          "line": 73,
          "return_type": "return",
          "name": "GetCurrentProcessId"
        },
        {
          "line": 166,
          "return_type": "return",
          "name": "action"
        },
        {
          "line": 178,
          "return_type": "return",
          "name": "action"
        },
        {
          "line": 342,
          "return_type": "Datacenter",
          "name": "Edition"
        },
        {
          "line": 348,
          "return_type": "Enterprise",
          "name": "Edition"
        },
        {
          "line": 363,
          "return_type": "Standard",
          "name": "Edition"
        },
        {
          "line": 374,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 376,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 378,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 387,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 391,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 394,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 401,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 403,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 405,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 426,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 437,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "platform.h",
        "framework/core/eventdispatcher.h",
        "framework/stdext/stdext.h",
        "tchar.h",
        "shellapi.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\platform\\win32window.cpp",
      "total_lines": 1102,
      "code_lines": 929,
      "comment_lines": 38,
      "empty_lines": 135,
      "functions": [
        {
          "line": 36,
          "return_type": "define",
          "name": "HSB_BIT_SET"
        },
        {
          "line": 259,
          "return_type": "CALLBACK",
          "name": "call"
        },
        {
          "line": 457,
          "return_type": "Rect",
          "name": "clientRect"
        },
        {
          "line": 470,
          "return_type": "Rect",
          "name": "clientRect"
        },
        {
          "line": 558,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 569,
          "return_type": "define",
          "name": "IsKeyDown"
        },
        {
          "line": 578,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 593,
          "return_type": "return",
          "name": "DefWindowProc"
        },
        {
          "line": 644,
          "return_type": "return",
          "name": "DefWindowProc"
        },
        {
          "line": 742,
          "return_type": "Point",
          "name": "newMousePos"
        },
        {
          "line": 818,
          "return_type": "return",
          "name": "DefWindowProc"
        },
        {
          "line": 867,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1065,
          "return_type": "return",
          "name": "Rect"
        },
        {
          "line": 1067,
          "return_type": "return",
          "name": "Rect"
        },
        {
          "line": 1075,
          "return_type": "return",
          "name": "Rect"
        },
        {
          "line": 1077,
          "return_type": "return",
          "name": "adjustWindowRect"
        }
      ],
      "classes": [],
      "includes": [
        "win32window.h",
        "framework/core/application.h",
        "framework/core/eventdispatcher.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/image.h",
        "framework/core/graphicalapplication.h",
        "timeapi.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\platform\\x11window.cpp",
      "total_lines": 1117,
      "code_lines": 927,
      "comment_lines": 54,
      "empty_lines": 136,
      "functions": [
        {
          "line": 31,
          "return_type": "define",
          "name": "LSB_BIT_SET"
        },
        {
          "line": 92,
          "return_type": "if",
          "name": "defined"
        },
        {
          "line": 633,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 653,
          "return_type": "Size",
          "name": "newSize"
        },
        {
          "line": 654,
          "return_type": "Point",
          "name": "newPos"
        },
        {
          "line": 683,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 827,
          "return_type": "Point",
          "name": "newMousePos"
        },
        {
          "line": 941,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1009,
          "return_type": "typedef",
          "name": "GLint"
        },
        {
          "line": 1014,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1066,
          "return_type": "return",
          "name": "Size"
        }
      ],
      "classes": [],
      "includes": [
        "x11window.h",
        "framework/core/resourcemanager.h",
        "framework/core/eventdispatcher.h",
        "framework/graphics/image.h",
        "unistd.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\platform\\x11window.h",
      "total_lines": 113,
      "code_lines": 74,
      "comment_lines": 21,
      "empty_lines": 18,
      "functions": [
        {
          "line": 40,
          "return_type": "void",
          "name": "internalOpenDisplay"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "internalCreateWindow"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "internalSetupWindowInput"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "internalCheckGL"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "internalChooseGLVisual"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "internalCreateGLContext"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "internalDestroyGLContext"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "internalConnectGLContext"
        },
        {
          "line": 51,
          "return_type": "bool",
          "name": "isExtensionSupported"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 57,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 59,
          "return_type": "void",
          "name": "move"
        },
        {
          "line": 60,
          "return_type": "void",
          "name": "resize"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "show"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "hide"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "maximize"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "swapBuffers"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "showMouse"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "hideMouse"
        },
        {
          "line": 69,
          "return_type": "void",
          "name": "setMouseCursor"
        },
        {
          "line": 70,
          "return_type": "void",
          "name": "restoreMouseCursor"
        },
        {
          "line": 72,
          "return_type": "void",
          "name": "setTitle"
        },
        {
          "line": 73,
          "return_type": "void",
          "name": "setMinimumSize"
        },
        {
          "line": 74,
          "return_type": "void",
          "name": "setFullscreen"
        },
        {
          "line": 75,
          "return_type": "void",
          "name": "setVerticalSync"
        },
        {
          "line": 76,
          "return_type": "void",
          "name": "setIcon"
        },
        {
          "line": 77,
          "return_type": "void",
          "name": "setClipboardText"
        },
        {
          "line": 79,
          "return_type": "Size",
          "name": "getDisplaySize"
        },
        {
          "line": 80,
          "return_type": "string",
          "name": "getClipboardText"
        },
        {
          "line": 81,
          "return_type": "string",
          "name": "getPlatformType"
        },
        {
          "line": 84,
          "return_type": "int",
          "name": "internalLoadMouseCursor"
        }
      ],
      "classes": [
        {
          "line": 38,
          "name": "X11Window"
        }
      ],
      "includes": [
        "platformwindow.h",
        "framework/graphics/glutil.h",
        "X11/Xlib.h",
        "X11/Xatom.h",
        "EGL/egl.h",
        "GL/glx.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\proxy\\proxy.cpp",
      "total_lines": 180,
      "code_lines": 142,
      "comment_lines": 21,
      "empty_lines": 17,
      "functions": [],
      "classes": [],
      "includes": [
        "proxy.h",
        "proxy_client.h",
        "framework/stdext/time.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\proxy\\proxy_client.cpp",
      "total_lines": 585,
      "code_lines": 489,
      "comment_lines": 35,
      "empty_lines": 61,
      "functions": [
        {
          "line": 36,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 54,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 81,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 85,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 93,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 114,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 224,
          "return_type": "return",
          "name": "disconnect"
        },
        {
          "line": 235,
          "return_type": "return",
          "name": "disconnect"
        },
        {
          "line": 249,
          "return_type": "return",
          "name": "disconnect"
        },
        {
          "line": 259,
          "return_type": "return",
          "name": "onPing"
        },
        {
          "line": 309,
          "return_type": "return",
          "name": "disconnect"
        },
        {
          "line": 328,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 349,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 357,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 377,
          "return_type": "return",
          "name": "terminate"
        },
        {
          "line": 475,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 505,
          "return_type": "return",
          "name": "terminate"
        },
        {
          "line": 510,
          "return_type": "return",
          "name": "readTibia12Header"
        },
        {
          "line": 517,
          "return_type": "return",
          "name": "terminate"
        },
        {
          "line": 532,
          "return_type": "return",
          "name": "terminate"
        },
        {
          "line": 547,
          "return_type": "return",
          "name": "terminate"
        },
        {
          "line": 550,
          "return_type": "auto",
          "name": "self"
        },
        {
          "line": 574,
          "return_type": "return",
          "name": "terminate"
        }
      ],
      "classes": [],
      "includes": [
        "proxy_client.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\sound\\declarations.h",
      "total_lines": 49,
      "code_lines": 23,
      "comment_lines": 21,
      "empty_lines": 5,
      "functions": [],
      "classes": [
        {
          "line": 32,
          "name": "SoundManager"
        },
        {
          "line": 33,
          "name": "SoundSource"
        },
        {
          "line": 34,
          "name": "SoundBuffer"
        },
        {
          "line": 35,
          "name": "SoundFile"
        },
        {
          "line": 36,
          "name": "SoundChannel"
        },
        {
          "line": 37,
          "name": "StreamSoundSource"
        },
        {
          "line": 38,
          "name": "CombinedSoundSource"
        },
        {
          "line": 39,
          "name": "OggSoundFile"
        },
        {
          "line": 40,
          "name": "SoundEffect"
        }
      ],
      "includes": [
        "framework/global.h",
        "AL/al.h",
        "AL/alc.h",
        "AL/efx-presets.h",
        "AL/efx.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\sound\\soundeffect.h",
      "total_lines": 62,
      "code_lines": 31,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 32,
          "return_type": "explicit",
          "name": "SoundEffect"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "setPreset"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "setReverbDensity"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "setReverbDiffusion"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "setReverbGain"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "setReverbGainHF"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "setReverbGainLF"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "setReverbDecayTime"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "setReverbDecayHfRatio"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setReverbDecayLfRatio"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setReverbReflectionsGain"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "setReverbReflectionsDelay"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "loadPreset"
        }
      ],
      "classes": [
        {
          "line": 29,
          "name": "SoundEffect"
        },
        {
          "line": 51,
          "name": "SoundManager"
        },
        {
          "line": 52,
          "name": "SoundSource"
        }
      ],
      "includes": [
        "framework/luaengine/luaobject.h",
        "AL/alc.h",
        "AL/efx-presets.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\sound\\soundfile.cpp",
      "total_lines": 64,
      "code_lines": 35,
      "comment_lines": 22,
      "empty_lines": 7,
      "functions": [
        {
          "line": 31,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 45,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 57,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "soundfile.h",
        "oggsoundfile.h",
        "framework/core/resourcemanager.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\sound\\soundfile.h",
      "total_lines": 54,
      "code_lines": 25,
      "comment_lines": 21,
      "empty_lines": 8,
      "functions": [
        {
          "line": 34,
          "return_type": "SoundFilePtr",
          "name": "loadSoundFile"
        },
        {
          "line": 36,
          "return_type": "int",
          "name": "read"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 38,
          "return_type": "bool",
          "name": "eof"
        },
        {
          "line": 40,
          "return_type": "ALenum",
          "name": "getSampleFormat"
        },
        {
          "line": 42,
          "return_type": "int",
          "name": "getChannels"
        },
        {
          "line": 43,
          "return_type": "int",
          "name": "getRate"
        },
        {
          "line": 44,
          "return_type": "int",
          "name": "getBps"
        },
        {
          "line": 45,
          "return_type": "int",
          "name": "getSize"
        },
        {
          "line": 46,
          "return_type": "string",
          "name": "getName"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "SoundFile"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/core/filestream.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\sound\\soundmanager.cpp",
      "total_lines": 539,
      "code_lines": 419,
      "comment_lines": 39,
      "empty_lines": 81,
      "functions": [
        {
          "line": 364,
          "return_type": "file",
          "name": "name"
        },
        {
          "line": 391,
          "return_type": "for",
          "name": "location"
        },
        {
          "line": 410,
          "return_type": "for",
          "name": "location"
        }
      ],
      "classes": [
        {
          "line": 43,
          "name": "StreamSoundSource"
        },
        {
          "line": 44,
          "name": "CombinedSoundSource"
        },
        {
          "line": 45,
          "name": "SoundFile"
        },
        {
          "line": 46,
          "name": "SoundBuffer"
        }
      ],
      "includes": [
        "soundmanager.h",
        "soundbuffer.h",
        "soundeffect.h",
        "soundchannel.h",
        "soundfile.h",
        "streamsoundsource.h",
        "combinedsoundsource.h",
        "cstdint",
        "framework/core/asyncdispatcher.h",
        "framework/core/clock.h",
        "framework/core/resourcemanager.h",
        "framework/core/garbagecollection.h",
        "nlohmann/json.hpp",
        "sounds.pb.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\sound\\soundmanager.h",
      "total_lines": 172,
      "code_lines": 115,
      "comment_lines": 36,
      "empty_lines": 21,
      "functions": [
        {
          "line": 125,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 126,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 127,
          "return_type": "void",
          "name": "poll"
        },
        {
          "line": 129,
          "return_type": "void",
          "name": "setAudioEnabled"
        },
        {
          "line": 130,
          "return_type": "bool",
          "name": "isAudioEnabled"
        },
        {
          "line": 131,
          "return_type": "void",
          "name": "enableAudio"
        },
        {
          "line": 132,
          "return_type": "void",
          "name": "disableAudio"
        },
        {
          "line": 133,
          "return_type": "void",
          "name": "stopAll"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 135,
          "return_type": "bool",
          "name": "isEaxEnabled"
        },
        {
          "line": 136,
          "return_type": "bool",
          "name": "loadClientFiles"
        },
        {
          "line": 137,
          "return_type": "string",
          "name": "getAudioFileNameById"
        },
        {
          "line": 139,
          "return_type": "void",
          "name": "preload"
        },
        {
          "line": 140,
          "return_type": "SoundSourcePtr",
          "name": "play"
        },
        {
          "line": 141,
          "return_type": "SoundChannelPtr",
          "name": "getChannel"
        },
        {
          "line": 142,
          "return_type": "SoundEffectPtr",
          "name": "createSoundEffect"
        },
        {
          "line": 144,
          "return_type": "string",
          "name": "resolveSoundFile"
        },
        {
          "line": 145,
          "return_type": "void",
          "name": "ensureContext"
        },
        {
          "line": 148,
          "return_type": "SoundSourcePtr",
          "name": "createSoundSource"
        },
        {
          "line": 149,
          "return_type": "bool",
          "name": "loadFromProtobuf"
        }
      ],
      "classes": [
        {
          "line": 117,
          "name": "SoundManager"
        }
      ],
      "includes": [
        "declarations.h",
        "client/game.h",
        "soundsource.h",
        "framework/util/point.h",
        "future"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\sound\\soundsource.cpp",
      "total_lines": 191,
      "code_lines": 147,
      "comment_lines": 21,
      "empty_lines": 23,
      "functions": [
        {
          "line": 159,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "soundsource.h",
        "soundbuffer.h",
        "soundeffect.h",
        "framework/stdext/time.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\sound\\soundsource.h",
      "total_lines": 85,
      "code_lines": 48,
      "comment_lines": 21,
      "empty_lines": 16,
      "functions": [
        {
          "line": 39,
          "return_type": "void",
          "name": "play"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "stop"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "isBuffering"
        },
        {
          "line": 43,
          "return_type": "bool",
          "name": "isPlaying"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "setName"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setLooping"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "setRelative"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "setReferenceDistance"
        },
        {
          "line": 49,
          "return_type": "void",
          "name": "setGain"
        },
        {
          "line": 50,
          "return_type": "void",
          "name": "setPitch"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "setVelocity"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "setRolloff"
        },
        {
          "line": 54,
          "return_type": "void",
          "name": "setFading"
        },
        {
          "line": 55,
          "return_type": "void",
          "name": "setEffect"
        },
        {
          "line": 56,
          "return_type": "void",
          "name": "removeEffect"
        },
        {
          "line": 58,
          "return_type": "string",
          "name": "getName"
        },
        {
          "line": 59,
          "return_type": "uint8_t",
          "name": "getChannel"
        },
        {
          "line": 60,
          "return_type": "float",
          "name": "getGain"
        },
        {
          "line": 61,
          "return_type": "float",
          "name": "getReferenceDistance"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "setBuffer"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "setChannel"
        },
        {
          "line": 67,
          "return_type": "void",
          "name": "update"
        }
      ],
      "classes": [
        {
          "line": 28,
          "name": "SoundSource"
        },
        {
          "line": 68,
          "name": "SoundManager"
        },
        {
          "line": 69,
          "name": "CombinedSoundSource"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\stdext\\qrcodegen.cpp",
      "total_lines": 771,
      "code_lines": 613,
      "comment_lines": 71,
      "empty_lines": 87,
      "functions": [
        {
          "line": 70,
          "return_type": "return",
          "name": "QrSegment"
        },
        {
          "line": 92,
          "return_type": "return",
          "name": "QrSegment"
        },
        {
          "line": 114,
          "return_type": "return",
          "name": "QrSegment"
        },
        {
          "line": 121,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 123,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 140,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 143,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 148,
          "return_type": "return",
          "name": "QrSegment"
        },
        {
          "line": 228,
          "return_type": "return",
          "name": "encodeSegments"
        },
        {
          "line": 233,
          "return_type": "return",
          "name": "encodeSegments"
        },
        {
          "line": 256,
          "return_type": "throw",
          "name": "data_too_long"
        },
        {
          "line": 293,
          "return_type": "return",
          "name": "QrCode"
        },
        {
          "line": 476,
          "return_type": "vector",
          "name": "dat"
        },
        {
          "line": 560,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 582,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 651,
          "return_type": "return",
          "name": "getNumRawDataModules"
        },
        {
          "line": 718,
          "return_type": "return",
          "name": "finderPenaltyCountPatterns"
        }
      ],
      "classes": [],
      "includes": [
        "qrcodegen.h",
        "algorithm",
        "cassert",
        "climits",
        "cstddef",
        "cstdlib",
        "cstring",
        "sstream",
        "utility"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\stdext\\qrcodegen.h",
      "total_lines": 473,
      "code_lines": 106,
      "comment_lines": 271,
      "empty_lines": 96,
      "functions": [
        {
          "line": 78,
          "return_type": "int",
          "name": "getModeBits"
        },
        {
          "line": 84,
          "return_type": "int",
          "name": "numCharCountBits"
        },
        {
          "line": 94,
          "return_type": "QrSegment",
          "name": "makeBytes"
        },
        {
          "line": 99,
          "return_type": "QrSegment",
          "name": "makeNumeric"
        },
        {
          "line": 106,
          "return_type": "QrSegment",
          "name": "makeAlphanumeric"
        },
        {
          "line": 118,
          "return_type": "QrSegment",
          "name": "makeEci"
        },
        {
          "line": 126,
          "return_type": "bool",
          "name": "isNumeric"
        },
        {
          "line": 133,
          "return_type": "bool",
          "name": "isAlphanumeric"
        },
        {
          "line": 175,
          "return_type": "int",
          "name": "getNumChars"
        },
        {
          "line": 185,
          "return_type": "int",
          "name": "getTotalBits"
        },
        {
          "line": 226,
          "return_type": "int",
          "name": "getFormatBits"
        },
        {
          "line": 237,
          "return_type": "QrCode",
          "name": "encodeText"
        },
        {
          "line": 245,
          "return_type": "QrCode",
          "name": "encodeBinary"
        },
        {
          "line": 307,
          "return_type": "int",
          "name": "getVersion"
        },
        {
          "line": 312,
          "return_type": "int",
          "name": "getSize"
        },
        {
          "line": 317,
          "return_type": "Ecc",
          "name": "getErrorCorrectionLevel"
        },
        {
          "line": 322,
          "return_type": "int",
          "name": "getMask"
        },
        {
          "line": 329,
          "return_type": "bool",
          "name": "getModule"
        },
        {
          "line": 334,
          "return_type": "void",
          "name": "drawFunctionPatterns"
        },
        {
          "line": 338,
          "return_type": "void",
          "name": "drawFormatBits"
        },
        {
          "line": 342,
          "return_type": "void",
          "name": "drawVersion"
        },
        {
          "line": 346,
          "return_type": "void",
          "name": "drawFinderPattern"
        },
        {
          "line": 350,
          "return_type": "void",
          "name": "drawAlignmentPattern"
        },
        {
          "line": 354,
          "return_type": "void",
          "name": "setFunctionModule"
        },
        {
          "line": 357,
          "return_type": "bool",
          "name": "module"
        },
        {
          "line": 367,
          "return_type": "void",
          "name": "drawCodewords"
        },
        {
          "line": 374,
          "return_type": "void",
          "name": "applyMask"
        },
        {
          "line": 378,
          "return_type": "long",
          "name": "getPenaltyScore"
        },
        {
          "line": 390,
          "return_type": "int",
          "name": "getNumRawDataModules"
        },
        {
          "line": 395,
          "return_type": "int",
          "name": "getNumDataCodewords"
        },
        {
          "line": 406,
          "return_type": "uint8_t",
          "name": "reedSolomonMultiply"
        },
        {
          "line": 410,
          "return_type": "int",
          "name": "finderPenaltyCountPatterns"
        },
        {
          "line": 413,
          "return_type": "int",
          "name": "finderPenaltyTerminateAndCount"
        },
        {
          "line": 416,
          "return_type": "void",
          "name": "finderPenaltyAddHistory"
        },
        {
          "line": 419,
          "return_type": "bool",
          "name": "getBit"
        },
        {
          "line": 454,
          "return_type": "explicit",
          "name": "data_too_long"
        },
        {
          "line": 471,
          "return_type": "void",
          "name": "appendBits"
        }
      ],
      "classes": [
        {
          "line": 44,
          "name": "QrSegment"
        },
        {
          "line": 51,
          "name": "Mode"
        },
        {
          "line": 210,
          "name": "QrCode"
        },
        {
          "line": 217,
          "name": "Ecc"
        },
        {
          "line": 452,
          "name": "data_too_long"
        },
        {
          "line": 460,
          "name": "BitBuffer"
        }
      ],
      "includes": [
        "array",
        "cstdint",
        "stdexcept",
        "string",
        "vector"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\stdext\\string.cpp",
      "total_lines": 212,
      "code_lines": 152,
      "comment_lines": 24,
      "empty_lines": 36,
      "functions": [
        {
          "line": 32,
          "return_type": "pragma",
          "name": "warning"
        },
        {
          "line": 37,
          "return_type": "string",
          "name": "resolve_path"
        },
        {
          "line": 48,
          "return_type": "string",
          "name": "date_time_string"
        },
        {
          "line": 66,
          "return_type": "string",
          "name": "dec_to_hex"
        },
        {
          "line": 73,
          "return_type": "uint64_t",
          "name": "hex_to_dec"
        },
        {
          "line": 81,
          "return_type": "bool",
          "name": "is_valid_utf8"
        },
        {
          "line": 92,
          "return_type": "string",
          "name": "utf8_to_latin1"
        },
        {
          "line": 99,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 114,
          "return_type": "string",
          "name": "latin1_to_utf8"
        },
        {
          "line": 132,
          "return_type": "wstring",
          "name": "utf8_to_utf16"
        },
        {
          "line": 143,
          "return_type": "string",
          "name": "utf16_to_utf8"
        },
        {
          "line": 154,
          "return_type": "wstring",
          "name": "latin1_to_utf16"
        },
        {
          "line": 156,
          "return_type": "string",
          "name": "utf16_to_latin1"
        },
        {
          "line": 159,
          "return_type": "void",
          "name": "tolower"
        },
        {
          "line": 161,
          "return_type": "void",
          "name": "toupper"
        },
        {
          "line": 163,
          "return_type": "void",
          "name": "ltrim"
        },
        {
          "line": 165,
          "return_type": "void",
          "name": "rtrim"
        },
        {
          "line": 167,
          "return_type": "void",
          "name": "trim"
        },
        {
          "line": 169,
          "return_type": "void",
          "name": "ucwords"
        },
        {
          "line": 174,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 181,
          "return_type": "void",
          "name": "replace_all"
        },
        {
          "line": 189,
          "return_type": "void",
          "name": "eraseWhiteSpace"
        }
      ],
      "classes": [],
      "includes": [
        "algorithm",
        "ranges",
        "vector",
        "charconv",
        "exception.h",
        "types.h",
        "winsock2.h",
        "windows.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\stdext\\uri.cpp",
      "total_lines": 32,
      "code_lines": 18,
      "comment_lines": 6,
      "empty_lines": 8,
      "functions": [
        {
          "line": 6,
          "return_type": "ParsedURI",
          "name": "parseURI"
        }
      ],
      "classes": [],
      "includes": [
        "locale",
        "regex",
        "uri.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\stdext\\uri.h",
      "total_lines": 35,
      "code_lines": 10,
      "comment_lines": 21,
      "empty_lines": 4,
      "functions": [
        {
          "line": 35,
          "return_type": "ParsedURI",
          "name": "parseURI"
        }
      ],
      "classes": [],
      "includes": [
        "string"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\declarations.h",
      "total_lines": 55,
      "code_lines": 28,
      "comment_lines": 21,
      "empty_lines": 6,
      "functions": [],
      "classes": [
        {
          "line": 27,
          "name": "DrawPoolType"
        },
        {
          "line": 29,
          "name": "UIManager"
        },
        {
          "line": 30,
          "name": "UIWidget"
        },
        {
          "line": 31,
          "name": "UITextEdit"
        },
        {
          "line": 32,
          "name": "UILayout"
        },
        {
          "line": 33,
          "name": "UIBoxLayout"
        },
        {
          "line": 34,
          "name": "UIHorizontalLayout"
        },
        {
          "line": 35,
          "name": "UIVerticalLayout"
        },
        {
          "line": 36,
          "name": "UIGridLayout"
        },
        {
          "line": 37,
          "name": "UIAnchor"
        },
        {
          "line": 38,
          "name": "UIAnchorGroup"
        },
        {
          "line": 39,
          "name": "UIAnchorLayout"
        },
        {
          "line": 40,
          "name": "UIParticles"
        }
      ],
      "includes": [
        "framework/global.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uianchorlayout.cpp",
      "total_lines": 286,
      "code_lines": 215,
      "comment_lines": 33,
      "empty_lines": 38,
      "functions": [],
      "classes": [],
      "includes": [
        "uianchorlayout.h",
        "uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\ui\\uigridlayout.cpp",
      "total_lines": 121,
      "code_lines": 79,
      "comment_lines": 22,
      "empty_lines": 20,
      "functions": [
        {
          "line": 39,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 41,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 43,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 45,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 47,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 49,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 51,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 53,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uigridlayout.h",
        "uiwidget.h",
        "framework/core/eventdispatcher.h",
        "utility"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uihorizontallayout.cpp",
      "total_lines": 102,
      "code_lines": 63,
      "comment_lines": 23,
      "empty_lines": 16,
      "functions": [
        {
          "line": 63,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 88,
          "return_type": "else",
          "name": "for"
        }
      ],
      "classes": [],
      "includes": [
        "uihorizontallayout.h",
        "framework/core/eventdispatcher.h",
        "uiwidget.h",
        "ranges"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uilayout.cpp",
      "total_lines": 72,
      "code_lines": 38,
      "comment_lines": 24,
      "empty_lines": 10,
      "functions": [],
      "classes": [],
      "includes": [
        "uilayout.h",
        "uiwidget.h",
        "framework/core/eventdispatcher.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uilayout.h",
      "total_lines": 65,
      "code_lines": 32,
      "comment_lines": 22,
      "empty_lines": 11,
      "functions": [
        {
          "line": 37,
          "return_type": "void",
          "name": "update"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "updateLater"
        },
        {
          "line": 40,
          "return_type": "void",
          "name": "applyStyle"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "addWidget"
        },
        {
          "line": 42,
          "return_type": "void",
          "name": "removeWidget"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "disableUpdates"
        },
        {
          "line": 44,
          "return_type": "void",
          "name": "enableUpdates"
        },
        {
          "line": 46,
          "return_type": "void",
          "name": "setParent"
        },
        {
          "line": 47,
          "return_type": "UIWidgetPtr",
          "name": "getParentWidget"
        },
        {
          "line": 49,
          "return_type": "bool",
          "name": "isUpdateDisabled"
        },
        {
          "line": 50,
          "return_type": "bool",
          "name": "isUpdating"
        },
        {
          "line": 52,
          "return_type": "bool",
          "name": "isUIAnchorLayout"
        },
        {
          "line": 53,
          "return_type": "bool",
          "name": "isUIBoxLayout"
        },
        {
          "line": 54,
          "return_type": "bool",
          "name": "isUIHorizontalLayout"
        },
        {
          "line": 55,
          "return_type": "bool",
          "name": "isUIVerticalLayout"
        },
        {
          "line": 56,
          "return_type": "bool",
          "name": "isUIGridLayout"
        },
        {
          "line": 59,
          "return_type": "bool",
          "name": "internalUpdate"
        }
      ],
      "classes": [
        {
          "line": 32,
          "name": "UILayout"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/luaengine/luaobject.h",
        "framework/otml/otml.h",
        "utility"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uimanager.cpp",
      "total_lines": 617,
      "code_lines": 472,
      "comment_lines": 46,
      "empty_lines": 99,
      "functions": [
        {
          "line": 360,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 391,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 462,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 478,
          "return_type": "return",
          "name": "findMainWidgetNode"
        },
        {
          "line": 492,
          "return_type": "return",
          "name": "findMainWidgetNode"
        },
        {
          "line": 511,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 538,
          "return_type": "return",
          "name": "createWidgetFromOTML"
        },
        {
          "line": 562,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 578,
          "return_type": "return",
          "name": "createWidgetFromOTML"
        },
        {
          "line": 589,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 599,
          "return_type": "throw",
          "name": "Exception"
        }
      ],
      "classes": [],
      "includes": [
        "uimanager.h",
        "ui.h",
        "framework/core/eventdispatcher.h",
        "framework/core/modulemanager.h",
        "framework/core/resourcemanager.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/otml/otml.h",
        "framework/platform/platformwindow.h",
        "framework/graphics/graphics.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\ui\\uimanager.h",
      "total_lines": 101,
      "code_lines": 65,
      "comment_lines": 22,
      "empty_lines": 14,
      "functions": [
        {
          "line": 34,
          "return_type": "void",
          "name": "init"
        },
        {
          "line": 35,
          "return_type": "void",
          "name": "terminate"
        },
        {
          "line": 37,
          "return_type": "void",
          "name": "render"
        },
        {
          "line": 38,
          "return_type": "void",
          "name": "resize"
        },
        {
          "line": 39,
          "return_type": "void",
          "name": "inputEvent"
        },
        {
          "line": 41,
          "return_type": "void",
          "name": "updatePressedWidget"
        },
        {
          "line": 42,
          "return_type": "bool",
          "name": "updateDraggingWidget"
        },
        {
          "line": 43,
          "return_type": "void",
          "name": "updateHoveredWidget"
        },
        {
          "line": 45,
          "return_type": "void",
          "name": "clearStyles"
        },
        {
          "line": 46,
          "return_type": "bool",
          "name": "importStyle"
        },
        {
          "line": 47,
          "return_type": "void",
          "name": "importStyleFromOTML"
        },
        {
          "line": 48,
          "return_type": "void",
          "name": "importStyleFromOTML"
        },
        {
          "line": 49,
          "return_type": "OTMLNodePtr",
          "name": "getStyle"
        },
        {
          "line": 50,
          "return_type": "string",
          "name": "getStyleName"
        },
        {
          "line": 51,
          "return_type": "string",
          "name": "getStyleClass"
        },
        {
          "line": 52,
          "return_type": "OTMLNodePtr",
          "name": "findMainWidgetNode"
        },
        {
          "line": 54,
          "return_type": "UIWidgetPtr",
          "name": "loadUI"
        },
        {
          "line": 55,
          "return_type": "UIWidgetPtr",
          "name": "loadUIFromString"
        },
        {
          "line": 56,
          "return_type": "OTMLNodePtr",
          "name": "loadDeviceUI"
        },
        {
          "line": 57,
          "return_type": "OTMLNodePtr",
          "name": "loadDeviceUI"
        },
        {
          "line": 58,
          "return_type": "UIWidgetPtr",
          "name": "displayUI"
        },
        {
          "line": 59,
          "return_type": "UIWidgetPtr",
          "name": "createWidget"
        },
        {
          "line": 60,
          "return_type": "UIWidgetPtr",
          "name": "createWidgetFromOTML"
        },
        {
          "line": 62,
          "return_type": "void",
          "name": "setMouseReceiver"
        },
        {
          "line": 63,
          "return_type": "void",
          "name": "setKeyboardReceiver"
        },
        {
          "line": 64,
          "return_type": "void",
          "name": "setDebugBoxesDrawing"
        },
        {
          "line": 65,
          "return_type": "void",
          "name": "resetMouseReceiver"
        },
        {
          "line": 66,
          "return_type": "void",
          "name": "resetKeyboardReceiver"
        },
        {
          "line": 67,
          "return_type": "UIWidgetPtr",
          "name": "getMouseReceiver"
        },
        {
          "line": 68,
          "return_type": "UIWidgetPtr",
          "name": "getKeyboardReceiver"
        },
        {
          "line": 69,
          "return_type": "UIWidgetPtr",
          "name": "getDraggingWidget"
        },
        {
          "line": 70,
          "return_type": "UIWidgetPtr",
          "name": "getHoveredWidget"
        },
        {
          "line": 71,
          "return_type": "UIWidgetPtr",
          "name": "getPressedWidget"
        },
        {
          "line": 72,
          "return_type": "UIWidgetPtr",
          "name": "getRootWidget"
        },
        {
          "line": 74,
          "return_type": "bool",
          "name": "isMouseGrabbed"
        },
        {
          "line": 75,
          "return_type": "bool",
          "name": "isKeyboardGrabbed"
        },
        {
          "line": 77,
          "return_type": "bool",
          "name": "isDrawingDebugBoxes"
        },
        {
          "line": 80,
          "return_type": "void",
          "name": "onWidgetAppear"
        },
        {
          "line": 81,
          "return_type": "void",
          "name": "onWidgetDisappear"
        },
        {
          "line": 82,
          "return_type": "void",
          "name": "onWidgetDestroy"
        }
      ],
      "classes": [
        {
          "line": 31,
          "name": "UIManager"
        },
        {
          "line": 84,
          "name": "UIWidget"
        },
        {
          "line": 85,
          "name": "GraphicalApplication"
        }
      ],
      "includes": [
        "declarations.h",
        "framework/core/inputevent.h",
        "framework/otml/declarations.h",
        "framework/platform/platform.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uiparticles.cpp",
      "total_lines": 69,
      "code_lines": 37,
      "comment_lines": 21,
      "empty_lines": 11,
      "functions": [
        {
          "line": 59,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uiparticles.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/particlemanager.h",
        "framework/graphics/particleeffect.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uiparticles.h",
      "total_lines": 42,
      "code_lines": 14,
      "comment_lines": 21,
      "empty_lines": 7,
      "functions": [
        {
          "line": 30,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 32,
          "return_type": "void",
          "name": "addEffect"
        },
        {
          "line": 34,
          "return_type": "void",
          "name": "onStyleApply"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "setReferencePos"
        },
        {
          "line": 37,
          "return_type": "PointF",
          "name": "getReferencePos"
        }
      ],
      "classes": [
        {
          "line": 27,
          "name": "UIParticles"
        }
      ],
      "includes": [
        "framework/ui/uiwidget.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uiqrcode.cpp",
      "total_lines": 64,
      "code_lines": 33,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 34,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uiqrcode.h",
        "framework/graphics/image.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uitextedit.cpp",
      "total_lines": 955,
      "code_lines": 773,
      "comment_lines": 53,
      "empty_lines": 129,
      "functions": [
        {
          "line": 121,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 181,
          "return_type": "Rect",
          "name": "virtualRect"
        },
        {
          "line": 184,
          "return_type": "Rect",
          "name": "glyphRect"
        },
        {
          "line": 214,
          "return_type": "Rect",
          "name": "virtualRect"
        },
        {
          "line": 217,
          "return_type": "Rect",
          "name": "glyphRect"
        },
        {
          "line": 253,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 260,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 302,
          "return_type": "Rect",
          "name": "glyphScreenCoords"
        },
        {
          "line": 308,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 316,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 387,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 494,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 496,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 567,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 680,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 682,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 684,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 686,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 688,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 690,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 692,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 694,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 696,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 699,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 701,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 703,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 705,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 707,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 709,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 711,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 733,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 749,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 754,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 758,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 762,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 768,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 774,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 779,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 782,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 785,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 789,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 800,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 805,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 810,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 813,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 830,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 841,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 859,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "uitextedit.h",
        "framework/core/clock.h",
        "framework/graphics/bitmapfont.h",
        "framework/graphics/graphics.h",
        "framework/input/mouse.h",
        "framework/otml/otmlnode.h",
        "framework/platform/platformwindow.h",
        "framework/graphics/drawpoolmanager.h",
        "uitranslator.h",
        "framework/graphics/fontmanager.h",
        "emscripten/emscripten.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\ui\\uitranslator.cpp",
      "total_lines": 131,
      "code_lines": 88,
      "comment_lines": 21,
      "empty_lines": 22,
      "functions": [],
      "classes": [],
      "includes": [
        "uitranslator.h",
        "framework/stdext/string.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uiverticallayout.cpp",
      "total_lines": 104,
      "code_lines": 63,
      "comment_lines": 24,
      "empty_lines": 17,
      "functions": [
        {
          "line": 65,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 90,
          "return_type": "else",
          "name": "for"
        }
      ],
      "classes": [],
      "includes": [
        "uiverticallayout.h",
        "framework/core/eventdispatcher.h",
        "uiwidget.h",
        "ranges"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uiwidget.cpp",
      "total_lines": 2075,
      "code_lines": 1587,
      "comment_lines": 99,
      "empty_lines": 389,
      "functions": [
        {
          "line": 359,
          "return_type": "UIWidgetList",
          "name": "rotatedChildren"
        },
        {
          "line": 401,
          "return_type": "UIWidgetList",
          "name": "rotatedChildren"
        },
        {
          "line": 1017,
          "return_type": "throw",
          "name": "Exception"
        },
        {
          "line": 1055,
          "return_type": "rect",
          "name": "size"
        },
        {
          "line": 1177,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1650,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 1912,
          "return_type": "return",
          "name": "onKeyText"
        },
        {
          "line": 1934,
          "return_type": "return",
          "name": "onKeyDown"
        },
        {
          "line": 1957,
          "return_type": "return",
          "name": "onKeyPress"
        },
        {
          "line": 1980,
          "return_type": "return",
          "name": "onKeyUp"
        }
      ],
      "classes": [],
      "includes": [
        "uiwidget.h",
        "uianchorlayout.h",
        "uimanager.h",
        "uitranslator.h",
        "framework/core/eventdispatcher.h",
        "framework/luaengine/luainterface.h",
        "framework/otml/otmlnode.h",
        "framework/platform/platformwindow.h",
        "algorithm",
        "ranges",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/shadermanager.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\ui\\uiwidget.h",
      "total_lines": 629,
      "code_lines": 536,
      "comment_lines": 30,
      "empty_lines": 63,
      "functions": [
        {
          "line": 41,
          "return_type": "void",
          "name": "set"
        },
        {
          "line": 86,
          "return_type": "void",
          "name": "drawSelf"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "draw"
        },
        {
          "line": 89,
          "return_type": "void",
          "name": "drawChildren"
        },
        {
          "line": 121,
          "return_type": "void",
          "name": "addChild"
        },
        {
          "line": 122,
          "return_type": "void",
          "name": "insertChild"
        },
        {
          "line": 123,
          "return_type": "void",
          "name": "removeChild"
        },
        {
          "line": 124,
          "return_type": "void",
          "name": "focusChild"
        },
        {
          "line": 125,
          "return_type": "void",
          "name": "focusNextChild"
        },
        {
          "line": 126,
          "return_type": "void",
          "name": "focusPreviousChild"
        },
        {
          "line": 127,
          "return_type": "void",
          "name": "lowerChild"
        },
        {
          "line": 128,
          "return_type": "void",
          "name": "raiseChild"
        },
        {
          "line": 129,
          "return_type": "void",
          "name": "moveChildToIndex"
        },
        {
          "line": 130,
          "return_type": "void",
          "name": "reorderChildren"
        },
        {
          "line": 131,
          "return_type": "void",
          "name": "lockChild"
        },
        {
          "line": 132,
          "return_type": "void",
          "name": "unlockChild"
        },
        {
          "line": 133,
          "return_type": "void",
          "name": "mergeStyle"
        },
        {
          "line": 134,
          "return_type": "void",
          "name": "applyStyle"
        },
        {
          "line": 135,
          "return_type": "void",
          "name": "addAnchor"
        },
        {
          "line": 136,
          "return_type": "void",
          "name": "removeAnchor"
        },
        {
          "line": 137,
          "return_type": "void",
          "name": "fill"
        },
        {
          "line": 138,
          "return_type": "void",
          "name": "centerIn"
        },
        {
          "line": 139,
          "return_type": "void",
          "name": "breakAnchors"
        },
        {
          "line": 140,
          "return_type": "void",
          "name": "updateParentLayout"
        },
        {
          "line": 141,
          "return_type": "void",
          "name": "updateLayout"
        },
        {
          "line": 142,
          "return_type": "void",
          "name": "lock"
        },
        {
          "line": 143,
          "return_type": "void",
          "name": "unlock"
        },
        {
          "line": 144,
          "return_type": "void",
          "name": "focus"
        },
        {
          "line": 145,
          "return_type": "void",
          "name": "recursiveFocus"
        },
        {
          "line": 146,
          "return_type": "void",
          "name": "lower"
        },
        {
          "line": 147,
          "return_type": "void",
          "name": "raise"
        },
        {
          "line": 148,
          "return_type": "void",
          "name": "grabMouse"
        },
        {
          "line": 149,
          "return_type": "void",
          "name": "ungrabMouse"
        },
        {
          "line": 150,
          "return_type": "void",
          "name": "grabKeyboard"
        },
        {
          "line": 151,
          "return_type": "void",
          "name": "ungrabKeyboard"
        },
        {
          "line": 152,
          "return_type": "void",
          "name": "bindRectToParent"
        },
        {
          "line": 153,
          "return_type": "void",
          "name": "destroy"
        },
        {
          "line": 154,
          "return_type": "void",
          "name": "destroyChildren"
        },
        {
          "line": 155,
          "return_type": "void",
          "name": "removeChildren"
        },
        {
          "line": 156,
          "return_type": "void",
          "name": "hideChildren"
        },
        {
          "line": 157,
          "return_type": "void",
          "name": "showChildren"
        },
        {
          "line": 159,
          "return_type": "void",
          "name": "setId"
        },
        {
          "line": 160,
          "return_type": "void",
          "name": "setParent"
        },
        {
          "line": 161,
          "return_type": "void",
          "name": "setLayout"
        },
        {
          "line": 162,
          "return_type": "bool",
          "name": "setRect"
        },
        {
          "line": 163,
          "return_type": "void",
          "name": "setStyle"
        },
        {
          "line": 164,
          "return_type": "void",
          "name": "setStyleFromNode"
        },
        {
          "line": 165,
          "return_type": "void",
          "name": "setEnabled"
        },
        {
          "line": 166,
          "return_type": "void",
          "name": "setVisible"
        },
        {
          "line": 167,
          "return_type": "void",
          "name": "setOn"
        },
        {
          "line": 168,
          "return_type": "void",
          "name": "setChecked"
        },
        {
          "line": 169,
          "return_type": "void",
          "name": "setFocusable"
        },
        {
          "line": 170,
          "return_type": "void",
          "name": "setPhantom"
        },
        {
          "line": 171,
          "return_type": "void",
          "name": "setDraggable"
        },
        {
          "line": 172,
          "return_type": "void",
          "name": "setFixedSize"
        },
        {
          "line": 173,
          "return_type": "void",
          "name": "setClipping"
        },
        {
          "line": 174,
          "return_type": "void",
          "name": "setLastFocusReason"
        },
        {
          "line": 175,
          "return_type": "void",
          "name": "setAutoFocusPolicy"
        },
        {
          "line": 176,
          "return_type": "void",
          "name": "setAutoRepeatDelay"
        },
        {
          "line": 177,
          "return_type": "void",
          "name": "setVirtualOffset"
        },
        {
          "line": 179,
          "return_type": "void",
          "name": "setOnHtml"
        },
        {
          "line": 180,
          "return_type": "bool",
          "name": "isOnHtml"
        },
        {
          "line": 182,
          "return_type": "bool",
          "name": "isAnchored"
        },
        {
          "line": 183,
          "return_type": "bool",
          "name": "isChildLocked"
        },
        {
          "line": 184,
          "return_type": "bool",
          "name": "hasChild"
        },
        {
          "line": 185,
          "return_type": "int",
          "name": "getChildIndex"
        },
        {
          "line": 186,
          "return_type": "Rect",
          "name": "getPaddingRect"
        },
        {
          "line": 187,
          "return_type": "Rect",
          "name": "getMarginRect"
        },
        {
          "line": 188,
          "return_type": "Rect",
          "name": "getChildrenRect"
        },
        {
          "line": 189,
          "return_type": "UIAnchorLayoutPtr",
          "name": "getAnchoredLayout"
        },
        {
          "line": 190,
          "return_type": "UIAnchorList",
          "name": "getAnchorsGroup"
        },
        {
          "line": 192,
          "return_type": "AnchorEdge",
          "name": "getAnchorType"
        },
        {
          "line": 193,
          "return_type": "bool",
          "name": "hasAnchoredLayout"
        },
        {
          "line": 194,
          "return_type": "UIWidgetPtr",
          "name": "getRootParent"
        },
        {
          "line": 195,
          "return_type": "UIWidgetPtr",
          "name": "getNextWidget"
        },
        {
          "line": 199,
          "return_type": "UIWidgetPtr",
          "name": "getPrevWidget"
        },
        {
          "line": 204,
          "return_type": "UIWidgetPtr",
          "name": "getChildAfter"
        },
        {
          "line": 205,
          "return_type": "UIWidgetPtr",
          "name": "getChildBefore"
        },
        {
          "line": 206,
          "return_type": "UIWidgetPtr",
          "name": "getChildById"
        },
        {
          "line": 207,
          "return_type": "UIWidgetPtr",
          "name": "getChildByPos"
        },
        {
          "line": 208,
          "return_type": "UIWidgetPtr",
          "name": "getChildByIndex"
        },
        {
          "line": 209,
          "return_type": "UIWidgetPtr",
          "name": "getChildByState"
        },
        {
          "line": 210,
          "return_type": "UIWidgetPtr",
          "name": "getChildByStyleName"
        },
        {
          "line": 211,
          "return_type": "UIWidgetPtr",
          "name": "recursiveGetChildById"
        },
        {
          "line": 212,
          "return_type": "UIWidgetPtr",
          "name": "recursiveGetChildByPos"
        },
        {
          "line": 213,
          "return_type": "UIWidgetPtr",
          "name": "recursiveGetChildByState"
        },
        {
          "line": 214,
          "return_type": "UIWidgetList",
          "name": "recursiveGetChildren"
        },
        {
          "line": 215,
          "return_type": "UIWidgetList",
          "name": "recursiveGetChildrenByPos"
        },
        {
          "line": 216,
          "return_type": "UIWidgetList",
          "name": "recursiveGetChildrenByMarginPos"
        },
        {
          "line": 217,
          "return_type": "UIWidgetList",
          "name": "recursiveGetChildrenByState"
        },
        {
          "line": 218,
          "return_type": "UIWidgetList",
          "name": "recursiveGetChildrenByStyleName"
        },
        {
          "line": 219,
          "return_type": "UIWidgetPtr",
          "name": "backwardsGetWidgetById"
        },
        {
          "line": 221,
          "return_type": "void",
          "name": "setShader"
        },
        {
          "line": 222,
          "return_type": "bool",
          "name": "hasShader"
        },
        {
          "line": 224,
          "return_type": "void",
          "name": "setProp"
        },
        {
          "line": 225,
          "return_type": "bool",
          "name": "hasProp"
        },
        {
          "line": 227,
          "return_type": "void",
          "name": "disableUpdateTemporarily"
        },
        {
          "line": 228,
          "return_type": "void",
          "name": "addOnDestroyCallback"
        },
        {
          "line": 229,
          "return_type": "void",
          "name": "removeOnDestroyCallback"
        },
        {
          "line": 231,
          "return_type": "void",
          "name": "setBackgroundDrawOrder"
        },
        {
          "line": 232,
          "return_type": "void",
          "name": "setImageDrawOrder"
        },
        {
          "line": 233,
          "return_type": "void",
          "name": "setIconDrawOrder"
        },
        {
          "line": 234,
          "return_type": "void",
          "name": "setTextDrawOrder"
        },
        {
          "line": 235,
          "return_type": "void",
          "name": "setBorderDrawOrder"
        },
        {
          "line": 248,
          "return_type": "void",
          "name": "repaint"
        },
        {
          "line": 249,
          "return_type": "bool",
          "name": "setState"
        },
        {
          "line": 250,
          "return_type": "bool",
          "name": "hasState"
        },
        {
          "line": 253,
          "return_type": "void",
          "name": "internalDestroy"
        },
        {
          "line": 254,
          "return_type": "void",
          "name": "updateState"
        },
        {
          "line": 255,
          "return_type": "void",
          "name": "updateStates"
        },
        {
          "line": 256,
          "return_type": "void",
          "name": "updateChildrenIndexStates"
        },
        {
          "line": 257,
          "return_type": "void",
          "name": "updateStyle"
        },
        {
          "line": 264,
          "return_type": "void",
          "name": "onStyleApply"
        },
        {
          "line": 265,
          "return_type": "void",
          "name": "onGeometryChange"
        },
        {
          "line": 266,
          "return_type": "void",
          "name": "onLayoutUpdate"
        },
        {
          "line": 267,
          "return_type": "void",
          "name": "onFocusChange"
        },
        {
          "line": 268,
          "return_type": "void",
          "name": "onChildFocusChange"
        },
        {
          "line": 269,
          "return_type": "void",
          "name": "onHoverChange"
        },
        {
          "line": 270,
          "return_type": "void",
          "name": "onVisibilityChange"
        },
        {
          "line": 271,
          "return_type": "bool",
          "name": "onDragEnter"
        },
        {
          "line": 272,
          "return_type": "bool",
          "name": "onDragLeave"
        },
        {
          "line": 273,
          "return_type": "bool",
          "name": "onDragMove"
        },
        {
          "line": 274,
          "return_type": "bool",
          "name": "onDrop"
        },
        {
          "line": 275,
          "return_type": "bool",
          "name": "onKeyText"
        },
        {
          "line": 276,
          "return_type": "bool",
          "name": "onKeyDown"
        },
        {
          "line": 277,
          "return_type": "bool",
          "name": "onKeyPress"
        },
        {
          "line": 278,
          "return_type": "bool",
          "name": "onKeyUp"
        },
        {
          "line": 279,
          "return_type": "bool",
          "name": "onMousePress"
        },
        {
          "line": 280,
          "return_type": "bool",
          "name": "onMouseRelease"
        },
        {
          "line": 281,
          "return_type": "bool",
          "name": "onMouseMove"
        },
        {
          "line": 282,
          "return_type": "bool",
          "name": "onMouseWheel"
        },
        {
          "line": 283,
          "return_type": "bool",
          "name": "onClick"
        },
        {
          "line": 284,
          "return_type": "bool",
          "name": "onDoubleClick"
        },
        {
          "line": 288,
          "return_type": "bool",
          "name": "propagateOnKeyText"
        },
        {
          "line": 289,
          "return_type": "bool",
          "name": "propagateOnKeyDown"
        },
        {
          "line": 290,
          "return_type": "bool",
          "name": "propagateOnKeyPress"
        },
        {
          "line": 291,
          "return_type": "bool",
          "name": "propagateOnKeyUp"
        },
        {
          "line": 292,
          "return_type": "bool",
          "name": "propagateOnMouseEvent"
        },
        {
          "line": 293,
          "return_type": "bool",
          "name": "propagateOnMouseMove"
        },
        {
          "line": 297,
          "return_type": "void",
          "name": "resize"
        },
        {
          "line": 298,
          "return_type": "void",
          "name": "move"
        },
        {
          "line": 299,
          "return_type": "void",
          "name": "rotate"
        },
        {
          "line": 300,
          "return_type": "void",
          "name": "hide"
        },
        {
          "line": 301,
          "return_type": "void",
          "name": "show"
        },
        {
          "line": 302,
          "return_type": "void",
          "name": "disable"
        },
        {
          "line": 303,
          "return_type": "void",
          "name": "enable"
        },
        {
          "line": 305,
          "return_type": "bool",
          "name": "isActive"
        },
        {
          "line": 306,
          "return_type": "bool",
          "name": "isEnabled"
        },
        {
          "line": 307,
          "return_type": "bool",
          "name": "isDisabled"
        },
        {
          "line": 308,
          "return_type": "bool",
          "name": "isFocused"
        },
        {
          "line": 309,
          "return_type": "bool",
          "name": "isHovered"
        },
        {
          "line": 310,
          "return_type": "bool",
          "name": "isChildHovered"
        },
        {
          "line": 311,
          "return_type": "bool",
          "name": "isPressed"
        },
        {
          "line": 312,
          "return_type": "bool",
          "name": "isFirst"
        },
        {
          "line": 313,
          "return_type": "bool",
          "name": "isMiddle"
        },
        {
          "line": 314,
          "return_type": "bool",
          "name": "isLast"
        },
        {
          "line": 315,
          "return_type": "bool",
          "name": "isAlternate"
        },
        {
          "line": 316,
          "return_type": "bool",
          "name": "isChecked"
        },
        {
          "line": 317,
          "return_type": "bool",
          "name": "isOn"
        },
        {
          "line": 318,
          "return_type": "bool",
          "name": "isDragging"
        },
        {
          "line": 319,
          "return_type": "bool",
          "name": "isVisible"
        },
        {
          "line": 320,
          "return_type": "bool",
          "name": "isHidden"
        },
        {
          "line": 321,
          "return_type": "bool",
          "name": "isExplicitlyEnabled"
        },
        {
          "line": 322,
          "return_type": "bool",
          "name": "isExplicitlyVisible"
        },
        {
          "line": 323,
          "return_type": "bool",
          "name": "isFocusable"
        },
        {
          "line": 324,
          "return_type": "bool",
          "name": "isPhantom"
        },
        {
          "line": 325,
          "return_type": "bool",
          "name": "isDraggable"
        },
        {
          "line": 326,
          "return_type": "bool",
          "name": "isFixedSize"
        },
        {
          "line": 327,
          "return_type": "bool",
          "name": "isClipping"
        },
        {
          "line": 328,
          "return_type": "bool",
          "name": "isDestroyed"
        },
        {
          "line": 329,
          "return_type": "bool",
          "name": "isFirstOnStyle"
        },
        {
          "line": 331,
          "return_type": "bool",
          "name": "isFirstChild"
        },
        {
          "line": 332,
          "return_type": "bool",
          "name": "isLastChild"
        },
        {
          "line": 333,
          "return_type": "bool",
          "name": "isMiddleChild"
        },
        {
          "line": 335,
          "return_type": "bool",
          "name": "hasChildren"
        },
        {
          "line": 336,
          "return_type": "bool",
          "name": "containsMarginPoint"
        },
        {
          "line": 337,
          "return_type": "bool",
          "name": "containsPaddingPoint"
        },
        {
          "line": 338,
          "return_type": "bool",
          "name": "containsPoint"
        },
        {
          "line": 339,
          "return_type": "bool",
          "name": "intersects"
        },
        {
          "line": 340,
          "return_type": "bool",
          "name": "intersectsMargin"
        },
        {
          "line": 341,
          "return_type": "bool",
          "name": "intersectsPadding"
        },
        {
          "line": 343,
          "return_type": "string",
          "name": "getId"
        },
        {
          "line": 344,
          "return_type": "string",
          "name": "getSource"
        },
        {
          "line": 345,
          "return_type": "UIWidgetPtr",
          "name": "getParent"
        },
        {
          "line": 346,
          "return_type": "UIWidgetPtr",
          "name": "getFocusedChild"
        },
        {
          "line": 347,
          "return_type": "UIWidgetPtr",
          "name": "getHoveredChild"
        },
        {
          "line": 348,
          "return_type": "UIWidgetList",
          "name": "getChildren"
        },
        {
          "line": 349,
          "return_type": "UIWidgetPtr",
          "name": "getFirstChild"
        },
        {
          "line": 350,
          "return_type": "UIWidgetPtr",
          "name": "getLastChild"
        },
        {
          "line": 351,
          "return_type": "UILayoutPtr",
          "name": "getLayout"
        },
        {
          "line": 352,
          "return_type": "OTMLNodePtr",
          "name": "getStyle"
        },
        {
          "line": 353,
          "return_type": "int",
          "name": "getChildCount"
        },
        {
          "line": 354,
          "return_type": "FocusReason",
          "name": "getLastFocusReason"
        },
        {
          "line": 355,
          "return_type": "AutoFocusPolicy",
          "name": "getAutoFocusPolicy"
        },
        {
          "line": 356,
          "return_type": "int",
          "name": "getAutoRepeatDelay"
        },
        {
          "line": 357,
          "return_type": "Point",
          "name": "getVirtualOffset"
        },
        {
          "line": 358,
          "return_type": "string",
          "name": "getStyleName"
        },
        {
          "line": 359,
          "return_type": "Point",
          "name": "getLastClickPosition"
        },
        {
          "line": 363,
          "return_type": "void",
          "name": "initBaseStyle"
        },
        {
          "line": 364,
          "return_type": "void",
          "name": "parseBaseStyle"
        },
        {
          "line": 367,
          "return_type": "void",
          "name": "drawBackground"
        },
        {
          "line": 368,
          "return_type": "void",
          "name": "drawBorder"
        },
        {
          "line": 369,
          "return_type": "void",
          "name": "drawIcon"
        },
        {
          "line": 391,
          "return_type": "void",
          "name": "setX"
        },
        {
          "line": 392,
          "return_type": "void",
          "name": "setY"
        },
        {
          "line": 393,
          "return_type": "void",
          "name": "setWidth"
        },
        {
          "line": 394,
          "return_type": "void",
          "name": "setHeight"
        },
        {
          "line": 395,
          "return_type": "void",
          "name": "setSize"
        },
        {
          "line": 396,
          "return_type": "void",
          "name": "setMinWidth"
        },
        {
          "line": 397,
          "return_type": "void",
          "name": "setMaxWidth"
        },
        {
          "line": 398,
          "return_type": "void",
          "name": "setMinHeight"
        },
        {
          "line": 399,
          "return_type": "void",
          "name": "setMaxHeight"
        },
        {
          "line": 400,
          "return_type": "void",
          "name": "setMinSize"
        },
        {
          "line": 401,
          "return_type": "void",
          "name": "setMaxSize"
        },
        {
          "line": 402,
          "return_type": "void",
          "name": "setPosition"
        },
        {
          "line": 403,
          "return_type": "void",
          "name": "setColor"
        },
        {
          "line": 404,
          "return_type": "void",
          "name": "setBackgroundColor"
        },
        {
          "line": 405,
          "return_type": "void",
          "name": "setBackgroundOffsetX"
        },
        {
          "line": 406,
          "return_type": "void",
          "name": "setBackgroundOffsetY"
        },
        {
          "line": 407,
          "return_type": "void",
          "name": "setBackgroundOffset"
        },
        {
          "line": 408,
          "return_type": "void",
          "name": "setBackgroundWidth"
        },
        {
          "line": 409,
          "return_type": "void",
          "name": "setBackgroundHeight"
        },
        {
          "line": 410,
          "return_type": "void",
          "name": "setBackgroundSize"
        },
        {
          "line": 411,
          "return_type": "void",
          "name": "setBackgroundRect"
        },
        {
          "line": 412,
          "return_type": "void",
          "name": "setIcon"
        },
        {
          "line": 413,
          "return_type": "void",
          "name": "setIconColor"
        },
        {
          "line": 414,
          "return_type": "void",
          "name": "setIconOffsetX"
        },
        {
          "line": 415,
          "return_type": "void",
          "name": "setIconOffsetY"
        },
        {
          "line": 416,
          "return_type": "void",
          "name": "setIconOffset"
        },
        {
          "line": 417,
          "return_type": "void",
          "name": "setIconWidth"
        },
        {
          "line": 418,
          "return_type": "void",
          "name": "setIconHeight"
        },
        {
          "line": 419,
          "return_type": "void",
          "name": "setIconSize"
        },
        {
          "line": 420,
          "return_type": "void",
          "name": "setIconRect"
        },
        {
          "line": 421,
          "return_type": "void",
          "name": "setIconClip"
        },
        {
          "line": 422,
          "return_type": "void",
          "name": "setIconAlign"
        },
        {
          "line": 423,
          "return_type": "void",
          "name": "setBorderWidth"
        },
        {
          "line": 424,
          "return_type": "void",
          "name": "setBorderWidthTop"
        },
        {
          "line": 425,
          "return_type": "void",
          "name": "setBorderWidthRight"
        },
        {
          "line": 426,
          "return_type": "void",
          "name": "setBorderWidthBottom"
        },
        {
          "line": 427,
          "return_type": "void",
          "name": "setBorderWidthLeft"
        },
        {
          "line": 428,
          "return_type": "void",
          "name": "setBorderColor"
        },
        {
          "line": 429,
          "return_type": "void",
          "name": "setBorderColorTop"
        },
        {
          "line": 430,
          "return_type": "void",
          "name": "setBorderColorRight"
        },
        {
          "line": 431,
          "return_type": "void",
          "name": "setBorderColorBottom"
        },
        {
          "line": 432,
          "return_type": "void",
          "name": "setBorderColorLeft"
        },
        {
          "line": 433,
          "return_type": "void",
          "name": "setMargin"
        },
        {
          "line": 434,
          "return_type": "void",
          "name": "setMarginHorizontal"
        },
        {
          "line": 435,
          "return_type": "void",
          "name": "setMarginVertical"
        },
        {
          "line": 436,
          "return_type": "void",
          "name": "setMarginTop"
        },
        {
          "line": 437,
          "return_type": "void",
          "name": "setMarginRight"
        },
        {
          "line": 438,
          "return_type": "void",
          "name": "setMarginBottom"
        },
        {
          "line": 439,
          "return_type": "void",
          "name": "setMarginLeft"
        },
        {
          "line": 440,
          "return_type": "void",
          "name": "setPadding"
        },
        {
          "line": 441,
          "return_type": "void",
          "name": "setPaddingHorizontal"
        },
        {
          "line": 442,
          "return_type": "void",
          "name": "setPaddingVertical"
        },
        {
          "line": 443,
          "return_type": "void",
          "name": "setPaddingTop"
        },
        {
          "line": 444,
          "return_type": "void",
          "name": "setPaddingRight"
        },
        {
          "line": 445,
          "return_type": "void",
          "name": "setPaddingBottom"
        },
        {
          "line": 446,
          "return_type": "void",
          "name": "setPaddingLeft"
        },
        {
          "line": 447,
          "return_type": "void",
          "name": "setOpacity"
        },
        {
          "line": 448,
          "return_type": "void",
          "name": "setRotation"
        },
        {
          "line": 450,
          "return_type": "int",
          "name": "getX"
        },
        {
          "line": 451,
          "return_type": "int",
          "name": "getY"
        },
        {
          "line": 452,
          "return_type": "Point",
          "name": "getPosition"
        },
        {
          "line": 453,
          "return_type": "Point",
          "name": "getCenter"
        },
        {
          "line": 454,
          "return_type": "int",
          "name": "getWidth"
        },
        {
          "line": 455,
          "return_type": "int",
          "name": "getHeight"
        },
        {
          "line": 456,
          "return_type": "Size",
          "name": "getSize"
        },
        {
          "line": 457,
          "return_type": "int",
          "name": "getMinWidth"
        },
        {
          "line": 458,
          "return_type": "int",
          "name": "getMaxWidth"
        },
        {
          "line": 459,
          "return_type": "int",
          "name": "getMinHeight"
        },
        {
          "line": 460,
          "return_type": "int",
          "name": "getMaxHeight"
        },
        {
          "line": 461,
          "return_type": "Size",
          "name": "getMinSize"
        },
        {
          "line": 462,
          "return_type": "Size",
          "name": "getMaxSize"
        },
        {
          "line": 463,
          "return_type": "Rect",
          "name": "getRect"
        },
        {
          "line": 464,
          "return_type": "Color",
          "name": "getColor"
        },
        {
          "line": 465,
          "return_type": "Color",
          "name": "getBackgroundColor"
        },
        {
          "line": 466,
          "return_type": "int",
          "name": "getBackgroundOffsetX"
        },
        {
          "line": 467,
          "return_type": "int",
          "name": "getBackgroundOffsetY"
        },
        {
          "line": 468,
          "return_type": "Point",
          "name": "getBackgroundOffset"
        },
        {
          "line": 469,
          "return_type": "int",
          "name": "getBackgroundWidth"
        },
        {
          "line": 470,
          "return_type": "int",
          "name": "getBackgroundHeight"
        },
        {
          "line": 471,
          "return_type": "Size",
          "name": "getBackgroundSize"
        },
        {
          "line": 472,
          "return_type": "Rect",
          "name": "getBackgroundRect"
        },
        {
          "line": 473,
          "return_type": "Color",
          "name": "getIconColor"
        },
        {
          "line": 474,
          "return_type": "int",
          "name": "getIconOffsetX"
        },
        {
          "line": 475,
          "return_type": "int",
          "name": "getIconOffsetY"
        },
        {
          "line": 476,
          "return_type": "Point",
          "name": "getIconOffset"
        },
        {
          "line": 477,
          "return_type": "int",
          "name": "getIconWidth"
        },
        {
          "line": 478,
          "return_type": "int",
          "name": "getIconHeight"
        },
        {
          "line": 479,
          "return_type": "Size",
          "name": "getIconSize"
        },
        {
          "line": 480,
          "return_type": "Rect",
          "name": "getIconRect"
        },
        {
          "line": 481,
          "return_type": "Rect",
          "name": "getIconClip"
        },
        {
          "line": 482,
          "return_type": "AlignmentFlag",
          "name": "getIconAlign"
        },
        {
          "line": 483,
          "return_type": "Color",
          "name": "getBorderTopColor"
        },
        {
          "line": 484,
          "return_type": "Color",
          "name": "getBorderRightColor"
        },
        {
          "line": 485,
          "return_type": "Color",
          "name": "getBorderBottomColor"
        },
        {
          "line": 486,
          "return_type": "Color",
          "name": "getBorderLeftColor"
        },
        {
          "line": 487,
          "return_type": "int",
          "name": "getBorderTopWidth"
        },
        {
          "line": 488,
          "return_type": "int",
          "name": "getBorderRightWidth"
        },
        {
          "line": 489,
          "return_type": "int",
          "name": "getBorderBottomWidth"
        },
        {
          "line": 490,
          "return_type": "int",
          "name": "getBorderLeftWidth"
        },
        {
          "line": 491,
          "return_type": "int",
          "name": "getMarginTop"
        },
        {
          "line": 492,
          "return_type": "int",
          "name": "getMarginRight"
        },
        {
          "line": 493,
          "return_type": "int",
          "name": "getMarginBottom"
        },
        {
          "line": 494,
          "return_type": "int",
          "name": "getMarginLeft"
        },
        {
          "line": 495,
          "return_type": "int",
          "name": "getPaddingTop"
        },
        {
          "line": 496,
          "return_type": "int",
          "name": "getPaddingRight"
        },
        {
          "line": 497,
          "return_type": "int",
          "name": "getPaddingBottom"
        },
        {
          "line": 498,
          "return_type": "int",
          "name": "getPaddingLeft"
        },
        {
          "line": 499,
          "return_type": "Size",
          "name": "getPaddingSize"
        },
        {
          "line": 500,
          "return_type": "float",
          "name": "getOpacity"
        },
        {
          "line": 501,
          "return_type": "float",
          "name": "getRotation"
        },
        {
          "line": 505,
          "return_type": "void",
          "name": "initImage"
        },
        {
          "line": 506,
          "return_type": "void",
          "name": "parseImageStyle"
        },
        {
          "line": 508,
          "return_type": "void",
          "name": "updateImageCache"
        },
        {
          "line": 509,
          "return_type": "void",
          "name": "configureBorderImage"
        },
        {
          "line": 516,
          "return_type": "void",
          "name": "drawImage"
        },
        {
          "line": 530,
          "return_type": "void",
          "name": "setImageSource"
        },
        {
          "line": 531,
          "return_type": "void",
          "name": "setImageClip"
        },
        {
          "line": 532,
          "return_type": "void",
          "name": "setImageOffsetX"
        },
        {
          "line": 533,
          "return_type": "void",
          "name": "setImageOffsetY"
        },
        {
          "line": 534,
          "return_type": "void",
          "name": "setImageOffset"
        },
        {
          "line": 535,
          "return_type": "void",
          "name": "setImageWidth"
        },
        {
          "line": 536,
          "return_type": "void",
          "name": "setImageHeight"
        },
        {
          "line": 537,
          "return_type": "void",
          "name": "setImageSize"
        },
        {
          "line": 538,
          "return_type": "void",
          "name": "setImageRect"
        },
        {
          "line": 539,
          "return_type": "void",
          "name": "setImageColor"
        },
        {
          "line": 540,
          "return_type": "void",
          "name": "setImageFixedRatio"
        },
        {
          "line": 541,
          "return_type": "void",
          "name": "setImageRepeated"
        },
        {
          "line": 542,
          "return_type": "void",
          "name": "setImageSmooth"
        },
        {
          "line": 543,
          "return_type": "void",
          "name": "setImageAutoResize"
        },
        {
          "line": 544,
          "return_type": "void",
          "name": "setImageIndividualAnimation"
        },
        {
          "line": 545,
          "return_type": "void",
          "name": "setImageBorderTop"
        },
        {
          "line": 546,
          "return_type": "void",
          "name": "setImageBorderRight"
        },
        {
          "line": 547,
          "return_type": "void",
          "name": "setImageBorderBottom"
        },
        {
          "line": 548,
          "return_type": "void",
          "name": "setImageBorderLeft"
        },
        {
          "line": 549,
          "return_type": "void",
          "name": "setImageBorder"
        },
        {
          "line": 551,
          "return_type": "string",
          "name": "getImageSource"
        },
        {
          "line": 552,
          "return_type": "Rect",
          "name": "getImageClip"
        },
        {
          "line": 553,
          "return_type": "int",
          "name": "getImageOffsetX"
        },
        {
          "line": 554,
          "return_type": "int",
          "name": "getImageOffsetY"
        },
        {
          "line": 555,
          "return_type": "Point",
          "name": "getImageOffset"
        },
        {
          "line": 556,
          "return_type": "int",
          "name": "getImageWidth"
        },
        {
          "line": 557,
          "return_type": "int",
          "name": "getImageHeight"
        },
        {
          "line": 558,
          "return_type": "Size",
          "name": "getImageSize"
        },
        {
          "line": 559,
          "return_type": "Rect",
          "name": "getImageRect"
        },
        {
          "line": 560,
          "return_type": "Color",
          "name": "getImageColor"
        },
        {
          "line": 561,
          "return_type": "bool",
          "name": "isImageFixedRatio"
        },
        {
          "line": 562,
          "return_type": "bool",
          "name": "isImageSmooth"
        },
        {
          "line": 563,
          "return_type": "bool",
          "name": "isImageAutoResize"
        },
        {
          "line": 564,
          "return_type": "bool",
          "name": "isImageIndividualAnimation"
        },
        {
          "line": 565,
          "return_type": "int",
          "name": "getImageBorderTop"
        },
        {
          "line": 566,
          "return_type": "int",
          "name": "getImageBorderRight"
        },
        {
          "line": 567,
          "return_type": "int",
          "name": "getImageBorderBottom"
        },
        {
          "line": 568,
          "return_type": "int",
          "name": "getImageBorderLeft"
        },
        {
          "line": 569,
          "return_type": "int",
          "name": "getImageTextureWidth"
        },
        {
          "line": 570,
          "return_type": "int",
          "name": "getImageTextureHeight"
        },
        {
          "line": 574,
          "return_type": "void",
          "name": "initText"
        },
        {
          "line": 575,
          "return_type": "void",
          "name": "parseTextStyle"
        },
        {
          "line": 582,
          "return_type": "void",
          "name": "updateText"
        },
        {
          "line": 583,
          "return_type": "void",
          "name": "drawText"
        },
        {
          "line": 585,
          "return_type": "void",
          "name": "onTextChange"
        },
        {
          "line": 586,
          "return_type": "void",
          "name": "onFontChange"
        },
        {
          "line": 603,
          "return_type": "void",
          "name": "resizeToText"
        },
        {
          "line": 604,
          "return_type": "void",
          "name": "clearText"
        },
        {
          "line": 606,
          "return_type": "void",
          "name": "setText"
        },
        {
          "line": 607,
          "return_type": "void",
          "name": "setColoredText"
        },
        {
          "line": 608,
          "return_type": "void",
          "name": "setTextAlign"
        },
        {
          "line": 609,
          "return_type": "void",
          "name": "setTextOffset"
        },
        {
          "line": 610,
          "return_type": "void",
          "name": "setTextWrap"
        },
        {
          "line": 611,
          "return_type": "void",
          "name": "setTextAutoResize"
        },
        {
          "line": 612,
          "return_type": "void",
          "name": "setTextHorizontalAutoResize"
        },
        {
          "line": 613,
          "return_type": "void",
          "name": "setTextVerticalAutoResize"
        },
        {
          "line": 614,
          "return_type": "void",
          "name": "setTextOnlyUpperCase"
        },
        {
          "line": 615,
          "return_type": "void",
          "name": "setFont"
        },
        {
          "line": 616,
          "return_type": "void",
          "name": "setFontScale"
        },
        {
          "line": 618,
          "return_type": "string",
          "name": "getText"
        },
        {
          "line": 619,
          "return_type": "string",
          "name": "getDrawText"
        },
        {
          "line": 620,
          "return_type": "AlignmentFlag",
          "name": "getTextAlign"
        },
        {
          "line": 621,
          "return_type": "Point",
          "name": "getTextOffset"
        },
        {
          "line": 622,
          "return_type": "bool",
          "name": "isTextWrap"
        },
        {
          "line": 623,
          "return_type": "string",
          "name": "getFont"
        },
        {
          "line": 624,
          "return_type": "Size",
          "name": "getTextSize"
        },
        {
          "line": 628,
          "return_type": "void",
          "name": "parseCustomStyle"
        }
      ],
      "classes": [
        {
          "line": 80,
          "name": "UIWidget"
        },
        {
          "line": 91,
          "name": "UIManager"
        },
        {
          "line": 116,
          "name": "UIGridLayout"
        },
        {
          "line": 117,
          "name": "UIHorizontalLayout"
        },
        {
          "line": 118,
          "name": "UIVerticalLayout"
        },
        {
          "line": 286,
          "name": "UILayout"
        }
      ],
      "includes": [
        "declarations.h",
        "uilayout.h",
        "framework/core/timer.h",
        "framework/graphics/bitmapfont.h",
        "framework/graphics/declarations.h",
        "framework/luaengine/luaobject.h",
        "framework/otml/otmlnode.h",
        "framework/graphics/drawpool.h",
        "framework/graphics/texture.h"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\ui\\uiwidgetbasestyle.cpp",
      "total_lines": 422,
      "code_lines": 364,
      "comment_lines": 33,
      "empty_lines": 25,
      "functions": [
        {
          "line": 61,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 73,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 75,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 77,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 79,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 81,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 83,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 85,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 87,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 89,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 91,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 93,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 95,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 97,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 99,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 101,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 103,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 105,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 107,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 109,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 111,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 113,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 115,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 117,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 119,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 121,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 123,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 125,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 127,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 129,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 131,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 133,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 135,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 137,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 139,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 141,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 143,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 145,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 147,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 149,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 151,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 153,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 155,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 157,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 159,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 161,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 163,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 165,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 167,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 169,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 171,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 173,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 175,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 177,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 183,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 184,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 186,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 188,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 190,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 192,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 194,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 196,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 198,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 200,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 202,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 204,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 206,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 208,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 210,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 212,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 220,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 228,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 235,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 242,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 244,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 246,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 248,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 250,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 258,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 266,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 273,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 282,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 293,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 295,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 297,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 300,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 308,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 312,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 322,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 327,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 337,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 343,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 346,
          "return_type": "throw",
          "name": "OTMLException"
        },
        {
          "line": 370,
          "return_type": "Rect",
          "name": "borderRect"
        },
        {
          "line": 375,
          "return_type": "Rect",
          "name": "borderRect"
        },
        {
          "line": 380,
          "return_type": "Rect",
          "name": "borderRect"
        },
        {
          "line": 385,
          "return_type": "Rect",
          "name": "borderRect"
        }
      ],
      "classes": [],
      "includes": [
        "uianchorlayout.h",
        "uigridlayout.h",
        "uihorizontallayout.h",
        "uitranslator.h",
        "uiverticallayout.h",
        "uiwidget.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/texture.h",
        "framework/graphics/texturemanager.h",
        "framework/core/eventdispatcher.h",
        "atomic"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\ui\\uiwidgetimage.cpp",
      "total_lines": 230,
      "code_lines": 169,
      "comment_lines": 34,
      "empty_lines": 27,
      "functions": [
        {
          "line": 46,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 48,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 50,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 52,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 54,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 56,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 58,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 60,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 62,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 64,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 66,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 68,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 70,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 72,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 74,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 76,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 78,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 80,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 82,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 111,
          "return_type": "Rect",
          "name": "leftBorder"
        },
        {
          "line": 112,
          "return_type": "Rect",
          "name": "rightBorder"
        },
        {
          "line": 113,
          "return_type": "Rect",
          "name": "topBorder"
        },
        {
          "line": 114,
          "return_type": "Rect",
          "name": "bottomBorder"
        },
        {
          "line": 115,
          "return_type": "Rect",
          "name": "topLeftCorner"
        },
        {
          "line": 116,
          "return_type": "Rect",
          "name": "topRightCorner"
        },
        {
          "line": 117,
          "return_type": "Rect",
          "name": "bottomLeftCorner"
        },
        {
          "line": 118,
          "return_type": "Rect",
          "name": "bottomRightCorner"
        },
        {
          "line": 119,
          "return_type": "Rect",
          "name": "center"
        },
        {
          "line": 120,
          "return_type": "Size",
          "name": "bordersSize"
        },
        {
          "line": 163,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "framework/graphics/drawpoolmanager.h",
        "uiwidget.h",
        "framework/graphics/animatedtexture.h",
        "framework/graphics/texture.h",
        "framework/graphics/texturemanager.h",
        "framework/util/crypt.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\ui\\uiwidgettext.cpp",
      "total_lines": 211,
      "code_lines": 157,
      "comment_lines": 22,
      "empty_lines": 32,
      "functions": [
        {
          "line": 81,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 83,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 85,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 87,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 89,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 91,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 93,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 95,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 97,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 170,
          "return_type": "regex",
          "name": "exp"
        }
      ],
      "classes": [],
      "includes": [
        "uitranslator.h",
        "uiwidget.h",
        "framework/graphics/drawpoolmanager.h",
        "framework/graphics/fontmanager.h",
        "regex"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\util\\BS_thread_pool.hpp",
      "total_lines": 1156,
      "code_lines": 612,
      "comment_lines": 448,
      "empty_lines": 96,
      "functions": [
        {
          "line": 114,
          "return_type": "optional_index",
          "name": "operator"
        },
        {
          "line": 139,
          "return_type": "optional_pool",
          "name": "operator"
        },
        {
          "line": 189,
          "return_type": "if",
          "name": "constexpr"
        },
        {
          "line": 210,
          "return_type": "size_t",
          "name": "ready_count"
        },
        {
          "line": 226,
          "return_type": "bool",
          "name": "valid"
        },
        {
          "line": 237,
          "return_type": "void",
          "name": "wait"
        },
        {
          "line": 252,
          "return_type": "bool",
          "name": "wait_for"
        },
        {
          "line": 273,
          "return_type": "bool",
          "name": "wait_until"
        },
        {
          "line": 305,
          "return_type": "explicit",
          "name": "thread_pool"
        },
        {
          "line": 312,
          "return_type": "explicit",
          "name": "thread_pool"
        },
        {
          "line": 366,
          "return_type": "size_t",
          "name": "get_tasks_queued"
        },
        {
          "line": 368,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 377,
          "return_type": "size_t",
          "name": "get_tasks_running"
        },
        {
          "line": 379,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 388,
          "return_type": "size_t",
          "name": "get_tasks_total"
        },
        {
          "line": 390,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 399,
          "return_type": "concurrency_t",
          "name": "get_thread_count"
        },
        {
          "line": 425,
          "return_type": "bool",
          "name": "is_paused"
        },
        {
          "line": 427,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 434,
          "return_type": "void",
          "name": "pause"
        },
        {
          "line": 436,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 444,
          "return_type": "void",
          "name": "purge"
        },
        {
          "line": 446,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 459,
          "return_type": "void",
          "name": "detach_task"
        },
        {
          "line": 462,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 480,
          "return_type": "void",
          "name": "detach_blocks"
        },
        {
          "line": 484,
          "return_type": "blocks",
          "name": "blks"
        },
        {
          "line": 506,
          "return_type": "void",
          "name": "detach_loop"
        },
        {
          "line": 510,
          "return_type": "blocks",
          "name": "blks"
        },
        {
          "line": 532,
          "return_type": "void",
          "name": "detach_sequence"
        },
        {
          "line": 545,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 555,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 565,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 576,
          "return_type": "void",
          "name": "reset"
        },
        {
          "line": 579,
          "return_type": "unique_lock",
          "name": "tasks_lock"
        },
        {
          "line": 615,
          "return_type": "if",
          "name": "constexpr"
        },
        {
          "line": 659,
          "return_type": "blocks",
          "name": "blks"
        },
        {
          "line": 666,
          "return_type": "return",
          "name": "block"
        },
        {
          "line": 690,
          "return_type": "blocks",
          "name": "blks"
        },
        {
          "line": 728,
          "return_type": "return",
          "name": "sequence"
        },
        {
          "line": 739,
          "return_type": "void",
          "name": "unpause"
        },
        {
          "line": 742,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 751,
          "return_type": "define",
          "name": "BS_THREAD_POOL_PAUSED_OR_EMPTY"
        },
        {
          "line": 761,
          "return_type": "void",
          "name": "wait"
        },
        {
          "line": 765,
          "return_type": "throw",
          "name": "wait_deadlock"
        },
        {
          "line": 767,
          "return_type": "unique_lock",
          "name": "tasks_lock"
        },
        {
          "line": 788,
          "return_type": "bool",
          "name": "wait_for"
        },
        {
          "line": 792,
          "return_type": "throw",
          "name": "wait_deadlock"
        },
        {
          "line": 794,
          "return_type": "unique_lock",
          "name": "tasks_lock"
        },
        {
          "line": 816,
          "return_type": "bool",
          "name": "wait_until"
        },
        {
          "line": 820,
          "return_type": "throw",
          "name": "wait_deadlock"
        },
        {
          "line": 822,
          "return_type": "unique_lock",
          "name": "tasks_lock"
        },
        {
          "line": 857,
          "return_type": "void",
          "name": "create_threads"
        },
        {
          "line": 860,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 873,
          "return_type": "void",
          "name": "destroy_threads"
        },
        {
          "line": 876,
          "return_type": "scoped_lock",
          "name": "tasks_lock"
        },
        {
          "line": 892,
          "return_type": "concurrency_t",
          "name": "determine_thread_count"
        },
        {
          "line": 907,
          "return_type": "void",
          "name": "worker"
        },
        {
          "line": 912,
          "return_type": "unique_lock",
          "name": "tasks_lock"
        },
        {
          "line": 992,
          "return_type": "T",
          "name": "start"
        },
        {
          "line": 1003,
          "return_type": "T",
          "name": "end"
        },
        {
          "line": 1013,
          "return_type": "size_t",
          "name": "get_num_blocks"
        },
        {
          "line": 1060,
          "return_type": "explicit",
          "name": "pr_task"
        },
        {
          "line": 1068,
          "return_type": "explicit",
          "name": "pr_task"
        }
      ],
      "classes": [
        {
          "line": 50,
          "name": "thread_pool"
        },
        {
          "line": 104,
          "name": "thread_info_index"
        },
        {
          "line": 106,
          "name": "thread_pool"
        },
        {
          "line": 124,
          "name": "thread_info_index"
        },
        {
          "line": 129,
          "name": "thread_info_pool"
        },
        {
          "line": 131,
          "name": "thread_pool"
        },
        {
          "line": 149,
          "name": "thread_info_pool"
        },
        {
          "line": 168,
          "name": "multi_future"
        },
        {
          "line": 283,
          "name": "multi_future"
        },
        {
          "line": 288,
          "name": "thread_pool"
        },
        {
          "line": 955,
          "name": "blocks"
        },
        {
          "line": 1043,
          "name": "blocks"
        },
        {
          "line": 1049,
          "name": "pr_task"
        },
        {
          "line": 1051,
          "name": "thread_pool"
        },
        {
          "line": 1092,
          "name": "pr_task"
        },
        {
          "line": 1154,
          "name": "thread_pool"
        }
      ],
      "includes": [
        "chrono",
        "condition_variable",
        "cstddef",
        "cstdint",
        "exception",
        "functional",
        "future",
        "memory",
        "mutex",
        "optional",
        "queue",
        "stdexcept",
        "thread",
        "type_traits",
        "utility",
        "vector"
      ],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "src\\framework\\util\\color.cpp",
      "total_lines": 135,
      "code_lines": 102,
      "comment_lines": 22,
      "empty_lines": 11,
      "functions": [
        {
          "line": 52,
          "return_type": "stringstream",
          "name": "ss"
        },
        {
          "line": 93,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 95,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 97,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 99,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 101,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 103,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 105,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 107,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 109,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 111,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 113,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 115,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 117,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 119,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 121,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 123,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 125,
          "return_type": "else",
          "name": "if"
        },
        {
          "line": 127,
          "return_type": "else",
          "name": "if"
        }
      ],
      "classes": [],
      "includes": [
        "color.h",
        "framework/stdext/hash.h",
        "iomanip",
        "framework/stdext/string.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\util\\crypt.cpp",
      "total_lines": 376,
      "code_lines": 281,
      "comment_lines": 26,
      "empty_lines": 69,
      "functions": [
        {
          "line": 43,
          "return_type": "bool",
          "name": "is_base64"
        },
        {
          "line": 120,
          "return_type": "string",
          "name": "out"
        },
        {
          "line": 153,
          "return_type": "return",
          "name": "_encrypt"
        },
        {
          "line": 182,
          "return_type": "return",
          "name": "base64Encode"
        },
        {
          "line": 272,
          "return_type": "return",
          "name": "RSA_public_encrypt"
        },
        {
          "line": 299,
          "return_type": "return",
          "name": "RSA_private_decrypt"
        },
        {
          "line": 309,
          "return_type": "return",
          "name": "RSA_size"
        }
      ],
      "classes": [],
      "includes": [
        "crypt.h",
        "framework/core/application.h",
        "framework/core/logger.h",
        "framework/core/resourcemanager.h",
        "framework/platform/platform.h",
        "framework/stdext/math.h",
        "openssl/bn.h",
        "openssl/err.h",
        "openssl/rsa.h",
        "zlib.h",
        "algorithm",
        "framework/core/graphicalapplication.h",
        "openssl/sha.h"
      ],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "src\\framework\\util\\crypt.h",
      "total_lines": 77,
      "code_lines": 43,
      "comment_lines": 21,
      "empty_lines": 13,
      "functions": [
        {
          "line": 42,
          "return_type": "string",
          "name": "base64Encode"
        },
        {
          "line": 43,
          "return_type": "string",
          "name": "base64Decode"
        },
        {
          "line": 44,
          "return_type": "string",
          "name": "xorCrypt"
        },
        {
          "line": 45,
          "return_type": "string",
          "name": "encrypt"
        },
        {
          "line": 46,
          "return_type": "string",
          "name": "decrypt"
        },
        {
          "line": 47,
          "return_type": "string",
          "name": "genUUID"
        },
        {
          "line": 48,
          "return_type": "bool",
          "name": "setMachineUUID"
        },
        {
          "line": 49,
          "return_type": "string",
          "name": "getMachineUUID"
        },
        {
          "line": 51,
          "return_type": "void",
          "name": "rsaSetPublicKey"
        },
        {
          "line": 52,
          "return_type": "void",
          "name": "rsaSetPrivateKey"
        },
        {
          "line": 53,
          "return_type": "bool",
          "name": "rsaEncrypt"
        },
        {
          "line": 54,
          "return_type": "bool",
          "name": "rsaDecrypt"
        },
        {
          "line": 55,
          "return_type": "int",
          "name": "rsaGetSize"
        },
        {
          "line": 57,
          "return_type": "string",
          "name": "crc32"
        },
        {
          "line": 58,
          "return_type": "string",
          "name": "sha1Encrypt"
        },
        {
          "line": 61,
          "return_type": "void",
          "name": "sha1Block"
        },
        {
          "line": 64,
          "return_type": "string",
          "name": "_encrypt"
        },
        {
          "line": 65,
          "return_type": "string",
          "name": "_decrypt"
        },
        {
          "line": 66,
          "return_type": "string",
          "name": "getCryptKey"
        }
      ],
      "classes": [
        {
          "line": 36,
          "name": "Crypt"
        }
      ],
      "includes": [
        "../global.h",
        "stduuid/uuid.h",
        "string",
        "gmp.h",
        "openssl/rsa.h"
      ],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "src\\framework\\graphics\\shader\\shadersources.h",
      "total_lines": 97,
      "code_lines": 66,
      "comment_lines": 21,
      "empty_lines": 10,
      "functions": [
        {
          "line": 26,
          "return_type": "vec4",
          "name": "calculatePosition"
        },
        {
          "line": 27,
          "return_type": "void",
          "name": "main"
        },
        {
          "line": 35,
          "return_type": "vec4",
          "name": "calculatePosition"
        },
        {
          "line": 36,
          "return_type": "void",
          "name": "main"
        },
        {
          "line": 46,
          "return_type": "vec4",
          "name": "calculatePosition"
        },
        {
          "line": 47,
          "return_type": "return",
          "name": "vec4"
        },
        {
          "line": 52,
          "return_type": "vec4",
          "name": "calculatePixel"
        },
        {
          "line": 53,
          "return_type": "void",
          "name": "main"
        },
        {
          "line": 63,
          "return_type": "vec4",
          "name": "calculatePixel"
        },
        {
          "line": 64,
          "return_type": "return",
          "name": "texture2D"
        },
        {
          "line": 69,
          "return_type": "vec4",
          "name": "calculatePixel"
        },
        {
          "line": 77,
          "return_type": "vec4",
          "name": "calculatePixel"
        },
        {
          "line": 80,
          "return_type": "return",
          "name": "vec4"
        },
        {
          "line": 87,
          "return_type": "void",
          "name": "main"
        },
        {
          "line": 94,
          "return_type": "void",
          "name": "main"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\client_entergame\\characterlist.lua",
      "total_lines": 567,
      "code_lines": 488,
      "comment_lines": 0,
      "empty_lines": 79,
      "functions": [
        {
          "line": 17,
          "return_type": "function",
          "name": "removeAutoReconnectEvent"
        },
        {
          "line": 25,
          "return_type": "function",
          "name": "tryLogin"
        },
        {
          "line": 66,
          "return_type": "function",
          "name": "updateWait"
        },
        {
          "line": 92,
          "return_type": "function",
          "name": "resendWait"
        },
        {
          "line": 128,
          "return_type": "function",
          "name": "onLoginWait"
        },
        {
          "line": 142,
          "return_type": "function",
          "name": "onGameLoginError"
        },
        {
          "line": 151,
          "return_type": "function",
          "name": "onGameSessionEnd"
        },
        {
          "line": 156,
          "return_type": "function",
          "name": "onGameConnectionError"
        },
        {
          "line": 167,
          "return_type": "function",
          "name": "onGameUpdateNeeded"
        },
        {
          "line": 297,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 299,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 394,
          "return_type": "Premium",
          "name": "Account"
        },
        {
          "line": 526,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 530,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 535,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 544,
          "return_type": "function",
          "name": "onLogout"
        },
        {
          "line": 548,
          "return_type": "function",
          "name": "scheduleAutoReconnect"
        },
        {
          "line": 557,
          "return_type": "function",
          "name": "executeAutoReconnect"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\client_entergame\\createAccount.lua",
      "total_lines": 825,
      "code_lines": 735,
      "comment_lines": 0,
      "empty_lines": 90,
      "functions": [
        {
          "line": 71,
          "return_type": "function",
          "name": "reportRequestWarning"
        },
        {
          "line": 75,
          "return_type": "function",
          "name": "handleHttpResponse"
        },
        {
          "line": 76,
          "return_type": "return",
          "name": "function"
        },
        {
          "line": 79,
          "return_type": "return",
          "name": "callback"
        },
        {
          "line": 94,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 100,
          "return_type": "return",
          "name": "callback"
        },
        {
          "line": 102,
          "return_type": "return",
          "name": "callback"
        },
        {
          "line": 107,
          "return_type": "function",
          "name": "getAccountCreationStatus"
        },
        {
          "line": 171,
          "return_type": "function",
          "name": "generateCharacterName"
        },
        {
          "line": 177,
          "return_type": "function",
          "name": "checkCharacterName"
        },
        {
          "line": 191,
          "return_type": "function",
          "name": "checkEmail"
        },
        {
          "line": 205,
          "return_type": "function",
          "name": "checkPassword"
        },
        {
          "line": 225,
          "return_type": "function",
          "name": "createAccountAndCharacter"
        },
        {
          "line": 238,
          "return_type": "function",
          "name": "checkAllRequirements"
        },
        {
          "line": 239,
          "return_type": "function",
          "name": "allWidgetsEnabled"
        },
        {
          "line": 240,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 255,
          "return_type": "function",
          "name": "updateButtonState"
        },
        {
          "line": 259,
          "return_type": "function",
          "name": "setRequirementState"
        },
        {
          "line": 274,
          "return_type": "function",
          "name": "updatePasswordRequirements"
        },
        {
          "line": 285,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 301,
          "return_type": "function",
          "name": "handleTextChange"
        },
        {
          "line": 349,
          "return_type": "function",
          "name": "onFocusChange"
        },
        {
          "line": 376,
          "return_type": "function",
          "name": "behavioronFocusChange"
        },
        {
          "line": 377,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 382,
          "return_type": "function",
          "name": "behavioronTextChange"
        },
        {
          "line": 400,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 446,
          "return_type": "function",
          "name": "behavioronCheckChange"
        },
        {
          "line": 457,
          "return_type": "function",
          "name": "toggleCreateAccount"
        },
        {
          "line": 467,
          "return_type": "function",
          "name": "onClickStartPlaying"
        },
        {
          "line": 469,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 480,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 504,
          "return_type": "function",
          "name": "onClickSuggestName"
        },
        {
          "line": 518,
          "return_type": "function",
          "name": "findWorldByName"
        },
        {
          "line": 519,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 527,
          "return_type": "function",
          "name": "filterWorldsList"
        },
        {
          "line": 532,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 546,
          "return_type": "function",
          "name": "updateWorldInformation"
        },
        {
          "line": 550,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 569,
          "return_type": "function",
          "name": "initializeWorldsList"
        },
        {
          "line": 571,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 588,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 617,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 624,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 637,
          "return_type": "function",
          "name": "onClickResetGameWorld"
        },
        {
          "line": 644,
          "return_type": "function",
          "name": "toggleMainPanels"
        },
        {
          "line": 654,
          "return_type": "function",
          "name": "onClickOkChangeWorld"
        },
        {
          "line": 666,
          "return_type": "function",
          "name": "createWidgetAccount"
        },
        {
          "line": 735,
          "return_type": "function",
          "name": "destroyCreateAccount"
        },
        {
          "line": 737,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 744,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 757,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 765,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 773,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 781,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 803,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 811,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\client_entergame\\entergame.lua",
      "total_lines": 878,
      "code_lines": 732,
      "comment_lines": 0,
      "empty_lines": 146,
      "functions": [
        {
          "line": 13,
          "return_type": "function",
          "name": "onError"
        },
        {
          "line": 29,
          "return_type": "function",
          "name": "onMotd"
        },
        {
          "line": 34,
          "return_type": "function",
          "name": "onSessionKey"
        },
        {
          "line": 38,
          "return_type": "function",
          "name": "onCharacterList"
        },
        {
          "line": 72,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 97,
          "return_type": "function",
          "name": "onUpdateNeeded"
        },
        {
          "line": 115,
          "return_type": "function",
          "name": "updateLabelText"
        },
        {
          "line": 116,
          "return_type": "and",
          "name": "tonumber"
        },
        {
          "line": 166,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 167,
          "return_type": "if",
          "name": "tonumber"
        },
        {
          "line": 175,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 183,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 307,
          "return_type": "function",
          "name": "reportRequestWarning"
        },
        {
          "line": 453,
          "return_type": "quickly",
          "name": "error"
        },
        {
          "line": 491,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 635,
          "return_type": "function",
          "name": "printTable"
        },
        {
          "line": 636,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 637,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 653,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 663,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 876,
          "return_type": "function",
          "name": "ensableBtnCreateNewAccount"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\client_locales\\neededtranslations.lua",
      "total_lines": 116,
      "code_lines": 116,
      "comment_lines": 0,
      "empty_lines": 0,
      "functions": [
        {
          "line": 30,
          "return_type": "the",
          "name": "server"
        },
        {
          "line": 74,
          "return_type": "Premium",
          "name": "Account"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\client_options\\options.lua",
      "total_lines": 658,
      "code_lines": 569,
      "comment_lines": 0,
      "empty_lines": 89,
      "functions": [
        {
          "line": 78,
          "return_type": "function",
          "name": "toggleDisplays"
        },
        {
          "line": 94,
          "return_type": "function",
          "name": "toggleOption"
        },
        {
          "line": 95,
          "return_type": "not",
          "name": "getOption"
        },
        {
          "line": 98,
          "return_type": "function",
          "name": "setupComboBox"
        },
        {
          "line": 106,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 115,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 124,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 132,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 150,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 159,
          "return_type": "function",
          "name": "setup"
        },
        {
          "line": 165,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 168,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 170,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 172,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 183,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 184,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 278,
          "return_type": "function",
          "name": "setOption"
        },
        {
          "line": 294,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 312,
          "return_type": "function",
          "name": "setupOptionsMainButton"
        },
        {
          "line": 321,
          "return_type": "function",
          "name": "getOption"
        },
        {
          "line": 325,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 331,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 335,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 354,
          "return_type": "function",
          "name": "addTab"
        },
        {
          "line": 358,
          "return_type": "function",
          "name": "removeTab"
        },
        {
          "line": 362,
          "return_type": "function",
          "name": "toggleSubCategories"
        },
        {
          "line": 363,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 374,
          "return_type": "function",
          "name": "close"
        },
        {
          "line": 380,
          "return_type": "function",
          "name": "open"
        },
        {
          "line": 389,
          "return_type": "function",
          "name": "selectCharacterPage"
        },
        {
          "line": 400,
          "return_type": "function",
          "name": "createSubWidget"
        },
        {
          "line": 448,
          "return_type": "function",
          "name": "configureCharacterCategories"
        },
        {
          "line": 451,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 463,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 525,
          "return_type": "function",
          "name": "closeCharacterButtons"
        },
        {
          "line": 529,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 540,
          "return_type": "function",
          "name": "createCategory"
        },
        {
          "line": 544,
          "return_type": "or",
          "name": "getPanelName"
        },
        {
          "line": 548,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 554,
          "return_type": "function",
          "name": "removeCategory"
        },
        {
          "line": 555,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 559,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 570,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 582,
          "return_type": "function",
          "name": "removeButton"
        },
        {
          "line": 583,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 586,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 599,
          "return_type": "function",
          "name": "addButton"
        },
        {
          "line": 600,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 605,
          "return_type": "or",
          "name": "getPanelName"
        },
        {
          "line": 611,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 620,
          "return_type": "function",
          "name": "getPanelName"
        },
        {
          "line": 621,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 629,
          "return_type": "function",
          "name": "addSubcategoryToCategory"
        },
        {
          "line": 633,
          "return_type": "function",
          "name": "getPanel"
        },
        {
          "line": 637,
          "return_type": "function",
          "name": "openOptionsCategory"
        },
        {
          "line": 646,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\client_terminal\\terminal.lua",
      "total_lines": 438,
      "code_lines": 379,
      "comment_lines": 0,
      "empty_lines": 59,
      "functions": [
        {
          "line": 34,
          "return_type": "function",
          "name": "navigateCommand"
        },
        {
          "line": 52,
          "return_type": "function",
          "name": "completeCommand"
        },
        {
          "line": 66,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 89,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 101,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 107,
          "return_type": "function",
          "name": "doCommand"
        },
        {
          "line": 114,
          "return_type": "function",
          "name": "addNewline"
        },
        {
          "line": 121,
          "return_type": "function",
          "name": "onCommandChange"
        },
        {
          "line": 130,
          "return_type": "function",
          "name": "onLog"
        },
        {
          "line": 134,
          "return_type": "reporting",
          "name": "logs"
        },
        {
          "line": 145,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 200,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 206,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 233,
          "return_type": "function",
          "name": "hideButton"
        },
        {
          "line": 237,
          "return_type": "function",
          "name": "popWindow"
        },
        {
          "line": 274,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 297,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 305,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 309,
          "return_type": "function",
          "name": "disable"
        },
        {
          "line": 314,
          "return_type": "function",
          "name": "flushLines"
        },
        {
          "line": 355,
          "return_type": "function",
          "name": "addLine"
        },
        {
          "line": 367,
          "return_type": "function",
          "name": "executeCommand"
        },
        {
          "line": 401,
          "return_type": "and",
          "name": "type"
        },
        {
          "line": 433,
          "return_type": "function",
          "name": "clear"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\client_topmenu\\topmenu.lua",
      "total_lines": 528,
      "code_lines": 452,
      "comment_lines": 0,
      "empty_lines": 76,
      "functions": [
        {
          "line": 36,
          "return_type": "function",
          "name": "addButton"
        },
        {
          "line": 69,
          "return_type": "function",
          "name": "updateZoomButtons"
        },
        {
          "line": 78,
          "return_type": "function",
          "name": "setZoom"
        },
        {
          "line": 87,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 144,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 177,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 182,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 191,
          "return_type": "function",
          "name": "online"
        },
        {
          "line": 236,
          "return_type": "function",
          "name": "offline"
        },
        {
          "line": 246,
          "return_type": "function",
          "name": "updateFps"
        },
        {
          "line": 289,
          "return_type": "function",
          "name": "updatePing"
        },
        {
          "line": 315,
          "return_type": "High",
          "name": "lag"
        },
        {
          "line": 318,
          "return_type": "High",
          "name": "lag"
        },
        {
          "line": 321,
          "return_type": "Medium",
          "name": "lag"
        },
        {
          "line": 324,
          "return_type": "Low",
          "name": "lag"
        },
        {
          "line": 333,
          "return_type": "function",
          "name": "setPingVisible"
        },
        {
          "line": 341,
          "return_type": "function",
          "name": "setFpsVisible"
        },
        {
          "line": 348,
          "return_type": "function",
          "name": "setPlayersOnline"
        },
        {
          "line": 351,
          "return_type": "function",
          "name": "setDiscordStreams"
        },
        {
          "line": 355,
          "return_type": "function",
          "name": "setYoutubeStreams"
        },
        {
          "line": 358,
          "return_type": "function",
          "name": "setYoutubeViewers"
        },
        {
          "line": 362,
          "return_type": "function",
          "name": "setLinkYoutube"
        },
        {
          "line": 373,
          "return_type": "function",
          "name": "setLinkDiscord"
        },
        {
          "line": 384,
          "return_type": "function",
          "name": "addLeftButton"
        },
        {
          "line": 385,
          "return_type": "return",
          "name": "addButton"
        },
        {
          "line": 388,
          "return_type": "function",
          "name": "addLeftToggleButton"
        },
        {
          "line": 389,
          "return_type": "return",
          "name": "addButton"
        },
        {
          "line": 392,
          "return_type": "function",
          "name": "addRightButton"
        },
        {
          "line": 393,
          "return_type": "return",
          "name": "addButton"
        },
        {
          "line": 396,
          "return_type": "function",
          "name": "addRightToggleButton"
        },
        {
          "line": 397,
          "return_type": "return",
          "name": "addButton"
        },
        {
          "line": 400,
          "return_type": "function",
          "name": "addLeftGameButton"
        },
        {
          "line": 412,
          "return_type": "function",
          "name": "addLeftGameToggleButton"
        },
        {
          "line": 424,
          "return_type": "function",
          "name": "addRightGameButton"
        },
        {
          "line": 436,
          "return_type": "function",
          "name": "addRightGameToggleButton"
        },
        {
          "line": 449,
          "return_type": "function",
          "name": "addTopRightRegularButton"
        },
        {
          "line": 450,
          "return_type": "return",
          "name": "addButton"
        },
        {
          "line": 453,
          "return_type": "function",
          "name": "addTopRightToggleButton"
        },
        {
          "line": 454,
          "return_type": "return",
          "name": "addButton"
        },
        {
          "line": 457,
          "return_type": "function",
          "name": "showGameButtons"
        },
        {
          "line": 462,
          "return_type": "function",
          "name": "hideGameButtons"
        },
        {
          "line": 467,
          "return_type": "function",
          "name": "getButton"
        },
        {
          "line": 471,
          "return_type": "function",
          "name": "getTopMenu"
        },
        {
          "line": 475,
          "return_type": "function",
          "name": "getRightGameButtonsPanel"
        },
        {
          "line": 479,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 491,
          "return_type": "function",
          "name": "openManagerAccounts"
        },
        {
          "line": 498,
          "return_type": "function",
          "name": "extendedView"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\corelib\\const.lua",
      "total_lines": 333,
      "code_lines": 317,
      "comment_lines": 0,
      "empty_lines": 16,
      "functions": [],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\corelib\\util.lua",
      "total_lines": 457,
      "code_lines": 400,
      "comment_lines": 0,
      "empty_lines": 57,
      "functions": [
        {
          "line": 2,
          "return_type": "function",
          "name": "print"
        },
        {
          "line": 6,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 15,
          "return_type": "function",
          "name": "pinfo"
        },
        {
          "line": 19,
          "return_type": "function",
          "name": "perror"
        },
        {
          "line": 23,
          "return_type": "function",
          "name": "pwarning"
        },
        {
          "line": 27,
          "return_type": "function",
          "name": "pdebug"
        },
        {
          "line": 31,
          "return_type": "function",
          "name": "fatal"
        },
        {
          "line": 35,
          "return_type": "function",
          "name": "exit"
        },
        {
          "line": 39,
          "return_type": "function",
          "name": "quit"
        },
        {
          "line": 43,
          "return_type": "function",
          "name": "connect"
        },
        {
          "line": 50,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 60,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 63,
          "return_type": "and",
          "name": "type"
        },
        {
          "line": 65,
          "return_type": "return",
          "name": "signalcall"
        },
        {
          "line": 72,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 76,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 80,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 90,
          "return_type": "function",
          "name": "disconnect"
        },
        {
          "line": 92,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 100,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 106,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 108,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 112,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 113,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 127,
          "return_type": "function",
          "name": "newclass"
        },
        {
          "line": 135,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 149,
          "return_type": "function",
          "name": "extends"
        },
        {
          "line": 157,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 171,
          "return_type": "function",
          "name": "runinsandbox"
        },
        {
          "line": 172,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 189,
          "return_type": "function",
          "name": "loadasmodule"
        },
        {
          "line": 190,
          "return_type": "or",
          "name": "resolvepath"
        },
        {
          "line": 199,
          "return_type": "function",
          "name": "module_loader"
        },
        {
          "line": 204,
          "return_type": "return",
          "name": "function"
        },
        {
          "line": 213,
          "return_type": "function",
          "name": "import"
        },
        {
          "line": 216,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 221,
          "return_type": "function",
          "name": "export"
        },
        {
          "line": 225,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 231,
          "return_type": "function",
          "name": "unexport"
        },
        {
          "line": 232,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 233,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 241,
          "return_type": "function",
          "name": "getfsrcpath"
        },
        {
          "line": 256,
          "return_type": "function",
          "name": "resolvepath"
        },
        {
          "line": 280,
          "return_type": "function",
          "name": "toboolean"
        },
        {
          "line": 281,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 286,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 290,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 296,
          "return_type": "function",
          "name": "fromboolean"
        },
        {
          "line": 304,
          "return_type": "function",
          "name": "booleantonumber"
        },
        {
          "line": 312,
          "return_type": "function",
          "name": "numbertoboolean"
        },
        {
          "line": 320,
          "return_type": "function",
          "name": "protectedcall"
        },
        {
          "line": 330,
          "return_type": "function",
          "name": "signalcall"
        },
        {
          "line": 331,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 338,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 339,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 355,
          "return_type": "function",
          "name": "tr"
        },
        {
          "line": 359,
          "return_type": "function",
          "name": "getOppositeAnchor"
        },
        {
          "line": 376,
          "return_type": "function",
          "name": "makesingleton"
        },
        {
          "line": 379,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 380,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 382,
          "return_type": "return",
          "name": "value"
        },
        {
          "line": 394,
          "return_type": "function",
          "name": "dumpLevel"
        },
        {
          "line": 401,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 405,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 406,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 410,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 419,
          "return_type": "return",
          "name": "tostring"
        },
        {
          "line": 423,
          "return_type": "function",
          "name": "dump"
        },
        {
          "line": 424,
          "return_type": "return",
          "name": "dumpLevel"
        },
        {
          "line": 428,
          "return_type": "function",
          "name": "pdump"
        },
        {
          "line": 435,
          "return_type": "function",
          "name": "tdump"
        }
      ],
      "classes": [
        {
          "line": 129,
          "name": "has"
        },
        {
          "line": 151,
          "name": "has"
        }
      ],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\gamelib\\const.lua",
      "total_lines": 448,
      "code_lines": 412,
      "comment_lines": 0,
      "empty_lines": 36,
      "functions": [],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\gamelib\\items.lua",
      "total_lines": 144,
      "code_lines": 130,
      "comment_lines": 0,
      "empty_lines": 14,
      "functions": [
        {
          "line": 11,
          "return_type": "function",
          "name": "getColorForValue"
        },
        {
          "line": 27,
          "return_type": "function",
          "name": "clipfunction"
        },
        {
          "line": 53,
          "return_type": "item",
          "name": "or"
        },
        {
          "line": 80,
          "return_type": "function",
          "name": "coloringLootName"
        },
        {
          "line": 97,
          "return_type": "item",
          "name": "or"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\gamelib\\spells.lua",
      "total_lines": 3041,
      "code_lines": 3003,
      "comment_lines": 0,
      "empty_lines": 38,
      "functions": [
        {
          "line": 2690,
          "return_type": "by",
          "name": "client"
        },
        {
          "line": 2907,
          "return_type": "not",
          "name": "tonumber"
        },
        {
          "line": 2910,
          "return_type": "return",
          "name": "tonumber"
        },
        {
          "line": 2914,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2915,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2928,
          "return_type": "not",
          "name": "tonumber"
        },
        {
          "line": 2931,
          "return_type": "return",
          "name": "tonumber"
        },
        {
          "line": 2940,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2941,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2951,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2952,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2963,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2964,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2972,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2973,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2983,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2984,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2994,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 3004,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 3005,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 3016,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 3027,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_actionbar\\game_actionbar.lua",
      "total_lines": 1156,
      "code_lines": 1069,
      "comment_lines": 0,
      "empty_lines": 87,
      "functions": [
        {
          "line": 31,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 58,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 92,
          "return_type": "function",
          "name": "online"
        },
        {
          "line": 104,
          "return_type": "function",
          "name": "offline"
        },
        {
          "line": 109,
          "return_type": "function",
          "name": "copySlot"
        },
        {
          "line": 124,
          "return_type": "imgsrcbool",
          "name": "or"
        },
        {
          "line": 148,
          "return_type": "function",
          "name": "onDropFunc"
        },
        {
          "line": 182,
          "return_type": "function",
          "name": "setupActionBar"
        },
        {
          "line": 214,
          "return_type": "function",
          "name": "createMenu"
        },
        {
          "line": 240,
          "return_type": "function",
          "name": "openSpellAssignWindow"
        },
        {
          "line": 252,
          "return_type": "function",
          "name": "closeSpellAssignWindow"
        },
        {
          "line": 259,
          "return_type": "function",
          "name": "initializeSpelllist"
        },
        {
          "line": 267,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 296,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 313,
          "return_type": "function",
          "name": "updatePreviewSpell"
        },
        {
          "line": 329,
          "return_type": "function",
          "name": "spellAssignAccept"
        },
        {
          "line": 354,
          "return_type": "function",
          "name": "clearSlot"
        },
        {
          "line": 371,
          "return_type": "function",
          "name": "clearSlotById"
        },
        {
          "line": 388,
          "return_type": "function",
          "name": "clearHotkey"
        },
        {
          "line": 394,
          "return_type": "function",
          "name": "openTextAssignWindow"
        },
        {
          "line": 401,
          "return_type": "function",
          "name": "closeTextAssignWindow"
        },
        {
          "line": 407,
          "return_type": "function",
          "name": "textAssignAccept"
        },
        {
          "line": 456,
          "return_type": "function",
          "name": "openObjectAssignWindow"
        },
        {
          "line": 470,
          "return_type": "function",
          "name": "closeObjectAssignWindow"
        },
        {
          "line": 477,
          "return_type": "function",
          "name": "startChooseItem"
        },
        {
          "line": 485,
          "return_type": "function",
          "name": "objectAssignAccept"
        },
        {
          "line": 516,
          "return_type": "function",
          "name": "onChooseItemMouseRelease"
        },
        {
          "line": 569,
          "return_type": "function",
          "name": "onChooseItemByDrag"
        },
        {
          "line": 617,
          "return_type": "function",
          "name": "onDragReassign"
        },
        {
          "line": 621,
          "return_type": "function",
          "name": "openEditHotkeyWindow"
        },
        {
          "line": 633,
          "return_type": "function",
          "name": "closeEditHotkeyWindow"
        },
        {
          "line": 639,
          "return_type": "function",
          "name": "unbindHotkeys"
        },
        {
          "line": 640,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 647,
          "return_type": "function",
          "name": "setupHotkeys"
        },
        {
          "line": 665,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 759,
          "return_type": "function",
          "name": "checkHotkey"
        },
        {
          "line": 760,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 767,
          "return_type": "function",
          "name": "hotkeyCapture"
        },
        {
          "line": 774,
          "return_type": "if",
          "name": "checkHotkey"
        },
        {
          "line": 788,
          "return_type": "function",
          "name": "hotkeyClear"
        },
        {
          "line": 796,
          "return_type": "function",
          "name": "hotkeyCaptureOk"
        },
        {
          "line": 798,
          "return_type": "if",
          "name": "checkHotkey"
        },
        {
          "line": 799,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 822,
          "return_type": "function",
          "name": "saveActionBar"
        },
        {
          "line": 834,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 852,
          "return_type": "function",
          "name": "loadSpell"
        },
        {
          "line": 862,
          "return_type": "function",
          "name": "loadObject"
        },
        {
          "line": 872,
          "return_type": "function",
          "name": "loadText"
        },
        {
          "line": 884,
          "return_type": "function",
          "name": "loadActionBar"
        },
        {
          "line": 896,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 912,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 933,
          "return_type": "function",
          "name": "setActionBarVisible"
        },
        {
          "line": 943,
          "return_type": "function",
          "name": "round"
        },
        {
          "line": 947,
          "return_type": "function",
          "name": "updateCooldown"
        },
        {
          "line": 969,
          "return_type": "function",
          "name": "updateGroupCooldown"
        },
        {
          "line": 990,
          "return_type": "function",
          "name": "onSpellCooldown"
        },
        {
          "line": 992,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1025,
          "return_type": "function",
          "name": "onSpellGroupCooldown"
        },
        {
          "line": 1028,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1079,
          "return_type": "function",
          "name": "filterSpells"
        },
        {
          "line": 1083,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1092,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1098,
          "return_type": "function",
          "name": "hideSpell"
        },
        {
          "line": 1105,
          "return_type": "function",
          "name": "showSpell"
        },
        {
          "line": 1112,
          "return_type": "function",
          "name": "onDecrementHorizontalScroll"
        },
        {
          "line": 1131,
          "return_type": "function",
          "name": "onIncrementHorizontalScroll"
        },
        {
          "line": 1150,
          "return_type": "function",
          "name": "setLocked"
        },
        {
          "line": 1154,
          "return_type": "function",
          "name": "getPanelActionbar"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_battle\\battle.lua",
      "total_lines": 1109,
      "code_lines": 947,
      "comment_lines": 0,
      "empty_lines": 162,
      "functions": [
        {
          "line": 9,
          "return_type": "Hide",
          "name": "Buttons"
        },
        {
          "line": 26,
          "return_type": "function",
          "name": "connecting"
        },
        {
          "line": 52,
          "return_type": "function",
          "name": "disconnecting"
        },
        {
          "line": 76,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 110,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 119,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 124,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 154,
          "return_type": "function",
          "name": "debugTables"
        },
        {
          "line": 155,
          "return_type": "function",
          "name": "getInfo"
        },
        {
          "line": 173,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 180,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 189,
          "return_type": "function",
          "name": "BSComparator"
        },
        {
          "line": 199,
          "return_type": "function",
          "name": "BSComparatorSortType"
        },
        {
          "line": 231,
          "return_type": "function",
          "name": "binarySearch"
        },
        {
          "line": 255,
          "return_type": "function",
          "name": "binaryInsert"
        },
        {
          "line": 268,
          "return_type": "if",
          "name": "comparator"
        },
        {
          "line": 278,
          "return_type": "function",
          "name": "swap"
        },
        {
          "line": 292,
          "return_type": "function",
          "name": "correctBattleButtons"
        },
        {
          "line": 295,
          "return_type": "or",
          "name": "getSortOrder"
        },
        {
          "line": 313,
          "return_type": "function",
          "name": "reSort"
        },
        {
          "line": 317,
          "return_type": "return",
          "name": "BSComparatorSortType"
        },
        {
          "line": 329,
          "return_type": "function",
          "name": "onGameStart"
        },
        {
          "line": 336,
          "return_type": "function",
          "name": "onGameEnd"
        },
        {
          "line": 344,
          "return_type": "function",
          "name": "getSortType"
        },
        {
          "line": 352,
          "return_type": "function",
          "name": "setSortType"
        },
        {
          "line": 361,
          "return_type": "function",
          "name": "onZoomChange"
        },
        {
          "line": 366,
          "return_type": "function",
          "name": "onChangeSortType"
        },
        {
          "line": 376,
          "return_type": "function",
          "name": "getSortOrder"
        },
        {
          "line": 384,
          "return_type": "function",
          "name": "setSortOrder"
        },
        {
          "line": 392,
          "return_type": "function",
          "name": "isSortAsc"
        },
        {
          "line": 393,
          "return_type": "return",
          "name": "getSortOrder"
        },
        {
          "line": 396,
          "return_type": "function",
          "name": "isSortDesc"
        },
        {
          "line": 397,
          "return_type": "return",
          "name": "getSortOrder"
        },
        {
          "line": 400,
          "return_type": "function",
          "name": "onChangeSortOrder"
        },
        {
          "line": 410,
          "return_type": "function",
          "name": "checkCreatures"
        },
        {
          "line": 434,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 435,
          "return_type": "if",
          "name": "doCreatureFitFilters"
        },
        {
          "line": 441,
          "return_type": "function",
          "name": "doCreatureFitFilters"
        },
        {
          "line": 468,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 482,
          "return_type": "function",
          "name": "canBeSeen"
        },
        {
          "line": 487,
          "return_type": "function",
          "name": "getDistanceBetween"
        },
        {
          "line": 509,
          "return_type": "function",
          "name": "getAttributeByOrderType"
        },
        {
          "line": 534,
          "return_type": "function",
          "name": "addCreature"
        },
        {
          "line": 562,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 576,
          "return_type": "if",
          "name": "isSortAsc"
        },
        {
          "line": 587,
          "return_type": "function",
          "name": "removeAllCreatures"
        },
        {
          "line": 591,
          "return_type": "function",
          "name": "removeCreature"
        },
        {
          "line": 600,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 622,
          "return_type": "get",
          "name": "O"
        },
        {
          "line": 623,
          "return_type": "find",
          "name": "information"
        },
        {
          "line": 641,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 653,
          "return_type": "function",
          "name": "isHidingFilters"
        },
        {
          "line": 661,
          "return_type": "function",
          "name": "setHidingFilters"
        },
        {
          "line": 667,
          "return_type": "function",
          "name": "hideFilterPanel"
        },
        {
          "line": 676,
          "return_type": "function",
          "name": "showFilterPanel"
        },
        {
          "line": 684,
          "return_type": "function",
          "name": "toggleFilterPanel"
        },
        {
          "line": 692,
          "return_type": "function",
          "name": "attackNext"
        },
        {
          "line": 701,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 742,
          "return_type": "function",
          "name": "onAttack"
        },
        {
          "line": 750,
          "return_type": "creature",
          "name": "and"
        },
        {
          "line": 763,
          "return_type": "function",
          "name": "onFollow"
        },
        {
          "line": 783,
          "return_type": "function",
          "name": "onCreatureOutfitChange"
        },
        {
          "line": 794,
          "return_type": "function",
          "name": "updateCreatureSkull"
        },
        {
          "line": 802,
          "return_type": "function",
          "name": "updateCreatureEmblem"
        },
        {
          "line": 810,
          "return_type": "function",
          "name": "onCreaturePositionChange"
        },
        {
          "line": 830,
          "return_type": "newPos",
          "name": "and"
        },
        {
          "line": 834,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 845,
          "return_type": "return",
          "name": "BSComparatorSortType"
        },
        {
          "line": 850,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 872,
          "return_type": "newPos",
          "name": "and"
        },
        {
          "line": 891,
          "return_type": "distance",
          "name": "or"
        },
        {
          "line": 909,
          "return_type": "distance",
          "name": "or"
        },
        {
          "line": 930,
          "return_type": "function",
          "name": "onCreatureHealthPercentChange"
        },
        {
          "line": 955,
          "return_type": "healthpercent",
          "name": "or"
        },
        {
          "line": 965,
          "return_type": "healthpercent",
          "name": "or"
        },
        {
          "line": 982,
          "return_type": "function",
          "name": "onCreatureAppear"
        },
        {
          "line": 989,
          "return_type": "if",
          "name": "doCreatureFitFilters"
        },
        {
          "line": 994,
          "return_type": "function",
          "name": "onCreatureDisappear"
        },
        {
          "line": 999,
          "return_type": "function",
          "name": "onBattleButtonMouseRelease"
        },
        {
          "line": 1027,
          "return_type": "function",
          "name": "updateStaticSquare"
        },
        {
          "line": 1028,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1035,
          "return_type": "function",
          "name": "updateBattleButton"
        },
        {
          "line": 1048,
          "return_type": "function",
          "name": "onBattleButtonHoverChange"
        },
        {
          "line": 1055,
          "return_type": "function",
          "name": "onOpen"
        },
        {
          "line": 1060,
          "return_type": "function",
          "name": "onClose"
        },
        {
          "line": 1065,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 1082,
          "return_type": "function",
          "name": "terminate"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_blessing\\blessing.lua",
      "total_lines": 139,
      "code_lines": 118,
      "comment_lines": 0,
      "empty_lines": 21,
      "functions": [
        {
          "line": 40,
          "return_type": "function",
          "name": "setHistory"
        },
        {
          "line": 49,
          "return_type": "function",
          "name": "setBlessing"
        },
        {
          "line": 58,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 64,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 69,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 76,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 87,
          "return_type": "function",
          "name": "onUpdateBlessDialog"
        },
        {
          "line": 89,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 132,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_console\\console.lua",
      "total_lines": 2491,
      "code_lines": 2253,
      "comment_lines": 0,
      "empty_lines": 238,
      "functions": [
        {
          "line": 177,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 213,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 317,
          "return_type": "function",
          "name": "clearSelection"
        },
        {
          "line": 318,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 325,
          "return_type": "function",
          "name": "selectAll"
        },
        {
          "line": 329,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 341,
          "return_type": "function",
          "name": "toggleChat"
        },
        {
          "line": 351,
          "return_type": "function",
          "name": "updateChatMode"
        },
        {
          "line": 355,
          "return_type": "function",
          "name": "unbindMovingKeys"
        },
        {
          "line": 373,
          "return_type": "function",
          "name": "bindMovingKeys"
        },
        {
          "line": 391,
          "return_type": "function",
          "name": "switchChat"
        },
        {
          "line": 394,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 410,
          "return_type": "function",
          "name": "switchChatOnCall"
        },
        {
          "line": 415,
          "return_type": "if",
          "name": "isChatEnabled"
        },
        {
          "line": 427,
          "return_type": "function",
          "name": "disableChatOnCall"
        },
        {
          "line": 432,
          "return_type": "if",
          "name": "isChatEnabled"
        },
        {
          "line": 439,
          "return_type": "function",
          "name": "isChatEnabled"
        },
        {
          "line": 443,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 509,
          "return_type": "function",
          "name": "save"
        },
        {
          "line": 516,
          "return_type": "function",
          "name": "load"
        },
        {
          "line": 531,
          "return_type": "function",
          "name": "isEnabledWASD"
        },
        {
          "line": 535,
          "return_type": "function",
          "name": "onTabChange"
        },
        {
          "line": 560,
          "return_type": "function",
          "name": "clear"
        },
        {
          "line": 566,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 567,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 582,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 625,
          "return_type": "function",
          "name": "clearChannel"
        },
        {
          "line": 629,
          "return_type": "function",
          "name": "setTextEditText"
        },
        {
          "line": 634,
          "return_type": "function",
          "name": "openHelp"
        },
        {
          "line": 642,
          "return_type": "function",
          "name": "openPlayerReportRuleViolationWindow"
        },
        {
          "line": 665,
          "return_type": "function",
          "name": "addTab"
        },
        {
          "line": 692,
          "return_type": "function",
          "name": "removeTab"
        },
        {
          "line": 693,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 708,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 718,
          "return_type": "if",
          "name": "getCurrentTab"
        },
        {
          "line": 724,
          "return_type": "function",
          "name": "removeCurrentTab"
        },
        {
          "line": 728,
          "return_type": "function",
          "name": "getTab"
        },
        {
          "line": 732,
          "return_type": "function",
          "name": "getChannelTab"
        },
        {
          "line": 735,
          "return_type": "return",
          "name": "getTab"
        },
        {
          "line": 740,
          "return_type": "function",
          "name": "getRuleViolationsTab"
        },
        {
          "line": 742,
          "return_type": "return",
          "name": "getChannelTab"
        },
        {
          "line": 747,
          "return_type": "function",
          "name": "getCurrentTab"
        },
        {
          "line": 751,
          "return_type": "function",
          "name": "addChannel"
        },
        {
          "line": 759,
          "return_type": "function",
          "name": "addPrivateChannel"
        },
        {
          "line": 761,
          "return_type": "return",
          "name": "addTab"
        },
        {
          "line": 764,
          "return_type": "function",
          "name": "addPrivateText"
        },
        {
          "line": 787,
          "return_type": "function",
          "name": "addText"
        },
        {
          "line": 795,
          "return_type": "New",
          "name": "line"
        },
        {
          "line": 1024,
          "return_type": "function",
          "name": "getHighlightedText"
        },
        {
          "line": 1029,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1032,
          "return_type": "until",
          "name": "not"
        },
        {
          "line": 1037,
          "return_type": "function",
          "name": "changeNewNessageColor"
        },
        {
          "line": 1050,
          "return_type": "function",
          "name": "addTabText"
        },
        {
          "line": 1083,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 1269,
          "return_type": "function",
          "name": "removeTabLabelByName"
        },
        {
          "line": 1272,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1279,
          "return_type": "function",
          "name": "processChannelTabMenu"
        },
        {
          "line": 1314,
          "return_type": "function",
          "name": "processMessageMenu"
        },
        {
          "line": 1337,
          "return_type": "if",
          "name": "isIgnored"
        },
        {
          "line": 1386,
          "return_type": "function",
          "name": "sendCurrentMessage"
        },
        {
          "line": 1391,
          "return_type": "not",
          "name": "isChatEnabled"
        },
        {
          "line": 1400,
          "return_type": "function",
          "name": "addFilter"
        },
        {
          "line": 1404,
          "return_type": "function",
          "name": "removeFilter"
        },
        {
          "line": 1408,
          "return_type": "function",
          "name": "sendMessage"
        },
        {
          "line": 1409,
          "return_type": "or",
          "name": "getCurrentTab"
        },
        {
          "line": 1414,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1415,
          "return_type": "if",
          "name": "func"
        },
        {
          "line": 1552,
          "return_type": "function",
          "name": "sayModeChange"
        },
        {
          "line": 1566,
          "return_type": "function",
          "name": "getOwnPrivateTab"
        },
        {
          "line": 1570,
          "return_type": "return",
          "name": "getTab"
        },
        {
          "line": 1573,
          "return_type": "function",
          "name": "setIgnoreNpcMessages"
        },
        {
          "line": 1577,
          "return_type": "function",
          "name": "navigateMessageHistory"
        },
        {
          "line": 1578,
          "return_type": "not",
          "name": "isChatEnabled"
        },
        {
          "line": 1597,
          "return_type": "function",
          "name": "applyMessagePrefixies"
        },
        {
          "line": 1608,
          "return_type": "function",
          "name": "onTalk"
        },
        {
          "line": 1628,
          "return_type": "and",
          "name": "isUsingIgnoreList"
        },
        {
          "line": 1629,
          "return_type": "and",
          "name": "not"
        },
        {
          "line": 1630,
          "return_type": "and",
          "name": "isIgnoringYelling"
        },
        {
          "line": 1632,
          "return_type": "and",
          "name": "isIgnoringPrivate"
        },
        {
          "line": 1634,
          "return_type": "elseif",
          "name": "isIgnored"
        },
        {
          "line": 1708,
          "return_type": "function",
          "name": "onOpenChannel"
        },
        {
          "line": 1712,
          "return_type": "function",
          "name": "onOpenPrivateChannel"
        },
        {
          "line": 1716,
          "return_type": "function",
          "name": "onOpenOwnPrivateChannel"
        },
        {
          "line": 1724,
          "return_type": "function",
          "name": "onCloseChannel"
        },
        {
          "line": 1731,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1739,
          "return_type": "function",
          "name": "processViolation"
        },
        {
          "line": 1748,
          "return_type": "function",
          "name": "onRuleViolationChannel"
        },
        {
          "line": 1754,
          "return_type": "function",
          "name": "onRuleViolationRemove"
        },
        {
          "line": 1762,
          "return_type": "function",
          "name": "onRuleViolationCancel"
        },
        {
          "line": 1771,
          "return_type": "function",
          "name": "onRuleViolationLock"
        },
        {
          "line": 1780,
          "return_type": "function",
          "name": "doChannelListSubmit"
        },
        {
          "line": 1805,
          "return_type": "function",
          "name": "onChannelList"
        },
        {
          "line": 1822,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1837,
          "return_type": "function",
          "name": "loadCommunicationSettings"
        },
        {
          "line": 1843,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1850,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1862,
          "return_type": "function",
          "name": "saveCommunicationSettings"
        },
        {
          "line": 1883,
          "return_type": "function",
          "name": "getIgnoredPlayers"
        },
        {
          "line": 1887,
          "return_type": "function",
          "name": "getWhitelistedPlayers"
        },
        {
          "line": 1891,
          "return_type": "function",
          "name": "isUsingIgnoreList"
        },
        {
          "line": 1895,
          "return_type": "function",
          "name": "isUsingWhiteList"
        },
        {
          "line": 1899,
          "return_type": "function",
          "name": "isIgnored"
        },
        {
          "line": 1903,
          "return_type": "function",
          "name": "addIgnoredPlayer"
        },
        {
          "line": 1904,
          "return_type": "if",
          "name": "isIgnored"
        },
        {
          "line": 1911,
          "return_type": "function",
          "name": "removeIgnoredPlayer"
        },
        {
          "line": 1915,
          "return_type": "function",
          "name": "isWhitelisted"
        },
        {
          "line": 1919,
          "return_type": "function",
          "name": "addWhitelistedPlayer"
        },
        {
          "line": 1920,
          "return_type": "if",
          "name": "isWhitelisted"
        },
        {
          "line": 1926,
          "return_type": "function",
          "name": "removeWhitelistedPlayer"
        },
        {
          "line": 1930,
          "return_type": "function",
          "name": "isIgnoringPrivate"
        },
        {
          "line": 1934,
          "return_type": "function",
          "name": "isIgnoringYelling"
        },
        {
          "line": 1938,
          "return_type": "function",
          "name": "isAllowingVIPs"
        },
        {
          "line": 1942,
          "return_type": "function",
          "name": "onClickIgnoreButton"
        },
        {
          "line": 2081,
          "return_type": "function",
          "name": "online"
        },
        {
          "line": 2104,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2120,
          "return_type": "function",
          "name": "offline"
        },
        {
          "line": 2124,
          "return_type": "function",
          "name": "onChannelEvent"
        },
        {
          "line": 2127,
          "return_type": "event",
          "name": "type"
        },
        {
          "line": 2140,
          "return_type": "function",
          "name": "onTextChange"
        },
        {
          "line": 2142,
          "return_type": "or",
          "name": "getCurrentTab"
        },
        {
          "line": 2152,
          "return_type": "function",
          "name": "setExtendedView"
        },
        {
          "line": 2170,
          "return_type": "function",
          "name": "extendedViewDraggable"
        },
        {
          "line": 2174,
          "return_type": "function",
          "name": "extendedViewCanSee"
        },
        {
          "line": 2180,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2187,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2199,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2208,
          "return_type": "function",
          "name": "returnChat"
        },
        {
          "line": 2213,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2221,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2234,
          "return_type": "function",
          "name": "extendedViewHide"
        },
        {
          "line": 2251,
          "return_type": "function",
          "name": "createButtonChat"
        },
        {
          "line": 2301,
          "return_type": "function",
          "name": "destroyButtonChat"
        },
        {
          "line": 2312,
          "return_type": "function",
          "name": "activateReadOnlyMode"
        },
        {
          "line": 2336,
          "return_type": "function",
          "name": "onReadOnlyMouseClick"
        },
        {
          "line": 2353,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2363,
          "return_type": "function",
          "name": "copyMessagesToReadOnlyPanel"
        },
        {
          "line": 2369,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2377,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2388,
          "return_type": "function",
          "name": "clearReadOnlyTab"
        },
        {
          "line": 2389,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2399,
          "return_type": "function",
          "name": "toggleReadOnlyMode"
        },
        {
          "line": 2423,
          "return_type": "function",
          "name": "addClonedMenuOptions"
        },
        {
          "line": 2466,
          "return_type": "function",
          "name": "saveChannelMessages"
        },
        {
          "line": 2470,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 2484,
          "return_type": "function",
          "name": "clearTabByName"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_containers\\containers.lua",
      "total_lines": 206,
      "code_lines": 176,
      "comment_lines": 0,
      "empty_lines": 30,
      "functions": [
        {
          "line": 1,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 17,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 29,
          "return_type": "function",
          "name": "reloadContainers"
        },
        {
          "line": 31,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 36,
          "return_type": "function",
          "name": "clean"
        },
        {
          "line": 37,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 42,
          "return_type": "function",
          "name": "destroy"
        },
        {
          "line": 50,
          "return_type": "function",
          "name": "refreshContainerItems"
        },
        {
          "line": 67,
          "return_type": "function",
          "name": "toggleContainerPages"
        },
        {
          "line": 73,
          "return_type": "function",
          "name": "refreshContainerPages"
        },
        {
          "line": 99,
          "return_type": "function",
          "name": "onContainerOpen"
        },
        {
          "line": 185,
          "return_type": "function",
          "name": "onContainerClose"
        },
        {
          "line": 189,
          "return_type": "function",
          "name": "onContainerChangeSize"
        },
        {
          "line": 196,
          "return_type": "function",
          "name": "onContainerUpdateItem"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_creatureinformation\\creatureinformation.lua",
      "total_lines": 211,
      "code_lines": 169,
      "comment_lines": 0,
      "empty_lines": 42,
      "functions": [
        {
          "line": 15,
          "return_type": "function",
          "name": "onCreate"
        },
        {
          "line": 30,
          "return_type": "function",
          "name": "onHealthPercentChange"
        },
        {
          "line": 55,
          "return_type": "function",
          "name": "onManaChange"
        },
        {
          "line": 68,
          "return_type": "function",
          "name": "onChangeName"
        },
        {
          "line": 80,
          "return_type": "function",
          "name": "onCovered"
        },
        {
          "line": 90,
          "return_type": "function",
          "name": "onOutfitChange"
        },
        {
          "line": 101,
          "return_type": "function",
          "name": "blinkIcon"
        },
        {
          "line": 113,
          "return_type": "function",
          "name": "setIcon"
        },
        {
          "line": 168,
          "return_type": "function",
          "name": "toggleInformation"
        },
        {
          "line": 177,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 191,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_cyclopedia\\game_cyclopedia.lua",
      "total_lines": 292,
      "code_lines": 249,
      "comment_lines": 0,
      "empty_lines": 43,
      "functions": [
        {
          "line": 25,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 30,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 118,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 157,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 232,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 240,
          "return_type": "function",
          "name": "resetCyclopediaTabs"
        },
        {
          "line": 251,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 263,
          "return_type": "function",
          "name": "toggleBack"
        },
        {
          "line": 271,
          "return_type": "function",
          "name": "SelectWindow"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_cyclopedia\\utils.lua",
      "total_lines": 714,
      "code_lines": 687,
      "comment_lines": 0,
      "empty_lines": 27,
      "functions": [
        {
          "line": 638,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 647,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_features\\features.lua",
      "total_lines": 258,
      "code_lines": 208,
      "comment_lines": 0,
      "empty_lines": 50,
      "functions": [],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_healthinfo\\healthinfo.lua",
      "total_lines": 70,
      "code_lines": 62,
      "comment_lines": 0,
      "empty_lines": 8,
      "functions": [
        {
          "line": 2,
          "return_type": "function",
          "name": "healthManaEvent"
        },
        {
          "line": 37,
          "return_type": "function",
          "name": "extendedView"
        },
        {
          "line": 62,
          "return_type": "function",
          "name": "toggle"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_highscore\\game_highscore.lua",
      "total_lines": 266,
      "code_lines": 223,
      "comment_lines": 0,
      "empty_lines": 43,
      "functions": [
        {
          "line": 28,
          "return_type": "function",
          "name": "getMinutesDifference"
        },
        {
          "line": 42,
          "return_type": "function",
          "name": "getCategory"
        },
        {
          "line": 43,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 44,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 53,
          "return_type": "function",
          "name": "getVocation"
        },
        {
          "line": 54,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 55,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 60,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 61,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 103,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 116,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 121,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 170,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 177,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 188,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 194,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 200,
          "return_type": "function",
          "name": "createHighscores"
        },
        {
          "line": 207,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 212,
          "return_type": "or",
          "name": "getVocation"
        },
        {
          "line": 217,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 227,
          "return_type": "function",
          "name": "changePage"
        },
        {
          "line": 232,
          "return_type": "function",
          "name": "nextPage"
        },
        {
          "line": 233,
          "return_type": "function",
          "name": "nextEndPage"
        },
        {
          "line": 234,
          "return_type": "function",
          "name": "prevPage"
        },
        {
          "line": 235,
          "return_type": "function",
          "name": "prevEndPage"
        },
        {
          "line": 237,
          "return_type": "function",
          "name": "disableButtons"
        },
        {
          "line": 238,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 243,
          "return_type": "function",
          "name": "submit"
        },
        {
          "line": 248,
          "return_type": "function",
          "name": "showOwnRank"
        },
        {
          "line": 253,
          "return_type": "function",
          "name": "highscoreRequest"
        },
        {
          "line": 263,
          "return_type": "function",
          "name": "requestInfo"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_imbuementtracker\\imbuementtracker.lua",
      "total_lines": 208,
      "code_lines": 184,
      "comment_lines": 0,
      "empty_lines": 24,
      "functions": [
        {
          "line": 20,
          "return_type": "function",
          "name": "loadFilters"
        },
        {
          "line": 28,
          "return_type": "function",
          "name": "saveFilters"
        },
        {
          "line": 32,
          "return_type": "function",
          "name": "getFilter"
        },
        {
          "line": 33,
          "return_type": "return",
          "name": "loadFilters"
        },
        {
          "line": 36,
          "return_type": "function",
          "name": "setFilter"
        },
        {
          "line": 48,
          "return_type": "function",
          "name": "initialize"
        },
        {
          "line": 61,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 78,
          "return_type": "function",
          "name": "onMiniWindowOpen"
        },
        {
          "line": 84,
          "return_type": "function",
          "name": "onMiniWindowClose"
        },
        {
          "line": 90,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 104,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 124,
          "return_type": "function",
          "name": "getTrackedItems"
        },
        {
          "line": 126,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 134,
          "return_type": "function",
          "name": "setDuration"
        },
        {
          "line": 157,
          "return_type": "function",
          "name": "addTrackedItem"
        },
        {
          "line": 163,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 177,
          "return_type": "function",
          "name": "onUpdateImbuementTracker"
        },
        {
          "line": 179,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 182,
          "return_type": "not",
          "name": "getFilter"
        },
        {
          "line": 184,
          "return_type": "not",
          "name": "getFilter"
        },
        {
          "line": 186,
          "return_type": "not",
          "name": "getFilter"
        },
        {
          "line": 188,
          "return_type": "not",
          "name": "getFilter"
        },
        {
          "line": 195,
          "return_type": "function",
          "name": "onGameStart"
        },
        {
          "line": 204,
          "return_type": "function",
          "name": "onGameEnd"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_imbuing\\imbuing.lua",
      "total_lines": 349,
      "code_lines": 322,
      "comment_lines": 0,
      "empty_lines": 27,
      "functions": [
        {
          "line": 17,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 43,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 55,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 59,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 60,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 87,
          "return_type": "protection",
          "name": "and"
        },
        {
          "line": 92,
          "return_type": "protection",
          "name": "and"
        },
        {
          "line": 95,
          "return_type": "protection",
          "name": "and"
        },
        {
          "line": 100,
          "return_type": "protection",
          "name": "and"
        },
        {
          "line": 120,
          "return_type": "function",
          "name": "setProtection"
        },
        {
          "line": 141,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 152,
          "return_type": "function",
          "name": "resetSlots"
        },
        {
          "line": 164,
          "return_type": "function",
          "name": "selectSlot"
        },
        {
          "line": 292,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 306,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 333,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 338,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 344,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 346,
          "return_type": "return",
          "name": "hide"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_interface\\gameinterface.lua",
      "total_lines": 1466,
      "code_lines": 1309,
      "comment_lines": 0,
      "empty_lines": 157,
      "functions": [
        {
          "line": 37,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 117,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 142,
          "return_type": "function",
          "name": "bindKeys"
        },
        {
          "line": 186,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 211,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 224,
          "return_type": "function",
          "name": "onGameStart"
        },
        {
          "line": 242,
          "return_type": "function",
          "name": "onGameEnd"
        },
        {
          "line": 246,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 279,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 303,
          "return_type": "function",
          "name": "save"
        },
        {
          "line": 309,
          "return_type": "function",
          "name": "load"
        },
        {
          "line": 318,
          "return_type": "function",
          "name": "onLoginAdvice"
        },
        {
          "line": 322,
          "return_type": "function",
          "name": "forceExit"
        },
        {
          "line": 328,
          "return_type": "function",
          "name": "tryExit"
        },
        {
          "line": 368,
          "return_type": "function",
          "name": "tryLogout"
        },
        {
          "line": 369,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 427,
          "return_type": "function",
          "name": "updateStretchShrink"
        },
        {
          "line": 439,
          "return_type": "function",
          "name": "onMouseGrabberRelease"
        },
        {
          "line": 460,
          "return_type": "function",
          "name": "onUseWith"
        },
        {
          "line": 480,
          "return_type": "function",
          "name": "onTradeWith"
        },
        {
          "line": 494,
          "return_type": "function",
          "name": "startUseWith"
        },
        {
          "line": 511,
          "return_type": "function",
          "name": "startTradeWith"
        },
        {
          "line": 528,
          "return_type": "function",
          "name": "isMenuHookCategoryEmpty"
        },
        {
          "line": 530,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 539,
          "return_type": "function",
          "name": "addMenuHook"
        },
        {
          "line": 550,
          "return_type": "function",
          "name": "removeMenuHook"
        },
        {
          "line": 558,
          "return_type": "function",
          "name": "createThingMenu"
        },
        {
          "line": 811,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 812,
          "return_type": "not",
          "name": "isMenuHookCategoryEmpty"
        },
        {
          "line": 814,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 852,
          "return_type": "function",
          "name": "processMouseAction"
        },
        {
          "line": 987,
          "return_type": "lookThing",
          "name": "and"
        },
        {
          "line": 1021,
          "return_type": "function",
          "name": "moveStackableItem"
        },
        {
          "line": 1118,
          "return_type": "function",
          "name": "onSelectPanel"
        },
        {
          "line": 1120,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1129,
          "return_type": "function",
          "name": "getRootPanel"
        },
        {
          "line": 1133,
          "return_type": "function",
          "name": "getMapPanel"
        },
        {
          "line": 1137,
          "return_type": "function",
          "name": "getRightPanel"
        },
        {
          "line": 1141,
          "return_type": "function",
          "name": "getMainRightPanel"
        },
        {
          "line": 1145,
          "return_type": "function",
          "name": "getLeftPanel"
        },
        {
          "line": 1149,
          "return_type": "function",
          "name": "getRightExtraPanel"
        },
        {
          "line": 1153,
          "return_type": "function",
          "name": "getLeftExtraPanel"
        },
        {
          "line": 1157,
          "return_type": "function",
          "name": "getSelectedPanel"
        },
        {
          "line": 1161,
          "return_type": "function",
          "name": "getBottomPanel"
        },
        {
          "line": 1165,
          "return_type": "function",
          "name": "getShowTopMenuButton"
        },
        {
          "line": 1169,
          "return_type": "function",
          "name": "getGameTopStatsBar"
        },
        {
          "line": 1173,
          "return_type": "function",
          "name": "getGameBottomStatsBar"
        },
        {
          "line": 1177,
          "return_type": "function",
          "name": "getGameMapPanel"
        },
        {
          "line": 1181,
          "return_type": "function",
          "name": "findContentPanelAvailable"
        },
        {
          "line": 1186,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1195,
          "return_type": "function",
          "name": "nextViewMode"
        },
        {
          "line": 1199,
          "return_type": "function",
          "name": "setupViewMode"
        },
        {
          "line": 1299,
          "return_type": "function",
          "name": "limitZoom"
        },
        {
          "line": 1303,
          "return_type": "function",
          "name": "updateStatsBar"
        },
        {
          "line": 1308,
          "return_type": "function",
          "name": "onIncreaseLeftPanels"
        },
        {
          "line": 1322,
          "return_type": "function",
          "name": "movePanel"
        },
        {
          "line": 1323,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1340,
          "return_type": "function",
          "name": "onDecreaseLeftPanels"
        },
        {
          "line": 1361,
          "return_type": "function",
          "name": "onIncreaseRightPanels"
        },
        {
          "line": 1367,
          "return_type": "function",
          "name": "onDecreaseRightPanels"
        },
        {
          "line": 1374,
          "return_type": "function",
          "name": "setupOptionsMainButton"
        },
        {
          "line": 1384,
          "return_type": "function",
          "name": "checkAndOpenLeftPanel"
        },
        {
          "line": 1392,
          "return_type": "function",
          "name": "testExtendedView"
        },
        {
          "line": 1397,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1429,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1452,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_inventory\\inventory.lua",
      "total_lines": 532,
      "code_lines": 474,
      "comment_lines": 0,
      "empty_lines": 58,
      "functions": [
        {
          "line": 9,
          "return_type": "function",
          "name": "getInventoryUi"
        },
        {
          "line": 30,
          "return_type": "function",
          "name": "formatDuration"
        },
        {
          "line": 34,
          "return_type": "function",
          "name": "stopEvent"
        },
        {
          "line": 41,
          "return_type": "function",
          "name": "updateSlotsDuration"
        },
        {
          "line": 43,
          "return_type": "or",
          "name": "next"
        },
        {
          "line": 52,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 68,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 90,
          "return_type": "function",
          "name": "walkEvent"
        },
        {
          "line": 98,
          "return_type": "function",
          "name": "combatEvent"
        },
        {
          "line": 114,
          "return_type": "function",
          "name": "inventoryEvent"
        },
        {
          "line": 157,
          "return_type": "function",
          "name": "onSoulChange"
        },
        {
          "line": 175,
          "return_type": "function",
          "name": "onFreeCapacityChange"
        },
        {
          "line": 199,
          "return_type": "function",
          "name": "getIconsPanelOn"
        },
        {
          "line": 203,
          "return_type": "function",
          "name": "getIconsPanelOff"
        },
        {
          "line": 207,
          "return_type": "function",
          "name": "refreshInventory_panel"
        },
        {
          "line": 226,
          "return_type": "function",
          "name": "refreshInventorySizes"
        },
        {
          "line": 242,
          "return_type": "function",
          "name": "onSetChaseMode"
        },
        {
          "line": 330,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 332,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 379,
          "return_type": "function",
          "name": "onSetSafeFight"
        },
        {
          "line": 393,
          "return_type": "function",
          "name": "selectPosture"
        },
        {
          "line": 410,
          "return_type": "function",
          "name": "selectCombat"
        },
        {
          "line": 436,
          "return_type": "function",
          "name": "expertMode"
        },
        {
          "line": 445,
          "return_type": "function",
          "name": "onSetPVPMode"
        },
        {
          "line": 465,
          "return_type": "function",
          "name": "changeInventorySize"
        },
        {
          "line": 477,
          "return_type": "function",
          "name": "getSlot5"
        },
        {
          "line": 481,
          "return_type": "function",
          "name": "reloadInventory"
        },
        {
          "line": 486,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 498,
          "return_type": "function",
          "name": "extendedView"
        },
        {
          "line": 524,
          "return_type": "function",
          "name": "toggle"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_mainpanel\\mainpanel.lua",
      "total_lines": 619,
      "code_lines": 560,
      "comment_lines": 0,
      "empty_lines": 59,
      "functions": [
        {
          "line": 32,
          "return_type": "function",
          "name": "calculatePanelHeight"
        },
        {
          "line": 34,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 44,
          "return_type": "function",
          "name": "reloadMainPanelSizes"
        },
        {
          "line": 51,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 92,
          "return_type": "function",
          "name": "refreshOptionsSizes"
        },
        {
          "line": 103,
          "return_type": "function",
          "name": "createButton_large"
        },
        {
          "line": 131,
          "return_type": "function",
          "name": "createButton"
        },
        {
          "line": 162,
          "return_type": "and",
          "name": "type"
        },
        {
          "line": 183,
          "return_type": "function",
          "name": "toggleStore"
        },
        {
          "line": 221,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 244,
          "return_type": "function",
          "name": "changeOptionsSize"
        },
        {
          "line": 250,
          "return_type": "function",
          "name": "addToggleButton"
        },
        {
          "line": 251,
          "return_type": "return",
          "name": "createButton"
        },
        {
          "line": 254,
          "return_type": "function",
          "name": "addSpecialToggleButton"
        },
        {
          "line": 255,
          "return_type": "return",
          "name": "createButton"
        },
        {
          "line": 258,
          "return_type": "function",
          "name": "addStoreButton"
        },
        {
          "line": 259,
          "return_type": "return",
          "name": "createButton_large"
        },
        {
          "line": 262,
          "return_type": "function",
          "name": "getButton"
        },
        {
          "line": 266,
          "return_type": "function",
          "name": "toggleExtendedViewButtons"
        },
        {
          "line": 272,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 279,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 289,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 308,
          "return_type": "function",
          "name": "saveButtonConfig"
        },
        {
          "line": 313,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 314,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 321,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 327,
          "return_type": "function",
          "name": "loadButtonConfig"
        },
        {
          "line": 335,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 339,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 350,
          "return_type": "function",
          "name": "updateList"
        },
        {
          "line": 357,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 361,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 376,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 378,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 391,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 410,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 419,
          "return_type": "function",
          "name": "updateDisplayedButtonsList"
        },
        {
          "line": 423,
          "return_type": "function",
          "name": "updateAvailableButtonsList"
        },
        {
          "line": 427,
          "return_type": "function",
          "name": "moveToAvailable"
        },
        {
          "line": 450,
          "return_type": "function",
          "name": "moveToDisplayed"
        },
        {
          "line": 475,
          "return_type": "function",
          "name": "moveButtonUp"
        },
        {
          "line": 502,
          "return_type": "function",
          "name": "moveButtonDown"
        },
        {
          "line": 530,
          "return_type": "function",
          "name": "reorderButtons"
        },
        {
          "line": 536,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 542,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 551,
          "return_type": "function",
          "name": "reset"
        },
        {
          "line": 557,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 575,
          "return_type": "function",
          "name": "initControlButtons"
        },
        {
          "line": 580,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 600,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 606,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 608,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_market\\market.lua",
      "total_lines": 1553,
      "code_lines": 1331,
      "comment_lines": 3,
      "empty_lines": 219,
      "functions": [
        {
          "line": 17,
          "return_type": "purchase",
          "name": "information"
        },
        {
          "line": 89,
          "return_type": "function",
          "name": "isItemValid"
        },
        {
          "line": 122,
          "return_type": "10",
          "name": "and"
        },
        {
          "line": 137,
          "return_type": "function",
          "name": "clearItems"
        },
        {
          "line": 142,
          "return_type": "function",
          "name": "clearOffers"
        },
        {
          "line": 149,
          "return_type": "function",
          "name": "clearMyOffers"
        },
        {
          "line": 156,
          "return_type": "function",
          "name": "clearMyHistory"
        },
        {
          "line": 162,
          "return_type": "function",
          "name": "clearFilters"
        },
        {
          "line": 163,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 170,
          "return_type": "function",
          "name": "clearFee"
        },
        {
          "line": 175,
          "return_type": "function",
          "name": "refreshTypeList"
        },
        {
          "line": 186,
          "return_type": "function",
          "name": "addOffer"
        },
        {
          "line": 333,
          "return_type": "function",
          "name": "mergeOffer"
        },
        {
          "line": 379,
          "return_type": "function",
          "name": "updateOffers"
        },
        {
          "line": 402,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 405,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 412,
          "return_type": "function",
          "name": "updateDetails"
        },
        {
          "line": 421,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 450,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 513,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 562,
          "return_type": "function",
          "name": "updateSelectedItem"
        },
        {
          "line": 579,
          "return_type": "function",
          "name": "updateBalance"
        },
        {
          "line": 594,
          "return_type": "function",
          "name": "updateFee"
        },
        {
          "line": 605,
          "return_type": "function",
          "name": "destroyAmountWindow"
        },
        {
          "line": 612,
          "return_type": "function",
          "name": "cancelMyOffer"
        },
        {
          "line": 618,
          "return_type": "function",
          "name": "openAmountWindow"
        },
        {
          "line": 683,
          "return_type": "function",
          "name": "onSelectSellOffer"
        },
        {
          "line": 685,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 712,
          "return_type": "function",
          "name": "onSelectBuyOffer"
        },
        {
          "line": 714,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 726,
          "return_type": "function",
          "name": "onSelectMyBuyOffer"
        },
        {
          "line": 727,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 735,
          "return_type": "function",
          "name": "onSelectMySellOffer"
        },
        {
          "line": 736,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 744,
          "return_type": "function",
          "name": "onChangeCategory"
        },
        {
          "line": 759,
          "return_type": "function",
          "name": "onChangeSubCategory"
        },
        {
          "line": 765,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 773,
          "return_type": "function",
          "name": "onChangeSlotFilter"
        },
        {
          "line": 777,
          "return_type": "function",
          "name": "onChangeOfferType"
        },
        {
          "line": 789,
          "return_type": "function",
          "name": "onTotalPriceChange"
        },
        {
          "line": 800,
          "return_type": "function",
          "name": "onPiecePriceChange"
        },
        {
          "line": 811,
          "return_type": "function",
          "name": "onAmountChange"
        },
        {
          "line": 822,
          "return_type": "function",
          "name": "onMarketMessage"
        },
        {
          "line": 826,
          "return_type": "function",
          "name": "initMarketItems"
        },
        {
          "line": 865,
          "return_type": "function",
          "name": "initInterface"
        },
        {
          "line": 1016,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1087,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 1118,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 1342,
          "return_type": "if",
          "name": "isItemValid"
        },
        {
          "line": 1357,
          "return_type": "if",
          "name": "isItemValid"
        },
        {
          "line": 1480,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 1486,
          "return_type": "and",
          "name": "tonumber"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_minimap\\minimap.lua",
      "total_lines": 284,
      "code_lines": 240,
      "comment_lines": 0,
      "empty_lines": 44,
      "functions": [
        {
          "line": 13,
          "return_type": "function",
          "name": "refreshVirtualFloors"
        },
        {
          "line": 18,
          "return_type": "function",
          "name": "onPositionChange"
        },
        {
          "line": 30,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 46,
          "return_type": "function",
          "name": "onChangeWorldTime"
        },
        {
          "line": 51,
          "return_type": "tfs",
          "name": "lua"
        },
        {
          "line": 154,
          "return_type": "function",
          "name": "zoomIn"
        },
        {
          "line": 158,
          "return_type": "function",
          "name": "zoomOut"
        },
        {
          "line": 162,
          "return_type": "function",
          "name": "fullscreen"
        },
        {
          "line": 197,
          "return_type": "function",
          "name": "upLayer"
        },
        {
          "line": 207,
          "return_type": "function",
          "name": "downLayer"
        },
        {
          "line": 217,
          "return_type": "function",
          "name": "onClickRoseButton"
        },
        {
          "line": 237,
          "return_type": "function",
          "name": "resetMap"
        },
        {
          "line": 246,
          "return_type": "function",
          "name": "getMiniMapUi"
        },
        {
          "line": 250,
          "return_type": "function",
          "name": "extendedView"
        },
        {
          "line": 276,
          "return_type": "function",
          "name": "toggle"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_outfit\\outfit.lua",
      "total_lines": 1784,
      "code_lines": 1517,
      "comment_lines": 0,
      "empty_lines": 267,
      "functions": [
        {
          "line": 52,
          "return_type": "function",
          "name": "checkPresetsValidity"
        },
        {
          "line": 53,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 54,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 61,
          "return_type": "function",
          "name": "attachEffectIfValid"
        },
        {
          "line": 63,
          "return_type": "if",
          "name": "checkPresetsValidity"
        },
        {
          "line": 70,
          "return_type": "function",
          "name": "attachOrDetachEffect"
        },
        {
          "line": 72,
          "return_type": "if",
          "name": "checkPresetsValidity"
        },
        {
          "line": 88,
          "return_type": "function",
          "name": "showSelectionList"
        },
        {
          "line": 107,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 147,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 154,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 162,
          "return_type": "function",
          "name": "onMovementChange"
        },
        {
          "line": 180,
          "return_type": "function",
          "name": "onShowFloorChange"
        },
        {
          "line": 233,
          "return_type": "function",
          "name": "onShowMountChange"
        },
        {
          "line": 238,
          "return_type": "function",
          "name": "onShowFamiliarChange"
        },
        {
          "line": 243,
          "return_type": "function",
          "name": "onShowOutfitChange"
        },
        {
          "line": 255,
          "return_type": "function",
          "name": "onShowAuraChange"
        },
        {
          "line": 260,
          "return_type": "function",
          "name": "onShowWingsChange"
        },
        {
          "line": 265,
          "return_type": "function",
          "name": "onShowShaderChange"
        },
        {
          "line": 270,
          "return_type": "function",
          "name": "onShowTitleChange"
        },
        {
          "line": 275,
          "return_type": "function",
          "name": "onShowBarsChange"
        },
        {
          "line": 280,
          "return_type": "function",
          "name": "onShowEffectsChange"
        },
        {
          "line": 298,
          "return_type": "function",
          "name": "create"
        },
        {
          "line": 335,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 351,
          "return_type": "funtion",
          "name": "loadSettings"
        },
        {
          "line": 405,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 499,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 512,
          "return_type": "function",
          "name": "destroy"
        },
        {
          "line": 563,
          "return_type": "function",
          "name": "configureAddons"
        },
        {
          "line": 587,
          "return_type": "function",
          "name": "newPreset"
        },
        {
          "line": 624,
          "return_type": "function",
          "name": "deletePreset"
        },
        {
          "line": 641,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 656,
          "return_type": "function",
          "name": "savePreset"
        },
        {
          "line": 711,
          "return_type": "function",
          "name": "renamePreset"
        },
        {
          "line": 733,
          "return_type": "function",
          "name": "saveRename"
        },
        {
          "line": 751,
          "return_type": "function",
          "name": "onAppearanceChange"
        },
        {
          "line": 777,
          "return_type": "function",
          "name": "showPresets"
        },
        {
          "line": 784,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 838,
          "return_type": "function",
          "name": "showOutfits"
        },
        {
          "line": 847,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 900,
          "return_type": "function",
          "name": "showMounts"
        },
        {
          "line": 916,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 967,
          "return_type": "function",
          "name": "showFamiliars"
        },
        {
          "line": 981,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1014,
          "return_type": "function",
          "name": "showShaders"
        },
        {
          "line": 1039,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1073,
          "return_type": "function",
          "name": "showHealthBars"
        },
        {
          "line": 1093,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1130,
          "return_type": "function",
          "name": "showTitle"
        },
        {
          "line": 1150,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1178,
          "return_type": "function",
          "name": "onPresetSelect"
        },
        {
          "line": 1186,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1241,
          "return_type": "function",
          "name": "onOutfitSelect"
        },
        {
          "line": 1259,
          "return_type": "function",
          "name": "onMountSelect"
        },
        {
          "line": 1277,
          "return_type": "function",
          "name": "onFamiliarSelect"
        },
        {
          "line": 1305,
          "return_type": "function",
          "name": "onAuraSelect"
        },
        {
          "line": 1316,
          "return_type": "if",
          "name": "checkPresetsValidity"
        },
        {
          "line": 1331,
          "return_type": "function",
          "name": "onWingsSelect"
        },
        {
          "line": 1343,
          "return_type": "if",
          "name": "checkPresetsValidity"
        },
        {
          "line": 1359,
          "return_type": "function",
          "name": "onShaderSelect"
        },
        {
          "line": 1380,
          "return_type": "function",
          "name": "onHealthBarSelect"
        },
        {
          "line": 1398,
          "return_type": "function",
          "name": "onEffectBarSelect"
        },
        {
          "line": 1410,
          "return_type": "if",
          "name": "checkPresetsValidity"
        },
        {
          "line": 1425,
          "return_type": "function",
          "name": "onTitleSelect"
        },
        {
          "line": 1447,
          "return_type": "function",
          "name": "updateAppearanceText"
        },
        {
          "line": 1453,
          "return_type": "function",
          "name": "updateAppearanceTexts"
        },
        {
          "line": 1454,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1458,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1467,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1478,
          "return_type": "function",
          "name": "deselectPreset"
        },
        {
          "line": 1482,
          "return_type": "function",
          "name": "onAddonChange"
        },
        {
          "line": 1501,
          "return_type": "function",
          "name": "onColorModeChange"
        },
        {
          "line": 1514,
          "return_type": "function",
          "name": "onColorCheckChange"
        },
        {
          "line": 1534,
          "return_type": "function",
          "name": "updatePreview"
        },
        {
          "line": 1634,
          "return_type": "function",
          "name": "rotate"
        },
        {
          "line": 1652,
          "return_type": "function",
          "name": "onFilterOnlyMine"
        },
        {
          "line": 1655,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1656,
          "return_type": "checked",
          "name": "and"
        },
        {
          "line": 1667,
          "return_type": "function",
          "name": "onFilterSearch"
        },
        {
          "line": 1672,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1681,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1688,
          "return_type": "function",
          "name": "saveSettings"
        },
        {
          "line": 1721,
          "return_type": "function",
          "name": "loadSettings"
        },
        {
          "line": 1745,
          "return_type": "function",
          "name": "loadDefaultSettings"
        },
        {
          "line": 1764,
          "return_type": "function",
          "name": "accept"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_playerdeath\\playerdeath.lua",
      "total_lines": 105,
      "code_lines": 91,
      "comment_lines": 0,
      "empty_lines": 14,
      "functions": [
        {
          "line": 34,
          "return_type": "function",
          "name": "destroyWindows"
        },
        {
          "line": 41,
          "return_type": "function",
          "name": "display"
        },
        {
          "line": 47,
          "return_type": "function",
          "name": "displayDeadMessage"
        },
        {
          "line": 56,
          "return_type": "function",
          "name": "openWindow"
        },
        {
          "line": 96,
          "return_type": "function",
          "name": "scheduleReconnect"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_playertrade\\playertrade.lua",
      "total_lines": 82,
      "code_lines": 69,
      "comment_lines": 0,
      "empty_lines": 13,
      "functions": [
        {
          "line": 3,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 14,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 27,
          "return_type": "function",
          "name": "createTrade"
        },
        {
          "line": 36,
          "return_type": "function",
          "name": "fillTrade"
        },
        {
          "line": 57,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 69,
          "return_type": "function",
          "name": "onGameOwnTrade"
        },
        {
          "line": 73,
          "return_type": "function",
          "name": "onGameCounterTrade"
        },
        {
          "line": 77,
          "return_type": "function",
          "name": "onGameCloseTrade"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_prey\\prey.lua",
      "total_lines": 633,
      "code_lines": 592,
      "comment_lines": 0,
      "empty_lines": 41,
      "functions": [
        {
          "line": 28,
          "return_type": "function",
          "name": "bonusDescription"
        },
        {
          "line": 30,
          "return_type": "Damage",
          "name": "bonus"
        },
        {
          "line": 32,
          "return_type": "reduction",
          "name": "bonus"
        },
        {
          "line": 34,
          "return_type": "XP",
          "name": "bonus"
        },
        {
          "line": 36,
          "return_type": "Loot",
          "name": "bonus"
        },
        {
          "line": 43,
          "return_type": "function",
          "name": "timeleftTranslation"
        },
        {
          "line": 46,
          "return_type": "return",
          "name": "tr"
        },
        {
          "line": 48,
          "return_type": "return",
          "name": "tr"
        },
        {
          "line": 55,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 89,
          "return_type": "blue",
          "name": "button"
        },
        {
          "line": 97,
          "return_type": "function",
          "name": "onHover"
        },
        {
          "line": 98,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 100,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 116,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 148,
          "return_type": "function",
          "name": "setUnsupportedSettings"
        },
        {
          "line": 150,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 152,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 163,
          "return_type": "function",
          "name": "check"
        },
        {
          "line": 179,
          "return_type": "function",
          "name": "toggleTracker"
        },
        {
          "line": 195,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 203,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 205,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 213,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 215,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 220,
          "return_type": "function",
          "name": "onPreyFreeRerolls"
        },
        {
          "line": 227,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 238,
          "return_type": "function",
          "name": "onPreyTimeLeft"
        },
        {
          "line": 251,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 268,
          "return_type": "function",
          "name": "onPreyRerollPrice"
        },
        {
          "line": 271,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 273,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 286,
          "return_type": "function",
          "name": "setTimeUntilFreeReroll"
        },
        {
          "line": 293,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 306,
          "return_type": "function",
          "name": "onPreyLocked"
        },
        {
          "line": 325,
          "return_type": "function",
          "name": "onPreyInactive"
        },
        {
          "line": 334,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 358,
          "return_type": "function",
          "name": "setBonusGradeStars"
        },
        {
          "line": 378,
          "return_type": "function",
          "name": "getBigIconPath"
        },
        {
          "line": 391,
          "return_type": "function",
          "name": "getSmallIconPath"
        },
        {
          "line": 404,
          "return_type": "function",
          "name": "getBonusDescription"
        },
        {
          "line": 416,
          "return_type": "function",
          "name": "getTooltipBonusDescription"
        },
        {
          "line": 428,
          "return_type": "function",
          "name": "capitalFormatStr"
        },
        {
          "line": 431,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 437,
          "return_type": "function",
          "name": "onItemBoxChecked"
        },
        {
          "line": 439,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 442,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 469,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 505,
          "return_type": "function",
          "name": "onPreySelection"
        },
        {
          "line": 514,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 537,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 544,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 549,
          "return_type": "return",
          "name": "showMessage"
        },
        {
          "line": 563,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 586,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 593,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 598,
          "return_type": "return",
          "name": "showMessage"
        },
        {
          "line": 602,
          "return_type": "function",
          "name": "onPreyListSelection"
        },
        {
          "line": 605,
          "return_type": "function",
          "name": "onPreyWildcardSelection"
        },
        {
          "line": 624,
          "return_type": "function",
          "name": "showMessage"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_questlog\\game_questlog.lua",
      "total_lines": 690,
      "code_lines": 628,
      "comment_lines": 0,
      "empty_lines": 62,
      "functions": [
        {
          "line": 58,
          "return_type": "function",
          "name": "isIdInTracker"
        },
        {
          "line": 65,
          "return_type": "function",
          "name": "addUniqueIdQuest"
        },
        {
          "line": 70,
          "return_type": "not",
          "name": "isIdInTracker"
        },
        {
          "line": 75,
          "return_type": "function",
          "name": "removeNumber"
        },
        {
          "line": 83,
          "return_type": "function",
          "name": "load"
        },
        {
          "line": 97,
          "return_type": "function",
          "name": "save"
        },
        {
          "line": 143,
          "return_type": "function",
          "name": "sendQuestTracker"
        },
        {
          "line": 145,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 151,
          "return_type": "function",
          "name": "destroyWindows"
        },
        {
          "line": 152,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 153,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 166,
          "return_type": "function",
          "name": "resetItemCategorySelection"
        },
        {
          "line": 167,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 179,
          "return_type": "function",
          "name": "createQuestItem"
        },
        {
          "line": 202,
          "return_type": "function",
          "name": "updateQuestCounter"
        },
        {
          "line": 207,
          "return_type": "function",
          "name": "recolorVisibleItems"
        },
        {
          "line": 211,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 220,
          "return_type": "function",
          "name": "sortQuestList"
        },
        {
          "line": 224,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 237,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 242,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 252,
          "return_type": "function",
          "name": "setupQuestItemClickHandler"
        },
        {
          "line": 334,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 341,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 351,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 356,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 361,
          "return_type": "function",
          "name": "toggleTracker"
        },
        {
          "line": 379,
          "return_type": "function",
          "name": "onOpenTracker"
        },
        {
          "line": 383,
          "return_type": "function",
          "name": "onCloseTracker"
        },
        {
          "line": 387,
          "return_type": "function",
          "name": "showQuestTracker"
        },
        {
          "line": 432,
          "return_type": "function",
          "name": "onQuestLog"
        },
        {
          "line": 443,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 457,
          "return_type": "function",
          "name": "onQuestLine"
        },
        {
          "line": 460,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 469,
          "return_type": "function",
          "name": "onQuestTracker"
        },
        {
          "line": 473,
          "return_type": "or",
          "name": "type"
        },
        {
          "line": 478,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 486,
          "return_type": "function",
          "name": "onUpdateQuestTracker"
        },
        {
          "line": 497,
          "return_type": "function",
          "name": "filterQuestList"
        },
        {
          "line": 502,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 588,
          "return_type": "function",
          "name": "onSearchTextChange"
        },
        {
          "line": 596,
          "return_type": "function",
          "name": "onQuestLogMousePress"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_quickloot\\quickloot.lua",
      "total_lines": 447,
      "code_lines": 365,
      "comment_lines": 0,
      "empty_lines": 82,
      "functions": [
        {
          "line": 3,
          "return_type": "function",
          "name": "getFilter"
        },
        {
          "line": 260,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 268,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 288,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 390,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_rewardwall\\game_rewardwall.lua",
      "total_lines": 895,
      "code_lines": 787,
      "comment_lines": 0,
      "empty_lines": 108,
      "functions": [
        {
          "line": 107,
          "return_type": "function",
          "name": "destroyWindows"
        },
        {
          "line": 108,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 109,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 122,
          "return_type": "function",
          "name": "premiumStatusWindwos"
        },
        {
          "line": 130,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 138,
          "return_type": "function",
          "name": "convert_timestamp"
        },
        {
          "line": 142,
          "return_type": "function",
          "name": "getBonusStrings"
        },
        {
          "line": 144,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 150,
          "return_type": "function",
          "name": "visibleHistory"
        },
        {
          "line": 151,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 163,
          "return_type": "function",
          "name": "updateDailyRewards"
        },
        {
          "line": 215,
          "return_type": "function",
          "name": "getDayStreakIcon"
        },
        {
          "line": 233,
          "return_type": "function",
          "name": "getBonusDescription"
        },
        {
          "line": 239,
          "return_type": "isPremium",
          "name": "and"
        },
        {
          "line": 242,
          "return_type": "function",
          "name": "checkRewards"
        },
        {
          "line": 251,
          "return_type": "and",
          "name": "next"
        },
        {
          "line": 279,
          "return_type": "function",
          "name": "onDailyRewardCollectionState"
        },
        {
          "line": 293,
          "return_type": "function",
          "name": "onRestingAreaState"
        },
        {
          "line": 310,
          "return_type": "function",
          "name": "onDailyReward"
        },
        {
          "line": 315,
          "return_type": "function",
          "name": "onServerError"
        },
        {
          "line": 332,
          "return_type": "function",
          "name": "connectOnServerError"
        },
        {
          "line": 338,
          "return_type": "function",
          "name": "disconnectOnServerError"
        },
        {
          "line": 365,
          "return_type": "function",
          "name": "onRewardHistory"
        },
        {
          "line": 377,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 391,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 403,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 413,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 419,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 425,
          "return_type": "function",
          "name": "fixCssIncompatibility"
        },
        {
          "line": 521,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 534,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 582,
          "return_type": "isPremium",
          "name": "and"
        },
        {
          "line": 595,
          "return_type": "one",
          "name": "minute"
        },
        {
          "line": 617,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 673,
          "return_type": "function",
          "name": "onClickBtnOk"
        },
        {
          "line": 680,
          "return_type": "function",
          "name": "destroyPickReward"
        },
        {
          "line": 690,
          "return_type": "function",
          "name": "onTextChangeChangeNumber"
        },
        {
          "line": 699,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 712,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 723,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 740,
          "return_type": "function",
          "name": "displayGeneralBox3"
        },
        {
          "line": 860,
          "return_type": "function",
          "name": "managerMessageBoxWindow"
        },
        {
          "line": 873,
          "return_type": "or",
          "name": "function"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_ruleviolation\\ruleviolation.lua",
      "total_lines": 159,
      "code_lines": 137,
      "comment_lines": 0,
      "empty_lines": 22,
      "functions": [
        {
          "line": 37,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 57,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 66,
          "return_type": "function",
          "name": "hasWindowAccess"
        },
        {
          "line": 70,
          "return_type": "function",
          "name": "loadReasons"
        },
        {
          "line": 75,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 83,
          "return_type": "not",
          "name": "hasWindowAccess"
        },
        {
          "line": 88,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 89,
          "return_type": "and",
          "name": "hasWindowAccess"
        },
        {
          "line": 105,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 110,
          "return_type": "function",
          "name": "onSelectReason"
        },
        {
          "line": 124,
          "return_type": "function",
          "name": "report"
        },
        {
          "line": 154,
          "return_type": "function",
          "name": "clearForm"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_shop\\game_shop.lua",
      "total_lines": 873,
      "code_lines": 745,
      "comment_lines": 0,
      "empty_lines": 128,
      "functions": [
        {
          "line": 28,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 43,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 56,
          "return_type": "function",
          "name": "onExtendedOpcode"
        },
        {
          "line": 89,
          "return_type": "function",
          "name": "create"
        },
        {
          "line": 103,
          "return_type": "function",
          "name": "destroy"
        },
        {
          "line": 128,
          "return_type": "function",
          "name": "onGameShopFetchBase"
        },
        {
          "line": 136,
          "return_type": "function",
          "name": "hideTransferWindow"
        },
        {
          "line": 142,
          "return_type": "function",
          "name": "show"
        },
        {
          "line": 154,
          "return_type": "function",
          "name": "hide"
        },
        {
          "line": 161,
          "return_type": "function",
          "name": "showHistory"
        },
        {
          "line": 167,
          "return_type": "function",
          "name": "hideHistory"
        },
        {
          "line": 176,
          "return_type": "function",
          "name": "updateHistory"
        },
        {
          "line": 194,
          "return_type": "function",
          "name": "onGameShopUpdateHistory"
        },
        {
          "line": 204,
          "return_type": "function",
          "name": "prevPage"
        },
        {
          "line": 218,
          "return_type": "function",
          "name": "nextPage"
        },
        {
          "line": 232,
          "return_type": "function",
          "name": "deselect"
        },
        {
          "line": 250,
          "return_type": "function",
          "name": "comma_value"
        },
        {
          "line": 255,
          "return_type": "function",
          "name": "buyPoints"
        },
        {
          "line": 259,
          "return_type": "function",
          "name": "onGameShopFetchOffers"
        },
        {
          "line": 266,
          "return_type": "function",
          "name": "addCategory"
        },
        {
          "line": 283,
          "return_type": "function",
          "name": "onGameShopUpdatePoints"
        },
        {
          "line": 316,
          "return_type": "function",
          "name": "select"
        },
        {
          "line": 355,
          "return_type": "function",
          "name": "selectOffer"
        },
        {
          "line": 370,
          "return_type": "function",
          "name": "showOffers"
        },
        {
          "line": 421,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 424,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 450,
          "return_type": "function",
          "name": "updateDescription"
        },
        {
          "line": 527,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 530,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 546,
          "return_type": "function",
          "name": "onGameShopFetchDescription"
        },
        {
          "line": 571,
          "return_type": "function",
          "name": "onOfferBuy"
        },
        {
          "line": 628,
          "return_type": "function",
          "name": "buyConfirmed"
        },
        {
          "line": 653,
          "return_type": "function",
          "name": "buyCanceled"
        },
        {
          "line": 659,
          "return_type": "function",
          "name": "changeName"
        },
        {
          "line": 669,
          "return_type": "function",
          "name": "confirmChangeName"
        },
        {
          "line": 694,
          "return_type": "function",
          "name": "cancelChangeName"
        },
        {
          "line": 699,
          "return_type": "function",
          "name": "onGameShopMsg"
        },
        {
          "line": 728,
          "return_type": "function",
          "name": "displayInfoBoxWithCallback"
        },
        {
          "line": 748,
          "return_type": "function",
          "name": "changeCoinsAmount"
        },
        {
          "line": 752,
          "return_type": "function",
          "name": "changeTaskPointsAmount"
        },
        {
          "line": 756,
          "return_type": "function",
          "name": "confirmGiftCoins"
        },
        {
          "line": 782,
          "return_type": "function",
          "name": "cancelGiftCoins"
        },
        {
          "line": 789,
          "return_type": "function",
          "name": "createTransferWindow"
        },
        {
          "line": 796,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 802,
          "return_type": "return",
          "name": "hide"
        },
        {
          "line": 808,
          "return_type": "function",
          "name": "toggleGiftCoins"
        },
        {
          "line": 818,
          "return_type": "function",
          "name": "onTypeSearch"
        },
        {
          "line": 822,
          "return_type": "function",
          "name": "eraseSearchResults"
        },
        {
          "line": 832,
          "return_type": "function",
          "name": "onSearch"
        },
        {
          "line": 853,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 855,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 866,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_skills\\skills.lua",
      "total_lines": 576,
      "code_lines": 499,
      "comment_lines": 0,
      "empty_lines": 77,
      "functions": [
        {
          "line": 5,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 54,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 86,
          "return_type": "function",
          "name": "expForLevel"
        },
        {
          "line": 90,
          "return_type": "function",
          "name": "expToAdvance"
        },
        {
          "line": 91,
          "return_type": "return",
          "name": "expForLevel"
        },
        {
          "line": 94,
          "return_type": "function",
          "name": "resetSkillColor"
        },
        {
          "line": 100,
          "return_type": "function",
          "name": "toggleSkill"
        },
        {
          "line": 105,
          "return_type": "function",
          "name": "setSkillBase"
        },
        {
          "line": 124,
          "return_type": "function",
          "name": "setSkillValue"
        },
        {
          "line": 139,
          "return_type": "function",
          "name": "setSkillColor"
        },
        {
          "line": 147,
          "return_type": "function",
          "name": "setSkillTooltip"
        },
        {
          "line": 155,
          "return_type": "function",
          "name": "setSkillPercent"
        },
        {
          "line": 173,
          "return_type": "function",
          "name": "checkAlert"
        },
        {
          "line": 181,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 195,
          "return_type": "elseif",
          "name": "type"
        },
        {
          "line": 219,
          "return_type": "function",
          "name": "update"
        },
        {
          "line": 235,
          "return_type": "function",
          "name": "online"
        },
        {
          "line": 243,
          "return_type": "function",
          "name": "refresh"
        },
        {
          "line": 294,
          "return_type": "function",
          "name": "updateHeight"
        },
        {
          "line": 306,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 325,
          "return_type": "function",
          "name": "offline"
        },
        {
          "line": 334,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 353,
          "return_type": "function",
          "name": "checkExpSpeed"
        },
        {
          "line": 373,
          "return_type": "function",
          "name": "onMiniWindowOpen"
        },
        {
          "line": 377,
          "return_type": "function",
          "name": "onMiniWindowClose"
        },
        {
          "line": 381,
          "return_type": "function",
          "name": "onSkillButtonClick"
        },
        {
          "line": 399,
          "return_type": "function",
          "name": "showPercentBar"
        },
        {
          "line": 413,
          "return_type": "function",
          "name": "onExperienceChange"
        },
        {
          "line": 417,
          "return_type": "function",
          "name": "onLevelChange"
        },
        {
          "line": 437,
          "return_type": "function",
          "name": "onHealthChange"
        },
        {
          "line": 442,
          "return_type": "function",
          "name": "onManaChange"
        },
        {
          "line": 447,
          "return_type": "function",
          "name": "onSoulChange"
        },
        {
          "line": 451,
          "return_type": "function",
          "name": "onFreeCapacityChange"
        },
        {
          "line": 456,
          "return_type": "function",
          "name": "onTotalCapacityChange"
        },
        {
          "line": 460,
          "return_type": "function",
          "name": "onStaminaChange"
        },
        {
          "line": 496,
          "return_type": "function",
          "name": "onOfflineTrainingChange"
        },
        {
          "line": 511,
          "return_type": "function",
          "name": "onRegenerationChange"
        },
        {
          "line": 542,
          "return_type": "function",
          "name": "onSpeedChange"
        },
        {
          "line": 548,
          "return_type": "function",
          "name": "onBaseSpeedChange"
        },
        {
          "line": 552,
          "return_type": "function",
          "name": "onMagicLevelChange"
        },
        {
          "line": 559,
          "return_type": "function",
          "name": "onBaseMagicLevelChange"
        },
        {
          "line": 563,
          "return_type": "function",
          "name": "onSkillChange"
        },
        {
          "line": 574,
          "return_type": "function",
          "name": "onBaseSkillChange"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_spelllist\\spelllist.lua",
      "total_lines": 418,
      "code_lines": 356,
      "comment_lines": 0,
      "empty_lines": 62,
      "functions": [
        {
          "line": 62,
          "return_type": "function",
          "name": "getSpelllistProfile"
        },
        {
          "line": 66,
          "return_type": "function",
          "name": "setSpelllistProfile"
        },
        {
          "line": 80,
          "return_type": "function",
          "name": "online"
        },
        {
          "line": 95,
          "return_type": "function",
          "name": "offline"
        },
        {
          "line": 99,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 184,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 201,
          "return_type": "function",
          "name": "initializeSpelllist"
        },
        {
          "line": 216,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 240,
          "return_type": "function",
          "name": "changeSpelllistProfile"
        },
        {
          "line": 255,
          "return_type": "function",
          "name": "updateSpelllist"
        },
        {
          "line": 267,
          "return_type": "FILTER_PREMIUM_ANY",
          "name": "or"
        },
        {
          "line": 276,
          "return_type": "function",
          "name": "updateSpellInformation"
        },
        {
          "line": 298,
          "return_type": "or",
          "name": "not"
        },
        {
          "line": 304,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 330,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 342,
          "return_type": "function",
          "name": "toggleFilter"
        },
        {
          "line": 390,
          "return_type": "function",
          "name": "resizeWindow"
        },
        {
          "line": 397,
          "return_type": "function",
          "name": "resetWindow"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_textmessage\\textmessage.lua",
      "total_lines": 214,
      "code_lines": 188,
      "comment_lines": 0,
      "empty_lines": 26,
      "functions": [
        {
          "line": 113,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 114,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 122,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 123,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 133,
          "return_type": "function",
          "name": "calculateVisibleTime"
        },
        {
          "line": 137,
          "return_type": "function",
          "name": "displayMessage"
        },
        {
          "line": 183,
          "return_type": "function",
          "name": "displayPrivateMessage"
        },
        {
          "line": 187,
          "return_type": "function",
          "name": "displayStatusMessage"
        },
        {
          "line": 191,
          "return_type": "function",
          "name": "displayFailureMessage"
        },
        {
          "line": 195,
          "return_type": "function",
          "name": "displayGameMessage"
        },
        {
          "line": 199,
          "return_type": "function",
          "name": "displayBroadcastMessage"
        },
        {
          "line": 203,
          "return_type": "function",
          "name": "clearMessages"
        },
        {
          "line": 204,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_unjustifiedpoints\\unjustifiedpoints.lua",
      "total_lines": 189,
      "code_lines": 158,
      "comment_lines": 0,
      "empty_lines": 31,
      "functions": [
        {
          "line": 17,
          "return_type": "function",
          "name": "init"
        },
        {
          "line": 50,
          "return_type": "function",
          "name": "terminate"
        },
        {
          "line": 68,
          "return_type": "function",
          "name": "onMiniWindowOpen"
        },
        {
          "line": 74,
          "return_type": "function",
          "name": "onMiniWindowClose"
        },
        {
          "line": 80,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 98,
          "return_type": "function",
          "name": "online"
        },
        {
          "line": 109,
          "return_type": "function",
          "name": "offline"
        },
        {
          "line": 115,
          "return_type": "function",
          "name": "refresh"
        },
        {
          "line": 125,
          "return_type": "function",
          "name": "onSkullChange"
        },
        {
          "line": 143,
          "return_type": "function",
          "name": "onOpenPvpSituationsChange"
        },
        {
          "line": 147,
          "return_type": "function",
          "name": "getColorByKills"
        },
        {
          "line": 157,
          "return_type": "function",
          "name": "onUnjustifiedPointsChange"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_viplist\\viplist.lua",
      "total_lines": 958,
      "code_lines": 850,
      "comment_lines": 0,
      "empty_lines": 108,
      "functions": [
        {
          "line": 45,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 60,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 106,
          "return_type": "function",
          "name": "loadVipInfo"
        },
        {
          "line": 115,
          "return_type": "function",
          "name": "saveVipInfo"
        },
        {
          "line": 126,
          "return_type": "function",
          "name": "refresh"
        },
        {
          "line": 128,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 135,
          "return_type": "function",
          "name": "clear"
        },
        {
          "line": 149,
          "return_type": "function",
          "name": "toggle"
        },
        {
          "line": 167,
          "return_type": "function",
          "name": "onMiniWindowOpen"
        },
        {
          "line": 171,
          "return_type": "function",
          "name": "onMiniWindowClose"
        },
        {
          "line": 175,
          "return_type": "function",
          "name": "createAddWindow"
        },
        {
          "line": 181,
          "return_type": "function",
          "name": "createEditWindow"
        },
        {
          "line": 201,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 251,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 290,
          "return_type": "function",
          "name": "destroyAddWindow"
        },
        {
          "line": 297,
          "return_type": "function",
          "name": "addVip"
        },
        {
          "line": 302,
          "return_type": "function",
          "name": "removeVip"
        },
        {
          "line": 309,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 340,
          "return_type": "function",
          "name": "hideOffline"
        },
        {
          "line": 345,
          "return_type": "function",
          "name": "isHiddingOffline"
        },
        {
          "line": 353,
          "return_type": "function",
          "name": "getSortedBy"
        },
        {
          "line": 368,
          "return_type": "function",
          "name": "sortBy"
        },
        {
          "line": 374,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 383,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 388,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 396,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 403,
          "return_type": "function",
          "name": "compareVips"
        },
        {
          "line": 404,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 428,
          "return_type": "function",
          "name": "onAddVip"
        },
        {
          "line": 516,
          "return_type": "and",
          "name": "getSortedBy"
        },
        {
          "line": 517,
          "return_type": "and",
          "name": "getSortedBy"
        },
        {
          "line": 523,
          "return_type": "and",
          "name": "getSortedBy"
        },
        {
          "line": 524,
          "return_type": "and",
          "name": "getSortedBy"
        },
        {
          "line": 546,
          "return_type": "function",
          "name": "onVipStateChange"
        },
        {
          "line": 563,
          "return_type": "and",
          "name": "tr"
        },
        {
          "line": 568,
          "return_type": "function",
          "name": "onVipListMousePress"
        },
        {
          "line": 599,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 605,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 611,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 634,
          "return_type": "function",
          "name": "onVipListLabelMousePress"
        },
        {
          "line": 742,
          "return_type": "function",
          "name": "onVipGroupChange"
        },
        {
          "line": 749,
          "return_type": "function",
          "name": "createAddGroupWindow"
        },
        {
          "line": 761,
          "return_type": "function",
          "name": "createEditGroupWindow"
        },
        {
          "line": 776,
          "return_type": "function",
          "name": "addGroup"
        },
        {
          "line": 784,
          "return_type": "function",
          "name": "editGroup"
        },
        {
          "line": 792,
          "return_type": "function",
          "name": "getPlayersByGroup"
        },
        {
          "line": 794,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 802,
          "return_type": "function",
          "name": "getPlayersNoGroup"
        },
        {
          "line": 804,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 812,
          "return_type": "function",
          "name": "showGroups"
        },
        {
          "line": 820,
          "return_type": "function",
          "name": "createPlayerWidget"
        },
        {
          "line": 845,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 861,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 888,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 907,
          "return_type": "function",
          "name": "setVipState"
        },
        {
          "line": 920,
          "return_type": "function",
          "name": "getPlayerGroups"
        },
        {
          "line": 922,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 931,
          "return_type": "function",
          "name": "checkPlayerGroup"
        },
        {
          "line": 933,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 936,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 947,
          "return_type": "function",
          "name": "searchPlayerbyId"
        },
        {
          "line": 948,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 949,
          "return_type": "if",
          "name": "tonumber"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\updater\\updater.lua",
      "total_lines": 240,
      "code_lines": 210,
      "comment_lines": 0,
      "empty_lines": 30,
      "functions": [
        {
          "line": 10,
          "return_type": "function",
          "name": "onLog"
        },
        {
          "line": 17,
          "return_type": "function",
          "name": "loadModules"
        },
        {
          "line": 25,
          "return_type": "function",
          "name": "downloadFiles"
        },
        {
          "line": 29,
          "return_type": "return",
          "name": "doneCallback"
        },
        {
          "line": 65,
          "return_type": "function",
          "name": "updateFiles"
        },
        {
          "line": 68,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 69,
          "return_type": "updater",
          "name": "api"
        },
        {
          "line": 72,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 76,
          "return_type": "or",
          "name": "type"
        },
        {
          "line": 91,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 98,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 109,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 127,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 128,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 146,
          "return_type": "Updating",
          "name": "client"
        },
        {
          "line": 151,
          "return_type": "binary",
          "name": "or"
        },
        {
          "line": 207,
          "return_type": "function",
          "name": "progressUpdater"
        },
        {
          "line": 212,
          "return_type": "updateData",
          "name": "and"
        },
        {
          "line": 213,
          "return_type": "return",
          "name": "updateFiles"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\modulelib\\htmlcssparser\\ElementNode.lua",
      "total_lines": 350,
      "code_lines": 317,
      "comment_lines": 0,
      "empty_lines": 33,
      "functions": [
        {
          "line": 7,
          "return_type": "if",
          "name": "getmetatable"
        },
        {
          "line": 8,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 10,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 14,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 21,
          "return_type": "return",
          "name": "setmetatable"
        },
        {
          "line": 36,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 44,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 45,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 52,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 53,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 60,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 69,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 76,
          "return_type": "If",
          "name": "any"
        },
        {
          "line": 132,
          "return_type": "return",
          "name": "setmetatable"
        },
        {
          "line": 163,
          "return_type": "function",
          "name": "insert"
        },
        {
          "line": 179,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 185,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 191,
          "return_type": "function",
          "name": "escape"
        },
        {
          "line": 196,
          "return_type": "function",
          "name": "find"
        },
        {
          "line": 197,
          "return_type": "or",
          "name": "type"
        },
        {
          "line": 212,
          "return_type": "function",
          "name": "match"
        },
        {
          "line": 228,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 271,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 283,
          "return_type": "a",
          "name": "possible"
        },
        {
          "line": 285,
          "return_type": "alfanumeric",
          "name": "chars"
        },
        {
          "line": 323,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 333,
          "return_type": "return",
          "name": "find"
        },
        {
          "line": 339,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [
        {
          "line": 155,
          "name": "attribute"
        },
        {
          "line": 157,
          "name": "in"
        }
      ],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\modulelib\\htmlcssparser\\htmlparser.lua",
      "total_lines": 270,
      "code_lines": 255,
      "comment_lines": 0,
      "empty_lines": 15,
      "functions": [
        {
          "line": 4,
          "return_type": "function",
          "name": "rine"
        },
        {
          "line": 7,
          "return_type": "function",
          "name": "rit"
        },
        {
          "line": 16,
          "return_type": "or",
          "name": "function"
        },
        {
          "line": 24,
          "return_type": "or",
          "name": "function"
        },
        {
          "line": 25,
          "return_type": "or",
          "name": "function"
        },
        {
          "line": 26,
          "return_type": "and",
          "name": "function"
        },
        {
          "line": 27,
          "return_type": "and",
          "name": "function"
        },
        {
          "line": 34,
          "return_type": "function",
          "name": "parse"
        },
        {
          "line": 36,
          "return_type": "or",
          "name": "rit"
        },
        {
          "line": 55,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 56,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 57,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 58,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 60,
          "return_type": "elseif",
          "name": "not"
        },
        {
          "line": 88,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 100,
          "return_type": "function",
          "name": "g"
        },
        {
          "line": 121,
          "return_type": "return",
          "name": "g"
        },
        {
          "line": 126,
          "return_type": "return",
          "name": "g"
        },
        {
          "line": 133,
          "return_type": "return",
          "name": "g"
        },
        {
          "line": 137,
          "return_type": "previous",
          "name": "gsub"
        },
        {
          "line": 143,
          "return_type": "return",
          "name": "g"
        },
        {
          "line": 155,
          "return_type": "loop",
          "name": "limit"
        },
        {
          "line": 180,
          "return_type": "loop",
          "name": "limit"
        },
        {
          "line": 211,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 234,
          "return_type": "for",
          "name": "now"
        },
        {
          "line": 239,
          "return_type": "loop",
          "name": "limit"
        },
        {
          "line": 264,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\modulelib\\htmlcssparser\\voidelements.lua",
      "total_lines": 19,
      "code_lines": 19,
      "comment_lines": 0,
      "empty_lines": 0,
      "functions": [],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\game_tasks\\serverSIDE\\taskSystem.lua",
      "total_lines": 317,
      "code_lines": 269,
      "comment_lines": 0,
      "empty_lines": 48,
      "functions": [
        {
          "line": 87,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 101,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 112,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 134,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 158,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 184,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 245,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 257,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 304,
          "return_type": "not",
          "name": "Monster"
        },
        {
          "line": 315,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_shop\\serverSIDE\\data\\scripts\\game_shop.lua",
      "total_lines": 1246,
      "code_lines": 1078,
      "comment_lines": 0,
      "empty_lines": 168,
      "functions": [
        {
          "line": 100,
          "return_type": "transport",
          "name": "system"
        },
        {
          "line": 103,
          "return_type": "function",
          "name": "gameShopInitialize"
        },
        {
          "line": 397,
          "return_type": "Retro",
          "name": "Noble"
        },
        {
          "line": 418,
          "return_type": "function",
          "name": "addCategory"
        },
        {
          "line": 429,
          "return_type": "function",
          "name": "addItem"
        },
        {
          "line": 435,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 454,
          "return_type": "function",
          "name": "addOutfit"
        },
        {
          "line": 472,
          "return_type": "function",
          "name": "gameShopPurchase"
        },
        {
          "line": 475,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 493,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 499,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 547,
          "return_type": "return",
          "name": "infoMsg"
        },
        {
          "line": 551,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 554,
          "return_type": "function",
          "name": "finalizePurchase"
        },
        {
          "line": 557,
          "return_type": "return",
          "name": "defaultPremiumCallback"
        },
        {
          "line": 559,
          "return_type": "return",
          "name": "defaultItemCallback"
        },
        {
          "line": 561,
          "return_type": "return",
          "name": "defaultBlessingCallback"
        },
        {
          "line": 563,
          "return_type": "return",
          "name": "defaultOutfitCallback"
        },
        {
          "line": 565,
          "return_type": "return",
          "name": "defaultMountCallback"
        },
        {
          "line": 567,
          "return_type": "return",
          "name": "defaultExtrasCallback"
        },
        {
          "line": 573,
          "return_type": "function",
          "name": "defaultPremiumCallback"
        },
        {
          "line": 578,
          "return_type": "function",
          "name": "defaultItemCallback"
        },
        {
          "line": 615,
          "return_type": "function",
          "name": "defaultBlessingCallback"
        },
        {
          "line": 635,
          "return_type": "function",
          "name": "defaultOutfitCallback"
        },
        {
          "line": 647,
          "return_type": "function",
          "name": "defaultMountCallback"
        },
        {
          "line": 659,
          "return_type": "function",
          "name": "defaultExtrasCallback"
        },
        {
          "line": 661,
          "return_type": "return",
          "name": "defaultChangeNameCallback"
        },
        {
          "line": 663,
          "return_type": "return",
          "name": "defaultChangeSexCallback"
        },
        {
          "line": 665,
          "return_type": "return",
          "name": "defaultTeleportCallback"
        },
        {
          "line": 667,
          "return_type": "return",
          "name": "defaultXPBoostCallback"
        },
        {
          "line": 669,
          "return_type": "return",
          "name": "defaultItemCallback"
        },
        {
          "line": 675,
          "return_type": "function",
          "name": "defaultChangeSexCallback"
        },
        {
          "line": 703,
          "return_type": "function",
          "name": "defaultChangeNameCallback"
        },
        {
          "line": 715,
          "return_type": "not",
          "name": "validName"
        },
        {
          "line": 719,
          "return_type": "if",
          "name": "getPlayerDatabaseInfo"
        },
        {
          "line": 738,
          "return_type": "function",
          "name": "defaultTeleportCallback"
        },
        {
          "line": 750,
          "return_type": "function",
          "name": "defaultXPBoostCallback"
        },
        {
          "line": 772,
          "return_type": "function",
          "name": "getValid"
        },
        {
          "line": 773,
          "return_type": "function",
          "name": "tchelper"
        },
        {
          "line": 780,
          "return_type": "function",
          "name": "validName"
        },
        {
          "line": 805,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 825,
          "return_type": "function",
          "name": "gameShopUpdateHistory"
        },
        {
          "line": 826,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 860,
          "return_type": "if",
          "name": "getGlobalStorageValue"
        },
        {
          "line": 891,
          "return_type": "function",
          "name": "gameShopGetDescription"
        },
        {
          "line": 896,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 912,
          "return_type": "function",
          "name": "gameShopFetch"
        },
        {
          "line": 919,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 933,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 937,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 939,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 959,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 961,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 982,
          "return_type": "function",
          "name": "gameShopUpdatePoints"
        },
        {
          "line": 983,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 1000,
          "return_type": "function",
          "name": "gameShopUpdatePointsAndRemovePlayer"
        },
        {
          "line": 1001,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 1018,
          "return_type": "function",
          "name": "gameShopChangeName"
        },
        {
          "line": 1021,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1025,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1032,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1037,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1041,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1046,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1058,
          "return_type": "return",
          "name": "infoMsg"
        },
        {
          "line": 1062,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1065,
          "return_type": "function",
          "name": "gameShopTransferCoins"
        },
        {
          "line": 1070,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1074,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1079,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1084,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1097,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1101,
          "return_type": "return",
          "name": "errorMsg"
        },
        {
          "line": 1149,
          "return_type": "return",
          "name": "infoMsg"
        },
        {
          "line": 1152,
          "return_type": "function",
          "name": "getPoints"
        },
        {
          "line": 1174,
          "return_type": "function",
          "name": "getSecondCurrency"
        },
        {
          "line": 1200,
          "return_type": "function",
          "name": "errorMsg"
        },
        {
          "line": 1204,
          "return_type": "function",
          "name": "infoMsg"
        },
        {
          "line": 1212,
          "return_type": "function",
          "name": "refreshPlayersPoints"
        },
        {
          "line": 1213,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1221,
          "return_type": "function",
          "name": "updatePlayerShopData"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_interface\\widgets\\statsbar.lua",
      "total_lines": 700,
      "code_lines": 604,
      "comment_lines": 0,
      "empty_lines": 96,
      "functions": [
        {
          "line": 8,
          "return_type": "in",
          "name": "getStatsBarMenuOptions"
        },
        {
          "line": 9,
          "return_type": "and",
          "name": "destroyAllIcons"
        },
        {
          "line": 15,
          "return_type": "in",
          "name": "constructStatsBar"
        },
        {
          "line": 55,
          "return_type": "function",
          "name": "getConfigurations"
        },
        {
          "line": 58,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 59,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 60,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 72,
          "return_type": "function",
          "name": "reloadSkillsTab"
        },
        {
          "line": 164,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 165,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 166,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 245,
          "return_type": "function",
          "name": "loadIcon"
        },
        {
          "line": 270,
          "return_type": "function",
          "name": "getStatsBarsIconContent"
        },
        {
          "line": 274,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 284,
          "return_type": "function",
          "name": "toggleIcon"
        },
        {
          "line": 292,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 303,
          "return_type": "function",
          "name": "processIcon"
        },
        {
          "line": 305,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 350,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 367,
          "return_type": "function",
          "name": "constructStatsBar"
        },
        {
          "line": 388,
          "return_type": "on",
          "name": "constructStatsBar"
        },
        {
          "line": 399,
          "return_type": "function",
          "name": "openDropMenu"
        },
        {
          "line": 408,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 419,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 443,
          "return_type": "function",
          "name": "shouldAddStatsBarOption"
        },
        {
          "line": 448,
          "return_type": "function",
          "name": "getStatsBarMenuOptions"
        },
        {
          "line": 452,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 453,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 455,
          "return_type": "if",
          "name": "shouldAddStatsBarOption"
        },
        {
          "line": 468,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 483,
          "return_type": "function",
          "name": "onStatsMousePress"
        },
        {
          "line": 498,
          "return_type": "return",
          "name": "constructStatsBar"
        },
        {
          "line": 500,
          "return_type": "on",
          "name": "reloadCurrentTab"
        },
        {
          "line": 514,
          "return_type": "function",
          "name": "getSettingOrDefault"
        },
        {
          "line": 519,
          "return_type": "function",
          "name": "setSetting"
        },
        {
          "line": 563,
          "return_type": "function",
          "name": "createStatsBarWidgets"
        },
        {
          "line": 566,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 567,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 594,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 621,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 622,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 623,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 640,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 641,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 642,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 656,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 677,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 692,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\bestiary\\bestiary.lua",
      "total_lines": 819,
      "code_lines": 676,
      "comment_lines": 0,
      "empty_lines": 143,
      "functions": [
        {
          "line": 25,
          "return_type": "function",
          "name": "showBestiary"
        },
        {
          "line": 44,
          "return_type": "function",
          "name": "calculateWidth"
        },
        {
          "line": 48,
          "return_type": "function",
          "name": "setBarVisibility"
        },
        {
          "line": 89,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 110,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 244,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 402,
          "return_type": "function",
          "name": "verify"
        },
        {
          "line": 468,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 516,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 592,
          "return_type": "function",
          "name": "updateButtonState"
        },
        {
          "line": 600,
          "return_type": "function",
          "name": "updatePageValue"
        },
        {
          "line": 721,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 746,
          "return_type": "function",
          "name": "loadFilters"
        },
        {
          "line": 754,
          "return_type": "function",
          "name": "saveFilters"
        },
        {
          "line": 760,
          "return_type": "function",
          "name": "getFilter"
        },
        {
          "line": 761,
          "return_type": "return",
          "name": "loadFilters"
        },
        {
          "line": 764,
          "return_type": "function",
          "name": "setFilter"
        },
        {
          "line": 779,
          "return_type": "function",
          "name": "test"
        },
        {
          "line": 783,
          "return_type": "function",
          "name": "onTrackerClick"
        },
        {
          "line": 796,
          "return_type": "function",
          "name": "onAddLootClick"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\bosstiary\\bosstiary.lua",
      "total_lines": 428,
      "code_lines": 359,
      "comment_lines": 0,
      "empty_lines": 69,
      "functions": [
        {
          "line": 2,
          "return_type": "function",
          "name": "showBosstiary"
        },
        {
          "line": 87,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 180,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 235,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 244,
          "return_type": "function",
          "name": "updateButtonState"
        },
        {
          "line": 252,
          "return_type": "function",
          "name": "updatePageValue"
        },
        {
          "line": 281,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 282,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 287,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 292,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 302,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 316,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 317,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 322,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 326,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 369,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 370,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 375,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 400,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 415,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\boss_slots\\boss_slots.lua",
      "total_lines": 420,
      "code_lines": 347,
      "comment_lines": 0,
      "empty_lines": 73,
      "functions": [
        {
          "line": 3,
          "return_type": "function",
          "name": "showBossSlot"
        },
        {
          "line": 105,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 130,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 170,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 200,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 208,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 366,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 377,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 406,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 414,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\character\\character.lua",
      "total_lines": 1264,
      "code_lines": 1074,
      "comment_lines": 0,
      "empty_lines": 190,
      "functions": [
        {
          "line": 4,
          "return_type": "function",
          "name": "close"
        },
        {
          "line": 9,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 22,
          "return_type": "function",
          "name": "reset"
        },
        {
          "line": 34,
          "return_type": "function",
          "name": "open"
        },
        {
          "line": 37,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 41,
          "return_type": "if",
          "name": "tonumber"
        },
        {
          "line": 60,
          "return_type": "function",
          "name": "showCharacter"
        },
        {
          "line": 161,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 175,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 188,
          "return_type": "function",
          "name": "insert"
        },
        {
          "line": 212,
          "return_type": "function",
          "name": "process"
        },
        {
          "line": 240,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 258,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 275,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 304,
          "return_type": "function",
          "name": "insert"
        },
        {
          "line": 333,
          "return_type": "function",
          "name": "processContainer"
        },
        {
          "line": 350,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 354,
          "return_type": "function",
          "name": "compareByName"
        },
        {
          "line": 425,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 448,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 636,
          "return_type": "or",
          "name": "next"
        },
        {
          "line": 758,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 817,
          "return_type": "function",
          "name": "formatTime"
        },
        {
          "line": 944,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1025,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1040,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1152,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1154,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 1201,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1210,
          "return_type": "function",
          "name": "getImageClip"
        },
        {
          "line": 1228,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1252,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\charms\\charms.lua",
      "total_lines": 480,
      "code_lines": 404,
      "comment_lines": 0,
      "empty_lines": 76,
      "functions": [
        {
          "line": 3,
          "return_type": "function",
          "name": "showCharms"
        },
        {
          "line": 37,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 115,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 127,
          "return_type": "function",
          "name": "compareByName"
        },
        {
          "line": 135,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 143,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 164,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 186,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 263,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 327,
          "return_type": "function",
          "name": "format"
        },
        {
          "line": 339,
          "return_type": "function",
          "name": "getColor"
        },
        {
          "line": 346,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 358,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 375,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 386,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 412,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 421,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 446,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 456,
          "return_type": "function",
          "name": "noCallback"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\house\\house.lua",
      "total_lines": 1460,
      "code_lines": 1266,
      "comment_lines": 0,
      "empty_lines": 194,
      "functions": [
        {
          "line": 3,
          "return_type": "function",
          "name": "showHouse"
        },
        {
          "line": 100,
          "return_type": "function",
          "name": "resetButtons"
        },
        {
          "line": 126,
          "return_type": "function",
          "name": "resetSelectedInfo"
        },
        {
          "line": 143,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 162,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 303,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 325,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 378,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 393,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 446,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 468,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 513,
          "return_type": "function",
          "name": "verify"
        },
        {
          "line": 529,
          "return_type": "function",
          "name": "verifyName"
        },
        {
          "line": 557,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 579,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 647,
          "return_type": "and",
          "name": "type"
        },
        {
          "line": 667,
          "return_type": "function",
          "name": "verify"
        },
        {
          "line": 699,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 709,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 804,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 823,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 931,
          "return_type": "and",
          "name": "type"
        },
        {
          "line": 944,
          "return_type": "first",
          "name": "month"
        },
        {
          "line": 963,
          "return_type": "function",
          "name": "yesCallback"
        },
        {
          "line": 973,
          "return_type": "function",
          "name": "noCallback"
        },
        {
          "line": 1071,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1092,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 1110,
          "return_type": "function",
          "name": "format"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "high"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\items\\items.lua",
      "total_lines": 493,
      "code_lines": 404,
      "comment_lines": 0,
      "empty_lines": 89,
      "functions": [
        {
          "line": 37,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 43,
          "return_type": "function",
          "name": "showItems"
        },
        {
          "line": 66,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 128,
          "return_type": "function",
          "name": "setCheckedWithoutRecursion"
        },
        {
          "line": 154,
          "return_type": "function",
          "name": "processItemsById"
        },
        {
          "line": 164,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 166,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 176,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 204,
          "return_type": "and",
          "name": "tonumber"
        },
        {
          "line": 205,
          "return_type": "10",
          "name": "and"
        },
        {
          "line": 297,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 318,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 359,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 364,
          "return_type": "endIndex",
          "name": "and"
        },
        {
          "line": 369,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 382,
          "return_type": "function",
          "name": "isHandWeapon"
        },
        {
          "line": 389,
          "return_type": "not",
          "name": "isHandWeapon"
        },
        {
          "line": 429,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 442,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 479,
          "return_type": "in",
          "name": "ipairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\game_cyclopedia\\tab\\map\\map.lua",
      "total_lines": 200,
      "code_lines": 170,
      "comment_lines": 0,
      "empty_lines": 30,
      "functions": [
        {
          "line": 4,
          "return_type": "function",
          "name": "showMap"
        },
        {
          "line": 114,
          "return_type": "function",
          "name": "ConvertLayer"
        },
        {
          "line": 177,
          "return_type": "function",
          "name": "refreshVirtualFloors"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\gamelib\\ui\\uiminimap.lua",
      "total_lines": 391,
      "code_lines": 344,
      "comment_lines": 0,
      "empty_lines": 47,
      "functions": [
        {
          "line": 29,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 71,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 86,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 100,
          "return_type": "function",
          "name": "onFlagMouseRelease"
        },
        {
          "line": 162,
          "return_type": "if",
          "name": "type"
        },
        {
          "line": 186,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 205,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 215,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 333,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\corelib\\ui\\uiminiwindow.lua",
      "total_lines": 546,
      "code_lines": 467,
      "comment_lines": 0,
      "empty_lines": 79,
      "functions": [
        {
          "line": 122,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 244,
          "return_type": "if",
          "name": "not"
        },
        {
          "line": 374,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 403,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    },
    {
      "file": "modules\\corelib\\ui\\uiminiwindowcontainer.lua",
      "total_lines": 223,
      "code_lines": 193,
      "comment_lines": 0,
      "empty_lines": 30,
      "functions": [
        {
          "line": 120,
          "return_type": "and",
          "name": "not"
        },
        {
          "line": 182,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "low"
    },
    {
      "file": "modules\\corelib\\ui\\uitable.lua",
      "total_lines": 467,
      "code_lines": 404,
      "comment_lines": 2,
      "empty_lines": 61,
      "functions": [
        {
          "line": 35,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 61,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 128,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 140,
          "return_type": "or",
          "name": "type"
        },
        {
          "line": 149,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 153,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 177,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 208,
          "return_type": "or",
          "name": "type"
        },
        {
          "line": 225,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 259,
          "return_type": "in",
          "name": "ipairs"
        },
        {
          "line": 337,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 344,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 350,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 391,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 401,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 402,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 418,
          "return_type": "in",
          "name": "pairs"
        },
        {
          "line": 434,
          "return_type": "in",
          "name": "pairs"
        }
      ],
      "classes": [],
      "includes": [],
      "dependencies": [],
      "complexity": "medium"
    }
  ],
  "metrics": {
    "total_functions": 6650,
    "total_classes": 364,
    "total_lines": 86037
  }
}